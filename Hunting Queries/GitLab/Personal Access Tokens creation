id: 4d6d8b0e-6d9a-4857-a141-f5d89393cddb
name: GitLab - Personal Access Tokens creation over time
description: |
  'This queries GitLab Audit Logs for access tokens. Attacker can exfiltrate data from you GitLab repository after gaining access to it by generating or hijacking access tokens. 
  This hunting queries allows you to track the personal access tokens creation or each of your repositories. 
  The visualization allow you to quickly identify anomalies/excessive creation, to further investigate repo access & permissions.'
severity: Medium
requiredDataConnectors:
   - connectorId: Syslog
    dataTypes:
      - Syslog
queryFrequency: 1h
queryPeriod: 1d
triggerOperator: gt
triggerThreshold: 0
tactics:
  - Collection
relevantTechniques:
  - T1213
query: |

// l_min_tokens_created - minimum tokens created per repository per day to consider
let l_min_tokens_created = 1;
// Earliest date from GitLab Audit logs - adapt if too far away - for instance, replace by ago(30d)
let min_t = toscalar(GitLabAudit
| summarize min(TimeGenerated));
// Most recent date from GitLab Audit logs 
let max_t = toscalar(GitLabAudit
| summarize max(TimeGenerated));
// Graph Interval
let interval = 1d;
GitLabAudit
| where TargetType == "PersonalAccessToken"
| project Severity, EventDay = bin(todatetime(EventTime),1d), AuthorName, IPAddress, Repository = tostring(EntityPath), Action, TargetType
| summarize sumTokens = count() by Repository, EventDay
| where sumTokens > l_min_tokens_created
| make-series num=sum(sumTokens) default=0 on EventDay in range(ago(30d), now(), interval) by Repository
| extend (anomalies, score, baseline) = series_decompose_anomalies(num, 1.5, -1, 'linefit')
| render timechart

version: 1.0.1
