id: 2238d13a-cf05-4973-a83f-d12a25dbb153
name: GitLab - Brute-force Attempts
description: |
  'This query relies on GitLab Application Logs to get failed logins to highlight brute-force attempts from different IP addresses in a short space of time.'
severity: Medium
requiredDataConnectors:
   - connectorId: Syslog
    dataTypes:
      - Syslog
queryFrequency: 1h
queryPeriod: 1d
triggerOperator: gt
triggerThreshold: 0
tactics:
  - Credential Access
relevantTechniques:
  - T1110
query: |

let LearningPeriod = 7d; 
let BinTime = 1h; 
let RunTime = 1h; 
let StartTime = 1h; 
let NumberOfStds = 3; 
let MinThreshold = 10.0; 
let EndRunTime = StartTime - RunTime; 
let EndLearningTime = StartTime + LearningPeriod;
let GitLabFailedLogins = (GitLabApp
| where Message contains "Failed Login"
| parse kind=regex Message with EventTime ": Failed Login: username=" Username "ip=" IpAddress 
| project TimeGenerated, EventTime, Username, IpAddress);
GitLabFailedLogins 
  | where todatetime(EventTime) between (ago(EndLearningTime) .. ago(StartTime)) 
  | summarize FailedLoginsCountInBinTime = count() by User = Username, bin(todatetime(EventTime), BinTime) 
  | summarize AvgOfFailedLoginsInLearning = avg(FailedLoginsCountInBinTime), StdOfFailedLoginsInLearning = stdev(FailedLoginsCountInBinTime) by User 
  | extend LearningThreshold = max_of(AvgOfFailedLoginsInLearning + StdOfFailedLoginsInLearning * NumberOfStds, MinThreshold) 
  | join kind=innerunique ( 
    GitLabFailedLogins 
    | where todatetime(EventTime) between (ago(StartTime) .. ago(EndRunTime)) 
    | summarize FailedLoginsCountInRunTime = count() by User = Username, IpAddress 
  ) on User 
  | where FailedLoginsCountInRunTime > LearningThreshold
  | extend User, IpAddress

entityMappings:
  - entityType: IP
    fieldMappings:
      - identifier: Address
        columnName: IPAddress
   - entityType: Account
    fieldMappings:
      - identifier: FullName
        columnName: User
version: 1.0.0
