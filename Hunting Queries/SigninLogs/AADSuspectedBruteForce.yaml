id: 056ceb9b-8f07-42b3-853e-ef3779de222e
name: Suspected Brute force attack Investigation
description: |
  'Summarize all the failures and success events for all users in the last 24 hours, 
  only identify users with more than 100 failures'
requiredDataConnectors:
  - connectorId: AzureActiveDirectory
    dataTypes:
      - SigninLogs
  - connectorId: AzureActiveDirectory
    dataTypes:
      - AADNonInteractiveUserSignInLogs
tactics:
  - CredentialAccess
relevantTechniques:
  - T1110
query: |
    let authenticationWindow = 24h;
    let successCodes = dynamic(["0", "50125", "50140", "70043", "70044"]);
    let aadFunc = (tableName:string){
      table(tableName)
      | where TimeGenerated > ago(authenticationWindow)
      | extend Activities = pack("datetime", TimeGenerated,"ResultEventId", ResultType , "AppDisplayName", AppDisplayName, "ResultDescription", ResultDescription ,"IpAddress", IPAddress, "DeviceDetail", todynamic(DeviceDetail), "Status", todynamic(DeviceDetail), "Locationdetails", todynamic(LocationDetails))
      | extend FailureOrSuccess = iff(ResultType in (successCodes), "Success", "Failure")
      | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), SuccesEvents =  make_list_if(Activities, ResultType in (successCodes)),FailureEvents = make_list_if(Activities, ResultType !in (successCodes)) , FailureCount = countif(FailureOrSuccess=="Failure"), SuccessCount = countif(FailureOrSuccess=="Success") by bin(TimeGenerated, authenticationWindow), UserDisplayName, UserPrincipalName, Type
      | where FailureCount > 100
      | where SuccessCount > 0
      | order by FailureCount, UserDisplayName, Type
      | extend timestamp = StartTime, AccountCustomEntity = UserPrincipalName 
    };
    let aadSignin = aadFunc("SigninLogs");
    let aadNonInt = aadFunc("AADNonInteractiveUserSignInLogs");
    union isfuzzy=true aadSignin, aadNonInt
entityMappings:
  - entityType: Account
    fieldMappings:
      - identifier: FullName
        columnName: AccountCustomEntity
