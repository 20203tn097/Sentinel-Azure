id: 088d30e9-c02b-46b1-bd1f-d5b6d6b782f0
name: Least Common Processes by Command Line
description: |
  'Looks across your environment for least common Process Command Lines, may be noisy and require allowlisting.  By ZanCo'
requiredDataConnectors:
  - connectorId: SecurityEvents
    dataTypes:
      - SecurityEvent
  - connectorId: WindowsSecurityEvents
    dataTypes: 
      - SecurityEvents  
  - connectorId: WindowsForwardedEvents
    dataTypes:
      - WindowsEvent
tactics:
  - Execution
query: |

  let starttime = todatetime('{{StartTimeISO}}');
  let endtime = todatetime('{{EndTimeISO}}');
  let lookback = starttime - 7d;
  let Allowlist = dynamic (['foo.exe', 'baz.exe']);
  let Sensitivity = 5;
  union isfuzzy=true
  (SecurityEvent
  | where TimeGenerated between(lookback..endtime)
  | where EventID == 4688 and NewProcessName !endswith 'conhost.exe'
  | extend Proc=tostring(split(NewProcessName, '\\')[-1])
  | where Proc !in (Allowlist)
  | summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), TimesSeen = count(), HostCount = dcount(Computer), Hosts = makeset(Computer), UserCount = dcount(SubjectUserName), Users = makeset(SubjectUserName) by CommandLine
  | where TimesSeen < Sensitivity
  | extend timestamp = StartTimeUtc
  ),
  (WindowsEvent
  | where TimeGenerated between(lookback..endtime)
  | where EventID == 4688 and EventData has 'conhost.exe'
  | extend NewProcessName = tostring(EventData.NewProcessName)
  | where NewProcessName !endswith 'conhost.exe'
  | extend Proc=tostring(split(NewProcessName, '\\')[-1])
  | where Proc !in (Allowlist)
  | extend SubjectUserName = tostring(EventData.SubjectUserName)
  | extend CommandLine = tostring(EventData.CommandLine) 
  | summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), TimesSeen = count(), HostCount = dcount(Computer), Hosts = makeset(Computer), UserCount = dcount(SubjectUserName), Users = makeset(SubjectUserName) by CommandLine
  | where TimesSeen < Sensitivity
  | extend timestamp = StartTimeUtc)
