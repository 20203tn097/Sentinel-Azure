{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workspaceName": {
      "type": "string"
    },
    "location": {
      "type": "string"
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2017-03-15-preview",
      "name": "[parameters('workspaceName')]",
      "location": "[parameters('location')]",
      "resources": [
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "ASimSchemaTester",
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
          ],
          "properties": {
            "etag": "*",
            "displayName": "ASIM Schema tester",
            "category": "Security",
            "FunctionAlias": "ASimSchemaTester",
            "query": "let ASimNetworkSessionFields = externaldata (ColumnName: string, ColumnType: string, Class: string, Schema: string)\r\n  [@\"https:\/\/raw.githubusercontent.com\/Azure\/Azure-Sentinel\/master\/ASIM\/dev\/ASimSchemaTester\/ASimSchemaTester.csv\"] with (format=\"csv\", IgnoreFirstRecord=true)\r\n  | where Schema =~ selected_schema;\r\n  T \r\n  | join kind=fullouter ASimNetworkSessionFields on ColumnName\r\n  | extend Result = case(\r\n      ColumnName == \"\" and Class == \"Mandatory\",  strcat (\"(0) Error: Missing mandatory field [\", ColumnName1, \"]\"),\r\n      ColumnName == \"\" and Class == \"Recommended\", strcat (\"(1) Warning: Missing recommended field [\", ColumnName1, \"]\"),\r\n      ColumnName == \"\" and Class == \"Alias\", strcat (\"(1) Warning: Missing alias [\", ColumnName1, \"]\"),\r\n      ColumnName == \"\" and Class == \"Optional\", strcat (\"(2) Info: Missing optional field [\", ColumnName1, \"]\"),\r\n      ColumnName1 == \"\", strcat (\"(2) Info: extra unnormalized column [\", ColumnName, \"]\"),\r\n      ColumnType != ColumnType1, strcat (\"(0) Error: type mismatch for column [\", ColumnName, \"]. It is currently \", ColumnType, \" and should be \", ColumnType1),\r\n      'None'\r\n    )\r\n  | where Result != \"None\" | sort by Result asc | project Result\r\n",
            "version": 1,
            "functionParameters": "T: (ColumnName: string, ColumnType:string), selected_schema:string"
          }
        }
      ]
    }
  ]
}
