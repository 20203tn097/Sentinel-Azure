// pfSense Syslog-NG Parsing Rule
// Last Updated Date: February 08,  2021
//
// LogStash Instructions:
// Configure pfSense to log 
//
// Parser Notes:
// This parser will parse pfSense or opnSense LAN logs and tag them with GeoIP data using MaxMind db or Logstash GeoIP db. 
// Reference: https://github.com/OTRF/OSSEM/blob/master/resources/tools/ossemSysmonKQLParser.py
//
// Usage Instruction : 
// Paste below query in log analytics, click on Save button and select as Function from drop down by specifying function name and alias (e.g. pf_GeoIPDestination) or 
// paste in the command into your Azure Sentinel logs and run the query.
// 
//
//
// query |



// Syslog-NG Parsing Rule
// Excluded ruleNumber, anchor, explicitCongestionNotification, ipVersion
// https://docs.netgate.com/pfsense/en/latest/monitoring/logs/raw-filter-format.html​​​​​​​
// ruleName = Generate Rules on pfSense | pfctl -vv -sr | sed 's/[^(]*(\([^)]*\).*"USER_RULE: *\([^"]*\).*/"\1"=> "\2"/' | sort -t ' ' -k 1,1 -u
let timeSpan = ago(10m);
pfsense_test_CL
| extend filterlog = split(RawData, ' ')
| extend createdMonth = tostring(filterlog[0])
| extend createdDay = tostring(filterlog[1])
| extend createdTime = tostring(filterlog[2])
| extend eventTime = tostring(strcat(createdMonth, " ", createdDay, " ", createdTime))
| extend filterlog = parse_csv(RawData)
| extend number = tostring(filterlog[0])
| extend ruleNumber = tostring(filterlog[1])
| extend anchor = tostring(filterlog[2])
| extend ruleId = tostring(filterlog[3])
| extend interface = tostring(filterlog[4])
| extend reason = tostring(filterlog[5])
| extend action = tostring(filterlog[6])
| extend direction = tostring(filterlog[7])
| extend ipVersion = tostring(filterlog[8])
| extend tos = tostring(filterlog[9])
| extend explicitCongestionNotification = tostring(filterlog[10])
| extend ttl = tostring(filterlog[11])
| extend packetId = tostring(filterlog[12])
| extend fragmentOffset = tostring(filterlog[13])
| extend flag = tostring(filterlog[14])
| extend protocolId = tostring(filterlog[15])
| extend protocol = tostring(filterlog[16])
| extend protocolText = tostring(filterlog[17])
| extend sourceIPAddress = tostring(filterlog[18])
| extend destinationIPAddress = tostring(filterlog[19])
| extend sourcePort = tostring(filterlog[20])
| extend destinationPort = tostring(filterlog[21])
| extend dataLength = tostring(filterlog[22])
| extend tcpFlags = tostring(filterlog[23])
| extend sequenceNumber = tostring(filterlog[24])
| extend ackNumber = tostring(filterlog[25])
| extend tcpWindow = tostring(filterlog[26])
| extend urg = tostring(filterlog[27])
| extend protocolFlags = tostring(filterlog[28])
| extend ipType = iif(ipVersion == '4', 'IPv4','')
| extend interfaceVlan = iif(interface == 'em0', 'WAN',
  iif(interface == 'ue0', 'Core', 
 ''))
| extend ruleName = iif(ruleId == '01', 'ruleName',
  iif(ruleId == '02', 'ruleName', 
  iif(ruleId == '03', 'ruleName', 
'')))
| where eventTime = TimeGenerated > timeSpan
| project eventTime, interfaceVlan, reason, action, direction, sourceIPAddress, sourcePort, destinationIPAddress, destinationPort, ipType, ruleName,
 tos, ttl, packetId, fragmentOffset, flag, protocolId, protocol, protocolText, dataLength, tcpFlags, sequenceNumber, ackNumber, tcpWindow, urg, protocolFlags