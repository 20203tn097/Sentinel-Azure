Parser:
  Title:  Network Session ASIM parser for Sysmon for Linux
  Version: '0.4'
  LastUpdated: Dec 13, 2022
Product:
  Name: Sysmon for Linux
Normalization:
  Schema: NetworkSession
  Version: '0.2.5'
References:
- Title: ASIM Network Session Schema
  Link: https://aka.ms/ASimNetworkSessionDoc
- Title: ASIM
  Link: https:/aka.ms/AboutASIM
Description: |
  This ASIM parser supports normalizing Sysmon for Linux event 3 to the ASIM Network Session schema.
ParserName: ASimNetworkSessionLinuxSysmon
EquivalentBuiltInParser: _ASim_NetworkSession_LinuxSysmon
ParserParams:
  - Name: disabled
    Type: bool
    Default: false
ParserQuery: |
   let DirectionNetworkEvents =
    Syslog | where not(disabled)
    | where SyslogMessage has_all ('<Provider Name="Linux-Sysmon"', '<EventID>3</EventID>')
    | project-away ProcessName, ProcessID
    | parse-kv SyslogMessage as (
                     Initiated:bool
                                 ) with (regex=@'<Data Name="(\w+)">{?([^>]*)}?</Data>')
    ;
    let parser = (T: (SyslogMessage: string)) {
      T 
      | parse-kv SyslogMessage as (
                 EventRecordID:string,
                 Computer:string,
                 RuleName:string,
                 UtcTime:datetime,
                 ProcessGuid:string,
                 ProcessId:string,
                 Image:string,
                 User:string,
                 Protocol:string,
                 Initiated:bool,
                 SourceIsIpv6:bool,
                 SourceIp:string,
                 SourceHostname:string,
                 SourcePort:int,
                 SourcePortName:string,
                 DestinationIsIpv6:bool,
                 DestinationIp:string,
                 DestinationHostname:string ,
                 DestinationPort:int,
                 DestinationPortName:string
                ) with (regex=@'<Data Name="(\w+)">{?([^>]*)}?</Data>')
      | project-rename
                EventEndTime = UtcTime,
                SysmonComputer = Computer,
                Process = Image,
                EventOriginalUid = EventRecordID,
                SrcHostname  = SourceHostName,
                SrcPortNumber = SourcePort,
                SrcPortName = SourcePortName,
                DstIpAddr = DestinationIp,
                DstHostname = DestinationHostname,
                DstPortNumber = DestinationPort,
                DstPortName = DestinationPortName 
     | extend
                Computer = SysmonComputer,
                UtcTime = EventEndTime,
    };
    let OutboundNetworkEvents = 
      DirectionNetworkEvents
      | where Initiated
      | invoke parser ()
      | extend
        SrcUsernameType = 'Simple',
        SrcUsername = User,
        SrcProcessId = ProcessId, 
        SrcProcessGuid = ProcessGuid,
        SrcProcessName = Process,
        SrcAppName = Process,
        SrcAppType = 'Process'
      | project-away SyslogMessage
    ;
    let InboundNetworkEvents = 
        DirectionNetworkEvents
        | where not(Initiated)
        | invoke parser ()
        | extend
        DstUsernameType = 'Simple',
        DstUsername = User,
        DstProcessId = ProcessId, 
        DstProcessGuid = ProcessGuid,
        DstProcessName = Process,
        DstAppName = Process,
        DstAppType = 'Process' 
        | project-away SyslogMessage
    ; 
    let SysmonForLinuxNetwork=
        union OutboundNetworkEvents, InboundNetworkEvents
        | extend 
            EventType = 'NetworkSession',
            EventStartTime = EventEndTime,
            EventCount = int(1),
            EventVendor = 'Microsoft',
            EventSchemaVersion = '0.2.5',
            EventSchema = 'NetworkSession', 
            EventProduct = 'Sysmon for Linux',
            EventResult = 'Success',
            EventSeverity = 'Informational',
            DvcOs = 'Linux',
            Protocol = toupper(Protocol),
            NetworkDirection = iff(Initiated, "Outbound", "Inbound"),
            EventOriginalType = '3' // Set with a constant value to avoid parsing
        | project-rename 
            DvcIpAddr = HostIP,
        | extend // aliases
            DvcHostname = Computer,
            Dvc = Computer,
            Hostname = DstHostname,
            IpAddr = SrcIpAddr,
            Src = SrcIpAddr,
            Dst = DstIpAddr
    ;
    SysmonForLinuxNetwork
