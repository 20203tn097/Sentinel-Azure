// GitLab Enterprise Edition Audit Logs Data Parser
// Last Updated Date: Nov 30, 2021
//
// This parser parses GitLab standalone Enterprise Edition audit logs extract the infromation required for all audit queries on GitLab. 
// It is assumed that the syslog data connector to ingest GitLab audit entry data into Sentinel is enabled
//
// Parser Notes:
// 1. This parser assumes logs are collected into native Syslog table, including audit_json logs
// 2. This parser assuments that GitLab syslog configuration is leveraging 'ProcessName' and 'Facility' to categorize syslog events
//    Example: ProcessName for audit logs would be (adapt according to your own configuration) "GitLab-Audit-Logs" and the Facility is "local7"
//
// Usage Instruction : 
// Paste below query in log analytics, click on Save button and select as Function from drop down by specifying function name and alias. 
// To work with analytics rules built next to this parser, this Function should be given the alias of GitLabAudit.
// Functions usually takes 10-15 minutes to activate. You can then use function alias from any other queries (e.g. GitLabAudit | take 10).
//
// References : 
// Using functions in Azure monitor log queries : https://docs.microsoft.com/azure/azure-monitor/log-query/functions
// Tech Community Blog on KQL Functions : https://techcommunity.microsoft.com/t5/Azure-Sentinel/Using-KQL-functions-to-speed-up-analysis-in-Azure-Sentinel/ba-p/712381
// Understanding GitLab logging: https://docs.gitlab.com/ee/administration/logs.html
//

Syslog
| where Facility == 'local7'
| where ProcessName contains 'audit'
| extend parsedMessage = parse_json(SyslogMessage)
| project TimeGenerated, 
  Severity = parsedMessage.severity,
  EventTime = parsedMessage.['time'],
  CorrelationID = parsedMessage.correlation_id,
  AuthorID = parsedMessage.author_id,
  AuthorName = parsedMessage.author_name,
  EntityID = parsedMessage.entity_id,
  EntityType = parsedMessage.entity_type,
  IPAddress = parsedMessage.ip_address,
  AddAction = parsedMessage.['add'],
  DelAction = parsedMessage.['del'],
  RemoveAction = parsedMessage.['remove'],
  TargetID = parsedMessage.target_id,
  TargetType = parsedMessage.target_type,
  TargetDetails = parsedMessage.target_details,
  EntityPath = parsedMessage.entity_path,
  Action = parsedMessage.action,
  CustomMessage = parsedMessage.custom_message,
  AuthenticationType = parsedMessage.['with'],
  SourceVisibility = parsedMessage.From,
  TargetVisibility = parsedMessage.To,
  ChangeType = parsedMessage.change
