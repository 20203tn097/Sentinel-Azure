Parser:
  Title: Microsoft 365 Defender - FileEvent Parser
  Version: '0.0'
  LastUpdated: June 28, 2021
Product:
  Name: Microsoft Defender
Normalization:
  Schema: FileEvent
  Version: '1.0.0'
References:
- Title: Using functions
  Link: https://docs.microsoft.com/azure/azure-monitor/log-query/function
- Title: Dns schema documentation
  Link: https://aka.ms/AzSentinelFileEventDoc
- Title: Microsoft 365 Defender DeviceFileEvents
  Link: https://docs.microsoft.com/en-us/microsoft-365/security/defender/advanced-hunting-devicefileevents-table?view=o365-worldwide
Description: |
  This is a Query Parser that is used to map SharePoint File Operation (OfficeActivity) to the Azure Sentinel Information Model FileEvent schema.
ParserName: vimFileEventMicrosoftSharePoint
ParserQuery: |
  let M365DFileEvents=(){
    DeviceFileEvents
    // Already exist
    // TimeGenerated
    //   , SensitivityLabel
    | project-rename
         EventMessage =ActionType 
        , SrcDvcIpAddr =RequestSourceIP
        , DvcId=DeviceId 
       , FilePath= FolderPath
       , FileHashMD5=MD5
       , FileHashSHA1 =SHA1
       , FileHashSHA256 =SHA256
       , NetworkProtocol=RequestProtocol // [Unknown, Local, SMB, or NFS ]
       //
       //
       //
      , ActingProcessCommandLine=InitiatingProcessCommandLine
      , ActingProcessFileName =InitiatingProcessFileName
      , ActingProcessFilePath = InitiatingProcessFolderPath
      , ActingProcessId = InitiatingProcessId
      , ActingProcessMD5 =InitiatingProcessMD5
      , ActingProcessSHA1 =InitiatingProcessSHA1
      , ActingProcessSHA256 =InitiatingProcessSHA256
      , ActingProcessParentFileName = InitiatingProcessParentFileName
      , ActingProcessCreationTime =InitiatingProcessCreationTime
      , ActingProcessParentCreationTime =InitiatingProcessParentCreationTime
    | extend
          EventCount=int(1)
        , EventStartTime= TimeGenerated 
        , EventEndTime= TimeGenerated
        , EventType=EventMessage // [FileCreated, FileDeleted, FileModified, FileRenamed] : This will break if MDE adds operation not in our enum
        , EventResult= 'Success' // Only logging success?
        , EventProduct='M365 Defender'
        , EventVendor='Microsoft'
        , EventSchemaVersion='0.1.0' 
    //
        , ActorUsername=coalesce(InitiatingProcessAccountUpn, strcat(InitiatingProcessAccountDomain,'\\', InitiatingProcessAccountName))
        , ActorUsernameType=iff(isempty(InitiatingProcessAccountUpn),'Windows','Upn') // Is 'Windows' the right term?
        , ActorUserId=coalesce(InitiatingProcessAccountSid, InitiatingProcessAccountObjectId)
        , ActorUserIdType=iff(isempty(InitiatingProcessAccountSid),'AADId','Sid') 
        , DvcIdType='MDE'//////////////////////////////// 'MDE'??
        , DvcHostname =DeviceName
        , DvcHostnameType='Fqdn'
        , DvcOs='Windows' 
  //
  //
       , PreviousFileName=coalesce(PreviousFileName,FileOriginUrl)  // Should I split the url to file and all the rest
       , PreviousFilePath=coalesce(PreviousFolderPath, FileOriginIP)
    // Remove from schema, ActingProcessGuid ="aaaa"
    // Remove from schema, ActingProcessSessionId ="aaaa"
    // Remove from schema, ActingProcessIntegrityLevel ="aaaa"
    // , ActingProcessParentFilePath 
    // Remove from schema, ActingProcessParentCompany ="aaaa"
    // Remove from schema, ActingProcessParentFileDescription ="aaaa"
    // Remove from schema, ActingProcessParentFileProduct ="aaaa"
    // Remove from schema, ActingProcessParentFileVersion ="aaaa"
    // Remove from schema,  ActingProcessParentIsHidden ="aaaa"
    // Remove from schema,  ActingProcessParentInjectedAddress ="aaaa"
    // Remove from schema , ActingProcessCompany ="aaaa"
    // Remove from schema, ActingProcessFileDescription ="aaaa"
    // Remove from schema , ActingProcessFileProduct ="aaaa"
    // Remove from schema, ActingProcessFileVersion ="aaaa"
    // Remove from schema, ActingProcessIsHidden ="aaaa"
    // Remove from schema, ActingProcessInjectedAddress ="aaaa"
    // Remove from schema, , ActingProcessParentGuid ="aaaa"
    // Remove from schema, , ActingProcessParentSessionId ="aaaa"
    // Remove from schema, , ActingProcessParentIntegrityLevel ="aaaa"
      // Aliases
     | extend 
        User=ActorUsername
       , Dvc=DvcHostname
       , ActingProcessHash=coalesce(ActingProcessSHA256, ActingProcessSHA1, ActingProcessMD5)
    // Summary of missing schema columns:     
         // _ResourceId
        // ActingAppId
        // ActingAppName
        // ActingProcessIntegrityLevel
        //        ParentFilePath
        //        ParentGuid
        //        ParentIntegrityLevel
        //        ParentMD5
        //        ParentParentId
        //        ParentSessionId
        //        Parent Hash columns
        //        SessionId
        // ActorUserType
        // DstDvcIpAddr
        // DvcIpAddr
        // DvcMacAddr
        // DvcOsVersion
        // EventOriginalUid
        // EventProductVersion
        // EventReportUrl
        // EventResultDetails
        // HttpUserAgent
        // PreviousFileHashMD5\SHA1\256
        // PreviousFileSize
        // SessionId
        // SrcDvcHostname
        // SrcDvcHostnameType
        // SrcDvcId
        // SrcDvcOs
        // SrcDvcType
        // SrcGeo columnsa 
        // SrcIsp
        // SrcPortNumber
        // Should be romved from schema: WebsiteOriginalUrl
          };