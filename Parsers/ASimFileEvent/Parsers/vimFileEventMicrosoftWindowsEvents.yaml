Parser:
  Title: File Event ASIM filtering parser for Microsoft Windows Events
  Version: '0.2.2'
  LastUpdated: Jul 05, 2023
Product:
  Name: Microsoft Windows Events
Normalization:
  Schema: FileEvent
  Version: '0.1'
References:
- Title: ASIM File Event Schema
  Link: https://aka.ms/ASimFileEventDoc
- Title: ASIM
  Link: https://aka.ms/AboutASIM
- Title: EventID 5140
  Link: https://learn.microsoft.com/en-us/windows/security/threat-protection/auditing/event-5140
- Tile: EventID 4670
  Link: https://learn.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4670
Description: |
  This ASIM parser supports normalizing Microsoft Windows Events (WindowsEvent and SecurityEvent tables) to the ASIM File Event normalized schema. Event IDs which are parsed as part of this parser: 4663, 5140, 4670
ParserName: vimFileEventMicrosoftWindowsEvents
ParserQuery: |
  let Parser=()
  {  
  let EventType5140Lookup = datatable (AccessMask:string,EventType:string)
  [
      "0x1", "FileAccessed"
      , "0x2", "FileModified"
      , "0x4", "FileModified"
      , "0x8", "FileAccessed"
      , "0x10", "FileModified"
      , "0x20", "FileAccessed"
      , "0x40", "FileDeleted"
      , "0x80", "FileAccessed"
      , "0x100", "FileModified"
      , "0x10000", "FileDeleted"
      , "0x20000", "FileAccessed"
      , "0x40000", "FileModified"
      , "0x80000", "FileModified"
      , "0x100000", "FileAccessed"
      , "0x1000000", "FileAccessed"
  ];
  let EventSubType5140Lookup = datatable (AccessListTrimmed:string,EventSubType:string)
  [
      "%%4416", "Preview"
      , "%%4417", "Checkin"
      , "%%4418", "Extended"
      , "%%4419", "Other"
      , "%%4420", "Other"
      , "%%4421", "Other"
      , "%%4422", "Other"
      , "%%4423", "Other"
      , "%%4424", "Other"
      , "%%1537", "Other"
      , "%%1538", "Other"
      , "%%1539", "Other"
      , "%%1540", "Other"
      , "%%1541", "Other"
      , "%%1542", "Other"
  ];
  let EventType4663Lookup = datatable (AccessMask:string,EventType:string)
  [
      "0x1", "ObjectAccessed"
      , "0x10", "MetadataModified"
      , "0x100", "MetadataModified"
      , "0x10000", "ObjectDeleted"
      , "0x2", "ObjectModified"
      , "0x20000", "MetadataAccessed"
      , "0x4", "ObjectModified"
      , "0x40", "ObjectDeleted"
      , "0x40000", "MetadataModified"
      , "0x6", "ObjectModified"
      , "0x8", "MetadataAccessed"
      , "0x80", "MetadataAccessed"
      , "0x80000", "MetadataModified"
  ];
  let ActorUserTypeLookup = datatable (AccountType:string, ActorUserType:string)
  [
    'User', 'Regular',
    'Machine', 'Machine',
    'Unknown', 'Unknown'
  ];    
  let SIDCommonLookup = datatable (sid:string, username:string, type:string)
  [
    'S-1-5-18', 'Local System', 'Simple',
    'S-1-0-0', 'Nobody', 'Simple'
  ];
  let 4663events =
    union isfuzzy=false (
    WindowsEvent
        | where EventID == 4663 
            and EventData.ObjectType == "File"
            and EventData.ObjectName !startswith @"\Device\"
        | project TimeGenerated
            , EventID
            , AccessMask = tostring(EventData.AccessMask)
            , ProcessName = tostring(EventData.ProcessName)
            , SubjectUserSid = tostring(EventData.SubjectUserSid)
            , AccountType = tostring(EventData.AccountType)
            , Computer = tostring(EventData.Computer)
            , ObjectName = tostring(EventData.ObjectName)
            , ProcessId = tostring(EventData.ProcessId)
            , SubjectUserName = tostring(EventData.SubjectUserName)
            , SubjectAccount = tostring(EventData.SubjectAccount)
            , SubjectLogonId = tostring(EventData.SubjectLogonId)
            , HandleId = tostring(EventData.HandleId)
            , Type
    )
  , ( 
    SecurityEvent
        | where EventID == 4663 
            and ObjectType == "File"
            and ObjectName !startswith @"\Device\"
        | project TimeGenerated
            , EventID
            , AccessMask
            , ProcessName
            , SubjectUserSid
            , AccountType
            , Computer
            , ObjectName
            , ProcessId
            , SubjectUserName
            , SubjectAccount
            , SubjectLogonId
            , HandleId
            , Type
    )
        | lookup EventType4663Lookup on AccessMask
        | extend ActingProcessName = ProcessName
            , ActingProcessId = tostring(toint(ProcessId))
            , TargetFilePath = ObjectName
        | project-away ProcessId
        | project-rename Process = ProcessName
            , FilePath = ObjectName
            , FileSessionId = HandleId
  ;
  let 5140events = 
    union isfuzzy=false (
    WindowsEvent
        | where EventID == 5140
            and EventData.ObjectType == "File"
        | project TimeGenerated
            , Computer
            , EventID
            , AccessMask = tostring(EventData.AccessMask)
            , AccessList = tostring(EventData.AccessList)
            , SubjectUserSid = tostring(EventData.SubjectUserSid)
            , SubjectUserName = tostring(EventData.SubjectUserName)
            , SubjectLogonId = tostring(EventData.SubjectLogonId)
            , SubjectDomainName = tostring(EventData.SubjectDomainName)
            , ShareName = tostring(EventData.ShareName)
            , Type
        | extend SubjectAccount = strcat(SubjectDomainName,"\\",SubjectUserName)
        | extend AccountType = "Unknown"
        | project-away SubjectDomainName
    )
  , (
    SecurityEvent
        | where EventID == 5140
            and ObjectType == "File"
        | project TimeGenerated
                , EventID
                , AccessMask
                , AccessList
                , SubjectUserSid
                , AccountType
                , Computer
                , SubjectUserName
                , SubjectAccount
                , SubjectLogonId
                , ShareName
                , Type
    )
        | lookup EventType5140Lookup on AccessMask
        | extend AccessListTrimmed = trim(@"\s+",AccessList)
        | lookup EventSubType5140Lookup on AccessListTrimmed
        | extend TargetFilePath = ShareName
        | project-rename FilePath = ShareName
        | project-away AccessListTrimmed
    ;
  let 4670events = 
    union isfuzzy=false (
    WindowsEvent
        | where EventID == 4670
            and EventData.ObjectType == "File"
        | project TimeGenerated
            , Computer
            , EventID
            , SubjectUserSid = tostring(EventData.SubjectUserSid)
            , AccountType = tostring(EventData.AccountType)
            , SubjectUserName = tostring(EventData.SubjectUserName)
            , SubjectAccount = tostring(EventData.SubjectAccount)
            , SubjectLogonId = tostring(EventData.SubjectLogonId)
            , SubjectDomainName = tostring(EventData.SubjectDomainName)
            , ObjectName = tostring(EventData.ObjectName)
            , ProcessName = tostring(EventData.ProcessName)
            , ProcessId = tostring(EventData.ProcessId)
            , HandleId = tostring(EventData.HandleId)
            , Type
        | extend SubjectAccount = strcat(SubjectDomainName,"\\",SubjectUserName)
        | extend AccountType = "Unknown"
        | project-away SubjectDomainName
    )
  , (
    SecurityEvent
        | where EventID == 4670
            and ObjectType == "File"
        | project TimeGenerated
                , EventID
                , SubjectUserSid
                , AccountType
                , Computer
                , SubjectUserName
                , SubjectAccount
                , SubjectLogonId
                , ObjectName
                , ProcessId
                , ProcessName
                , HandleId
                , Type
    )
        | extend ActingProcessName = ProcessName
            , ActingProcessId = tostring(toint(ProcessId))
            , TargetFilePath = ObjectName
        | project-away ProcessId
        | project-rename Process = ProcessName
            , FilePath = ObjectName
            , FileSessionId = HandleId
    ;
  union isfuzzy=false
    4663events
    , 5140events
    , 4670events
        | lookup ActorUserTypeLookup on AccountType
        | lookup SIDCommonLookup on $left.SubjectUserSid == $right.sid
        | extend ActorUsername = iff (SubjectUserName == "-", username, SubjectAccount)
            , ActorUsernameType = iff(SubjectUserName == '-',type, 'Windows')
            , EventStartTime = TimeGenerated
            , EventEndTime = TimeGenerated
            , TargetFilePathType = iff( TargetFilePath startswith "\\", "Windows Share", "Windows Local")
            , EventOriginalType = tostring(EventID)
        | project-away EventID, AccountType, type, username, AccessList, AccessMask, SubjectAccount, SubjectUserName
        | project-rename ActorUserId = SubjectUserSid
            , DvcHostname = Computer
            , ActorSessionId = SubjectLogonId
        | extend EventSchema = "FileEvent"
            , EventSchemaVersion = "0.1.1"
            , EventResult = "Success"
            , EventCount = int(1)
            , EventVendor = 'Microsoft'
            , EventProduct = 'Security Events'
            , Dvc = DvcHostname
            , User = ActorUsername
            , ActorUserSid = ActorUserId
            , ActorUserIdType = "SID"
            , EventUid = _ItemId
  };
  Parser
