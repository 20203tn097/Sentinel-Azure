{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Workspace": {
      "type": "string",
      "metadata": {
        "description": "The Microsoft Sentinel workspace into which the function will be deployed. Has to be in the selected Resource Group."
      }
    },
    "WorkspaceRegion": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The region of the selected workspace. The default value will use the Region selection above."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2017-03-15-preview",
      "name": "[parameters('Workspace')]",
      "location": "[parameters('WorkspaceRegion')]",
      "resources": [
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "vimProcessTerminateMicrosoftSecurityEvents",
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', parameters('Workspace'))]"
          ],
          "properties": {
            "etag": "*",
            "displayName": "Process Terminate Event ASIM parser for Windows Security Events",
            "category": "ASIM",
            "FunctionAlias": "vimProcessTerminateMicrosoftSecurityEvents",
            "query": "let ProcessEvents=(\n  starttime:datetime=datetime(null),\n  endtime:datetime=datetime(null),\n  commandline_has_any:dynamic=dynamic([]),\n  commandline_has_all:dynamic=dynamic([]),\n  commandline_has_any_ip_prefix:dynamic=dynamic([]),\n  actingprocess_has_any:dynamic=dynamic([]),\n  targetprocess_has_any:dynamic=dynamic([]),\n  parentprocess_has_any:dynamic=dynamic([]),\n  actorusername_has:string='*',\n  targetusername_has:string='*',\n  dvcipaddr_has_any_prefix:dynamic=dynamic([]),\n  dvchostname_has_any:dynamic=dynamic([]),\n  eventtype:string='*',\n  hashes_has_any:dynamic=dynamic([]),\n  disabled:bool=false\n){\nSecurityEvent\n// -- Filter\n| where EventID == 4689\n// --------------------------------------------------------------------------------------\n| where\n(isnull(starttime)   or TimeGenerated >= starttime )\nand (isnull(endtime) or TimeGenerated <= endtime )\nand not(disabled)\nand (array_length(actingprocess_has_any)==0 ) \nand (array_length(parentprocess_has_any)==0) \nand (array_length(dvcipaddr_has_any_prefix)==0)\nand (eventtype=='*' or eventtype=='ProcessTerminated')\nand (array_length(commandline_has_any)==0 or CommandLine has_any (commandline_has_any)) \nand (array_length(commandline_has_all)==0 or CommandLine has_all (commandline_has_all)) \nand (array_length(commandline_has_any_ip_prefix)==0 or has_any_ipv4_prefix(CommandLine, commandline_has_any_ip_prefix) ) \nand (array_length(targetprocess_has_any)==0 or ProcessName has_any (targetprocess_has_any)) \nand (actorusername_has=='*' or SubjectAccount has actorusername_has)\nand (targetusername_has == '*')\nand (array_length(hashes_has_any)==0) \nand (array_length(dvchostname_has_any)==0 or Computer has_any (dvchostname_has_any))   \n// --------------------------------------------------------------------------------------\n// -- Map\n| extend\n  // Event\n    EventCount = int(1),\n    EventVendor = \"Microsoft\",\n    EventProduct = \"Security Events\",\n    EventSchemaVersion = \"0.1.0\",\n    EventSchema = 'ProcessEvent',\n    EventStartTime = todatetime(TimeGenerated),\n    EventEndTime = todatetime(TimeGenerated),\n    EventType = \"ProcessTerminated\",\n    EventResult = 'Success',\n    EventOriginalType = tostring(EventID),\n    EventOriginalUid = EventOriginId,\n    EventResultDetails = Status,\n    EventOriginalResultDetails = Status, \n  // Device\n    DvcId = SourceComputerId,\n    DvcHostname = Computer,\n    DvcOs = \"Windows\",\n  // Users\n    ActorUserIdType = iff (SubjectUserSid <> \"S-1-0-0\", \"SID\", \"\"),\n    ActorUserId = iff (SubjectUserSid <> \"S-1-0-0\", SubjectUserSid, \"\"),  \n    ActorUsername = iff (SubjectDomainName == '-', SubjectUserName, SubjectAccount),\n    ActorUsernameType = iff(SubjectDomainName == '-','Simple', 'Windows'),\n    ActorSessionId = SubjectLogonId,\n    ActorDomainName = SubjectDomainName,\n  // Processes \n    TargetProcessId = tostring(toint(ProcessId)),\n    TargetProcessName = ProcessName,\n    TargetProcessCommandLine = CommandLine,\n    TargetProcessTokenElevation = TokenElevationType,\n    Process = ProcessName\n  // Aliases\n  | extend \n    User = ActorUsername,\n    Dvc = DvcHostname,\n    Process = TargetProcessName\n};\nProcessEvents(\n  starttime=starttime, \n  endtime=endtime, \n  commandline_has_any=commandline_has_any,\n  commandline_has_all=commandline_has_all,\n  commandline_has_any_ip_prefix=commandline_has_any_ip_prefix,\n  actingprocess_has_any=actingprocess_has_any,\n  targetprocess_has_any=targetprocess_has_any,\n  parentprocess_has_any=parentprocess_has_any,\n  actorusername_has=actorusername_has,\n  targetusername_has=targetusername_has,\n  dvcipaddr_has_any_prefix=dvcipaddr_has_any_prefix,\n  dvchostname_has_any=dvchostname_has_any,\n  eventtype=eventtype,\n  hashes_has_any=hashes_has_any,\n  disabled=disabled\n)\n",
            "version": 1,
            "functionParameters": "starttime:datetime=datetime(null),endtime:datetime=datetime(null),commandline_has_any:dynamic=dynamic([]),commandline_has_all:dynamic=dynamic([]),commandline_has_any_ip_prefix:dynamic=dynamic([]),actingprocess_has_any:dynamic=dynamic([]),targetprocess_has_any:dynamic=dynamic([]),parentprocess_has_any:dynamic=dynamic([]),actorusername_has:string='*',targetusername_has:string='*',dvcipaddr_has_any_prefix:dynamic=dynamic([]),dvchostname_has_any:dynamic=dynamic([]),eventtype:string='*',hashes_has_any:dynamic=dynamic([]),disabled:bool=False"
          }
        }
      ]
    }
  ]
}