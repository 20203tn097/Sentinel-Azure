// Name: Azure DevOps Pull Request Policy Bypassing - Historic Whitelist
//
// Id: 4d8de9e6-263e-4845-8618-cd23a4f58b70
//
// Description: This detection builds a whitelist of historic PR policy bypasses and compares to recent history, flagging a non manually whitelisted, non historic pull request bypass.
//
// DataSource: #AzureDevOpsAuditing
//
// Severity: Medium
//
// QueryFrequency: 2h
//
// QueryPeriod: 14d+
//
// AlertTriggerOperator: gt
//
// AlertTriggerThreshold: 0
//
// Tactics: #Execution #Impact #Escalation
//
// Add full UPN (user@domain.com) to Authorized Bypassers to ignore policy bypasses by certain authorized users
let AuthorizedBypassers = datatable(UPN:string)[
'foo@baz.com'
];
let historicBypassers = AzureDevOpsAuditing
| where 
  OperationName == 'Git.RefUpdatePoliciesBypassed' and 
  TimeGenerated > ago(14d) and TimeGenerated < ago(3h) 
| distinct ActorUPN;
AzureDevOpsAuditing
| where 
  OperationName == 'Git.RefUpdatePoliciesBypassed' and 
  TimeGenerated > ago(3h)
| where 
  ActorUPN !in (historicBypassers) and 
  ActorUPN !in (AuthorizedBypassers)
| parse ScopeDisplayName with OrganizationName '(Organization)'
| project 
  TimeGenerated,
  ActorUPN,
  IpAddress,
  UserAgent,
  OrganizationName,
  ProjectName,
  RepoName = Data.RepoName,
  AlertDetails = Details,
  Branch = Data.Name,
  BypassReason = Data.BypassReason,
  PRLink = strcat('https://dev.azure.com/', OrganizationName, '/', ProjectName, '/_git/', Data.RepoName, '/pullrequest/', Data.PullRequestId)