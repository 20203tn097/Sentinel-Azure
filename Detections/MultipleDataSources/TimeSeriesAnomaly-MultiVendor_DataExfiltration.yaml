id: f2dd4a3a-ebac-4994-9499-1a859938c947
name: Anomaly with data size transferred to Public Internet
description: |
  'Identifies anamalous data transfer to public networks. The query leverages built-in KQL anomaly detection algorithms that large deviations from baseline pattern. 
  Sudden increases in data transferred to unknown public networks is an indication of data exfiltration attempts and should be investigated.'
severity: Medium
requiredDataConnectors:
  - connectorId: CiscoASA
    dataTypes:
      - CommonSecurityLog
  - connectorId: PaloAltoNetworks
    dataTypes:
      - CommonSecurityLog
    dataTypes:
      - VMConnection
queryFrequency: 1h
queryPeriod: 14d
triggerOperator: gt
triggerThreshold: 3
tactics:
  - Exfiltration
relevantTechniques:
  - T1030
query: |

  let starttime = 14d;
  let endtime = 1d;
  let timeframe = 1h;
  let scorethreshold = 3;
  let PrivateIPregex = @'^127\.|^10\.|^172\.1[6-9]\.|^172\.2[0-9]\.|^172\.3[0-1]\.|^192\.168\.';
  let TimeSeriesData = (union isfuzzy=true
  (
  VMConnection
  | where TimeGenerated between (startofday(ago(starttime))..startofday(ago(endtime)))
  | where isnotempty(DestinationIP) and isnotempty(SourceIP)
  | extend DestinationIpType = iff(DestinationIp matches regex PrivateIPregex,"private" ,"public" )
  | where DestinationIpType == "public" | extend DeviceVendor = "VMConnection"
  | project TimeGenerated, BytesSent, DeviceVendor
  | make-series TotalBytesSent=sum(BytesSent) on TimeGenerated from startofday(ago(starttime)) to startofday(ago(endtime)) step timeframe by DeviceVendor
  ),
  (
  CommonSecurityLog 
  | where TimeGenerated between (startofday(ago(starttime))..startofday(ago(endtime)))
  | where isnotempty(DestinationIP) and isnotempty(SourceIP)
  | extend DestinationIpType = iff(DestinationIP matches regex PrivateIPregex,"private" ,"public" )
  | where DestinationIpType == "public"
  | project TimeGenerated, SentBytes, DeviceVendor
  | make-series TotalBytesSent=sum(SentBytes) on TimeGenerated from startofday(ago(starttime)) to startofday(ago(endtime)) step timeframe by DeviceVendor
  )
  );
  //Filter anomolies against TimeSeriesData
  let TimeSeriesAlerts = TimeSeriesData
  | extend (anomalies, score, baseline) = series_decompose_anomalies(TotalBytesSent, scorethreshold, -1, 'linefit')
  | mv-expand TotalBytesSent to typeof(double), TimeGenerated to typeof(datetime), anomalies to typeof(double),score to typeof(double), baseline to typeof(long)
  | where anomalies > 0 | extend AnomalyTimeattheHour = TimeGenerated 
  | extend TotalBytesSentinMBperHour = round(((TotalBytesSent / 1024)/1024),2), baselinebytessentperHour = round(((baseline / 1024)/1024),2), score = round(score,2)
  | project DeviceVendor, AnomalyTimeattheHour, TimeGenerated, TotalBytesSentinMBperHour, baselinebytessentperHour, anomalies, score;
  //Union of all BaseLogs aggregated per hour
  let BaseLogs = (union isfuzzy=true
  (
  CommonSecurityLog 
  | where isnotempty(DestinationIP) and isnotempty(SourceIP)
  | where TimeGenerated between (startofday(ago(starttime))..startofday(ago(endtime))) 
  | extend SentBytesinMB = ((SentBytes / 1024)/1024), ReceivedBytesinMB = ((ReceivedBytes / 1024)/1024) 
  | summarize HourlyCount = count(), ListOfDestPorts = make_set(DestinationPort), TotalSentBytesinMB = sum(SentBytesinMB), TotalReceivedBytesinMB = sum(ReceivedBytesinMB) by SourceIP, DestinationIP, DeviceVendor, bin(TimeGenerated,1h)
  | project DeviceVendor, TimeGenerated, SourceIP, DestinationIP, ListOfDestPorts, TotalSentBytesinMB, TotalReceivedBytesinMB 
  ),
  (
  VMConnection 
  | where isnotempty(DestinationIp) and isnotempty(SourceIp)
  | where TimeGenerated between (startofday(ago(starttime))..startofday(ago(endtime))) 
  | extend DeviceVendor = "VMConnection", SourceIP = SourceIp, DestinationIP = DestinationIp
  | extend SentBytesinMB = ((BytesSent / 1024)/1024), ReceivedBytesinMB = ((BytesReceived / 1024)/1024)
  | summarize HourlyCount = count(), ListOfDestPorts = make_set(DestinationPort), TotalSentBytesinMB = sum(SentBytesinMB),TotalReceivedBytesinMB = sum(ReceivedBytesinMB) by SourceIP, DestinationIP, DeviceVendor, bin(TimeGenerated,1h)
  | project DeviceVendor, TimeGenerated, SourceIP, DestinationIP, ListOfDestPorts, TotalSentBytesinMB, TotalReceivedBytesinMB 
  )
  );
  // Join against base logs to retrive records associated with the hour of anomoly
  TimeSeriesAlerts
  | join (
      BaseLogs 
  ) on DeviceVendor, TimeGenerated | sort by score desc 
  | project DeviceVendor, AnomalyTimeattheHour, SourceIP, DestinationIP, ListOfDestPorts, TotalSentBytesinMB, TotalReceivedBytesinMB, TotalBytesSentinMBperHour, baselinebytessentperHour, score, anomalies 
  | order by score desc, TotalSentBytesinMB desc
  | extend IPCustomEntity = DestinationIP