id: 223db5c1-1bf8-47d8-8806-bed401b356a4
name: Failed login attempts to Azure Portal
description: |
  'Identifies failed login attempts in the Azure Active Directory SigninLogs to the Azure Portal.  Multiple failed logon 
  attempts could indicate a potential brute force attack.  We exclude the following success and non-failure results:
  References: https://docs.microsoft.com/en-us/azure/active-directory/reports-monitoring/reference-sign-ins-error-codes
  0 - successful logon
  50125 - Sign-in was interrupted due to a password reset or password registration entry.
  50140 - This error occurred due to 'Keep me signed in' interrupt when the user was signing-in.'
severity: Low
requiredDataConnectors:
  - connectorId: AzureActiveDirectory
    dataTypes:
      - SigninLogs
queryFrequency: 1d
queryPeriod: 1d
triggerOperator: gt
triggerThreshold: 0
tactics:
  - CredentialAccess
relevantTechniques:
  - T1110
query: |

  let timeRange = 1d;
  SigninLogs
  | where TimeGenerated >= ago(timeRange)
  | extend OS = DeviceDetail.operatingSystem, Browser = DeviceDetail.browser
  | extend StatusCode = tostring(Status.errorCode), StatusDetails = tostring(Status.additionalDetails)
  | where AppDisplayName contains "Azure Portal"
  // Exclude non-failure types
  | where ResultType !in ("0", "50125", "50140")
  // Removing unresolved identities that don't provide status
  | where isnotempty(StatusDetails) and isnotempty(Location) and not(Identity matches regex "[0-9a-z]{8}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{12}")
  | extend Status = strcat(StatusCode, ": ", ResultDescription) 
  | summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), Status = makelist(Status), StatusDetails = makelist(StatusDetails), IPAddresses = makelist(IPAddress), IPAddressCount = dcount(IPAddress)
  by UserPrincipalName, AppDisplayName, tostring(Browser), tostring(OS), Location, CorrelationId  
  | mvexpand IPAddresses, Status, StatusDetails
  | extend Status = strcat(Status, "-", StatusDetails)
  | summarize Status = makeset(Status) by StartTimeUtc, EndTimeUtc, tostring(IPAddresses), UserPrincipalName, AppDisplayName, tostring(Browser), tostring(OS), Location, IPAddressCount, CorrelationId
  | where Status !has "MFA requirement satisfied by claim in the token"
  | summarize Status = makeset(Status), IPAddresses = makeset(IPAddresses), CorrelationIds = makeset(CorrelationId) by StartTimeUtc, EndTimeUtc, UserPrincipalName, AppDisplayName, tostring(Browser), tostring(OS), Location, IPAddressCount
  | extend timestamp = StartTimeUtc, AccountCustomEntity = UserPrincipalName, IPCustomEntity = tostring(IPAddresses)
