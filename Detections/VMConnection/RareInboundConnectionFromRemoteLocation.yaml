id: da5cc1d8-5d03-4444-9125-17fca6f916d5
name: Rare/new inbound connections from rare/new Locations
description: |
  This identifies if there is unusual connections inbound from unexpected remote locations to a VM 
  when compared with the last 30 days.
  This may indicate connection to a C2 or data exfiltration from the associated VM.
  It is recommended that you review the associated process and whether or not this behaviour is expected.
severity: Low
requiredDataConnectors:
  - dataTypes:
      - VMConnection
queryFrequency: 1h
queryPeriod: 30d
triggerOperator: gt
triggerThreshold: 5
tactics:
  - CommandAndControl
  - InitialAccess
  - Exfiltration
  - Discover
  - Collection
query: |

  let CountryCount = VMConnection 
  | where TimeGenerated < ago(1h) and TimeGenerated >= ago(30d) 
  | where isnotempty(RemoteCountry)
  | where Direction == "inbound" 
  | summarize count() by RemoteCountry | where count_ > 5; 
  let Full = VMConnection
  | where TimeGenerated >= ago(1h) 
  | where isnotempty(RemoteCountry) 
  | where Direction == "inbound" 
  | summarize min(TimeGenerated), max(TimeGenerated), sum(BytesSent), sum(BytesReceived)  
    by Computer, Direction, ProcessName, SourceIp, DestinationIp, DestinationPort, Protocol, 
    RemoteCountry, MaliciousIp, IndicatorThreatType, Confidence, ReportReferenceLink;
  let Today = 
  VMConnection 
  | where TimeGenerated >= ago(1h) 
  | where isnotempty(RemoteCountry) 
  | where Direction == "inbound" 
  | where SourceIp !startswith "192.168." and DestinationIp !startswith "192.168." 
  | extend SourceIpBlock = trim_end(@"\.[0-9]*",SourceIp), DestIpBlock = trim_end(@"\.[0-9]*",DestinationIp) 
  | summarize countToday=count() by SourceIpBlock, SourceIp, DestinationIp, DestIpBlock, RemoteCountry
  ;
  let lastWeek = 
  VMConnection 
  | where TimeGenerated < ago(1h) and TimeGenerated >= ago(7d) 
  | where isnotempty(RemoteCountry) 
  | where Direction == "inbound"
  | extend SourceIpBlock = trim_end(@"\.[0-9]*",SourceIp), DestIpBlock = trim_end(@"\.[0-9]*",DestinationIp) 
  | summarize SourceIpBlockCount = count() by SourceIpBlock, DestIpBlock, RemoteCountry
  | where SourceIpBlockCount > 7
  ;
  let New = Today | join kind= leftanti (
    lastWeek
  ) on RemoteCountry, SourceIpBlock, DestIpBlock
  | project RemoteCountry, SourceIp, DestinationIp, countToday;
  let RemoveCommonCountry = New | join kind= leftanti (
    CountryCount 
  ) on RemoteCountry;
  RemoveCommonCountry 
  | join kind= innerunique (Full) on RemoteCountry

