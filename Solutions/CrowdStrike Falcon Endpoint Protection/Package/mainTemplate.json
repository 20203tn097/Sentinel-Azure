{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Microsoft - support@microsoft.com",
    "comments": "Solution template for CrowdStrike Falcon Endpoint Protection"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    },
    "workbook1-name": {
      "type": "string",
      "defaultValue": "CrowdStrike Falcon Endpoint Protection",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    }
  },
  "variables": {
    "solutionId": "azuresentinel.azure-sentinel-solution-crowdstrikefalconep",
    "_solutionId": "[variables('solutionId')]",
    "email": "support@microsoft.com",
    "_email": "[variables('email')]",
    "_solutionName": "CrowdStrike Falcon Endpoint Protection",
    "_solutionVersion": "3.0.0",
    "uiConfigId1": "CrowdstrikeReplicator",
    "_uiConfigId1": "[variables('uiConfigId1')]",
    "dataConnectorContentId1": "CrowdstrikeReplicator",
    "_dataConnectorContentId1": "[variables('dataConnectorContentId1')]",
    "dataConnectorId1": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
    "_dataConnectorId1": "[variables('dataConnectorId1')]",
    "dataConnectorTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId1'))))]",
    "dataConnectorVersion1": "1.0.0",
    "_dataConnectorcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','dc','-', uniqueString(concat(variables('_solutionId'),'-','DataConnector','-',variables('_dataConnectorContentId1'),'-', variables('dataConnectorVersion1'))))]",
    "uiConfigId2": "CrowdStrikeFalconEndpointProtection",
    "_uiConfigId2": "[variables('uiConfigId2')]",
    "dataConnectorContentId2": "CrowdStrikeFalconEndpointProtection",
    "_dataConnectorContentId2": "[variables('dataConnectorContentId2')]",
    "dataConnectorId2": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId2'))]",
    "_dataConnectorId2": "[variables('dataConnectorId2')]",
    "dataConnectorTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId2'))))]",
    "dataConnectorVersion2": "1.0.0",
    "_dataConnectorcontentProductId2": "[concat(take(variables('_solutionId'),50),'-','dc','-', uniqueString(concat(variables('_solutionId'),'-','DataConnector','-',variables('_dataConnectorContentId2'),'-', variables('dataConnectorVersion2'))))]",
    "uiConfigId3": "CrowdstrikeReplicatorv2",
    "_uiConfigId3": "[variables('uiConfigId3')]",
    "dataConnectorContentId3": "CrowdstrikeReplicatorv2",
    "_dataConnectorContentId3": "[variables('dataConnectorContentId3')]",
    "dataConnectorId3": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId3'))]",
    "_dataConnectorId3": "[variables('dataConnectorId3')]",
    "dataConnectorTemplateSpecName3": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId3'))))]",
    "dataConnectorVersion3": "1.0.0",
    "_dataConnectorcontentProductId3": "[concat(take(variables('_solutionId'),50),'-','dc','-', uniqueString(concat(variables('_solutionId'),'-','DataConnector','-',variables('_dataConnectorContentId3'),'-', variables('dataConnectorVersion3'))))]",
    "CrowdStrike_Base": "CrowdStrike_Base",
    "_CrowdStrike_Base": "[variables('CrowdStrike_Base')]",
    "blanks": "[replace('b', 'b', '')]",
    "playbookVersion1": "1.0",
    "playbookContentId1": "CrowdStrike_Base",
    "_playbookContentId1": "[variables('playbookContentId1')]",
    "playbookId1": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId1'))]",
    "playbookTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId1'))))]",
    "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
    "_playbookcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId1'),'-', variables('playbookVersion1'))))]",
    "CrowdStrike_ContainHost": "CrowdStrike_ContainHost",
    "_CrowdStrike_ContainHost": "[variables('CrowdStrike_ContainHost')]",
    "TemplateEmptyArray": "[json('[]')]",
    "playbookVersion2": "1.0",
    "playbookContentId2": "CrowdStrike_ContainHost",
    "_playbookContentId2": "[variables('playbookContentId2')]",
    "playbookId2": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId2'))]",
    "playbookTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId2'))))]",
    "_playbookcontentProductId2": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId2'),'-', variables('playbookVersion2'))))]",
    "CrowdStrike_Enrichment_GetDeviceInformation": "CrowdStrike_Enrichment_GetDeviceInformation",
    "_CrowdStrike_Enrichment_GetDeviceInformation": "[variables('CrowdStrike_Enrichment_GetDeviceInformation')]",
    "playbookVersion3": "1.0",
    "playbookContentId3": "CrowdStrike_Enrichment_GetDeviceInformation",
    "_playbookContentId3": "[variables('playbookContentId3')]",
    "playbookId3": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId3'))]",
    "playbookTemplateSpecName3": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId3'))))]",
    "_playbookcontentProductId3": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId3'),'-', variables('playbookVersion3'))))]",
    "workbookVersion1": "1.0.0",
    "workbookContentId1": "CrowdStrikeFalconEndpointProtectionWorkbook",
    "workbookId1": "[resourceId('Microsoft.Insights/workbooks', variables('workbookContentId1'))]",
    "workbookTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-wb-',uniquestring(variables('_workbookContentId1'))))]",
    "_workbookContentId1": "[variables('workbookContentId1')]",
    "_workbookcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','wb','-', uniqueString(concat(variables('_solutionId'),'-','Workbook','-',variables('_workbookContentId1'),'-', variables('workbookVersion1'))))]",
    "analyticRuleVersion1": "1.0.1",
    "analyticRulecontentId1": "4465ebde-b381-45f7-ad08-7d818070a11c",
    "_analyticRulecontentId1": "[variables('analyticRulecontentId1')]",
    "analyticRuleId1": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId1'))]",
    "analyticRuleTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId1'))))]",
    "_analyticRulecontentProductId1": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-',variables('_analyticRulecontentId1'),'-', variables('analyticRuleVersion1'))))]",
    "analyticRuleVersion2": "1.0.1",
    "analyticRulecontentId2": "f7d298b2-726c-42a5-bbac-0d7f9950f527",
    "_analyticRulecontentId2": "[variables('analyticRulecontentId2')]",
    "analyticRuleId2": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId2'))]",
    "analyticRuleTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId2'))))]",
    "_analyticRulecontentProductId2": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-',variables('_analyticRulecontentId2'),'-', variables('analyticRuleVersion2'))))]",
    "_solutioncontentProductId": "[concat(take(variables('_solutionId'),50),'-','sl','-', uniqueString(concat(variables('_solutionId'),'-','Solution','-',variables('_solutionId'),'-', variables('_solutionVersion'))))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('dataConnectorTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CrowdStrike Falcon Endpoint Protection data connector with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
              "apiVersion": "2021-03-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "GenericUI",
              "properties": {
                "connectorUiConfig": {
                  "id": "[variables('_uiConfigId1')]",
                  "title": "Crowdstrike Falcon Data Replicator (using Azure Functions)",
                  "publisher": "Crowdstrike",
                  "descriptionMarkdown": "The [Crowdstrike](https://www.crowdstrike.com/) Falcon Data Replicator connector provides the capability to ingest raw event data from the [Falcon Platform](https://www.crowdstrike.com/blog/tech-center/intro-to-falcon-data-replicator/) events into Microsoft Sentinel. The connector provides ability to get events from Falcon Agents which helps to examine potential security risks, analyze your team's use of collaboration, diagnose configuration problems and more.",
                  "additionalRequirementBanner": "These queries and workbooks are dependent on a parser based on Kusto to work as expected. ​Follow the steps to use this Kusto functions alias **CrowdstrikeReplicator** in queries and workbooks [Follow steps to get this Kusto functions>](https://aka.ms/sentinel-crowdstrikereplicator-parser).",
                  "graphQueries": [
                    {
                      "metricName": "Total data received",
                      "legend": "CrowdstrikeReplicatorLogs_CL",
                      "baseQuery": "CrowdstrikeReplicatorLogs_CL"
                    }
                  ],
                  "sampleQueries": [
                    {
                      "description": "Data Replicator - All Activities",
                      "query": "CrowdstrikeReplicator\n | sort by TimeGenerated desc"
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "CrowdstrikeReplicatorLogs_CL",
                      "lastDataReceivedQuery": "CrowdstrikeReplicatorLogs_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    }
                  ],
                  "connectivityCriterias": [
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "CrowdstrikeReplicatorLogs_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(3d)"
                      ]
                    }
                  ],
                  "availability": {
                    "status": 1,
                    "isPreview": false
                  },
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "read and write permissions on the workspace are required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "write": true,
                          "read": true,
                          "delete": true
                        }
                      },
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                        "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                        "providerDisplayName": "Keys",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "action": true
                        }
                      }
                    ],
                    "customs": [
                      {
                        "name": "Microsoft.Web/sites permissions",
                        "description": "Read and write permissions to Azure Functions to create a Function App is required. [See the documentation to learn more about Azure Functions](https://docs.microsoft.com/azure/azure-functions/)."
                      },
                      {
                        "name": "SQS and AWS S3 account credentials/permissions",
                        "description": "**AWS_SECRET**, **AWS_REGION_NAME**, **AWS_KEY**, **QUEUE_URL** is required.  [See the documentation to learn more about data pulling](https://www.crowdstrike.com/blog/tech-center/intro-to-falcon-data-replicator/). To start, contact CrowdStrike support. At your request they will create a CrowdStrike managed Amazon Web Services (AWS) S3 bucket for short term storage purposes as well as a SQS (simple queue service) account for monitoring changes to the S3 bucket."
                      }
                    ]
                  },
                  "instructionSteps": [
                    {
                      "description": ">**NOTE:** This connector uses Azure Functions to connect to the S3 bucket to pull logs into Microsoft Sentinel. This might result in additional data ingestion costs. Check the [Azure Functions pricing page](https://azure.microsoft.com/pricing/details/functions/) for details."
                    },
                    {
                      "description": ">**(Optional Step)** Securely store workspace and API authorization key(s) or token(s) in Azure Key Vault. Azure Key Vault provides a secure mechanism to store and retrieve key values. [Follow these instructions](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references) to use Azure Key Vault with an Azure Function App."
                    },
                    {
                      "description": ">**NOTE:** This data connector depends on a parser based on a Kusto Function to work as expected. [Follow these steps](https://aka.ms/sentinel-crowdstrikereplicator-parser) to create the Kusto functions alias, **CrowdstrikeReplicator**."
                    },
                    {
                      "description": "**STEP 1 - Contact CrowdStrike support to obtain the credentials and Queue URL.**\n"
                    },
                    {
                      "description": "**STEP 2 - Choose ONE from the following two deployment options to deploy the connector and the associated Azure Function**\n\n>**IMPORTANT:** Before deploying the Crowdstrike Falcon Data Replicator connector, have the Workspace ID and Workspace Primary Key (can be copied from the following).",
                      "instructions": [
                        {
                          "parameters": {
                            "fillWith": [
                              "WorkspaceId"
                            ],
                            "label": "Workspace ID"
                          },
                          "type": "CopyableLabel"
                        },
                        {
                          "parameters": {
                            "fillWith": [
                              "PrimaryKey"
                            ],
                            "label": "Primary Key"
                          },
                          "type": "CopyableLabel"
                        }
                      ]
                    },
                    {
                      "description": "Use this method for automated deployment of the Crowdstrike Falcon Data Replicator connector using an ARM Tempate.\n\n1. Click the **Deploy to Azure** button below. \n\n\t[![Deploy To Azure](https://aka.ms/deploytoazurebutton)](https://aka.ms/sentinel-CrowdstrikeReplicator-azuredeploy)\n2. Select the preferred **AWS_SECRET**, **AWS_REGION_NAME**, **AWS_KEY**, **QUEUE_URL**. \n> **NOTE:** Within the same resource group, you can't mix Windows and Linux apps in the same region. Select existing resource group without Windows apps in it or create new resource group.\n3. Enter the **AWS_SECRET**, **AWS_REGION_NAME**, **AWS_KEY**, **QUEUE_URL** and deploy. \n4. Mark the checkbox labeled **I agree to the terms and conditions stated above**. \n5. Click **Purchase** to deploy.",
                      "title": "Option 1 - Azure Resource Manager (ARM) Template"
                    },
                    {
                      "description": "Use the following step-by-step instructions to deploy the Crowdstrike Falcon Data Replicator connector manually with Azure Functions (Deployment via Visual Studio Code).",
                      "title": "Option 2 - Manual Deployment of Azure Functions"
                    },
                    {
                      "description": "**1. Deploy a Function App**\n\n> **NOTE:** You will need to [prepare VS code](https://docs.microsoft.com/azure/azure-functions/functions-create-first-function-python#prerequisites) for Azure function development.\n\n1. Download the [Azure Function App](https://aka.ms/sentinel-CrowdstrikeReplicator-functionapp) file. Extract archive to your local development computer.\n2. Start VS Code. Choose File in the main menu and select Open Folder.\n3. Select the top level folder from extracted files.\n4. Choose the Azure icon in the Activity bar, then in the **Azure: Functions** area, choose the **Deploy to function app** button.\nIf you aren't already signed in, choose the Azure icon in the Activity bar, then in the **Azure: Functions** area, choose **Sign in to Azure**\nIf you're already signed in, go to the next step.\n5. Provide the following information at the prompts:\n\n\ta. **Select folder:** Choose a folder from your workspace or browse to one that contains your function app.\n\n\tb. **Select Subscription:** Choose the subscription to use.\n\n\tc. Select **Create new Function App in Azure** (Don't choose the Advanced option)\n\n\td. **Enter a globally unique name for the function app:** Type a name that is valid in a URL path. The name you type is validated to make sure that it's unique in Azure Functions. (e.g. CrowdstrikeReplicatorXXXXX).\n\n\te. **Select a runtime:** Choose Python 3.8.\n\n\tf. Select a location for new resources. For better performance and lower costs choose the same [region](https://azure.microsoft.com/regions/) where Microsoft Sentinel is located.\n\n6. Deployment will begin. A notification is displayed after your function app is created and the deployment package is applied.\n7. Go to Azure Portal for the Function App configuration."
                    },
                    {
                      "description": "**2. Configure the Function App**\n\n1. In the Function App, select the Function App Name and select **Configuration**.\n2. In the **Application settings** tab, select ** New application setting**.\n3. Add each of the following application settings individually, with their respective string values (case-sensitive): \n\t\tAWS_KEY\n\t\tAWS_SECRET\n\t\tAWS_REGION_NAME\n\t\tQUEUE_URL\n\t\tWorkspaceID\n\t\tWorkspaceKey\n\t\tlogAnalyticsUri (optional)\n> - Use logAnalyticsUri to override the log analytics API endpoint for dedicated cloud. For example, for public cloud, leave the value empty; for Azure GovUS cloud environment, specify the value in the following format: `https://<CustomerId>.ods.opinsights.azure.us`.\n4. Once all application settings have been entered, click **Save**."
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2023-04-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
                "contentId": "[variables('_dataConnectorContentId1')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "CrowdStrike Falcon Endpoint Protection",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_dataConnectorContentId1')]",
        "contentKind": "DataConnector",
        "displayName": "Crowdstrike Falcon Data Replicator (using Azure Functions)",
        "contentProductId": "[variables('_dataConnectorcontentProductId1')]",
        "id": "[variables('_dataConnectorcontentProductId1')]",
        "version": "[variables('dataConnectorVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
      "dependsOn": [
        "[variables('_dataConnectorId1')]"
      ],
      "location": "[parameters('workspace-location')]",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
        "contentId": "[variables('_dataConnectorContentId1')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorVersion1')]",
        "source": {
          "kind": "Solution",
          "name": "CrowdStrike Falcon Endpoint Protection",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "GenericUI",
      "properties": {
        "connectorUiConfig": {
          "title": "Crowdstrike Falcon Data Replicator (using Azure Functions)",
          "publisher": "Crowdstrike",
          "descriptionMarkdown": "The [Crowdstrike](https://www.crowdstrike.com/) Falcon Data Replicator connector provides the capability to ingest raw event data from the [Falcon Platform](https://www.crowdstrike.com/blog/tech-center/intro-to-falcon-data-replicator/) events into Microsoft Sentinel. The connector provides ability to get events from Falcon Agents which helps to examine potential security risks, analyze your team's use of collaboration, diagnose configuration problems and more.",
          "graphQueries": [
            {
              "metricName": "Total data received",
              "legend": "CrowdstrikeReplicatorLogs_CL",
              "baseQuery": "CrowdstrikeReplicatorLogs_CL"
            }
          ],
          "dataTypes": [
            {
              "name": "CrowdstrikeReplicatorLogs_CL",
              "lastDataReceivedQuery": "CrowdstrikeReplicatorLogs_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            }
          ],
          "connectivityCriterias": [
            {
              "type": "IsConnectedQuery",
              "value": [
                "CrowdstrikeReplicatorLogs_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(3d)"
              ]
            }
          ],
          "sampleQueries": [
            {
              "description": "Data Replicator - All Activities",
              "query": "CrowdstrikeReplicator\n | sort by TimeGenerated desc"
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": false
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "read and write permissions on the workspace are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "write": true,
                  "read": true,
                  "delete": true
                }
              },
              {
                "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                "providerDisplayName": "Keys",
                "scope": "Workspace",
                "requiredPermissions": {
                  "action": true
                }
              }
            ],
            "customs": [
              {
                "name": "Microsoft.Web/sites permissions",
                "description": "Read and write permissions to Azure Functions to create a Function App is required. [See the documentation to learn more about Azure Functions](https://docs.microsoft.com/azure/azure-functions/)."
              },
              {
                "name": "SQS and AWS S3 account credentials/permissions",
                "description": "**AWS_SECRET**, **AWS_REGION_NAME**, **AWS_KEY**, **QUEUE_URL** is required.  [See the documentation to learn more about data pulling](https://www.crowdstrike.com/blog/tech-center/intro-to-falcon-data-replicator/). To start, contact CrowdStrike support. At your request they will create a CrowdStrike managed Amazon Web Services (AWS) S3 bucket for short term storage purposes as well as a SQS (simple queue service) account for monitoring changes to the S3 bucket."
              }
            ]
          },
          "instructionSteps": [
            {
              "description": ">**NOTE:** This connector uses Azure Functions to connect to the S3 bucket to pull logs into Microsoft Sentinel. This might result in additional data ingestion costs. Check the [Azure Functions pricing page](https://azure.microsoft.com/pricing/details/functions/) for details."
            },
            {
              "description": ">**(Optional Step)** Securely store workspace and API authorization key(s) or token(s) in Azure Key Vault. Azure Key Vault provides a secure mechanism to store and retrieve key values. [Follow these instructions](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references) to use Azure Key Vault with an Azure Function App."
            },
            {
              "description": ">**NOTE:** This data connector depends on a parser based on a Kusto Function to work as expected. [Follow these steps](https://aka.ms/sentinel-crowdstrikereplicator-parser) to create the Kusto functions alias, **CrowdstrikeReplicator**."
            },
            {
              "description": "**STEP 1 - Contact CrowdStrike support to obtain the credentials and Queue URL.**\n"
            },
            {
              "description": "**STEP 2 - Choose ONE from the following two deployment options to deploy the connector and the associated Azure Function**\n\n>**IMPORTANT:** Before deploying the Crowdstrike Falcon Data Replicator connector, have the Workspace ID and Workspace Primary Key (can be copied from the following).",
              "instructions": [
                {
                  "parameters": {
                    "fillWith": [
                      "WorkspaceId"
                    ],
                    "label": "Workspace ID"
                  },
                  "type": "CopyableLabel"
                },
                {
                  "parameters": {
                    "fillWith": [
                      "PrimaryKey"
                    ],
                    "label": "Primary Key"
                  },
                  "type": "CopyableLabel"
                }
              ]
            },
            {
              "description": "Use this method for automated deployment of the Crowdstrike Falcon Data Replicator connector using an ARM Tempate.\n\n1. Click the **Deploy to Azure** button below. \n\n\t[![Deploy To Azure](https://aka.ms/deploytoazurebutton)](https://aka.ms/sentinel-CrowdstrikeReplicator-azuredeploy)\n2. Select the preferred **AWS_SECRET**, **AWS_REGION_NAME**, **AWS_KEY**, **QUEUE_URL**. \n> **NOTE:** Within the same resource group, you can't mix Windows and Linux apps in the same region. Select existing resource group without Windows apps in it or create new resource group.\n3. Enter the **AWS_SECRET**, **AWS_REGION_NAME**, **AWS_KEY**, **QUEUE_URL** and deploy. \n4. Mark the checkbox labeled **I agree to the terms and conditions stated above**. \n5. Click **Purchase** to deploy.",
              "title": "Option 1 - Azure Resource Manager (ARM) Template"
            },
            {
              "description": "Use the following step-by-step instructions to deploy the Crowdstrike Falcon Data Replicator connector manually with Azure Functions (Deployment via Visual Studio Code).",
              "title": "Option 2 - Manual Deployment of Azure Functions"
            },
            {
              "description": "**1. Deploy a Function App**\n\n> **NOTE:** You will need to [prepare VS code](https://docs.microsoft.com/azure/azure-functions/functions-create-first-function-python#prerequisites) for Azure function development.\n\n1. Download the [Azure Function App](https://aka.ms/sentinel-CrowdstrikeReplicator-functionapp) file. Extract archive to your local development computer.\n2. Start VS Code. Choose File in the main menu and select Open Folder.\n3. Select the top level folder from extracted files.\n4. Choose the Azure icon in the Activity bar, then in the **Azure: Functions** area, choose the **Deploy to function app** button.\nIf you aren't already signed in, choose the Azure icon in the Activity bar, then in the **Azure: Functions** area, choose **Sign in to Azure**\nIf you're already signed in, go to the next step.\n5. Provide the following information at the prompts:\n\n\ta. **Select folder:** Choose a folder from your workspace or browse to one that contains your function app.\n\n\tb. **Select Subscription:** Choose the subscription to use.\n\n\tc. Select **Create new Function App in Azure** (Don't choose the Advanced option)\n\n\td. **Enter a globally unique name for the function app:** Type a name that is valid in a URL path. The name you type is validated to make sure that it's unique in Azure Functions. (e.g. CrowdstrikeReplicatorXXXXX).\n\n\te. **Select a runtime:** Choose Python 3.8.\n\n\tf. Select a location for new resources. For better performance and lower costs choose the same [region](https://azure.microsoft.com/regions/) where Microsoft Sentinel is located.\n\n6. Deployment will begin. A notification is displayed after your function app is created and the deployment package is applied.\n7. Go to Azure Portal for the Function App configuration."
            },
            {
              "description": "**2. Configure the Function App**\n\n1. In the Function App, select the Function App Name and select **Configuration**.\n2. In the **Application settings** tab, select ** New application setting**.\n3. Add each of the following application settings individually, with their respective string values (case-sensitive): \n\t\tAWS_KEY\n\t\tAWS_SECRET\n\t\tAWS_REGION_NAME\n\t\tQUEUE_URL\n\t\tWorkspaceID\n\t\tWorkspaceKey\n\t\tlogAnalyticsUri (optional)\n> - Use logAnalyticsUri to override the log analytics API endpoint for dedicated cloud. For example, for public cloud, leave the value empty; for Azure GovUS cloud environment, specify the value in the following format: `https://<CustomerId>.ods.opinsights.azure.us`.\n4. Once all application settings have been entered, click **Save**."
            }
          ],
          "id": "[variables('_uiConfigId1')]",
          "additionalRequirementBanner": "These queries and workbooks are dependent on a parser based on Kusto to work as expected. ​Follow the steps to use this Kusto functions alias **CrowdstrikeReplicator** in queries and workbooks [Follow steps to get this Kusto functions>](https://aka.ms/sentinel-crowdstrikereplicator-parser)."
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('dataConnectorTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CrowdStrike Falcon Endpoint Protection data connector with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorVersion2')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId2'))]",
              "apiVersion": "2021-03-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "GenericUI",
              "properties": {
                "connectorUiConfig": {
                  "id": "[variables('_uiConfigId2')]",
                  "title": "CrowdStrike Falcon Endpoint Protection",
                  "publisher": "CrowdStrike",
                  "descriptionMarkdown": "The [CrowdStrike Falcon Endpoint Protection](https://www.crowdstrike.com/endpoint-security-products/) connector allows you to easily connect your CrowdStrike Falcon Event Stream with Microsoft Sentinel, to create custom dashboards, alerts, and improve investigation. This gives you more insight into your organization's endpoints and improves your security operation capabilities.",
                  "additionalRequirementBanner": "These queries are dependent on a parser based on a Kusto Function deployed as part of the solution.",
                  "graphQueries": [
                    {
                      "metricName": "Total data received",
                      "legend": "CrowdStrikeFalconEventStream",
                      "baseQuery": "CommonSecurityLog \n| where DeviceVendor == \"CrowdStrike\" and DeviceProduct == \"FalconHost\""
                    }
                  ],
                  "sampleQueries": [
                    {
                      "description": "Top 10 Hosts with Detections",
                      "query": "CrowdStrikeFalconEventStream \n | where EventType == \"DetectionSummaryEvent\" \n| summarize count() by DstHostName \n | top 10 by count_"
                    },
                    {
                      "description": "Top 10 Users with Detections",
                      "query": "CrowdStrikeFalconEventStream \n | where EventType == \"DetectionSummaryEvent\" \n| summarize count() by DstUserName \n | top 10 by count_"
                    }
                  ],
                  "connectivityCriterias": [
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "CommonSecurityLog \n| where DeviceVendor == \"CrowdStrike\" and DeviceProduct == \"FalconHost\"\n | summarize LastLogReceived = max(TimeGenerated)\n | project IsConnected = LastLogReceived > ago(3d)"
                      ]
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "CommonSecurityLog (CrowdStrikeFalconEventStream)",
                      "lastDataReceivedQuery": "CommonSecurityLog \n| where DeviceVendor == \"CrowdStrike\" and DeviceProduct == \"FalconHost\"\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
                    }
                  ],
                  "availability": {
                    "status": 1,
                    "isPreview": false
                  },
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "read and write permissions are required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "read": true,
                          "write": true,
                          "delete": true
                        }
                      },
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                        "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                        "providerDisplayName": "Keys",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "action": true
                        }
                      }
                    ]
                  },
                  "instructionSteps": [
                    {
                      "description": "**NOTE:** This data connector depends on a parser based on a Kusto Function to work as expected which is deployed as part of the solution. To view the function code in Log Analytics, open Log Analytics/Microsoft Sentinel Logs blade, click Functions and search for the alias Crowd Strike Falcon Endpoint Protection and load the function code or click [here](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/CrowdStrike%20Falcon%20Endpoint%20Protection/Parsers/CrowdstrikeFalconEventStream.txt), on the second line of the query, enter the hostname(s) of your CrowdStrikeFalcon device(s) and any other unique identifiers for the logstream. The function usually takes 10-15 minutes to activate after solution installation/update."
                    },
                    {
                      "description": "Install and configure the Linux agent to collect your Common Event Format (CEF) Syslog messages and forward them to Microsoft Sentinel.\n\n> Notice that the data from all regions will be stored in the selected workspace",
                      "innerSteps": [
                        {
                          "title": "1.1 Select or create a Linux machine",
                          "description": "Select or create a Linux machine that Microsoft Sentinel will use as the proxy between your security solution and Microsoft Sentinel this machine can be on your on-prem environment, Azure or other clouds."
                        },
                        {
                          "title": "1.2 Install the CEF collector on the Linux machine",
                          "description": "Install the Microsoft Monitoring Agent on your Linux machine and configure the machine to listen on the necessary port and forward messages to your Microsoft Sentinel workspace. The CEF collector collects CEF messages on port 514 TCP.\n\n> 1. Make sure that you have Python on your machine using the following command: python -version.\n\n> 2. You must have elevated permissions (sudo) on your machine.",
                          "instructions": [
                            {
                              "parameters": {
                                "fillWith": [
                                  "WorkspaceId",
                                  "PrimaryKey"
                                ],
                                "label": "Run the following command to install and apply the CEF collector:",
                                "value": "sudo wget -O cef_installer.py https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/DataConnectors/CEF/cef_installer.py&&sudo python cef_installer.py {0} {1}"
                              },
                              "type": "CopyableLabel"
                            }
                          ]
                        }
                      ],
                      "title": "1. Linux Syslog agent configuration"
                    },
                    {
                      "description": "Deploy the CrowdStrike Falcon SIEM Collector to forward Syslog messages in CEF format to your Microsoft Sentinel workspace via the Syslog agent.\n1. [Follow these instructions](https://www.crowdstrike.com/blog/tech-center/integrate-with-your-siem/) to deploy the SIEM Collector and forward syslog\n2. Use the IP address or hostname for the Linux device with the Linux agent installed as the Destination IP address.",
                      "title": "2. Forward CrowdStrike Falcon Event Stream logs to a Syslog agent"
                    },
                    {
                      "description": "Follow the instructions to validate your connectivity:\n\nOpen Log Analytics to check if the logs are received using the CommonSecurityLog schema.\n\n>It may take about 20 minutes until the connection streams data to your workspace.\n\nIf the logs are not received, run the following connectivity validation script:\n\n> 1. Make sure that you have Python on your machine using the following command: python -version.\n\n> 2. You must have elevated permissions (sudo) on your machine",
                      "instructions": [
                        {
                          "parameters": {
                            "fillWith": [
                              "WorkspaceId"
                            ],
                            "label": "Run the following command to validate your connectivity:",
                            "value": "sudo wget -O cef_troubleshoot.py https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/DataConnectors/CEF/cef_troubleshoot.py&&sudo python cef_troubleshoot.py  {0}"
                          },
                          "type": "CopyableLabel"
                        }
                      ],
                      "title": "3. Validate connection"
                    },
                    {
                      "description": "Make sure to configure the machine's security according to your organization's security policy\n\n\n[Learn more >](https://aka.ms/SecureCEF)",
                      "title": "4. Secure your machine "
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2023-04-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId2'),'/'))))]",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId2'))]",
                "contentId": "[variables('_dataConnectorContentId2')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion2')]",
                "source": {
                  "kind": "Solution",
                  "name": "CrowdStrike Falcon Endpoint Protection",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_dataConnectorContentId2')]",
        "contentKind": "DataConnector",
        "displayName": "CrowdStrike Falcon Endpoint Protection",
        "contentProductId": "[variables('_dataConnectorcontentProductId2')]",
        "id": "[variables('_dataConnectorcontentProductId2')]",
        "version": "[variables('dataConnectorVersion2')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId2'),'/'))))]",
      "dependsOn": [
        "[variables('_dataConnectorId2')]"
      ],
      "location": "[parameters('workspace-location')]",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId2'))]",
        "contentId": "[variables('_dataConnectorContentId2')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorVersion2')]",
        "source": {
          "kind": "Solution",
          "name": "CrowdStrike Falcon Endpoint Protection",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId2'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "GenericUI",
      "properties": {
        "connectorUiConfig": {
          "title": "CrowdStrike Falcon Endpoint Protection",
          "publisher": "CrowdStrike",
          "descriptionMarkdown": "The [CrowdStrike Falcon Endpoint Protection](https://www.crowdstrike.com/endpoint-security-products/) connector allows you to easily connect your CrowdStrike Falcon Event Stream with Microsoft Sentinel, to create custom dashboards, alerts, and improve investigation. This gives you more insight into your organization's endpoints and improves your security operation capabilities.",
          "graphQueries": [
            {
              "metricName": "Total data received",
              "legend": "CrowdStrikeFalconEventStream",
              "baseQuery": "CommonSecurityLog \n| where DeviceVendor == \"CrowdStrike\" and DeviceProduct == \"FalconHost\""
            }
          ],
          "dataTypes": [
            {
              "name": "CommonSecurityLog (CrowdStrikeFalconEventStream)",
              "lastDataReceivedQuery": "CommonSecurityLog \n| where DeviceVendor == \"CrowdStrike\" and DeviceProduct == \"FalconHost\"\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
            }
          ],
          "connectivityCriterias": [
            {
              "type": "IsConnectedQuery",
              "value": [
                "CommonSecurityLog \n| where DeviceVendor == \"CrowdStrike\" and DeviceProduct == \"FalconHost\"\n | summarize LastLogReceived = max(TimeGenerated)\n | project IsConnected = LastLogReceived > ago(3d)"
              ]
            }
          ],
          "sampleQueries": [
            {
              "description": "Top 10 Hosts with Detections",
              "query": "CrowdStrikeFalconEventStream \n | where EventType == \"DetectionSummaryEvent\" \n| summarize count() by DstHostName \n | top 10 by count_"
            },
            {
              "description": "Top 10 Users with Detections",
              "query": "CrowdStrikeFalconEventStream \n | where EventType == \"DetectionSummaryEvent\" \n| summarize count() by DstUserName \n | top 10 by count_"
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": false
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "read and write permissions are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "read": true,
                  "write": true,
                  "delete": true
                }
              },
              {
                "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                "providerDisplayName": "Keys",
                "scope": "Workspace",
                "requiredPermissions": {
                  "action": true
                }
              }
            ]
          },
          "instructionSteps": [
            {
              "description": "**NOTE:** This data connector depends on a parser based on a Kusto Function to work as expected which is deployed as part of the solution. To view the function code in Log Analytics, open Log Analytics/Microsoft Sentinel Logs blade, click Functions and search for the alias Crowd Strike Falcon Endpoint Protection and load the function code or click [here](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/CrowdStrike%20Falcon%20Endpoint%20Protection/Parsers/CrowdstrikeFalconEventStream.txt), on the second line of the query, enter the hostname(s) of your CrowdStrikeFalcon device(s) and any other unique identifiers for the logstream. The function usually takes 10-15 minutes to activate after solution installation/update."
            },
            {
              "description": "Install and configure the Linux agent to collect your Common Event Format (CEF) Syslog messages and forward them to Microsoft Sentinel.\n\n> Notice that the data from all regions will be stored in the selected workspace",
              "innerSteps": [
                {
                  "title": "1.1 Select or create a Linux machine",
                  "description": "Select or create a Linux machine that Microsoft Sentinel will use as the proxy between your security solution and Microsoft Sentinel this machine can be on your on-prem environment, Azure or other clouds."
                },
                {
                  "title": "1.2 Install the CEF collector on the Linux machine",
                  "description": "Install the Microsoft Monitoring Agent on your Linux machine and configure the machine to listen on the necessary port and forward messages to your Microsoft Sentinel workspace. The CEF collector collects CEF messages on port 514 TCP.\n\n> 1. Make sure that you have Python on your machine using the following command: python -version.\n\n> 2. You must have elevated permissions (sudo) on your machine.",
                  "instructions": [
                    {
                      "parameters": {
                        "fillWith": [
                          "WorkspaceId",
                          "PrimaryKey"
                        ],
                        "label": "Run the following command to install and apply the CEF collector:",
                        "value": "sudo wget -O cef_installer.py https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/DataConnectors/CEF/cef_installer.py&&sudo python cef_installer.py {0} {1}"
                      },
                      "type": "CopyableLabel"
                    }
                  ]
                }
              ],
              "title": "1. Linux Syslog agent configuration"
            },
            {
              "description": "Deploy the CrowdStrike Falcon SIEM Collector to forward Syslog messages in CEF format to your Microsoft Sentinel workspace via the Syslog agent.\n1. [Follow these instructions](https://www.crowdstrike.com/blog/tech-center/integrate-with-your-siem/) to deploy the SIEM Collector and forward syslog\n2. Use the IP address or hostname for the Linux device with the Linux agent installed as the Destination IP address.",
              "title": "2. Forward CrowdStrike Falcon Event Stream logs to a Syslog agent"
            },
            {
              "description": "Follow the instructions to validate your connectivity:\n\nOpen Log Analytics to check if the logs are received using the CommonSecurityLog schema.\n\n>It may take about 20 minutes until the connection streams data to your workspace.\n\nIf the logs are not received, run the following connectivity validation script:\n\n> 1. Make sure that you have Python on your machine using the following command: python -version.\n\n> 2. You must have elevated permissions (sudo) on your machine",
              "instructions": [
                {
                  "parameters": {
                    "fillWith": [
                      "WorkspaceId"
                    ],
                    "label": "Run the following command to validate your connectivity:",
                    "value": "sudo wget -O cef_troubleshoot.py https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/DataConnectors/CEF/cef_troubleshoot.py&&sudo python cef_troubleshoot.py  {0}"
                  },
                  "type": "CopyableLabel"
                }
              ],
              "title": "3. Validate connection"
            },
            {
              "description": "Make sure to configure the machine's security according to your organization's security policy\n\n\n[Learn more >](https://aka.ms/SecureCEF)",
              "title": "4. Secure your machine "
            }
          ],
          "id": "[variables('_uiConfigId2')]",
          "additionalRequirementBanner": "These queries are dependent on a parser based on a Kusto Function deployed as part of the solution."
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('dataConnectorTemplateSpecName3')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CrowdStrike Falcon Endpoint Protection data connector with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorVersion3')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId3'))]",
              "apiVersion": "2021-03-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "GenericUI",
              "properties": {
                "connectorUiConfig": {
                  "id": "[variables('_uiConfigId3')]",
                  "title": "Crowdstrike Falcon Data Replicator V2 (using Azure Functions)",
                  "publisher": "Crowdstrike",
                  "descriptionMarkdown": "The [Crowdstrike](https://www.crowdstrike.com/) Falcon Data Replicator connector provides the capability to ingest raw event data from the [Falcon Platform](https://www.crowdstrike.com/blog/tech-center/intro-to-falcon-data-replicator/) events into Microsoft Sentinel. The connector provides ability to get events from Falcon Agents which helps to examine potential security risks, analyze your team's use of collaboration, diagnose configuration problems and more.",
                  "additionalRequirementBanner": "These queries and workbooks are dependent on a parser based on Kusto to work as expected. ​Follow the steps to use this Kusto functions alias **CrowdstrikeReplicator** in queries and workbooks [Follow steps to get this Kusto functions>](https://aka.ms/sentinel-crowdstrikereplicator-parser).",
                  "graphQueries": [
                    {
                      "metricName": "Total data received",
                      "legend": "CrowdStrikeReplicatorV2",
                      "baseQuery": "CrowdStrikeReplicatorV2"
                    }
                  ],
                  "sampleQueries": [
                    {
                      "description": "Data Replicator - All Activities",
                      "query": "CrowdStrikeReplicatorV2 \n | sort by TimeGenerated desc"
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "CrowdStrike_Additional_Events_CL",
                      "lastDataReceivedQuery": "CrowdStrike_Additional_Events_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "ASimNetworkSessionLogs",
                      "lastDataReceivedQuery": "ASimNetworkSessionLogs\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "ASimDnsActivityLogs",
                      "lastDataReceivedQuery": "ASimDnsActivityLogs\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "ASimAuditEventLogs",
                      "lastDataReceivedQuery": "ASimAuditEventLogs\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "ASimFileEventLogs_CL",
                      "lastDataReceivedQuery": "ASimFileEventLogs_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "ASimAuthenticationEventLogs",
                      "lastDataReceivedQuery": "ASimAuthenticationEventLogs\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "ASimProcessEventLogs",
                      "lastDataReceivedQuery": "ASimProcessEventLogs\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "ASimRegistryEventLogs_CL",
                      "lastDataReceivedQuery": "ASimRegistryEventLogs_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "ASimUserManagementLogs_CL",
                      "lastDataReceivedQuery": "ASimUserManagementLogs_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "CrowdStrike_Secondary_Data_CL",
                      "lastDataReceivedQuery": "CrowdStrike_Secondary_Data_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    }
                  ],
                  "connectivityCriterias": [
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "CrowdStrikeReplicatorV2(starttime=ago(3d)) \n    |take 1\n   | project IsConnected = true  "
                      ]
                    }
                  ],
                  "availability": {
                    "status": 1,
                    "isPreview": false
                  },
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "read and write permissions on the workspace are required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "write": true,
                          "read": true,
                          "delete": true
                        }
                      },
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                        "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                        "providerDisplayName": "Keys",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "action": true
                        }
                      }
                    ],
                    "customs": [
                      {
                        "name": "Microsoft.Web/sites permissions",
                        "description": "Read and write permissions to Azure Functions to create a Function App is required. [See the documentation to learn more about Azure Functions](https://docs.microsoft.com/azure/azure-functions/)."
                      },
                      {
                        "name": "SQS and AWS S3 account credentials/permissions",
                        "description": "**AWS_SECRET**, **AWS_REGION_NAME**, **AWS_KEY**, **QUEUE_URL** is required.  [See the documentation to learn more about data pulling](https://www.crowdstrike.com/blog/tech-center/intro-to-falcon-data-replicator/). To start, contact CrowdStrike support. At your request they will create a CrowdStrike managed Amazon Web Services (AWS) S3 bucket for short term storage purposes as well as a SQS (simple queue service) account for monitoring changes to the S3 bucket."
                      }
                    ]
                  },
                  "instructionSteps": [
                    {
                      "description": ">**NOTE:** This connector uses Azure Functions to connect to the AWS SQS / S3 to pull logs into Microsoft Sentinel. This might result in additional data ingestion costs. Check the [Azure Functions pricing page](https://azure.microsoft.com/pricing/details/functions/) for details.\n\n>**(Optional Step)** Securely store API authorization key(s) or token(s) in Azure Key Vault. Azure Key Vault provides a secure mechanism to store and retrieve key values. [Follow these instructions](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references) to use Azure Key Vault with an Azure Function App."
                    },
                    {
                      "description": "1. Configure FDR in CrowdStrike - You must contact the [CrowdStrike support team](https://supportportal.crowdstrike.com/) to enable CrowdStrike FDR.\n\t - Once CrowdStrike FDR is enabled,  from the CrowdStrike console, navigate to Support --> API Clients and Keys. \n\t - You need to Create new credentials to copy the AWS Access Key ID, AWS Secret Access Key, SQS Queue URL and AWS Region. \n2.  Register AAD application - For DCR to authentiate to ingest data into log analytics, you must use AAD application. \n\t - [Follow the instructions here](https://learn.microsoft.com/en-us/azure/azure-monitor/logs/tutorial-logs-ingestion-portal#create-azure-ad-application) (steps 1-5) to get **AAD Tenant Id**, **AAD Client Id** and **AAD Client Secret**. \n\t - For **AAD Principal** Id of this application, access the AAD App through [AAD Portal](https://aad.portal.azure.com/#view/Microsoft_AAD_IAM/StartboardApplicationsMenuBlade/~/AppAppsPreview/menuId/) and capture Object Id from the application overview page.",
                      "title": "Prerequisites"
                    },
                    {
                      "description": "Choose ONE from the following two deployment options to deploy the connector and the associated Azure Function",
                      "title": "Deployment Options"
                    },
                    {
                      "description": "Use this method for automated deployment of the Crowdstrike Falcon Data Replicator connector V2 using an ARM Tempate.\n\n1. Click the **Deploy to Azure** button below. \n\n\t[![Deploy To Azure](https://aka.ms/deploytoazurebutton)](https://aka.ms/sentinel-CrowdstrikeReplicatorV2-azuredeploy) \t\t\t\n2. Provide the required details such as Microsoft Sentinel Workspace, CrowdStrike AWS credentials, Azure AD Application details and ingestion configurations \n> **NOTE:** Within the same resource group, you can't mix Windows and Linux apps in the same region. Select existing resource group without Windows apps in it or create new resource group. It is recommended to create a new Resource Group for deployment of function app and associated resources.\n3. Mark the checkbox labeled **I agree to the terms and conditions stated above**. \n4. Click **Purchase** to deploy.",
                      "title": "Option 1 - Azure Resource Manager (ARM) Template"
                    },
                    {
                      "description": "Use the following step-by-step instructions to deploy the Crowdstrike Falcon Data Replicator connector manually with Azure Functions (Deployment via Visual Studio Code).",
                      "title": "Option 2 - Manual Deployment of Azure Functions"
                    },
                    {
                      "description": "**1. Deploy DCE, DCR and Custom Tables for data ingestion**\n\n1. Deploy the required DCE,  DCR(s) and the Custom Tables by using the [Data Collection Resource ARM template](https://aka.ms/sentinel-CrowdstrikeReplicatorV2-azuredeploy-data-resource) \n2. After successful deployment of DCE and DCR(s), get the below information and keep it handy (required during Azure Functions app deployment).\n\t - DCE log ingestion - Follow the instructions available at [Create data collection endpoint](https://learn.microsoft.com/en-us/azure/azure-monitor/logs/tutorial-logs-ingestion-portal#create-data-collection-endpoint) (Step 3).\n\t - Immutable Ids of one or more DCRs (as applicable) - Follow the instructions available at [Collect information from the DCR](https://learn.microsoft.com/en-us/azure/azure-monitor/logs/tutorial-logs-ingestion-portal#collect-information-from-the-dcr) (Stpe 2)."
                    },
                    {
                      "description": "**2. Deploy a Function App**\n\n1. Download the [Azure Function App](https://aka.ms/sentinel-CrowdstrikeReplicatorV2-functionapp) file. Extract archive to your local development computer.\n2. Follow the [function app manual deployment instructions](https://github.com/Azure/Azure-Sentinel/blob/master/DataConnectors/AzureFunctionsManualDeployment.md#function-app-manual-deployment-instructions) to deploy the Azure Functions app using VSCode.\n3. After successful deployment of the function app, follow next steps for configuring it."
                    },
                    {
                      "description": "**3. Configure the Function App**\n\n1. Go to Azure Portal for the Function App configuration.\n2. In the Function App, select the Function App Name and select **Configuration**.\n3. In the **Application settings** tab, select ** New application setting**.\n4. Add each of the following application settings individually, with their respective string values (case-sensitive): \n\t\tAWS_KEY\n\t\tAWS_SECRET\n\t\tAWS_REGION_NAME\n\t\tQUEUE_URL\n\t\tUSER_SELECTION_REQUIRE_RAW //True if raw data is required\n\t\tUSER_SELECTION_REQUIRE_SECONDARY //True if secondary data is required\n\t\tMAX_QUEUE_MESSAGES_MAIN_QUEUE // 100 for consumption and 150 for Premium\n\t\tMAX_SCRIPT_EXEC_TIME_MINUTES // add the value of 10 here\n\t\tAZURE_TENANT_ID\n\t\tAZURE_CLIENT_ID\n\t\tAZURE_CLIENT_SECRET\n\t\tDCE_INGESTION_ENDPOINT\n\t\tNORMALIZED_DCR_ID\n\t\tRAW_DATA_DCR_ID\n\t\tEVENT_TO_TABLE_MAPPING_LINK // File is present on github. Add if the file can be accessed using internet\n\t\tREQUIRED_FIELDS_SCHEMA_LINK //File is present on github. Add if the file can be accessed using internet\n\t\tSchedule //Add value as '0 */1 * * * *' to ensure the function runs every minute.\n5. Once all application settings have been entered, click **Save**."
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2023-04-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId3'),'/'))))]",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId3'))]",
                "contentId": "[variables('_dataConnectorContentId3')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion3')]",
                "source": {
                  "kind": "Solution",
                  "name": "CrowdStrike Falcon Endpoint Protection",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_dataConnectorContentId3')]",
        "contentKind": "DataConnector",
        "displayName": "Crowdstrike Falcon Data Replicator V2 (using Azure Functions)",
        "contentProductId": "[variables('_dataConnectorcontentProductId3')]",
        "id": "[variables('_dataConnectorcontentProductId3')]",
        "version": "[variables('dataConnectorVersion3')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId3'),'/'))))]",
      "dependsOn": [
        "[variables('_dataConnectorId3')]"
      ],
      "location": "[parameters('workspace-location')]",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId3'))]",
        "contentId": "[variables('_dataConnectorContentId3')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorVersion3')]",
        "source": {
          "kind": "Solution",
          "name": "CrowdStrike Falcon Endpoint Protection",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId3'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "GenericUI",
      "properties": {
        "connectorUiConfig": {
          "title": "Crowdstrike Falcon Data Replicator V2 (using Azure Functions)",
          "publisher": "Crowdstrike",
          "descriptionMarkdown": "The [Crowdstrike](https://www.crowdstrike.com/) Falcon Data Replicator connector provides the capability to ingest raw event data from the [Falcon Platform](https://www.crowdstrike.com/blog/tech-center/intro-to-falcon-data-replicator/) events into Microsoft Sentinel. The connector provides ability to get events from Falcon Agents which helps to examine potential security risks, analyze your team's use of collaboration, diagnose configuration problems and more.",
          "graphQueries": [
            {
              "metricName": "Total data received",
              "legend": "CrowdStrikeReplicatorV2",
              "baseQuery": "CrowdStrikeReplicatorV2"
            }
          ],
          "dataTypes": [
            {
              "name": "CrowdStrike_Additional_Events_CL",
              "lastDataReceivedQuery": "CrowdStrike_Additional_Events_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "ASimNetworkSessionLogs",
              "lastDataReceivedQuery": "ASimNetworkSessionLogs\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "ASimDnsActivityLogs",
              "lastDataReceivedQuery": "ASimDnsActivityLogs\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "ASimAuditEventLogs",
              "lastDataReceivedQuery": "ASimAuditEventLogs\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "ASimFileEventLogs_CL",
              "lastDataReceivedQuery": "ASimFileEventLogs_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "ASimAuthenticationEventLogs",
              "lastDataReceivedQuery": "ASimAuthenticationEventLogs\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "ASimProcessEventLogs",
              "lastDataReceivedQuery": "ASimProcessEventLogs\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "ASimRegistryEventLogs_CL",
              "lastDataReceivedQuery": "ASimRegistryEventLogs_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "ASimUserManagementLogs_CL",
              "lastDataReceivedQuery": "ASimUserManagementLogs_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "CrowdStrike_Secondary_Data_CL",
              "lastDataReceivedQuery": "CrowdStrike_Secondary_Data_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            }
          ],
          "connectivityCriterias": [
            {
              "type": "IsConnectedQuery",
              "value": [
                "CrowdStrikeReplicatorV2(starttime=ago(3d)) \n    |take 1\n   | project IsConnected = true  "
              ]
            }
          ],
          "sampleQueries": [
            {
              "description": "Data Replicator - All Activities",
              "query": "CrowdStrikeReplicatorV2 \n | sort by TimeGenerated desc"
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": false
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "read and write permissions on the workspace are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "write": true,
                  "read": true,
                  "delete": true
                }
              },
              {
                "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                "providerDisplayName": "Keys",
                "scope": "Workspace",
                "requiredPermissions": {
                  "action": true
                }
              }
            ],
            "customs": [
              {
                "name": "Microsoft.Web/sites permissions",
                "description": "Read and write permissions to Azure Functions to create a Function App is required. [See the documentation to learn more about Azure Functions](https://docs.microsoft.com/azure/azure-functions/)."
              },
              {
                "name": "SQS and AWS S3 account credentials/permissions",
                "description": "**AWS_SECRET**, **AWS_REGION_NAME**, **AWS_KEY**, **QUEUE_URL** is required.  [See the documentation to learn more about data pulling](https://www.crowdstrike.com/blog/tech-center/intro-to-falcon-data-replicator/). To start, contact CrowdStrike support. At your request they will create a CrowdStrike managed Amazon Web Services (AWS) S3 bucket for short term storage purposes as well as a SQS (simple queue service) account for monitoring changes to the S3 bucket."
              }
            ]
          },
          "instructionSteps": [
            {
              "description": ">**NOTE:** This connector uses Azure Functions to connect to the AWS SQS / S3 to pull logs into Microsoft Sentinel. This might result in additional data ingestion costs. Check the [Azure Functions pricing page](https://azure.microsoft.com/pricing/details/functions/) for details.\n\n>**(Optional Step)** Securely store API authorization key(s) or token(s) in Azure Key Vault. Azure Key Vault provides a secure mechanism to store and retrieve key values. [Follow these instructions](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references) to use Azure Key Vault with an Azure Function App."
            },
            {
              "description": "1. Configure FDR in CrowdStrike - You must contact the [CrowdStrike support team](https://supportportal.crowdstrike.com/) to enable CrowdStrike FDR.\n\t - Once CrowdStrike FDR is enabled,  from the CrowdStrike console, navigate to Support --> API Clients and Keys. \n\t - You need to Create new credentials to copy the AWS Access Key ID, AWS Secret Access Key, SQS Queue URL and AWS Region. \n2.  Register AAD application - For DCR to authentiate to ingest data into log analytics, you must use AAD application. \n\t - [Follow the instructions here](https://learn.microsoft.com/en-us/azure/azure-monitor/logs/tutorial-logs-ingestion-portal#create-azure-ad-application) (steps 1-5) to get **AAD Tenant Id**, **AAD Client Id** and **AAD Client Secret**. \n\t - For **AAD Principal** Id of this application, access the AAD App through [AAD Portal](https://aad.portal.azure.com/#view/Microsoft_AAD_IAM/StartboardApplicationsMenuBlade/~/AppAppsPreview/menuId/) and capture Object Id from the application overview page.",
              "title": "Prerequisites"
            },
            {
              "description": "Choose ONE from the following two deployment options to deploy the connector and the associated Azure Function",
              "title": "Deployment Options"
            },
            {
              "description": "Use this method for automated deployment of the Crowdstrike Falcon Data Replicator connector V2 using an ARM Tempate.\n\n1. Click the **Deploy to Azure** button below. \n\n\t[![Deploy To Azure](https://aka.ms/deploytoazurebutton)](https://aka.ms/sentinel-CrowdstrikeReplicatorV2-azuredeploy) \t\t\t\n2. Provide the required details such as Microsoft Sentinel Workspace, CrowdStrike AWS credentials, Azure AD Application details and ingestion configurations \n> **NOTE:** Within the same resource group, you can't mix Windows and Linux apps in the same region. Select existing resource group without Windows apps in it or create new resource group. It is recommended to create a new Resource Group for deployment of function app and associated resources.\n3. Mark the checkbox labeled **I agree to the terms and conditions stated above**. \n4. Click **Purchase** to deploy.",
              "title": "Option 1 - Azure Resource Manager (ARM) Template"
            },
            {
              "description": "Use the following step-by-step instructions to deploy the Crowdstrike Falcon Data Replicator connector manually with Azure Functions (Deployment via Visual Studio Code).",
              "title": "Option 2 - Manual Deployment of Azure Functions"
            },
            {
              "description": "**1. Deploy DCE, DCR and Custom Tables for data ingestion**\n\n1. Deploy the required DCE,  DCR(s) and the Custom Tables by using the [Data Collection Resource ARM template](https://aka.ms/sentinel-CrowdstrikeReplicatorV2-azuredeploy-data-resource) \n2. After successful deployment of DCE and DCR(s), get the below information and keep it handy (required during Azure Functions app deployment).\n\t - DCE log ingestion - Follow the instructions available at [Create data collection endpoint](https://learn.microsoft.com/en-us/azure/azure-monitor/logs/tutorial-logs-ingestion-portal#create-data-collection-endpoint) (Step 3).\n\t - Immutable Ids of one or more DCRs (as applicable) - Follow the instructions available at [Collect information from the DCR](https://learn.microsoft.com/en-us/azure/azure-monitor/logs/tutorial-logs-ingestion-portal#collect-information-from-the-dcr) (Stpe 2)."
            },
            {
              "description": "**2. Deploy a Function App**\n\n1. Download the [Azure Function App](https://aka.ms/sentinel-CrowdstrikeReplicatorV2-functionapp) file. Extract archive to your local development computer.\n2. Follow the [function app manual deployment instructions](https://github.com/Azure/Azure-Sentinel/blob/master/DataConnectors/AzureFunctionsManualDeployment.md#function-app-manual-deployment-instructions) to deploy the Azure Functions app using VSCode.\n3. After successful deployment of the function app, follow next steps for configuring it."
            },
            {
              "description": "**3. Configure the Function App**\n\n1. Go to Azure Portal for the Function App configuration.\n2. In the Function App, select the Function App Name and select **Configuration**.\n3. In the **Application settings** tab, select ** New application setting**.\n4. Add each of the following application settings individually, with their respective string values (case-sensitive): \n\t\tAWS_KEY\n\t\tAWS_SECRET\n\t\tAWS_REGION_NAME\n\t\tQUEUE_URL\n\t\tUSER_SELECTION_REQUIRE_RAW //True if raw data is required\n\t\tUSER_SELECTION_REQUIRE_SECONDARY //True if secondary data is required\n\t\tMAX_QUEUE_MESSAGES_MAIN_QUEUE // 100 for consumption and 150 for Premium\n\t\tMAX_SCRIPT_EXEC_TIME_MINUTES // add the value of 10 here\n\t\tAZURE_TENANT_ID\n\t\tAZURE_CLIENT_ID\n\t\tAZURE_CLIENT_SECRET\n\t\tDCE_INGESTION_ENDPOINT\n\t\tNORMALIZED_DCR_ID\n\t\tRAW_DATA_DCR_ID\n\t\tEVENT_TO_TABLE_MAPPING_LINK // File is present on github. Add if the file can be accessed using internet\n\t\tREQUIRED_FIELDS_SCHEMA_LINK //File is present on github. Add if the file can be accessed using internet\n\t\tSchedule //Add value as '0 */1 * * * *' to ensure the function runs every minute.\n5. Once all application settings have been entered, click **Save**."
            }
          ],
          "id": "[variables('_uiConfigId3')]",
          "additionalRequirementBanner": "These queries and workbooks are dependent on a parser based on Kusto to work as expected. ​Follow the steps to use this Kusto functions alias **CrowdstrikeReplicator** in queries and workbooks [Follow steps to get this Kusto functions>](https://aka.ms/sentinel-crowdstrikereplicator-parser)."
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CrowdStrike_Base Playbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion1')]",
          "parameters": {
            "keyvault_Name": {
              "type": "string",
              "defaultValue": "Crowdstrikekey",
              "metadata": {
                "description": "Name of the key vault"
              }
            },
            "ClientID": {
              "type": "string",
              "defaultValue": "ClientID",
              "metadata": {
                "description": "The client Id from key vault"
              }
            },
            "ClientSecret": {
              "type": "string",
              "defaultValue": "ClientSecret",
              "metadata": {
                "description": "The client secret from key vault"
              }
            },
            "Service_Endpoint": {
              "defaultValue": "https://api.crowdstrike.com",
              "type": "String",
              "metadata": {
                "description": "Enter the service endpoint of crowdstrike ex: {https://crowdsrtikeurl.com}"
              }
            },
            "PlaybookName": {
              "type": "string",
              "minLength": 1,
              "defaultValue": "CrowdStrike_Base",
              "metadata": {
                "description": "Name of the Logic App/Playbook"
              }
            }
          },
          "variables": {
            "keyvault_Connection_Name": "keyvault",
            "connection-2": "[[concat(subscription().id, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/', 'keyvault')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "manual": {
                      "type": "Request",
                      "kind": "Http"
                    }
                  },
                  "actions": {
                    "Get_secret_-_Client_ID": {
                      "runAfter": {
                        "Initialize_variable_ClientSecret": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['keyvault']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/secrets/@{encodeURIComponent(variables('ClientID'))}/value"
                      },
                      "description": "This gets the secret Client Id from the keyvault",
                      "runtimeConfiguration": {
                        "secureData": {
                          "properties": [
                            "inputs",
                            "outputs"
                          ]
                        }
                      }
                    },
                    "Get_secret_-_Client_Secret": {
                      "runAfter": {
                        "Get_secret_-_Client_ID": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['keyvault']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/secrets/@{encodeURIComponent(variables('ClientSecret'))}/value"
                      },
                      "description": "This gets the Clientsecret from the keyvault",
                      "runtimeConfiguration": {
                        "secureData": {
                          "properties": [
                            "inputs",
                            "outputs"
                          ]
                        }
                      }
                    },
                    "HTTP_-_Get_Access_Token": {
                      "runAfter": {
                        "Initialize_variable_Falcon_Host_URL": [
                          "Succeeded"
                        ]
                      },
                      "type": "Http",
                      "inputs": {
                        "body": "client_id=@{body('Get_secret_-_Client_ID')?['value']}&client_secret=@{body('Get_secret_-_Client_Secret')?['value']}",
                        "headers": {
                          "Content-Type": "application/x-www-form-urlencoded",
                          "accept": "application/json"
                        },
                        "method": "POST",
                        "uri": "@{variables('FalconHost')}/oauth2/token"
                      },
                      "description": "This calls the crowdstrike to generate the access token",
                      "runtimeConfiguration": {
                        "secureData": {
                          "properties": [
                            "inputs",
                            "outputs"
                          ]
                        }
                      }
                    },
                    "Initialize_variable_ClientID": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "ClientID",
                            "type": "string",
                            "value": "[[parameters('ClientID')]"
                          }
                        ]
                      }
                    },
                    "Initialize_variable_ClientSecret": {
                      "runAfter": {
                        "Initialize_variable_ClientID": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "ClientSecret",
                            "type": "string",
                            "value": "[[parameters('ClientSecret')]"
                          }
                        ]
                      }
                    },
                    "Initialize_variable_Falcon_Host_URL": {
                      "runAfter": {
                        "Get_secret_-_Client_Secret": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "FalconHost",
                            "type": "string",
                            "value": "[[parameters('Service_Endpoint')]"
                          }
                        ]
                      },
                      "description": "This is to hold the Falcon Host URL"
                    },
                    "Parse_JSON_-_Access_Token_Response": {
                      "runAfter": {
                        "HTTP_-_Get_Access_Token": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('HTTP_-_Get_Access_Token')",
                        "schema": {
                          "properties": {
                            "access_token": {
                              "type": "string"
                            },
                            "expires_in": {
                              "type": "integer"
                            },
                            "token_type": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "description": "prepare json format for get access token response",
                      "runtimeConfiguration": {
                        "secureData": {
                          "properties": [
                            "inputs"
                          ]
                        }
                      }
                    },
                    "Response": {
                      "runAfter": {
                        "Parse_JSON_-_Access_Token_Response": [
                          "Succeeded"
                        ]
                      },
                      "type": "Response",
                      "kind": "Http",
                      "inputs": {
                        "body": {
                          "AccessToken": "Bearer @{body('Parse_JSON_-_Access_Token_Response')?['access_token']}",
                          "FalconHost": "@{variables('FalconHost')}"
                        },
                        "statusCode": 200
                      },
                      "description": "This holds the access token and falcon host URL"
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "keyvault": {
                        "id": "[[concat(subscription().id, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/', 'keyvault')]",
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('keyvault_Connection_Name'))]",
                        "connectionName": "[[variables('keyvault_Connection_Name')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "name": "[[parameters('PlaybookName')]",
              "type": "Microsoft.Logic/workflows",
              "location": "[[variables('workspace-location-inline')]",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('keyvault_Connection_Name'))]"
              ],
              "tags": {
                "hidden-SentinelTemplateName": "Crowdstrike-Authentication",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned",
                "principalId": "[variables('blanks')]",
                "tenantId": "[variables('blanks')]"
              },
              "apiVersion": "2016-06-01"
            },
            {
              "type": "Microsoft.Web/Connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('keyvault_Connection_Name')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "api": {
                  "id": "[[variables('_connection-2')]"
                },
                "displayName": "[[variables('keyvault_Connection_Name')]",
                "parameterValueType": "Alternative",
                "AlternativeParameterValues": {
                  "vaultName": "[[parameters('keyvault_Name')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId1'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId1')]",
                "contentId": "[variables('_playbookContentId1')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "CrowdStrike Falcon Endpoint Protection",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ],
          "metadata": {
            "title": "Crowdstrike API authentication",
            "description": "This is Crowdstrike base template which is used to generate access token and this is used in actual crowdstrike templates. This playbook gets triggered when a new Http request is created and this is being called from other Crowdstrike playbooks.",
            "prerequisites": [
              "1. Azure Key vault is required for storing the Crowdstrike ClientID and Secrets, create key vault if not exists [learn how](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.keyvault%2Fkey-vault-secret-create%2Fazuredeploy.json)",
              "2. Add Crowdstrike Client ID and Client Secret in Key vault secrets and capture the keys which are required during the template deployment."
            ],
            "lastUpdateTime": "2022-07-25T00:00:00Z",
            "tags": [
              "Utilities"
            ],
            "source": {
              "type": "solution",
              "name": "CrowdStrike Falcon Endpoint Protection"
            },
            "postDeployment": [
              "**a. Authorize playbook**",
              "Once deployment is complete, we need to add the playbook in the access policy of the Keyvault [learn how](https://docs.microsoft.com/azure/key-vault/general/assign-access-policy-portal)"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Crowdstrike API authentication",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId1')]",
        "contentKind": "Playbook",
        "displayName": "CrowdStrike_Base",
        "contentProductId": "[variables('_playbookcontentProductId1')]",
        "id": "[variables('_playbookcontentProductId1')]",
        "version": "[variables('playbookVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Crowdstrike-ContainHost Playbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion2')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Crowdstrike-ContainHost",
              "type": "String",
              "metadata": {
                "description": "Name of the Logic App/Playbook"
              }
            },
            "CrowdStrike_Base_Playbook_Name": {
              "defaultValue": "CrowdStrike_Base",
              "type": "String"
            }
          },
          "variables": {
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "actions": {
                    "Add_comment_to_incident_(V3)": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "body": {
                          "incidentArmId": "@triggerBody()?['object']?['id']",
                          "message": "<p>@{outputs('Compose_image_to_add_in_the_incident')}<span style=\"font-size: 16px\"><strong>CrowdStrike_ContainHost playbook run results:</strong></span><br>\n<br>\n@{variables('Comment')}</p>"
                        },
                        "path": "/Incidents/Comment"
                      },
                      "runAfter": {
                        "Compose_image_to_add_in_the_incident": [
                          "Succeeded"
                        ]
                      },
                      "description": "This adds comments to the Microsoft sentinel incident"
                    },
                    "Compose_image_to_add_in_the_incident": {
                      "type": "Compose",
                      "inputs": "<img src=\"https://uploads4.craft.co/uploads/company/logo/852xx/85212/normal_1171b7695370eb94.jpg\"  width=\"32\" height=\"32\">",
                      "runAfter": {
                        "Condition_to_check_if_device_is_present_in_falcon_host_crowdstrike": [
                          "Succeeded"
                        ]
                      },
                      "description": "This composes the crowd strike image to comment in the incident"
                    },
                    "Condition_to_check_if_crowdstrike_action_is_successful": {
                      "type": "If",
                      "expression": {
                        "and": [
                          {
                            "equals": [
                              "@variables('Successfromcrowdstike')",
                              "Success"
                            ]
                          }
                        ]
                      },
                      "actions": {
                        "Update_incident": {
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "put",
                            "body": {
                              "incidentArmId": "@triggerBody()?['object']?['id']",
                              "status": "Closed",
                              "classification": {
                                "ClassificationAndReason": "Benign Positive - Suspicious But Expected",
                                "ClassificationReasonText": "CrowdStrike_ContainHost playbook ran and closed this incident"
                              }
                            },
                            "path": "/Incidents"
                          }
                        }
                      },
                      "runAfter": {
                        "Add_comment_to_incident_(V3)": [
                          "Succeeded"
                        ]
                      },
                      "description": "This checks if crowdstrike action is successful or not"
                    },
                    "Condition_to_check_if_device_is_present_in_falcon_host_crowdstrike": {
                      "type": "If",
                      "expression": {
                        "and": [
                          {
                            "not": {
                              "equals": [
                                "@body('Parse_JSON_Get_device_id_response')?['resources']?[0]",
                                "@null"
                              ]
                            }
                          }
                        ]
                      },
                      "actions": {
                        "Append_to_string_variable_comment_for_device_information": {
                          "type": "AppendToStringVariable",
                          "inputs": {
                            "name": "Comment",
                            "value": "Devices information from crowdstrike:\n@{body('Create_HTML_table_for_device_information')}"
                          },
                          "runAfter": {
                            "Create_HTML_table_for_device_information": [
                              "Succeeded"
                            ]
                          },
                          "description": "Append html format of device information to comment in the incident"
                        },
                        "Create_HTML_table_for_device_information": {
                          "type": "Table",
                          "inputs": {
                            "from": "@body('Parse_JSON_device_information_response')?['resources']",
                            "format": "HTML",
                            "columns": [
                              {
                                "header": "device_id",
                                "value": "@item()?['device_id']"
                              },
                              {
                                "header": "external_ip",
                                "value": "@item()?['external_ip']"
                              },
                              {
                                "header": "mac_address",
                                "value": "@item()?['mac_address']"
                              },
                              {
                                "header": "hostname",
                                "value": "@item()?['hostname']"
                              },
                              {
                                "header": "first_seen",
                                "value": "@item()?['first_seen']"
                              },
                              {
                                "header": "last_seen",
                                "value": "@item()?['last_seen']"
                              },
                              {
                                "header": "local_ip",
                                "value": "@item()?['local_ip']"
                              },
                              {
                                "header": "machine_domain",
                                "value": "@item()?['machine_domain']"
                              },
                              {
                                "header": "os_version",
                                "value": "@item()?['os_version']"
                              }
                            ]
                          },
                          "runAfter": {
                            "Parse_JSON_device_information_response": [
                              "Succeeded"
                            ]
                          },
                          "description": "prepare HTML table format to update in the incident"
                        },
                        "HTTP_-_Get_device_information_": {
                          "type": "Http",
                          "inputs": {
                            "method": "GET",
                            "uri": "@{body('CrowdStrike_Base')?['FalconHost']}/devices/entities/devices/v1?ids=@{body('Parse_JSON_Get_device_id_response')?['resources']?[0]}",
                            "headers": {
                              "Accept": "application/json",
                              "Authorization": "@{body('CrowdStrike_Base')?['AccessToken']}",
                              "Content-Type": "application/json"
                            }
                          },
                          "description": "This gets the device information from crowdstrike"
                        },
                        "Parse_JSON_device_information_response": {
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@body('HTTP_-_Get_device_information_')",
                            "schema": {
                              "properties": {
                                "errors": {
                                  "type": "array"
                                },
                                "meta": {
                                  "properties": {
                                    "powered_by": {
                                      "type": "string"
                                    },
                                    "query_time": {
                                      "type": "number"
                                    },
                                    "trace_id": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "resources": {
                                  "items": {
                                    "properties": {
                                      "agent_load_flags": {
                                        "type": "string"
                                      },
                                      "agent_local_time": {
                                        "type": "string"
                                      },
                                      "agent_version": {
                                        "type": "string"
                                      },
                                      "bios_manufacturer": {
                                        "type": "string"
                                      },
                                      "bios_version": {
                                        "type": "string"
                                      },
                                      "build_number": {
                                        "type": "string"
                                      },
                                      "cid": {
                                        "type": "string"
                                      },
                                      "config_id_base": {
                                        "type": "string"
                                      },
                                      "config_id_build": {
                                        "type": "string"
                                      },
                                      "config_id_platform": {
                                        "type": "string"
                                      },
                                      "cpu_signature": {
                                        "type": "string"
                                      },
                                      "device_id": {
                                        "type": "string"
                                      },
                                      "device_policies": {
                                        "properties": {
                                          "device_control": {
                                            "properties": {
                                              "applied": {
                                                "type": "boolean"
                                              },
                                              "applied_date": {
                                                "type": "string"
                                              },
                                              "assigned_date": {
                                                "type": "string"
                                              },
                                              "policy_id": {
                                                "type": "string"
                                              },
                                              "policy_type": {
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "firewall": {
                                            "properties": {
                                              "applied": {
                                                "type": "boolean"
                                              },
                                              "applied_date": {
                                                "type": "string"
                                              },
                                              "assigned_date": {
                                                "type": "string"
                                              },
                                              "policy_id": {
                                                "type": "string"
                                              },
                                              "policy_type": {
                                                "type": "string"
                                              },
                                              "rule_set_id": {
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "global_config": {
                                            "properties": {
                                              "applied": {
                                                "type": "boolean"
                                              },
                                              "applied_date": {
                                                "type": "string"
                                              },
                                              "assigned_date": {
                                                "type": "string"
                                              },
                                              "policy_id": {
                                                "type": "string"
                                              },
                                              "policy_type": {
                                                "type": "string"
                                              },
                                              "settings_hash": {
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "prevention": {
                                            "properties": {
                                              "applied": {
                                                "type": "boolean"
                                              },
                                              "applied_date": {
                                                "type": "string"
                                              },
                                              "assigned_date": {
                                                "type": "string"
                                              },
                                              "policy_id": {
                                                "type": "string"
                                              },
                                              "policy_type": {
                                                "type": "string"
                                              },
                                              "rule_groups": {
                                                "items": {
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              },
                                              "settings_hash": {
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "remote_response": {
                                            "properties": {
                                              "applied": {
                                                "type": "boolean"
                                              },
                                              "applied_date": {
                                                "type": "string"
                                              },
                                              "assigned_date": {
                                                "type": "string"
                                              },
                                              "policy_id": {
                                                "type": "string"
                                              },
                                              "policy_type": {
                                                "type": "string"
                                              },
                                              "settings_hash": {
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "sensor_update": {
                                            "properties": {
                                              "applied": {
                                                "type": "boolean"
                                              },
                                              "applied_date": {
                                                "type": "string"
                                              },
                                              "assigned_date": {
                                                "type": "string"
                                              },
                                              "policy_id": {
                                                "type": "string"
                                              },
                                              "policy_type": {
                                                "type": "string"
                                              },
                                              "settings_hash": {
                                                "type": "string"
                                              },
                                              "uninstall_protection": {
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "external_ip": {
                                        "type": "string"
                                      },
                                      "first_seen": {
                                        "type": "string"
                                      },
                                      "group_hash": {
                                        "type": "string"
                                      },
                                      "groups": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "hostname": {
                                        "type": "string"
                                      },
                                      "last_seen": {
                                        "type": "string"
                                      },
                                      "local_ip": {
                                        "type": "string"
                                      },
                                      "mac_address": {
                                        "type": "string"
                                      },
                                      "machine_domain": {
                                        "type": "string"
                                      },
                                      "major_version": {
                                        "type": "string"
                                      },
                                      "meta": {
                                        "properties": {
                                          "version": {
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "minor_version": {
                                        "type": "string"
                                      },
                                      "modified_timestamp": {
                                        "type": "string"
                                      },
                                      "os_version": {
                                        "type": "string"
                                      },
                                      "ou": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "platform_id": {
                                        "type": "string"
                                      },
                                      "platform_name": {
                                        "type": "string"
                                      },
                                      "pointer_size": {
                                        "type": "string"
                                      },
                                      "policies": {
                                        "items": {
                                          "properties": {
                                            "applied": {
                                              "type": "boolean"
                                            },
                                            "applied_date": {
                                              "type": "string"
                                            },
                                            "assigned_date": {
                                              "type": "string"
                                            },
                                            "policy_id": {
                                              "type": "string"
                                            },
                                            "policy_type": {
                                              "type": "string"
                                            },
                                            "rule_groups": {
                                              "items": {
                                                "type": "string"
                                              },
                                              "type": "array"
                                            },
                                            "settings_hash": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "policy_type",
                                            "policy_id",
                                            "applied",
                                            "settings_hash",
                                            "assigned_date",
                                            "applied_date",
                                            "rule_groups"
                                          ],
                                          "type": "object"
                                        },
                                        "type": "array"
                                      },
                                      "product_type": {
                                        "type": "string"
                                      },
                                      "product_type_desc": {
                                        "type": "string"
                                      },
                                      "provision_status": {
                                        "type": "string"
                                      },
                                      "reduced_functionality_mode": {
                                        "type": "string"
                                      },
                                      "serial_number": {
                                        "type": "string"
                                      },
                                      "service_pack_major": {
                                        "type": "string"
                                      },
                                      "service_pack_minor": {
                                        "type": "string"
                                      },
                                      "site_name": {
                                        "type": "string"
                                      },
                                      "slow_changing_modified_timestamp": {
                                        "type": "string"
                                      },
                                      "status": {
                                        "type": "string"
                                      },
                                      "system_manufacturer": {
                                        "type": "string"
                                      },
                                      "system_product_name": {
                                        "type": "string"
                                      },
                                      "tags": {
                                        "type": "array"
                                      }
                                    },
                                    "required": [
                                      "device_id",
                                      "cid",
                                      "agent_load_flags",
                                      "agent_local_time",
                                      "agent_version",
                                      "bios_manufacturer",
                                      "bios_version",
                                      "build_number",
                                      "config_id_base",
                                      "config_id_build",
                                      "config_id_platform",
                                      "cpu_signature",
                                      "external_ip",
                                      "mac_address",
                                      "hostname",
                                      "first_seen",
                                      "last_seen",
                                      "local_ip",
                                      "machine_domain",
                                      "major_version",
                                      "minor_version",
                                      "platform_id",
                                      "platform_name",
                                      "policies",
                                      "reduced_functionality_mode",
                                      "device_policies",
                                      "groups",
                                      "group_hash",
                                      "product_type",
                                      "product_type_desc",
                                      "provision_status",
                                      "serial_number",
                                      "service_pack_major",
                                      "service_pack_minor",
                                      "pointer_size",
                                      "status",
                                      "system_manufacturer",
                                      "system_product_name",
                                      "tags",
                                      "modified_timestamp",
                                      "slow_changing_modified_timestamp",
                                      "meta"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "runAfter": {
                            "HTTP_-_Get_device_information_": [
                              "Succeeded"
                            ]
                          },
                          "description": "prepare Json message for device information"
                        },
                        "Switch_to_check_the_device_status": {
                          "type": "Switch",
                          "expression": "@body('Parse_JSON_device_information_response')?['resources']?[0]?['status']",
                          "cases": {
                            "Case_-_contained": {
                              "case": "contained",
                              "actions": {
                                "Append_to_string_variable_comment_if_host_is_contained": {
                                  "type": "AppendToStringVariable",
                                  "inputs": {
                                    "name": "Comment",
                                    "value": "Host Status : Contained\nActions taken on devices : No action taken from playbook"
                                  },
                                  "description": "This appends comments if the host status is already contained"
                                },
                                "Set_variable_success_from_crowdstirke_in_case_of_host_is_already_contained": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "Successfromcrowdstike",
                                    "value": "Success"
                                  },
                                  "runAfter": {
                                    "Append_to_string_variable_comment_if_host_is_contained": [
                                      "Succeeded"
                                    ]
                                  },
                                  "description": "This sets the variable success from crowdstrike to update in the incident"
                                }
                              }
                            },
                            "Case_-_containment_pending": {
                              "case": "containment_pending",
                              "actions": {
                                "Append_to_string_variable_comment_if_host_status_is_containment_pending": {
                                  "type": "AppendToStringVariable",
                                  "inputs": {
                                    "name": "Comment",
                                    "value": "Host Status : containment_pending\nActions taken on devices : No action taken from playbook"
                                  },
                                  "description": "This appends comments if the host status is containment pending"
                                },
                                "Set_variable_success_from_crowdstirke_in_case_of_containment_pending": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "Successfromcrowdstike",
                                    "value": "Success"
                                  },
                                  "runAfter": {
                                    "Append_to_string_variable_comment_if_host_status_is_containment_pending": [
                                      "Succeeded"
                                    ]
                                  },
                                  "description": "This sets the variable success from crowdstrike to update in the incident"
                                }
                              }
                            },
                            "Case_-_lift_containment_pending": {
                              "case": "lift_containment_pending",
                              "actions": {
                                "Append_to_string_variable_comment_if_host_status_is_lift_containment_pending": {
                                  "type": "AppendToStringVariable",
                                  "inputs": {
                                    "name": "Comment",
                                    "value": "Host Status : Lift_containment_pending\nActions taken on devices : No action taken from playbook"
                                  },
                                  "description": "Append to variable comment if host status is lift containment pending"
                                },
                                "Set_variable_success_from_crowdstirke_in_case_of_lift_containment_pending": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "Successfromcrowdstike",
                                    "value": "Success"
                                  },
                                  "runAfter": {
                                    "Append_to_string_variable_comment_if_host_status_is_lift_containment_pending": [
                                      "Succeeded"
                                    ]
                                  },
                                  "description": "This sets the variable success from crowdstrike to update in the incident"
                                }
                              }
                            },
                            "Case_-_not_contained": {
                              "case": "normal",
                              "actions": {
                                "Condition_to_check_if_contain_success_or_not": {
                                  "type": "If",
                                  "expression": {
                                    "and": [
                                      {
                                        "equals": [
                                          "@outputs('HTTP_-_Contain_a_host')['statusCode']",
                                          202
                                        ]
                                      }
                                    ]
                                  },
                                  "actions": {
                                    "Append_to_string_variable_comment_if_host_is_contained_by_playbook": {
                                      "type": "AppendToStringVariable",
                                      "inputs": {
                                        "name": "Comment",
                                        "value": "Host Status : Contained\nActions taken on devices : The playbook sucessfully contained the host"
                                      },
                                      "description": "This appends the variable comment if host is contained by playbook"
                                    },
                                    "Set_variable_success_from_crowdstirke_in_case_of_success": {
                                      "type": "SetVariable",
                                      "inputs": {
                                        "name": "Successfromcrowdstike",
                                        "value": "Success"
                                      },
                                      "runAfter": {
                                        "Append_to_string_variable_comment_if_host_is_contained_by_playbook": [
                                          "Succeeded"
                                        ]
                                      },
                                      "description": "This sets variable success from crowdstirke in case of success"
                                    }
                                  },
                                  "runAfter": {
                                    "HTTP_-_Contain_a_host": [
                                      "Succeeded"
                                    ]
                                  },
                                  "else": {
                                    "actions": {
                                      "Append_to_string_variable_comment_if_host_is_not_contained_by_playbook": {
                                        "type": "AppendToStringVariable",
                                        "inputs": {
                                          "name": "Comment",
                                          "value": "Host Status : Not contained/Normal\nActions taken on devices : The playbook failed to contain the host"
                                        },
                                        "description": "This sets the variable comment if host is not contained by playbook"
                                      },
                                      "Set_variable_success_from_crowdstrike_in_case_of_failure": {
                                        "type": "SetVariable",
                                        "inputs": {
                                          "name": "Successfromcrowdstike",
                                          "value": "Failure"
                                        },
                                        "runAfter": {
                                          "Append_to_string_variable_comment_if_host_is_not_contained_by_playbook": [
                                            "Succeeded"
                                          ]
                                        },
                                        "description": "This sets variable success from crowdstirke in case of Failure"
                                      }
                                    }
                                  },
                                  "description": "condition to check if contain a host is success or failure"
                                },
                                "HTTP_-_Contain_a_host": {
                                  "type": "Http",
                                  "inputs": {
                                    "method": "POST",
                                    "uri": "@{body('CrowdStrike_Base')?['FalconHost']}/devices/entities/devices-actions/v2?action_name=contain",
                                    "headers": {
                                      "Accept": "application/json",
                                      "Authorization": "@{body('CrowdStrike_Base')?['AccessToken']}",
                                      "Content-Type": "application/json"
                                    },
                                    "body": {
                                      "action_parameters": [
                                        {
                                          "name": "contain"
                                        }
                                      ],
                                      "ids": [
                                        "@{body('Parse_JSON_Get_device_id_response')?['resources']?[0]}"
                                      ]
                                    }
                                  },
                                  "description": "This will contain a host in crowdstrike"
                                }
                              }
                            }
                          },
                          "runAfter": {
                            "Append_to_string_variable_comment_for_device_information": [
                              "Succeeded"
                            ]
                          },
                          "description": "This checks on the device status"
                        }
                      },
                      "runAfter": {
                        "Parse_JSON_Get_device_id_response": [
                          "Succeeded"
                        ]
                      },
                      "else": {
                        "actions": {
                          "Append_to_string_variable_comment_if_no_device_exist": {
                            "type": "AppendToStringVariable",
                            "inputs": {
                              "name": "Comment",
                              "value": "There is no device present in Crowdstrike"
                            },
                            "description": "This appends test to comment if no device available in crowdstrike"
                          },
                          "Set_variable_success_from_crowdstrike": {
                            "type": "SetVariable",
                            "inputs": {
                              "name": "Successfromcrowdstike",
                              "value": "Success"
                            },
                            "runAfter": {
                              "Append_to_string_variable_comment_if_no_device_exist": [
                                "Succeeded"
                              ]
                            },
                            "description": "This sets the variable success in case of no device info found"
                          }
                        }
                      },
                      "description": "This checks if device is present in crowdstrike or not"
                    },
                    "CrowdStrike_Base": {
                      "type": "Workflow",
                      "inputs": {
                        "host": {
                          "triggerName": "manual",
                          "workflow": {
                            "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name ,'/providers/Microsoft.Logic/workflows/', parameters('CrowdStrike_Base_Playbook_Name'))]"
                          }
                        }
                      },
                      "runAfter": {
                        "Initialize_variable_success_from_crowdstrike": [
                          "Succeeded"
                        ]
                      },
                      "description": "Call the base logic App to get access token and Falcon Host URL",
                      "runtimeConfiguration": {
                        "secureData": {
                          "properties": [
                            "inputs",
                            "outputs"
                          ]
                        }
                      }
                    },
                    "Entities_-_Get_Hosts": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "path": "/entities/host"
                      }
                    },
                    "HTTP_-_Get_device_id": {
                      "type": "Http",
                      "inputs": {
                        "method": "GET",
                        "uri": "@{body('CrowdStrike_Base')?['FalconHost']}/devices/queries/devices/v1?filter=hostname:'@{body('Entities_-_Get_Hosts')?['Hosts']?[0]?['HostName']}'",
                        "headers": {
                          "Accept": "application/json",
                          "Authorization": "@{body('CrowdStrike_Base')?['AccessToken']}",
                          "Content-Type": "application/json"
                        }
                      },
                      "runAfter": {
                        "CrowdStrike_Base": [
                          "Succeeded"
                        ]
                      },
                      "description": "This gets the device id from crowdstrike by filtering on hostname"
                    },
                    "Initialize_variable_comment": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Comment",
                            "type": "string"
                          }
                        ]
                      },
                      "runAfter": {
                        "Entities_-_Get_Hosts": [
                          "Succeeded"
                        ]
                      },
                      "description": "This is used to store comments to update in the incident"
                    },
                    "Initialize_variable_success_from_crowdstrike": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Successfromcrowdstike",
                            "type": "string"
                          }
                        ]
                      },
                      "runAfter": {
                        "Initialize_variable_comment": [
                          "Succeeded"
                        ]
                      },
                      "description": "This is used to hold the success or failure information from crowdstrike api actions"
                    },
                    "Parse_JSON_Get_device_id_response": {
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('HTTP_-_Get_device_id')",
                        "schema": {
                          "errors": "[variables('TemplateEmptyArray')]",
                          "meta": {
                            "pagination": {
                              "limit": 100,
                              "offset": 1,
                              "total": 1
                            },
                            "powered_by": "device-api",
                            "query_time": 0.005041315,
                            "trace_id": "aa7b84f5-3e81-4980-ad9f-c14b6d8ca577"
                          },
                          "resources": [
                            "cdc977a72a8c49528bb82f89dde2c2e9"
                          ]
                        }
                      },
                      "runAfter": {
                        "HTTP_-_Get_device_id": [
                          "Succeeded"
                        ]
                      },
                      "description": "prepare json message for the device id response"
                    }
                  },
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "When_Azure_Sentinel_incident_creation_rule_was_triggered_(Private_Preview_only)": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "contentVersion": "1.0.0.0"
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
              ],
              "tags": {
                "hidden-SentinelTemplateName": "IsolateEndpoint-Crowdstrike",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('AzureSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId2'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId2')]",
                "contentId": "[variables('_playbookContentId2')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion2')]",
                "source": {
                  "kind": "Solution",
                  "name": "CrowdStrike Falcon Endpoint Protection",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ],
          "metadata": {
            "title": "Isolate endpoint - Crowdstrike",
            "description": "When a new Microsoft Sentinel incident is created, this playbook gets triggered and performs below actions:",
            "mainSteps": [
              "1. Fetches the device information from Crowdstrike",
              "2. Contain host if it is not already contained",
              "3. Enrich the incident with device information from Crowdstrike \n",
              "![Comment example](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/CrowdStrike%20Falcon%20Endpoint%20Protection/Playbooks/CrowdStrike_ContainHost/images/Incident_Comment.png?raw=true) \n",
              "4. Close the incident if contained the host"
            ],
            "prerequisites": [
              "1. Azure Key vault is required for storing the Crowdstrike ClientID and Secrets, create key vault if not exists [learn how](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.keyvault%2Fkey-vault-secret-create%2Fazuredeploy.json)",
              "2. Add Crowdstrike Client ID and Client Secret in Key vault secrets and capture the keys which are required during the template deployment",
              "3. CrowdStrike_Base playbook needs to be deployed prior to the deployment of this playbook under the same subscription and under the same resource group.",
              "4. CrowdStrike_Base playbook needs to be added in the access policy of the Key Vault [learn how](https://docs.microsoft.com/azure/key-vault/general/assign-access-policy-portal)"
            ],
            "lastUpdateTime": "2022-07-25T00:00:00Z",
            "entities": [
              "Host"
            ],
            "tags": [
              "Remediation"
            ],
            "source": {
              "type": "solution",
              "name": "CrowdStrike Falcon Endpoint Protection"
            },
            "postDeployment": [
              "** a. Authorize connections **",
              "Once deployment is complete, you will need to authorize each connection.",
              "1. Click the Microsoft Sentinel connection resource",
              "2. Click edit API connection",
              "3. Click Authorize",
              "4. Sign in",
              "5. Click Save",
              "** b. Configurations in Sentinel **",
              "1. In Microsoft sentinel analytical rules should be configured to trigger an incident with risky device",
              "2. Configure the automation rules to trigger this playbook"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Isolate endpoint - Crowdstrike",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId2')]",
        "contentKind": "Playbook",
        "displayName": "Crowdstrike-ContainHost",
        "contentProductId": "[variables('_playbookcontentProductId2')]",
        "id": "[variables('_playbookcontentProductId2')]",
        "version": "[variables('playbookVersion2')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName3')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Crowdstrike-EndpointEnrichment Playbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion3')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Crowdstrike-EndpointEnrichment",
              "type": "String",
              "metadata": {
                "description": "Name of the Logic App/Playbook"
              }
            },
            "CrowdStrike_Base_Playbook_Name": {
              "defaultValue": "CrowdStrike_Base",
              "type": "String"
            }
          },
          "variables": {
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "actions": {
                    "Add_comment_to_incident_(V3)": {
                      "runAfter": {
                        "Compose_image_to_add_in_the_incident": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": {
                          "incidentArmId": "@triggerBody()?['object']?['id']",
                          "message": "<p>@{outputs('Compose_image_to_add_in_the_incident')}<span style=\"font-size: 14px\"><strong>Crowdstrike_Enrichment_GetDeviceInformation playbook run results:</strong></span><br>\n<br>\n@{variables('Comment')}<br>\n</p>"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/Incidents/Comment"
                      }
                    },
                    "Compose_image_to_add_in_the_incident": {
                      "type": "Compose",
                      "inputs": "<img src=\"https://uploads4.craft.co/uploads/company/logo/852xx/85212/normal_1171b7695370eb94.jpg\" alt=\"Lamp\" width=\"32\" height=\"32\">",
                      "runAfter": {
                        "Condition__to_check_if_device_id_returns_results": [
                          "Succeeded"
                        ]
                      },
                      "description": "This composes crowdstrike image to comment in the incident"
                    },
                    "Condition__to_check_if_device_id_returns_results": {
                      "type": "If",
                      "expression": {
                        "and": [
                          {
                            "not": {
                              "equals": [
                                "@body('Parse_JSON_Get_device_id_response')?['resources']?[0]",
                                "@null"
                              ]
                            }
                          }
                        ]
                      },
                      "actions": {
                        "Append_to_string_variable_comment_for_device_information": {
                          "type": "AppendToStringVariable",
                          "inputs": {
                            "name": "Comment",
                            "value": "Device information:\n@{body('Create_HTML_table_for_device_information')}"
                          },
                          "runAfter": {
                            "Create_HTML_table_for_device_information": [
                              "Succeeded"
                            ]
                          },
                          "description": "Appends device information to comment variable"
                        },
                        "Condition_if_detections_are_present_for_the_host": {
                          "type": "If",
                          "expression": {
                            "and": [
                              {
                                "not": {
                                  "equals": [
                                    "@body('Parse_JSON_search_detections_response')?['resources']?[0]",
                                    "@null"
                                  ]
                                }
                              }
                            ]
                          },
                          "actions": {
                            "Append_to_string_variable_detection_information": {
                              "type": "AppendToStringVariable",
                              "inputs": {
                                "name": "Comment",
                                "value": "Detection Information:\n@{body('Select_detection_information')}"
                              },
                              "runAfter": {
                                "Select_detection_information": [
                                  "Succeeded"
                                ]
                              },
                              "description": "This appends detection information to comment variable"
                            },
                            "HTTP-Get_detection_information": {
                              "type": "Http",
                              "inputs": {
                                "method": "POST",
                                "uri": "@{body('CrowdStrike_Base')?['FalconHost']}/detects/entities/summaries/GET/v1",
                                "headers": {
                                  "Accept": "application/json",
                                  "Authorization": "@{body('CrowdStrike_Base')?['AccessToken']}",
                                  "Content-Type": "application/json"
                                },
                                "body": {
                                  "ids": "@body('Parse_JSON_search_detections_response')?['resources']"
                                }
                              },
                              "description": "This gets the detection information from the crowdstrike"
                            },
                            "Parse_JSON_detection_information_response": {
                              "type": "ParseJson",
                              "inputs": {
                                "content": "@body('HTTP-Get_detection_information')",
                                "schema": {
                                  "properties": {
                                    "errors": {
                                      "type": "array"
                                    },
                                    "meta": {
                                      "properties": {
                                        "powered_by": {
                                          "type": "string"
                                        },
                                        "query_time": {
                                          "type": "number"
                                        },
                                        "trace_id": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "resources": {
                                      "items": {
                                        "properties": {
                                          "behaviors": {
                                            "items": {
                                              "properties": {
                                                "alleged_filetype": {
                                                  "type": "string"
                                                },
                                                "behavior_id": {
                                                  "type": "string"
                                                },
                                                "cmdline": {
                                                  "type": "string"
                                                },
                                                "confidence": {
                                                  "type": "integer"
                                                },
                                                "control_graph_id": {
                                                  "type": "string"
                                                },
                                                "device_id": {
                                                  "type": "string"
                                                },
                                                "display_name": {
                                                  "type": "string"
                                                },
                                                "filename": {
                                                  "type": "string"
                                                },
                                                "filepath": {
                                                  "type": "string"
                                                },
                                                "ioc_description": {
                                                  "type": "string"
                                                },
                                                "ioc_source": {
                                                  "type": "string"
                                                },
                                                "ioc_type": {
                                                  "type": "string"
                                                },
                                                "ioc_value": {
                                                  "type": "string"
                                                },
                                                "md5": {
                                                  "type": "string"
                                                },
                                                "objective": {
                                                  "type": "string"
                                                },
                                                "parent_details": {
                                                  "properties": {
                                                    "parent_cmdline": {
                                                      "type": "string"
                                                    },
                                                    "parent_md5": {
                                                      "type": "string"
                                                    },
                                                    "parent_process_graph_id": {
                                                      "type": "string"
                                                    },
                                                    "parent_sha256": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "type": "object"
                                                },
                                                "pattern_disposition": {
                                                  "type": "integer"
                                                },
                                                "pattern_disposition_details": {
                                                  "properties": {
                                                    "bootup_safeguard_enabled": {
                                                      "type": "boolean"
                                                    },
                                                    "critical_process_disabled": {
                                                      "type": "boolean"
                                                    },
                                                    "detect": {
                                                      "type": "boolean"
                                                    },
                                                    "fs_operation_blocked": {
                                                      "type": "boolean"
                                                    },
                                                    "handle_operation_downgraded": {
                                                      "type": "boolean"
                                                    },
                                                    "inddet_mask": {
                                                      "type": "boolean"
                                                    },
                                                    "indicator": {
                                                      "type": "boolean"
                                                    },
                                                    "kill_parent": {
                                                      "type": "boolean"
                                                    },
                                                    "kill_process": {
                                                      "type": "boolean"
                                                    },
                                                    "kill_subprocess": {
                                                      "type": "boolean"
                                                    },
                                                    "operation_blocked": {
                                                      "type": "boolean"
                                                    },
                                                    "policy_disabled": {
                                                      "type": "boolean"
                                                    },
                                                    "process_blocked": {
                                                      "type": "boolean"
                                                    },
                                                    "quarantine_file": {
                                                      "type": "boolean"
                                                    },
                                                    "quarantine_machine": {
                                                      "type": "boolean"
                                                    },
                                                    "registry_operation_blocked": {
                                                      "type": "boolean"
                                                    },
                                                    "rooting": {
                                                      "type": "boolean"
                                                    },
                                                    "sensor_only": {
                                                      "type": "boolean"
                                                    }
                                                  },
                                                  "type": "object"
                                                },
                                                "scenario": {
                                                  "type": "string"
                                                },
                                                "severity": {
                                                  "type": "integer"
                                                },
                                                "sha256": {
                                                  "type": "string"
                                                },
                                                "tactic": {
                                                  "type": "string"
                                                },
                                                "tactic_id": {
                                                  "type": "string"
                                                },
                                                "technique": {
                                                  "type": "string"
                                                },
                                                "technique_id": {
                                                  "type": "string"
                                                },
                                                "timestamp": {
                                                  "type": "string"
                                                },
                                                "triggering_process_graph_id": {
                                                  "type": "string"
                                                },
                                                "user_id": {
                                                  "type": "string"
                                                },
                                                "user_name": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "device_id",
                                                "timestamp",
                                                "behavior_id",
                                                "filename",
                                                "filepath",
                                                "alleged_filetype",
                                                "cmdline",
                                                "scenario",
                                                "objective",
                                                "tactic",
                                                "tactic_id",
                                                "technique",
                                                "technique_id",
                                                "display_name",
                                                "severity",
                                                "confidence",
                                                "ioc_type",
                                                "ioc_value",
                                                "ioc_source",
                                                "ioc_description",
                                                "user_name",
                                                "user_id",
                                                "control_graph_id",
                                                "triggering_process_graph_id",
                                                "sha256",
                                                "md5",
                                                "parent_details",
                                                "pattern_disposition",
                                                "pattern_disposition_details"
                                              ],
                                              "type": "object"
                                            },
                                            "type": "array"
                                          },
                                          "behaviors_processed": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "cid": {
                                            "type": "string"
                                          },
                                          "created_timestamp": {
                                            "type": "string"
                                          },
                                          "detection_id": {
                                            "type": "string"
                                          },
                                          "device": {
                                            "properties": {
                                              "agent_load_flags": {
                                                "type": "string"
                                              },
                                              "agent_local_time": {
                                                "type": "string"
                                              },
                                              "agent_version": {
                                                "type": "string"
                                              },
                                              "bios_manufacturer": {
                                                "type": "string"
                                              },
                                              "bios_version": {
                                                "type": "string"
                                              },
                                              "cid": {
                                                "type": "string"
                                              },
                                              "config_id_base": {
                                                "type": "string"
                                              },
                                              "config_id_build": {
                                                "type": "string"
                                              },
                                              "config_id_platform": {
                                                "type": "string"
                                              },
                                              "device_id": {
                                                "type": "string"
                                              },
                                              "external_ip": {
                                                "type": "string"
                                              },
                                              "first_seen": {
                                                "type": "string"
                                              },
                                              "groups": {
                                                "items": {
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              },
                                              "hostname": {
                                                "type": "string"
                                              },
                                              "last_seen": {
                                                "type": "string"
                                              },
                                              "local_ip": {
                                                "type": "string"
                                              },
                                              "mac_address": {
                                                "type": "string"
                                              },
                                              "machine_domain": {
                                                "type": "string"
                                              },
                                              "major_version": {
                                                "type": "string"
                                              },
                                              "minor_version": {
                                                "type": "string"
                                              },
                                              "modified_timestamp": {
                                                "type": "string"
                                              },
                                              "os_version": {
                                                "type": "string"
                                              },
                                              "ou": {
                                                "items": {
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              },
                                              "platform_id": {
                                                "type": "string"
                                              },
                                              "platform_name": {
                                                "type": "string"
                                              },
                                              "product_type": {
                                                "type": "string"
                                              },
                                              "product_type_desc": {
                                                "type": "string"
                                              },
                                              "site_name": {
                                                "type": "string"
                                              },
                                              "status": {
                                                "type": "string"
                                              },
                                              "system_manufacturer": {
                                                "type": "string"
                                              },
                                              "system_product_name": {
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "email_sent": {
                                            "type": "boolean"
                                          },
                                          "first_behavior": {
                                            "type": "string"
                                          },
                                          "hostinfo": {
                                            "properties": {
                                              "active_directory_dn_display": {
                                                "items": {
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              },
                                              "domain": {
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "last_behavior": {
                                            "type": "string"
                                          },
                                          "max_confidence": {
                                            "type": "integer"
                                          },
                                          "max_severity": {
                                            "type": "integer"
                                          },
                                          "max_severity_displayname": {
                                            "type": "string"
                                          },
                                          "seconds_to_resolved": {
                                            "type": "integer"
                                          },
                                          "seconds_to_triaged": {
                                            "type": "integer"
                                          },
                                          "show_in_ui": {
                                            "type": "boolean"
                                          },
                                          "status": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "cid",
                                          "created_timestamp",
                                          "detection_id",
                                          "device",
                                          "behaviors",
                                          "email_sent",
                                          "first_behavior",
                                          "last_behavior",
                                          "max_confidence",
                                          "max_severity",
                                          "max_severity_displayname",
                                          "show_in_ui",
                                          "status",
                                          "hostinfo",
                                          "seconds_to_triaged",
                                          "seconds_to_resolved",
                                          "behaviors_processed"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "runAfter": {
                                "HTTP-Get_detection_information": [
                                  "Succeeded"
                                ]
                              },
                              "description": "prepares json message for detection information"
                            },
                            "Select_detection_information": {
                              "type": "Select",
                              "inputs": {
                                "from": "@body('Parse_JSON_detection_information_response')?['resources']",
                                "select": {
                                  "detection_id": "@item()?['detection_id']",
                                  "device_id": "@item()?['device']?['device_id']",
                                  "domain": "@item()?['hostinfo']?['domain']",
                                  "local_ip": "@item()?['device']?['local_ip']"
                                }
                              },
                              "runAfter": {
                                "Parse_JSON_detection_information_response": [
                                  "Succeeded"
                                ]
                              },
                              "description": "compose detection information"
                            }
                          },
                          "runAfter": {
                            "Parse_JSON_search_detections_response": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Append_to_string_variable_comment_if_no_detections_are_present": {
                                "type": "AppendToStringVariable",
                                "inputs": {
                                  "name": "Comment",
                                  "value": "There are no detections present for this device."
                                },
                                "description": "this appends text to comments if no detections are present"
                              }
                            }
                          },
                          "description": "This checks if detections are present for the host"
                        },
                        "Create_HTML_table_for_device_information": {
                          "type": "Table",
                          "inputs": {
                            "from": "@body('Parse_JSON_device_information_response')?['resources']",
                            "format": "HTML",
                            "columns": [
                              {
                                "header": "device_id",
                                "value": "@item()?['device_id']"
                              },
                              {
                                "header": "external_ip",
                                "value": "@item()?['external_ip']"
                              },
                              {
                                "header": "mac_address",
                                "value": "@item()?['mac_address']"
                              },
                              {
                                "header": "hostname",
                                "value": "@item()?['hostname']"
                              },
                              {
                                "header": "first_seen",
                                "value": "@item()?['first_seen']"
                              },
                              {
                                "header": "last_seen",
                                "value": "@item()?['last_seen']"
                              },
                              {
                                "header": "local_ip",
                                "value": "@item()?['local_ip']"
                              },
                              {
                                "header": "machine_domain",
                                "value": "@item()?['machine_domain']"
                              },
                              {
                                "header": "os_version",
                                "value": "@item()?['os_version']"
                              }
                            ]
                          },
                          "runAfter": {
                            "Parse_JSON_device_information_response": [
                              "Succeeded"
                            ]
                          },
                          "description": "prepares HTML table for device information"
                        },
                        "HTTP_-Search_for_detections": {
                          "type": "Http",
                          "inputs": {
                            "method": "GET",
                            "uri": "@{body('CrowdStrike_Base')?['FalconHost']}/detects/queries/detects/v1?filter=first_behavior:>'@{variables('Timestamp')}'&device_id:'@{body('Parse_JSON_Get_device_id_response')?['resources']?[0]}'&sort=first_behavior.desc",
                            "headers": {
                              "Accept": "application/json",
                              "Authorization": "@{body('CrowdStrike_Base')?['AccessToken']}",
                              "Content-Type": "application/json"
                            }
                          },
                          "runAfter": {
                            "Set_variable_timestamp_for_past_3_days": [
                              "Succeeded"
                            ]
                          },
                          "description": "searches the detections based on the filters from crowdstrike"
                        },
                        "HTTP_-_Get_device_information_": {
                          "type": "Http",
                          "inputs": {
                            "method": "GET",
                            "uri": "@{body('CrowdStrike_Base')?['FalconHost']}/devices/entities/devices/v1?ids=@{body('Parse_JSON_Get_device_id_response')?['resources']?[0]}",
                            "headers": {
                              "Accept": "application/json",
                              "Authorization": "@{body('CrowdStrike_Base')?['AccessToken']}",
                              "Content-Type": "application/json"
                            }
                          },
                          "description": "This gets the device information from crowdstrike"
                        },
                        "Parse_JSON_device_information_response": {
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@body('HTTP_-_Get_device_information_')",
                            "schema": {
                              "properties": {
                                "errors": {
                                  "type": "array"
                                },
                                "meta": {
                                  "properties": {
                                    "powered_by": {
                                      "type": "string"
                                    },
                                    "query_time": {
                                      "type": "number"
                                    },
                                    "trace_id": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "resources": {
                                  "items": {
                                    "properties": {
                                      "agent_load_flags": {
                                        "type": "string"
                                      },
                                      "agent_local_time": {
                                        "type": "string"
                                      },
                                      "agent_version": {
                                        "type": "string"
                                      },
                                      "bios_manufacturer": {
                                        "type": "string"
                                      },
                                      "bios_version": {
                                        "type": "string"
                                      },
                                      "build_number": {
                                        "type": "string"
                                      },
                                      "cid": {
                                        "type": "string"
                                      },
                                      "config_id_base": {
                                        "type": "string"
                                      },
                                      "config_id_build": {
                                        "type": "string"
                                      },
                                      "config_id_platform": {
                                        "type": "string"
                                      },
                                      "cpu_signature": {
                                        "type": "string"
                                      },
                                      "device_id": {
                                        "type": "string"
                                      },
                                      "device_policies": {
                                        "properties": {
                                          "device_control": {
                                            "properties": {
                                              "applied": {
                                                "type": "boolean"
                                              },
                                              "applied_date": {
                                                "type": "string"
                                              },
                                              "assigned_date": {
                                                "type": "string"
                                              },
                                              "policy_id": {
                                                "type": "string"
                                              },
                                              "policy_type": {
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "firewall": {
                                            "properties": {
                                              "applied": {
                                                "type": "boolean"
                                              },
                                              "applied_date": {
                                                "type": "string"
                                              },
                                              "assigned_date": {
                                                "type": "string"
                                              },
                                              "policy_id": {
                                                "type": "string"
                                              },
                                              "policy_type": {
                                                "type": "string"
                                              },
                                              "rule_set_id": {
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "global_config": {
                                            "properties": {
                                              "applied": {
                                                "type": "boolean"
                                              },
                                              "applied_date": {
                                                "type": "string"
                                              },
                                              "assigned_date": {
                                                "type": "string"
                                              },
                                              "policy_id": {
                                                "type": "string"
                                              },
                                              "policy_type": {
                                                "type": "string"
                                              },
                                              "settings_hash": {
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "prevention": {
                                            "properties": {
                                              "applied": {
                                                "type": "boolean"
                                              },
                                              "applied_date": {
                                                "type": "string"
                                              },
                                              "assigned_date": {
                                                "type": "string"
                                              },
                                              "policy_id": {
                                                "type": "string"
                                              },
                                              "policy_type": {
                                                "type": "string"
                                              },
                                              "rule_groups": {
                                                "items": {
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              },
                                              "settings_hash": {
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "remote_response": {
                                            "properties": {
                                              "applied": {
                                                "type": "boolean"
                                              },
                                              "applied_date": {
                                                "type": "string"
                                              },
                                              "assigned_date": {
                                                "type": "string"
                                              },
                                              "policy_id": {
                                                "type": "string"
                                              },
                                              "policy_type": {
                                                "type": "string"
                                              },
                                              "settings_hash": {
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "sensor_update": {
                                            "properties": {
                                              "applied": {
                                                "type": "boolean"
                                              },
                                              "applied_date": {
                                                "type": "string"
                                              },
                                              "assigned_date": {
                                                "type": "string"
                                              },
                                              "policy_id": {
                                                "type": "string"
                                              },
                                              "policy_type": {
                                                "type": "string"
                                              },
                                              "settings_hash": {
                                                "type": "string"
                                              },
                                              "uninstall_protection": {
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "external_ip": {
                                        "type": "string"
                                      },
                                      "first_seen": {
                                        "type": "string"
                                      },
                                      "group_hash": {
                                        "type": "string"
                                      },
                                      "groups": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "hostname": {
                                        "type": "string"
                                      },
                                      "last_seen": {
                                        "type": "string"
                                      },
                                      "local_ip": {
                                        "type": "string"
                                      },
                                      "mac_address": {
                                        "type": "string"
                                      },
                                      "machine_domain": {
                                        "type": "string"
                                      },
                                      "major_version": {
                                        "type": "string"
                                      },
                                      "meta": {
                                        "properties": {
                                          "version": {
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "minor_version": {
                                        "type": "string"
                                      },
                                      "modified_timestamp": {
                                        "type": "string"
                                      },
                                      "os_version": {
                                        "type": "string"
                                      },
                                      "ou": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "platform_id": {
                                        "type": "string"
                                      },
                                      "platform_name": {
                                        "type": "string"
                                      },
                                      "pointer_size": {
                                        "type": "string"
                                      },
                                      "policies": {
                                        "items": {
                                          "properties": {
                                            "applied": {
                                              "type": "boolean"
                                            },
                                            "applied_date": {
                                              "type": "string"
                                            },
                                            "assigned_date": {
                                              "type": "string"
                                            },
                                            "policy_id": {
                                              "type": "string"
                                            },
                                            "policy_type": {
                                              "type": "string"
                                            },
                                            "rule_groups": {
                                              "items": {
                                                "type": "string"
                                              },
                                              "type": "array"
                                            },
                                            "settings_hash": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "policy_type",
                                            "policy_id",
                                            "applied",
                                            "settings_hash",
                                            "assigned_date",
                                            "applied_date",
                                            "rule_groups"
                                          ],
                                          "type": "object"
                                        },
                                        "type": "array"
                                      },
                                      "product_type": {
                                        "type": "string"
                                      },
                                      "product_type_desc": {
                                        "type": "string"
                                      },
                                      "provision_status": {
                                        "type": "string"
                                      },
                                      "reduced_functionality_mode": {
                                        "type": "string"
                                      },
                                      "serial_number": {
                                        "type": "string"
                                      },
                                      "service_pack_major": {
                                        "type": "string"
                                      },
                                      "service_pack_minor": {
                                        "type": "string"
                                      },
                                      "site_name": {
                                        "type": "string"
                                      },
                                      "slow_changing_modified_timestamp": {
                                        "type": "string"
                                      },
                                      "status": {
                                        "type": "string"
                                      },
                                      "system_manufacturer": {
                                        "type": "string"
                                      },
                                      "system_product_name": {
                                        "type": "string"
                                      },
                                      "tags": {
                                        "type": "array"
                                      }
                                    },
                                    "required": [
                                      "device_id",
                                      "cid",
                                      "agent_load_flags",
                                      "agent_local_time",
                                      "agent_version",
                                      "bios_manufacturer",
                                      "bios_version",
                                      "build_number",
                                      "config_id_base",
                                      "config_id_build",
                                      "config_id_platform",
                                      "cpu_signature",
                                      "external_ip",
                                      "mac_address",
                                      "hostname",
                                      "first_seen",
                                      "last_seen",
                                      "local_ip",
                                      "major_version",
                                      "minor_version",
                                      "os_version",
                                      "platform_id",
                                      "platform_name",
                                      "policies",
                                      "reduced_functionality_mode",
                                      "device_policies",
                                      "groups",
                                      "group_hash",
                                      "product_type",
                                      "product_type_desc",
                                      "provision_status",
                                      "serial_number",
                                      "service_pack_major",
                                      "service_pack_minor",
                                      "pointer_size",
                                      "status",
                                      "system_manufacturer",
                                      "system_product_name",
                                      "tags",
                                      "modified_timestamp",
                                      "slow_changing_modified_timestamp",
                                      "meta"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "runAfter": {
                            "HTTP_-_Get_device_information_": [
                              "Succeeded"
                            ]
                          },
                          "description": "prepares json for device information"
                        },
                        "Parse_JSON_search_detections_response": {
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@body('HTTP_-Search_for_detections')",
                            "schema": {
                              "properties": {
                                "errors": {
                                  "type": "array"
                                },
                                "meta": {
                                  "properties": {
                                    "pagination": {
                                      "properties": {
                                        "limit": {
                                          "type": "integer"
                                        },
                                        "offset": {
                                          "type": "integer"
                                        },
                                        "total": {
                                          "type": "integer"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "powered_by": {
                                      "type": "string"
                                    },
                                    "query_time": {
                                      "type": "number"
                                    },
                                    "trace_id": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "resources": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "runAfter": {
                            "HTTP_-Search_for_detections": [
                              "Succeeded"
                            ]
                          },
                          "description": "prepares json for search detections"
                        },
                        "Set_variable_timestamp_for_past_3_days": {
                          "type": "SetVariable",
                          "inputs": {
                            "name": "Timestamp",
                            "value": "@{getPastTime(3, 'Day')}"
                          },
                          "runAfter": {
                            "Append_to_string_variable_comment_for_device_information": [
                              "Succeeded"
                            ]
                          },
                          "description": "set variable timestamp for past 3 days to filter detections"
                        }
                      },
                      "runAfter": {
                        "Parse_JSON_Get_device_id_response": [
                          "Succeeded"
                        ]
                      },
                      "else": {
                        "actions": {
                          "Append_to_string_variable_if_no_devices_are_present": {
                            "type": "AppendToStringVariable",
                            "inputs": {
                              "name": "Comment",
                              "value": "There are no devices present"
                            },
                            "description": "This appends text to string variable if no devices are present"
                          }
                        }
                      },
                      "description": "This checks if device is present in falcon host or not"
                    },
                    "CrowdStrike_Base": {
                      "runAfter": {
                        "Initialize_variable_comment": [
                          "Succeeded"
                        ]
                      },
                      "type": "Workflow",
                      "inputs": {
                        "host": {
                          "triggerName": "manual",
                          "workflow": {
                            "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name ,'/providers/Microsoft.Logic/workflows/', parameters('CrowdStrike_Base_Playbook_Name'))]"
                          }
                        }
                      },
                      "description": "This is to call the base logic app to get the access token and falcon host URL"
                    },
                    "Entities_-_Get_Hosts": {
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/host"
                      }
                    },
                    "HTTP_-_Get_device_id": {
                      "type": "Http",
                      "inputs": {
                        "method": "GET",
                        "uri": "@{body('CrowdStrike_Base')?['FalconHost']}/devices/queries/devices/v1?filter=hostname:'@{body('Entities_-_Get_Hosts')?['Hosts']?[0]?['HostName']}'",
                        "headers": {
                          "Accept": "application/json",
                          "Authorization": "@{body('CrowdStrike_Base')?['AccessToken']}",
                          "Content-Type": "application/json"
                        }
                      },
                      "runAfter": {
                        "CrowdStrike_Base": [
                          "Succeeded"
                        ]
                      },
                      "description": "This filters the device id by hostname"
                    },
                    "Initialize_variable_comment": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Comment",
                            "type": "string"
                          }
                        ]
                      },
                      "runAfter": {
                        "Initialize_variable_timestamp": [
                          "Succeeded"
                        ]
                      },
                      "description": "This holds the variable comment to include in the incident"
                    },
                    "Initialize_variable_timestamp": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Timestamp",
                            "type": "string"
                          }
                        ]
                      },
                      "runAfter": {
                        "Entities_-_Get_Hosts": [
                          "Succeeded"
                        ]
                      },
                      "description": "Initialize timestamp variable to hold the timestamp"
                    },
                    "Parse_JSON_Get_device_id_response": {
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('HTTP_-_Get_device_id')",
                        "schema": {
                          "errors": "[variables('TemplateEmptyArray')]",
                          "meta": {
                            "pagination": {
                              "limit": 100,
                              "offset": 1,
                              "total": 1
                            },
                            "powered_by": "device-api",
                            "query_time": 0.005041315,
                            "trace_id": "aa7b84f5-3e81-4980-ad9f-c14b6d8ca577"
                          },
                          "resources": [
                            "cdc977a72a8c49528bb82f89dde2c2e9"
                          ]
                        }
                      },
                      "runAfter": {
                        "HTTP_-_Get_device_id": [
                          "Succeeded"
                        ]
                      },
                      "description": "prepares json for the device id response"
                    }
                  },
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "When_Azure_Sentinel_incident_creation_rule_was_triggered_(Private_Preview_only)": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "contentVersion": "1.0.0.0"
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "tags": {
                "hidden-SentinelTemplateName": "EndpointEnrichment-Crowdstrike",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('AzureSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId3'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId3')]",
                "contentId": "[variables('_playbookContentId3')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion3')]",
                "source": {
                  "kind": "Solution",
                  "name": "CrowdStrike Falcon Endpoint Protection",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ],
          "metadata": {
            "title": "Endpoint enrichment - Crowdstrike",
            "description": "When a new Microsoft Sentinel incident is created, this playbook gets triggered and performs below actions:",
            "mainSteps": [
              "1. Fetches the device information from Crowdstrike",
              "2. Enrich the incident with device information from Crowdstrike"
            ],
            "prerequisites": [
              "1. Azure Key vault is required for storing the Crowdstrike ClientID and Secrets, create key vault if not exists [learn how](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Fquickstarts%2Fmicrosoft.keyvault%2Fkey-vault-secret-create%2Fazuredeploy.json)",
              "2. Add Crowdstrike Client ID and Client Secret in Key vault secrets and capture the keys which are required during the template deployment",
              "3. CrowdStrike_Base playbook needs to be deployed prior to the deployment of this playbook under the same subscription and under the same resource group.",
              "4. CrowdStrike_Base playbook needs to be added in the access policy of the Key Vault [learn how](https://docs.microsoft.com/azure/key-vault/general/assign-access-policy-portal)"
            ],
            "lastUpdateTime": "2022-07-25T00:00:00Z",
            "entities": [
              "Host"
            ],
            "tags": [
              "Remediation"
            ],
            "source": {
              "type": "solution",
              "name": "CrowdStrike Falcon Endpoint Protection"
            },
            "postDeployment": [
              "** a. Authorize connections **",
              "Once deployment is complete, you will need to authorize connections.",
              "1. Click the Microsoft Sentinel connection resource",
              "2. Click edit API connection",
              "3. Click Authorize",
              "4. Sign in",
              "5. Click Save",
              "** b. Configurations in Sentinel **",
              "1. In Microsoft sentinel analytical rules should be configured to trigger an incident with risky device",
              "2. Configure the automation rules to trigger this playbook"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Endpoint enrichment - Crowdstrike",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId3')]",
        "contentKind": "Playbook",
        "displayName": "Crowdstrike-EndpointEnrichment",
        "contentProductId": "[variables('_playbookcontentProductId3')]",
        "id": "[variables('_playbookcontentProductId3')]",
        "version": "[variables('playbookVersion3')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('workbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CrowdStrikeFalconEndpointProtectionWorkbook Workbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('workbookVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Insights/workbooks",
              "name": "[variables('workbookContentId1')]",
              "location": "[parameters('workspace-location')]",
              "kind": "shared",
              "apiVersion": "2021-08-01",
              "metadata": {
                "description": "Sets the time name for analysis"
              },
              "properties": {
                "displayName": "[parameters('workbook1-name')]",
                "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"5f6ef388-eba8-456d-a86d-b0e5d13753dc\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"label\":\"Time Range\",\"type\":4,\"isRequired\":true,\"value\":{\"durationMs\":7776000000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}],\"allowCustom\":true},\"timeContext\":{\"durationMs\":86400000}}],\"style\":\"above\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 0\"},{\"type\":11,\"content\":{\"version\":\"LinkItem/1.0\",\"style\":\"tabs\",\"links\":[{\"id\":\"e75aea48-9de8-48ca-8420-93fcdda9b996\",\"cellValue\":\"TabName\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Detections\",\"subTarget\":\"Detections\",\"style\":\"link\"},{\"id\":\"e06768ad-90d3-49d2-aa55-bac601c19769\",\"cellValue\":\"TabName\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Authentication\",\"subTarget\":\"Authentication\",\"style\":\"link\"}]},\"name\":\"links - 7\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"28302220-bac7-4011-bd0b-b8565627887e\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Operation\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"CrowdStrikeFalconEventStream\\r\\n| where EventType == \\\"AuthActivityAuditEvent\\\"\\r\\n| distinct Activity\\r\\n| sort by Activity asc\",\"value\":\"\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"]},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"94066942-9782-41b5-b60d-4ea12fda9a28\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TargetUserName\",\"label\":\"Target User\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"CrowdStrikeFalconEventStream\\r\\n| where EventType == \\\"AuthActivityAuditEvent\\\"\\r\\n| distinct DstUserName\\r\\n| sort by DstUserName asc\",\"value\":\"\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"]},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"}],\"style\":\"above\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"conditionalVisibility\":{\"parameterName\":\"TabName\",\"comparison\":\"isEqualTo\",\"value\":\"Authentication\"},\"name\":\"parameters - 11\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"CrowdStrikeFalconEventStream\\r\\n| where EventType == \\\"AuthActivityAuditEvent\\\"\\r\\n| where Activity in ({Operation}) or '*' in ({Operation})\\r\\n| where DstUserName in ({TargetUserName}) or '*' in ({TargetUserName})\\r\\n| summarize Total = count() by Activity, bin(TimeGenerated, {TimeRange:grain})\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Total Events by Operation over Time\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"areachart\"},\"conditionalVisibility\":{\"parameterName\":\"TabName\",\"comparison\":\"isEqualTo\",\"value\":\"Authentication\"},\"customWidth\":\"75\",\"name\":\"query - 2 - Copy\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"4d809240-d4ee-4266-adc0-cb05344a2f5a\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Hostnames\",\"label\":\"Hostname\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"CrowdStrikeFalconEventStream\\r\\n| where EventType == \\\"DetectionSummaryEvent\\\"\\r\\n| distinct DstHostName\\r\\n| sort by DstHostName asc\",\"value\":[\"value::all\"],\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"showDefault\":false},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"version\":\"KqlParameterItem/1.0\",\"name\":\"Usernames\",\"label\":\"Username\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"CrowdStrikeFalconEventStream\\r\\n| where EventType == \\\"DetectionSummaryEvent\\\"\\r\\n| distinct DstUserName\\r\\n| sort by DstUserName asc\",\"value\":[\"value::all\"],\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"showDefault\":false},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"id\":\"3be22ee0-2638-4205-bfb4-ba56f9baee92\"},{\"version\":\"KqlParameterItem/1.0\",\"name\":\"Tactics\",\"label\":\"Tactic\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"CrowdStrikeFalconEventStream\\r\\n| where EventType == \\\"DetectionSummaryEvent\\\"\\r\\n| distinct Activity\\r\\n| sort by Activity asc\",\"value\":[\"value::all\"],\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"showDefault\":false},\"timeContext\":{\"durationMs\":604800000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"id\":\"6c37e6c7-3704-4a9c-a10c-227c1d46b694\"},{\"version\":\"KqlParameterItem/1.0\",\"name\":\"SensorId\",\"label\":\"Sensor ID\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"CrowdStrikeFalconEventStream\\r\\n| where EventType == \\\"DetectionSummaryEvent\\\"\\r\\n| distinct SensorId\\r\\n| sort by SensorId asc\",\"value\":[\"value::all\"],\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"showDefault\":false},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"id\":\"6e7adfa5-99de-4a23-bf94-2322beee79f1\"},{\"version\":\"KqlParameterItem/1.0\",\"name\":\"Severity\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"CrowdStrikeFalconEventStream\\r\\n| where EventType == \\\"DetectionSummaryEvent\\\"\\r\\n| distinct Severity\\r\\n| sort by Severity asc\",\"value\":[\"value::all\"],\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"showDefault\":false},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"id\":\"e3a85e7b-f5ed-43d6-a398-fc1a20bb42f7\"}],\"style\":\"above\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"conditionalVisibility\":{\"parameterName\":\"TabName\",\"comparison\":\"isEqualTo\",\"value\":\"Detections\"},\"name\":\"parameters - 1\"},{\"type\":1,\"content\":{\"json\":\"___\"},\"conditionalVisibility\":{\"parameterName\":\"TabName\",\"comparison\":\"isEqualTo\",\"value\":\"Detections\"},\"name\":\"text - 17\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"CrowdStrikeFalconEventStream\\r\\n| where EventType == \\\"DetectionSummaryEvent\\\"\\r\\n| where DstHostName in ({Hostnames}) or '*' in ({Hostnames})\\r\\n| where DstUserName in ({Usernames}) or '*' in ({Usernames})\\r\\n| where Activity in ({Tactics}) or '*' in ({Tactics})\\r\\n| where SensorId in ({SensorId}) or '*' in ({SensorId})\\r\\n| where Severity in ({Severity}) or '*' in ({Severity})\\r\\n| summarize ['Total Detections'] = count() by EventType\",\"size\":4,\"showAnalytics\":true,\"title\":\"Total Detections\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"formatter\":1},\"leftContent\":{\"columnMatch\":\"Total Detections\",\"formatter\":12,\"formatOptions\":{\"palette\":\"none\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"useGrouping\":false,\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"showBorder\":false}},\"conditionalVisibility\":{\"parameterName\":\"TabName\",\"comparison\":\"isEqualTo\",\"value\":\"Detections\"},\"customWidth\":\"30\",\"name\":\"query - 2 - Copy - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"CrowdStrikeFalconEventStream\\r\\n| where EventType == \\\"DetectionSummaryEvent\\\"\\r\\n| where DstHostName in ({Hostnames}) or '*' in ({Hostnames})\\r\\n| where DstUserName in ({Usernames}) or '*' in ({Usernames})\\r\\n| where Activity in ({Tactics}) or '*' in ({Tactics})\\r\\n| where SensorId in ({SensorId}) or '*' in ({SensorId})\\r\\n| where Severity in ({Severity}) or '*' in ({Severity})\\r\\n| summarize Total = dcount(SensorId) by EventType\",\"size\":4,\"showAnalytics\":true,\"title\":\"Number of Sensors\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"formatter\":1},\"leftContent\":{\"columnMatch\":\"Total\",\"formatter\":12,\"formatOptions\":{\"palette\":\"none\"},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\",\"useGrouping\":false,\"maximumFractionDigits\":0}}},\"showBorder\":false}},\"conditionalVisibility\":{\"parameterName\":\"TabName\",\"comparison\":\"isEqualTo\",\"value\":\"Detections\"},\"customWidth\":\"30\",\"name\":\"query - 2 - Copy - Copy - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"CrowdStrikeFalconEventStream\\r\\n| where EventType == \\\"DetectionSummaryEvent\\\"\\r\\n| where DstHostName in ({Hostnames}) or '*' in ({Hostnames})\\r\\n| where DstUserName in ({Usernames}) or '*' in ({Usernames})\\r\\n| where Activity in ({Tactics}) or '*' in ({Tactics})\\r\\n| where SensorId in ({SensorId}) or '*' in ({SensorId})\\r\\n| where Severity in ({Severity}) or '*' in ({Severity})\\r\\n| summarize Total = count() by Severity\",\"size\":4,\"showAnalytics\":true,\"title\":\"Detection by Severity\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"High\",\"color\":\"redDark\"},{\"seriesName\":\"Medium\",\"color\":\"orange\"},{\"seriesName\":\"Low\",\"color\":\"blue\"},{\"seriesName\":\"Critical\",\"color\":\"redBright\"}]}},\"conditionalVisibility\":{\"parameterName\":\"TabName\",\"comparison\":\"isEqualTo\",\"value\":\"Detections\"},\"customWidth\":\"40\",\"name\":\"query - 2 - Copy - Copy\"},{\"type\":1,\"content\":{\"json\":\"___\"},\"conditionalVisibility\":{\"parameterName\":\"TabName\",\"comparison\":\"isEqualTo\",\"value\":\"Detections\"},\"name\":\"text - 17 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"CrowdStrikeFalconEventStream\\r\\n| where EventType == \\\"DetectionSummaryEvent\\\"\\r\\n| where DstHostName in ({Hostnames}) or '*' in ({Hostnames})\\r\\n| where DstUserName in ({Usernames}) or '*' in ({Usernames})\\r\\n| where Activity in ({Tactics}) or '*' in ({Tactics})\\r\\n| where SensorId in ({SensorId}) or '*' in ({SensorId})\\r\\n| where Severity in ({Severity}) or '*' in ({Severity})\\r\\n| where Severity == \\\"Critical\\\"\\r\\n| summarize Total = count() by TimeGenerated, Severity, DstHostName, DstUserName, Activity, Technique, Message\\r\\n| sort by TimeGenerated desc\\r\\n\",\"size\":1,\"showAnalytics\":true,\"title\":\"Critical Severity Events\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Total\",\"formatter\":8,\"formatOptions\":{\"palette\":\"coldHot\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2}}}]}},\"conditionalVisibility\":{\"parameterName\":\"TabName\",\"comparison\":\"isEqualTo\",\"value\":\"Detections\"},\"name\":\"query - 2 - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"CrowdStrikeFalconEventStream\\r\\n| where EventType == \\\"DetectionSummaryEvent\\\"\\r\\n| where DstHostName in ({Hostnames}) or '*' in ({Hostnames})\\r\\n| where DstUserName in ({Usernames}) or '*' in ({Usernames})\\r\\n| where Activity in ({Tactics}) or '*' in ({Tactics})\\r\\n| where SensorId in ({SensorId}) or '*' in ({SensorId})\\r\\n| where Severity in ({Severity}) or '*' in ({Severity})\\r\\n| summarize Total = count() by Hostname = DstHostName, ['IP Address'] = SrcIpAddr, bin(TimeGenerated, {TimeRange:grain})\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Total Detections by Host over Time\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"unstackedbar\"},\"conditionalVisibility\":{\"parameterName\":\"TabName\",\"comparison\":\"isEqualTo\",\"value\":\"Detections\"},\"customWidth\":\"60\",\"name\":\"query - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"CrowdStrikeFalconEventStream\\r\\n| where EventType == \\\"DetectionSummaryEvent\\\"\\r\\n| where DstHostName in ({Hostnames}) or '*' in ({Hostnames})\\r\\n| where DstUserName in ({Usernames}) or '*' in ({Usernames})\\r\\n| where Activity in ({Tactics}) or '*' in ({Tactics})\\r\\n| where SensorId in ({SensorId}) or '*' in ({SensorId})\\r\\n| where Severity in ({Severity}) or '*' in ({Severity})\\r\\n| summarize Total = count() by Hostname = DstHostName, ['IP Address'] = SrcIpAddr\\r\\n| top 10 by Total desc\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Top 10 Hosts\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Total\",\"formatter\":8,\"formatOptions\":{\"palette\":\"coldHot\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2}}}]}},\"conditionalVisibility\":{\"parameterName\":\"TabName\",\"comparison\":\"isEqualTo\",\"value\":\"Detections\"},\"customWidth\":\"40\",\"name\":\"query - 2 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"CrowdStrikeFalconEventStream\\r\\n| where EventType == \\\"AuthActivityAuditEvent\\\"\\r\\n| where Activity in ({Operation}) or '*' in ({Operation})\\r\\n| where DstUserName in ({TargetUserName}) or '*' in ({TargetUserName})\\r\\n| summarize Total = count() by Activity\\r\\n| sort by Total desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Total Events by Operation\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Total\",\"formatter\":8,\"formatOptions\":{\"palette\":\"coldHot\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"useGrouping\":true,\"maximumFractionDigits\":2}}}]}},\"conditionalVisibility\":{\"parameterName\":\"TabName\",\"comparison\":\"isEqualTo\",\"value\":\"Authentication\"},\"customWidth\":\"25\",\"name\":\"query - 2 - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"CrowdStrikeFalconEventStream\\r\\n| where EventType == \\\"AuthActivityAuditEvent\\\"\\r\\n| where Activity in ({Operation}) or '*' in ({Operation})\\r\\n| where DstUserName in ({TargetUserName}) or '*' in ({TargetUserName})\\r\\n| where Outcome == \\\"false\\\"\\r\\n| summarize Total = count() by TimeGenerated, Activity, ['Target Username'] = DstUserName, ['IP Address'] =  DstIpAddr\\r\\n| sort by TimeGenerated desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Failed Events\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Total\",\"formatter\":8,\"formatOptions\":{\"palette\":\"coldHot\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"useGrouping\":true,\"maximumFractionDigits\":2}}}]}},\"conditionalVisibility\":{\"parameterName\":\"TabName\",\"comparison\":\"isEqualTo\",\"value\":\"Authentication\"},\"customWidth\":\"100\",\"name\":\"query - 2 - Copy - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"CrowdStrikeFalconEventStream\\r\\n| where EventType == \\\"AuthActivityAuditEvent\\\"\\r\\n| where Activity in ({Operation}) or '*' in ({Operation})\\r\\n| where DstUserName in ({TargetUserName}) or '*' in ({TargetUserName})\\r\\n| where Outcome == \\\"false\\\"\\r\\n| summarize Total = count() by User = DstUserName\\r\\n| sort by Total desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Total Failed Events by User\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Total\",\"formatter\":8,\"formatOptions\":{\"palette\":\"coldHot\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"useGrouping\":true,\"maximumFractionDigits\":2}}}]}},\"conditionalVisibility\":{\"parameterName\":\"TabName\",\"comparison\":\"isEqualTo\",\"value\":\"Authentication\"},\"customWidth\":\"50\",\"name\":\"query - 2 - Copy - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"CrowdStrikeFalconEventStream\\r\\n| where EventType == \\\"AuthActivityAuditEvent\\\"\\r\\n| where Activity in ({Operation}) or '*' in ({Operation})\\r\\n| where DstUserName in ({TargetUserName}) or '*' in ({TargetUserName})\\r\\n| where Outcome == \\\"false\\\"\\r\\n| summarize Total = count() by ['IP Address'] = DstIpAddr\\r\\n| sort by Total desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Total Failed Events by IP Address\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Total\",\"formatter\":8,\"formatOptions\":{\"palette\":\"coldHot\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"useGrouping\":true,\"maximumFractionDigits\":2}}}]}},\"conditionalVisibility\":{\"parameterName\":\"TabName\",\"comparison\":\"isEqualTo\",\"value\":\"Authentication\"},\"customWidth\":\"50\",\"name\":\"query - 2 - Copy - Copy - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"CrowdStrikeFalconEventStream\\r\\n| where EventType == \\\"DetectionSummaryEvent\\\"\\r\\n| where DstHostName in ({Hostnames}) or '*' in ({Hostnames})\\r\\n| where DstUserName in ({Usernames}) or '*' in ({Usernames})\\r\\n| where Activity in ({Tactics}) or '*' in ({Tactics})\\r\\n| where SensorId in ({SensorId}) or '*' in ({SensorId})\\r\\n| where Severity in ({Severity}) or '*' in ({Severity})\\r\\n| summarize Total = count() by DstUserName, bin(TimeGenerated, {TimeRange:grain})\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Total Detections by User over Time\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"unstackedbar\"},\"conditionalVisibility\":{\"parameterName\":\"TabName\",\"comparison\":\"isEqualTo\",\"value\":\"Detections\"},\"customWidth\":\"60\",\"name\":\"query - 2 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"CrowdStrikeFalconEventStream\\r\\n| where EventType == \\\"DetectionSummaryEvent\\\"\\r\\n| where DstHostName in ({Hostnames}) or '*' in ({Hostnames})\\r\\n| where DstUserName in ({Usernames}) or '*' in ({Usernames})\\r\\n| where Activity in ({Tactics}) or '*' in ({Tactics})\\r\\n| where SensorId in ({SensorId}) or '*' in ({SensorId})\\r\\n| where Severity in ({Severity}) or '*' in ({Severity})\\r\\n| summarize Total = count() by Username = DstUserName\\r\\n| top 10 by Total desc\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Top 10 Users\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Total\",\"formatter\":8,\"formatOptions\":{\"palette\":\"coldHot\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"useGrouping\":false,\"maximumFractionDigits\":2}}}]}},\"conditionalVisibility\":{\"parameterName\":\"TabName\",\"comparison\":\"isEqualTo\",\"value\":\"Detections\"},\"customWidth\":\"40\",\"name\":\"query - 2 - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"CrowdStrikeFalconEventStream\\r\\n| where EventType == \\\"DetectionSummaryEvent\\\"\\r\\n| where DstHostName in ({Hostnames}) or '*' in ({Hostnames})\\r\\n| where DstUserName in ({Usernames}) or '*' in ({Usernames})\\r\\n| where Activity in ({Tactics}) or '*' in ({Tactics})\\r\\n| where SensorId in ({SensorId}) or '*' in ({SensorId})\\r\\n| where Severity in ({Severity}) or '*' in ({Severity})\\r\\n| summarize Total = count() by FileName, FilePath, Tactic = Activity\\r\\n| top 10 by Total desc\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"File-Based Detections\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Total\",\"formatter\":8,\"formatOptions\":{\"palette\":\"coldHot\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"useGrouping\":false,\"maximumFractionDigits\":2}}}],\"filter\":true}},\"conditionalVisibility\":{\"parameterName\":\"TabName\",\"comparison\":\"isEqualTo\",\"value\":\"Detections\"},\"customWidth\":\"60\",\"name\":\"query - 15\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"CrowdStrikeFalconEventStream\\r\\n| where EventType == \\\"DetectionSummaryEvent\\\"\\r\\n| where DstHostName in ({Hostnames}) or '*' in ({Hostnames})\\r\\n| where DstUserName in ({Usernames}) or '*' in ({Usernames})\\r\\n| where Activity in ({Tactics}) or '*' in ({Tactics})\\r\\n| where SensorId in ({SensorId}) or '*' in ({SensorId})\\r\\n| where Severity in ({Severity}) or '*' in ({Severity})\\r\\n| summarize Total = count() by FileName, bin(TimeGenerated, {TimeRange:grain})\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"File-Based Detections over Time\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"unstackedbar\",\"gridSettings\":{\"filter\":true}},\"conditionalVisibility\":{\"parameterName\":\"TabName\",\"comparison\":\"isEqualTo\",\"value\":\"Detections\"},\"customWidth\":\"40\",\"name\":\"query - 15 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"CrowdStrikeFalconEventStream\\r\\n| where EventType == \\\"DetectionSummaryEvent\\\"\\r\\n| where DstHostName in ({Hostnames}) or '*' in ({Hostnames})\\r\\n| where DstUserName in ({Usernames}) or '*' in ({Usernames})\\r\\n| where Activity in ({Tactics}) or '*' in ({Tactics})\\r\\n| where SensorId in ({SensorId}) or '*' in ({SensorId})\\r\\n| where Severity in ({Severity}) or '*' in ({Severity})\\r\\n| summarize Total = count() by Activity, bin(TimeGenerated, {TimeRange:grain})\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Total Detections by Tactics over Time\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"unstackedbar\"},\"conditionalVisibility\":{\"parameterName\":\"TabName\",\"comparison\":\"isEqualTo\",\"value\":\"Detections\"},\"customWidth\":\"60\",\"name\":\"query - 2 - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"CrowdStrikeFalconEventStream\\r\\n| where EventType == \\\"DetectionSummaryEvent\\\"\\r\\n| where DstHostName in ({Hostnames}) or '*' in ({Hostnames})\\r\\n| where DstUserName in ({Usernames}) or '*' in ({Usernames})\\r\\n| where Activity in ({Tactics}) or '*' in ({Tactics})\\r\\n| where SensorId in ({SensorId}) or '*' in ({SensorId})\\r\\n| where Severity in ({Severity}) or '*' in ({Severity})\\r\\n| summarize Total = count() by Activity\\r\\n| top 10 by Total desc\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Detections by Tactics\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Total\",\"formatter\":8,\"formatOptions\":{\"palette\":\"coldHot\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"useGrouping\":false,\"maximumFractionDigits\":2}}}]},\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"Activity\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"Total\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}}},\"conditionalVisibility\":{\"parameterName\":\"TabName\",\"comparison\":\"isEqualTo\",\"value\":\"Detections\"},\"customWidth\":\"40\",\"name\":\"query - 2 - Copy - Copy - Copy\"}],\"fallbackResourceIds\":[\"/subscriptions/1ef0bead-010f-49ae-bcf3-142bbc8572cd/resourcegroups/logmanagement-rg/providers/microsoft.operationalinsights/workspaces/cd-azuresentinelworkspace\"],\"fromTemplateId\":\"sentinel-CrowdStrikeFalconEndpointProtection\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\n",
                "version": "1.0",
                "sourceId": "[variables('workspaceResourceId')]",
                "category": "sentinel"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Workbook-', last(split(variables('workbookId1'),'/'))))]",
              "properties": {
                "description": "@{workbookKey=CrowdStrikeFalconEndpointProtectionWorkbook; logoFileName=crowdstrike.svg; description=Sets the time name for analysis; dataTypesDependencies=System.Object[]; dataConnectorsDependencies=System.Object[]; previewImagesFileNames=System.Object[]; version=1.0.0; title=CrowdStrike Falcon Endpoint Protection; templateRelativePath=CrowdStrikeFalconEndpointProtection.json; subtitle=; provider=Microsoft}.description",
                "parentId": "[variables('workbookId1')]",
                "contentId": "[variables('_workbookContentId1')]",
                "kind": "Workbook",
                "version": "[variables('workbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "CrowdStrike Falcon Endpoint Protection",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                },
                "dependencies": {
                  "operator": "AND",
                  "criteria": [
                    {
                      "contentId": "CrowdstrikeReplicatorLogs_CL",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "CrowdstrikeReplicator",
                      "kind": "DataConnector"
                    }
                  ]
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_workbookContentId1')]",
        "contentKind": "Workbook",
        "displayName": "[parameters('workbook1-name')]",
        "contentProductId": "[variables('_workbookcontentProductId1')]",
        "id": "[variables('_workbookcontentProductId1')]",
        "version": "[variables('workbookVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CriticalOrHighSeverityDetectionsByUser_AnalyticalRules Analytics Rule with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRulecontentId1')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Creates an incident when a large number of Critical/High severity CrowdStrike Falcon sensor detections is triggered by a single user",
                "displayName": "Critical or High Severity Detections by User",
                "enabled": false,
                "query": "let timeframe = 1h;\nlet threshold = 15; // update threshold value based on organization's preference\nlet NoteableEvents = CrowdStrikeFalconEventStream\n| where TimeGenerated > ago(timeframe)\n| where EventType == \"DetectionSummaryEvent\"\n| where Severity in (\"Critical\", \"High\")\n| summarize Total = count() by DstUserName\n| where Total > threshold;\nCrowdStrikeFalconEventStream\n| where TimeGenerated > ago(timeframe)\n| where EventType == \"DetectionSummaryEvent\"\n| where Severity in (\"Critical\", \"High\")\n| join kind=inner (NoteableEvents) on DstUserName\n| summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), Total = count() by DstHostName, SrcIpAddr, DstUserName, FileName, FileHash, Message\n| extend timestamp = StartTimeUtc, AccountCustomEntity = DstUserName, HostCustomEntity = DstHostName, IPCustomEntity = SrcIpAddr, FileHashCustomEntity = FileHash, FileHashAlgo = \"MD5\"\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "CommonSecurityLog"
                    ],
                    "connectorId": "CrowdStrikeFalconEndpointProtection"
                  }
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "AccountCustomEntity",
                        "identifier": "FullName"
                      }
                    ],
                    "entityType": "Account"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "HostCustomEntity",
                        "identifier": "FullName"
                      }
                    ],
                    "entityType": "Host"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "IPCustomEntity",
                        "identifier": "Address"
                      }
                    ],
                    "entityType": "IP"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "FileHashAlgo",
                        "identifier": "Algorithm"
                      },
                      {
                        "columnName": "FileHashCustomEntity",
                        "identifier": "Value"
                      }
                    ],
                    "entityType": "FileHash"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId1'),'/'))))]",
              "properties": {
                "description": "CrowdStrike Falcon Endpoint Protection Analytics Rule 1",
                "parentId": "[variables('analyticRuleId1')]",
                "contentId": "[variables('_analyticRulecontentId1')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "CrowdStrike Falcon Endpoint Protection",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_analyticRulecontentId1')]",
        "contentKind": "AnalyticsRule",
        "displayName": "Critical or High Severity Detections by User",
        "contentProductId": "[variables('_analyticRulecontentProductId1')]",
        "id": "[variables('_analyticRulecontentProductId1')]",
        "version": "[variables('analyticRuleVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CriticalSeverityDetection_AnalyticalRules Analytics Rule with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion2')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRulecontentId2')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Creates an incident when a CrowdStrike Falcon sensor detection is triggered with a Critical Severity",
                "displayName": "Critical Severity Detection",
                "enabled": false,
                "query": "let timeframe = 1h;\nCrowdStrikeFalconEventStream\n| where TimeGenerated > ago(timeframe)\n| where EventType == \"DetectionSummaryEvent\"\n| where Severity == \"Critical\"\n| summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), Total = count() by DstHostName, SrcIpAddr, DstUserName, Activity, Technique, FileName, FilePath, FileHash, Message\n| extend timestamp = StartTimeUtc, AccountCustomEntity = DstUserName, HostCustomEntity = DstHostName, IPCustomEntity = SrcIpAddr, FileHashCustomEntity = FileHash, FileHashAlgo = \"MD5\"\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "CommonSecurityLog"
                    ],
                    "connectorId": "CrowdStrikeFalconEndpointProtection"
                  }
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "AccountCustomEntity",
                        "identifier": "FullName"
                      }
                    ],
                    "entityType": "Account"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "HostCustomEntity",
                        "identifier": "FullName"
                      }
                    ],
                    "entityType": "Host"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "IPCustomEntity",
                        "identifier": "Address"
                      }
                    ],
                    "entityType": "IP"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "FileHashAlgo",
                        "identifier": "Algorithm"
                      },
                      {
                        "columnName": "FileHashCustomEntity",
                        "identifier": "Value"
                      }
                    ],
                    "entityType": "FileHash"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId2'),'/'))))]",
              "properties": {
                "description": "CrowdStrike Falcon Endpoint Protection Analytics Rule 2",
                "parentId": "[variables('analyticRuleId2')]",
                "contentId": "[variables('_analyticRulecontentId2')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion2')]",
                "source": {
                  "kind": "Solution",
                  "name": "CrowdStrike Falcon Endpoint Protection",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_analyticRulecontentId2')]",
        "contentKind": "AnalyticsRule",
        "displayName": "Critical Severity Detection",
        "contentProductId": "[variables('_analyticRulecontentProductId2')]",
        "id": "[variables('_analyticRulecontentProductId2')]",
        "version": "[variables('analyticRuleVersion2')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentPackages",
      "apiVersion": "2023-04-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "3.0.0",
        "kind": "Solution",
        "contentSchemaVersion": "3.0.0",
        "displayName": "CrowdStrike Falcon Endpoint Protection",
        "publisherDisplayName": "Microsoft Sentinel, Microsoft Corporation",
        "descriptionHtml": "<p><strong>Note:</strong> <em>There may be <a href=\"https://aka.ms/sentinelsolutionsknownissues\">known issues</a> pertaining to this Solution, please refer to them before installing.</em></p>\n<p>The <a href=\"https://www.crowdstrike.com/products/\">CrowdStrike Falcon Endpoint Protection</a> solution allows you to easily connect your CrowdStrike Falcon Event Stream with Microsoft Sentinel, to create custom dashboards, alerts, and improve investigation. This gives you more insight into your organization's endpoints and improves your security operation capabilities.</p>\n<p><strong>Underlying Microsoft Technologies used:</strong></p>\n<p>This solution takes a dependency on the following technologies, and some of these dependencies either may be in <a href=\"https://azure.microsoft.com/support/legal/preview-supplemental-terms/\">Preview</a> state or might result in additional ingestion or operational costs:</p>\n<ol>\n<li><a href=\"https://docs.microsoft.com/azure/sentinel/connect-syslog\">Agent-based log collection (Syslog)</a></li>\n<li><a href=\"https://learn.microsoft.com/azure/azure-monitor/logs/custom-logs-overview\">Azure Monitor Logs: DCR-based Custom Logs</a></li>\n<li><a href=\"https://learn.microsoft.com/azure/sentinel/create-codeless-connector?tabs=deploy-via-arm-template%2Cconnect-via-the-azure-portal\">Codeless Connector Platform (CCP)</a></li>\n</ol>\n<p><strong>Data Connectors:</strong> 3, <strong>Workbooks:</strong> 1, <strong>Analytic Rules:</strong> 2, <strong>Playbooks:</strong> 3</p>\n<p><a href=\"https://aka.ms/azuresentinel\">Learn more about Microsoft Sentinel</a> | <a href=\"https://aka.ms/azuresentinelsolutionsdoc\">Learn more about Solutions</a></p>\n",
        "contentKind": "Solution",
        "contentProductId": "[variables('_solutioncontentProductId')]",
        "id": "[variables('_solutioncontentProductId')]",
        "icon": "<img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/CrowdStrike%20Falcon%20Endpoint%20Protection/Data%20Connectors/Logo/crowdstrike.svg\" width=\"75px\" height=\"75px\">",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "CrowdStrike Falcon Endpoint Protection",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentId1')]",
              "version": "[variables('dataConnectorVersion1')]"
            },
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentId2')]",
              "version": "[variables('dataConnectorVersion2')]"
            },
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentId3')]",
              "version": "[variables('dataConnectorVersion3')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_CrowdStrike_Base')]",
              "version": "[variables('playbookVersion1')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_CrowdStrike_ContainHost')]",
              "version": "[variables('playbookVersion2')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_CrowdStrike_Enrichment_GetDeviceInformation')]",
              "version": "[variables('playbookVersion3')]"
            },
            {
              "kind": "Workbook",
              "contentId": "[variables('_workbookContentId1')]",
              "version": "[variables('workbookVersion1')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId1')]",
              "version": "[variables('analyticRuleVersion1')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId2')]",
              "version": "[variables('analyticRuleVersion2')]"
            }
          ]
        },
        "firstPublishDate": "2022-06-01",
        "providers": [
          "Crowdstrike"
        ],
        "categories": {
          "domains": [
            "Security - Threat Protection",
            "Security - Automation (SOAR)"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
