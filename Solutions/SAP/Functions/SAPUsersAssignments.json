{
    "properties": {
        "category": "SAPFunctions",
        "displayName": "SAPUsersAssignments",
        "query": "let UserMDTimeAgo = totimespan(toscalar(SAPGetParameters('UserMDLookBack')| project-keep ValueLow));\n// only show users which are not locked for over 180 days (for performance considerations)\nlet agoLocked = format_datetime(ago(180d), 'yyyyMMdd');\n// query\n// get logon Data (Kernel-Side Use)\nSAP_USR02 | where TimeGenerated > ago(UserMDTimeAgo) \n| extend Relevant= strcmp( GLTGB, agoLocked) > 0 or GLTGB == \"00000000\"\n| where Relevant\n| summarize any(ERDAT), arg_max(TimeGenerated, CLASS, UFLAG, TZONE, USTYP, TRDAT, LTIME, ERDAT) by BNAME, MANDT, SystemID\n// get profiles\n| join kind=leftouter (SAP_UST04| where TimeGenerated > ago(UserMDTimeAgo) | summarize arg_max(TimeGenerated, *), profiles = make_set(PROFILE, 50) by BNAME, MANDT, SystemID)\non BNAME, MANDT, SystemID\n\n// get Assignment of roles to users\n| join kind=leftouter hint.strategy=shuffle (SAP_AGR_USERS | where TimeGenerated > ago(UserMDTimeAgo) | summarize arg_max(TimeGenerated, UNAME, AGR_NAME, MANDT, SystemID, COL_FLAG) by UNAME, AGR_NAME, MANDT, SystemID, COL_FLAG\n// get the child roles as well\n| join kind= leftouter   (SAP_AGR_AGRS | where TimeGenerated > ago(UserMDTimeAgo) | summarize arg_max(TimeGenerated, MANDT, AGR_NAME, CHILD_AGR, SystemID) by MANDT, AGR_NAME, CHILD_AGR, SystemID)\non MANDT, SystemID, AGR_NAME\n| summarize\nDirectRoles = make_set_if(AGR_NAME, COL_FLAG != 'X',  50),// COL_FLAG==X -> indirect\nChildRoles = make_set_if(CHILD_AGR, isnotempty(CHILD_AGR) ,50)\nby UNAME, MANDT, SystemID\n)\non $left.BNAME == $right.UNAME\n, $left.MANDT == $right.MANDT\n, $left.SystemID == $right.SystemID\n\n// get User Name/Address Key Assignment\n| join kind=leftouter hint.strategy=shuffle ( (SAP_USR21 | where TimeGenerated > ago(UserMDTimeAgo) \n| summarize arg_max(TimeGenerated, BNAME, ADDRNUMBER, PERSNUMBER) by BNAME, MANDT, SystemID )\n\n// get E-Mail Addresses \n| join kind= inner hint.strategy=shuffle (SAP_ADR6| where TimeGenerated > ago(UserMDTimeAgo) | summarize arg_max(TimeGenerated, ADDRNUMBER, SMTP_ADDR) by CLIENT, ADDRNUMBER, PERSNUMBER, DATE_FROM, CONSNUMBER, SystemID) \non $left.ADDRNUMBER == $right.ADDRNUMBER\n, $left.MANDT == $right.CLIENT\n, $left.SystemID == $right.SystemID\n, $left.PERSNUMBER == $right.PERSNUMBER\n\n| summarize\narg_max(TimeGenerated1, SMTP_ADDR, MANDT, SystemID),\narg_max(TimeGenerated, BNAME, MANDT, SystemID)\nby BNAME, MANDT, SystemID\n)\non $left.BNAME == $right.BNAME\n, $left.MANDT == $right.MANDT\n, $left.SystemID == $right.SystemID\n| extend LastSeen = todatetime(strcat(TRDAT, LTIME))\n| extend CreatedOn = todatetime(ERDAT)\n| project User = BNAME,\nEmail = SMTP_ADDR,\nUserType = USTYP,\nTimezone = TZONE,\nLockedStatus = UFLAG,\nLastSeen,\nUserGroupAuth = CLASS,\nProfiles = profiles,\nDirectRoles,\nChildRoles,\nCreatedOn,\nClient = MANDT,\nSystemID = SystemID\n\n",
        "functionAlias": "SAPUsersAssignments",
        "version": 2,
        "etag": "*"
    },
    "name": "SAPUsersAssignments",
    "type": "savedSearches",
    "dependsOn": [
        "[variables('workspace-dependency')]"
    ],
    "apiVersion": "2022-10-01"
}