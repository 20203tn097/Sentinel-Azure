{
    "properties": {
        "category": "SAPFunctions",
        "displayName": "SAPUsersAuthorizations",
        "query": "let UserMDTimeAgo = totimespan(toscalar(SAPGetParameters('UserMDLookBack')| project-keep ValueLow));\n\n// AGR_USERS- Assignment of roles to users\nlet agr_users_empty_view = datatable (\n    TimeGenerated: datetime,\n    TO_DAT_s: string,\n    AGR_NAME_s: string,\n    UNAME_s: string,\n    MANDT_s: string,\n    SystemID_s: string\n) [\n    datetime(1910-06-11), '', '', '', '', ''\n];\nlet AGR_USERS = materialize(agr_users_empty_view\n    | union isfuzzy=true ABAP_AGR_USERS_CL\n    | where TimeGenerated > ago(UserMDTimeAgo)\n    | where todatetime(TO_DAT_s) > ago(1d)\n    | project TimeGenerated \n        , TO_DAT_s\n        , AGR_NAME_s\n        , UNAME_s\n        , MANDT_s,\n        SystemID_s\n    | summarize arg_max(TimeGenerated, *)\n        by\n        TO_DAT_s\n        , AGR_NAME_s\n        , UNAME_s\n        , MANDT_s,\n        SystemID_s\n    );\n// AGR_AGRS- Roles in Composite Roles\nlet agr_agrs_empty_view = datatable (\n    TimeGenerated: datetime,\n    AGR_NAME_s: string,\n    CHILD_AGR_s: string,\n    MANDT_s: string,\n    SystemID_s: string\n) [\n    datetime(1910-06-11), '', '', '', ''\n];\nlet AGR_AGRS = (agr_agrs_empty_view\n    | union isfuzzy=true ABAP_AGR_AGRS_CL\n    | where TimeGenerated > ago(UserMDTimeAgo)\n    | project TimeGenerated \n    ,AGR_NAME_s\n    ,CHILD_AGR_s\n    ,MANDT_s\n    ,SystemID_s\n    | summarize arg_max(TimeGenerated, *)\n        by\n          AGR_NAME_s\n        , CHILD_AGR_s\n        , MANDT_s,\n        SystemID_s\n    );\n\n// AGR1251 - Authorization data for the activity group data\nlet agr_1251_empty_view = datatable (\n    TimeGenerated: datetime,\n    AGR_NAME_s: string,\n    OBJECT_s: string,\n    AUTH_s: string,\n    VARIANT_s: string,\n    FIELD_s: string,\n    LOW_s: string,\n    HIGH_s: string,\n    UNAME_s: string,\n    MANDT_s: string,\n    SystemID_s: string\n) [\n    datetime(1910-06-11), '', '', '', '', '', '', '', '', '', ''\n];\n\nlet AGR_1251 =  (agr_1251_empty_view\n    | union isfuzzy=true ABAP_AGR_1251_CL\n    | where TimeGenerated > ago(UserMDTimeAgo)\n    | project-keep \n        AGR_NAME_s\n        , OBJECT_s\n        , AUTH_s\n        , VARIANT_s\n        , FIELD_s\n        , LOW_s\n        , HIGH_s\n        , MANDT_s\n        , SystemID_s\n    | extend PackedAuth = pack('OBJECT', OBJECT_s, 'AUTH', AUTH_s, 'VARIANT', VARIANT_s, 'FIELD', FIELD_s, 'LOW', LOW_s, 'HIGH', HIGH_s)\n    | summarize \n    Authorizations = make_set(PackedAuth)\n    by AGR_NAME_s, MANDT_s, SystemID_s\n    );\n\n// query\n\nAGR_USERS \n| summarize\narg_max(TimeGenerated, UNAME_s, AGR_NAME_s, MANDT_s, SystemID_s)\nby UNAME_s, AGR_NAME_s, MANDT_s, SystemID_s\n// get the child roles as well\n| join kind= leftouter   (AGR_AGRS\n| where TimeGenerated > ago(UserMDTimeAgo))\non MANDT_s, SystemID_s, AGR_NAME_s\n// Role is the lowest level\n| extend Role = iff(isempty(CHILD_AGR_s), AGR_NAME_s, CHILD_AGR_s)\n| summarize\nby UNAME_s, MANDT_s, SystemID_s, Role\n\n// get Authorization data per role\n| join kind=leftouter hint.strategy=shuffle (AGR_1251) \non $left.Role == $right.AGR_NAME_s\n, $left.MANDT_s == $right.MANDT_s\n, $left.SystemID_s == $right.SystemID_s\n\n| summarize\n// arg_max(TimeGenerated, UNAME_s),\nroles = make_set(Role, 50),\nAuthorizations = make_set(Authorizations, 100)\nby UNAME_s, MANDT_s, SystemID_s\n\n| project User = UNAME_s,\nRoles = roles,\nAuthorizationDetails = Authorizations,\nClient = MANDT_s,\nSystemID = SystemID_s\n",
        "functionAlias": "SAPUsersAuthorizations",
        "version": 2,
        "etag": "*"
    },
    "name": "SAPUsersAuthorizations",
    "type": "savedSearches",
    "apiVersion": "2022-10-01"
}