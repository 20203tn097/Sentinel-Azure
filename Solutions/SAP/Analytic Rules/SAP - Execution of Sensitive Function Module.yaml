id: d940bee2-46ff-4bb5-869a-1a54a967977d
name: SAP - Execution of Sensitive Function Module
description: |-
  'Identifies execution of a sensitive ABAP Function Module.

  Source Action: Execute a sensitive function module directly using SE37.

  **Recommended for Production only**

  Sensitive functions should be maintained in "SAP - Sensitive Function Modules" Watchlist.
  Table logging changes should be activated for table "EUFUNC" in backend. (SE13)

  *Data Sources: SAPcon -  Table Data Log*
  '
severity: High
requiredDataConnectors:
- connectorId: SAP
  dataTypes:
  - SAPUsersGetVIP
  - SAPTableDataLog
  - SAPAuditLog
queryFrequency: 2h
queryPeriod: 2h
triggerOperator: gt
triggerThreshold: 0
tactics:
- Discovery
- CommandAndControl
relevantTechniques: ''
query: |-
  // SAP - Execution of Sensitive Function Module
  // Define variables
  let RelTable = "EUFUNC"; // Relevant table
  let AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user
  let SenseModules =  _GetWatchlist('SAP - Sensitive Function Modules');
  let fixedModules = datatable(FunctionModule:string)['RSAU_CLEAR_AUDIT_LOG','BAPI_USER_CREATE', 'RFC_GET_TABLE_ENTRIES'];
  let UnitedModules =
  toscalar(union fixedModules, SenseModules
  | summarize FunctionModules =  make_set(FunctionModule));
  // here you can exclude system users which are OK to execute a Sensitive function module
  // by adding those users in the SAP_User_Config watchlist with a tag of 'ExecuteSensitiveFMOK'
  // can also specify SAP Roles or Profiles to exclude
  let excludeUsersTags= dynamic(['ExecuteSensitiveFMOK','SAP_ALL']);
  let excludedUsers= SAPUsersGetVIP(SearchForTags= excludeUsersTags)| summarize by User2Exclude=SAPUser;
  // Query logic
  let LastLogin = SAPAuditLog
  | where MessageID in (AuditLogIn)
  | summarize TimeGenerated = arg_max(TimeGenerated, *) by SystemID, ClientID, User; // Get last connection date for user
  SAPTableDataLog
  | where TableName == RelTable
  | extend Module = extract(@"\s+(.{1,}\b)\s+", 1, LogKey, typeof(string)) // Extract Function Module
  | extend FunctionGroup = extract(@"^FL([^\s]*)\s", 1, LogKey, typeof(string)) // Extract Function Group
  | extend ExecutionVariant = extract(@"\b(\w+)$", 1, LogKey, typeof(string)) // Extract Execution Varient
  | where Module in (UnitedModules) // Module is sensitive
  | lookup kind=inner LastLogin on $left.UserName == $right.User
  | join kind=leftantisemi excludedUsers on $left.UserName == $right.User2Exclude
  | project TimeGenerated, Instance ,SystemID, UserName, ClientID, Email, TerminalIPv6, Host, Module, FunctionGroup, ExecutionVariant
  | extend AlertRuleUniqueName = 'executionofsensitivefunctionmodule'
alertDetailsOverride: null
customDetails:
  SAP_User: UserName
  AlertRuleUniqueName: AlertRuleUniqueName
entityMappings:
- entityType: Account
  fieldMappings:
  - identifier: FullName
    columnName: Email
- entityType: IP
  fieldMappings:
  - identifier: Address
    columnName: TerminalIPv6
- entityType: Host
  fieldMappings:
  - identifier: FullName
    columnName: Host
- entityType: CloudApplication
  fieldMappings:
  - identifier: Name
    columnName: SystemID
  - identifier: AppId
    columnName: ClientID
  - identifier: InstanceName
    columnName: Instance
eventGroupingSettings:
  aggregationKind: AlertPerResult
kind: Scheduled
version: 2.0.54
