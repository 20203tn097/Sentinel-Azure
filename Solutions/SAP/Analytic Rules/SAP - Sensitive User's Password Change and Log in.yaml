alertDetailsOverride: null
customDetails:
    SAP_User: UserAction
description: "Identifies password changes for privileged users.\n\nSource Action:\
    \ Change Password for a user and login to the system.\n\nPriveleged users should\
    \ be maintained in \"SAP - Privileged Users\" Watchlist\n\nThis rule requires\
    \ a fresh full reload of SAP user master data to be performed daily. \n*Data Sources:\
    \ SAPcon -  Audit Log*\n*Data Sources: SAPcon -  User MD*"
entityMappings:
-   entityType: Account
    fieldMappings:
    -   columnName: Email
        identifier: FullName
-   entityType: Host
    fieldMappings:
    -   columnName: Host
        identifier: FullName
-   entityType: IP
    fieldMappings:
    -   columnName: TerminalIPv6
        identifier: Address
-   entityType: CloudApplication
    fieldMappings:
    -   columnName: SystemID
        identifier: Name
    -   columnName: ClientID
        identifier: AppId
    -   columnName: Instance
        identifier: InstanceName
eventGroupingSettings:
    aggregationKind: SingleAlert
id: 4cc23b15-a048-45f1-b1e8-2dfc40013d84
kind: Scheduled
name: SAP - Sensitive User's Password Change and Log in
query: "// SAP - High - Sensitive Users Password Change and Login\r\n// Define variables\r\
    \n// time span for audit events\r\nlet AuditTimeAgo= 90m;\r\nlet ChangeAndLoginThreshold\
    \ = 30; // Difference by minutes between Change in user to connect\r\nlet LoginAndRestThreshold\
    \ = 30; // Difference by minutes between Connect and password reset\r\nlet AuditUserChange\
    \ = dynamic(['AUD']); // Message of change in user\r\nlet AuditLogIn = dynamic(['AU1',\
    \ 'AU5']); // Messages of connect with user\r\nlet AuditUserPassReset = dynamic(['BU2']);\
    \ // Message of user password change\r\n// Query Logic\r\nlet UserChange = //\
    \ Get users change activity\r\nSAPAuditLog\r\n| where MessageID in (AuditUserChange)\r\
    \n| where TimeGenerated > ago(AuditTimeAgo)\r\n|join (SAPUsersGetPrivileged())\
    \ // The user with the changed password is privileged user\r\non $left.ClientID\
    \ == $right.Client\r\n, $left.SystemID == $right.SystemID\r\n, $left.Variable1\
    \ == $right.User \r\n| project-rename UserChangeTimeGenerated = TimeGenerated,\
    \ UserPassChanged = Variable1;\r\nlet UserLogIn = // Get users connections\r\n\
    SAPAuditLog\r\n| where MessageID in (AuditLogIn)\r\n| where TimeGenerated > ago(AuditTimeAgo)\r\
    \n| project-rename UserLogInTimeGenerated = TimeGenerated;\r\nSAPAuditLog // Get\
    \ users password reset\r\n| where MessageID in (AuditUserPassReset)\r\n| where\
    \ TimeGenerated > ago(AuditTimeAgo)\r\n|join (SAPUsersGetPrivileged()) // The\
    \ user with the changed password is privileged user\r\non $left.User == $right.Client\r\
    \n, $left.SystemID == $right.SystemID\r\n, $left.Variable1 == $right.User \r\n\
    | lookup kind=inner UserLogIn on TerminalIPv6, User // Lookup of user reset to\
    \ user login\r\n| lookup kind=inner UserChange on TerminalIPv6, $left.User ==\
    \ $right.UserPassChanged // Lookup of user reset to user change\r\n| where abs(datetime_diff('Minute',\
    \ UserChangeTimeGenerated, UserLogInTimeGenerated)) <= ChangeAndLoginThreshold\
    \ // Connect after a change in user\r\n| where abs(datetime_diff('Minute', TimeGenerated,\
    \ UserLogInTimeGenerated)) <= LoginAndRestThreshold // Change password after connection\r\
    \n| summarize by TimeGenerated, Instance ,SystemID, ClientID, UserAction = User1,\
    \ PrivUserPassChanged = User, Email, TerminalIPv6, Host\r\n"
queryFrequency: 1h
queryPeriod: 2d
relevantTechniques: ''
requiredDataConnectors:
-   connectorId: SAP
    dataTypes:
    - SAPAuditLog
    - SAPUsersGetPrivileged
severity: High
tactics:
- Impact
- CommandAndControl
- PrivilegeEscalation
triggerOperator: gt
triggerThreshold: 0
version: 2.0.15
