alertDetailsOverride:
    alertDescriptionFormat: 'Identifies execution of an obsolete/insecure ABAP program.

        Source Action: Execute a program directly using SE38/SA38/SE80 or by using
        a background job.

        **Recommended for Production only**

        Obsolete programs should be maintained in "SAP - Obsolete Programs" Watchlist

        *Data Sources: SAPcon -  Audit Log*

        {{PackedDetails}}'
    alertDisplayNameFormat: '{{AlertDescription}}'
    alertSeverityColumnName: Dummy
    alertTacticsColumnName: Dummy
customDetails:
    SAP_User: User
description: 'Identifies execution of an obsolete insecure ABAP program.

    Source Action: Execute a program directly using SE38/SA38/SE80 or by using a background
    job.

    **Recommended for Production only**

    Obsolete programs should be maintained in "SAP - Obsolete Programs" Watchlist

    *Data Sources: SAPcon -  Audit Log*'
entityMappings:
-   entityType: Account
    fieldMappings:
    -   columnName: Email
        identifier: FullName
-   entityType: IP
    fieldMappings:
    -   columnName: TerminalIPv6
        identifier: Address
-   entityType: Host
    fieldMappings:
    -   columnName: Host
        identifier: FullName
-   entityType: CloudApplication
    fieldMappings:
    -   columnName: SystemID
        identifier: Name
    -   columnName: ClientID
        identifier: AppId
    -   columnName: Instance
        identifier: InstanceName
-   entityType: Process
    fieldMappings:
    -   columnName: TransactionCode
        identifier: ProcessId
    -   columnName: ABAPProgramName
        identifier: CommandLine
eventGroupingSettings:
    aggregationKind: AlertPerResult
id: 6a6ff9e7-b167-49a1-bff8-00dadf62b34c
kind: Scheduled
name: SAP - Execution of an Obsolete or an Insecure Program
query: "// Execution of Obsolete/Insecure Program\r\n// Define Variables\r\nlet AuditClasses\
    \ = dynamic(['AUW']); // Audit Log Classes - Report Started\r\nlet ObsoletePrograms\
    \ = _GetWatchlist(\"SAP - Obsolete Programs\");\r\n// Maintain if watchlist is\
    \ not available\r\nlet fixedObPrograms = datatable(ABAPProgram:string)['RSAU_READ_LOG'];\r\
    \nlet UnitedPrograms =\r\ntoscalar(union fixedObPrograms, ObsoletePrograms\r\n\
    | summarize Programs = make_set(ABAPProgram));\r\nlet SelectedSystemRoles =  dynamic([\"\
    Production\"]); //can also do// let SelectedSystemRoles =  dynamic([\"Production\"\
    , \"UAT\"]); dynamic([\"All System Roles\"])\r\nlet SelectedSystems = SAPSystems(SelectedSystemRoles=SelectedSystemRoles)\
    \ | project SystemID= SearchKey;\r\n// here you can exclude system users which\
    \ are OK to run obsolete/ sensitive programs\r\n// by adding those users in the\
    \ SAP_User_Config watchlist with a tag of 'RunObsoleteFMOK'\r\nlet excludeUsersTags=\
    \ dynamic(['RunObsoleteProgOK']);\r\nlet excludedUsers= _GetWatchlist('SAP_User_Config')|\
    \ where Tags has_any (excludeUsersTags)| summarize by User2Exclude=SAPUser;\r\n\
    // Query logic\r\nSAPAuditLog \r\n| where MessageID in (AuditClasses)\r\n| where\
    \ ABAPProgramName in (UnitedPrograms) // The program is obsolete\r\n| join kind=\
    \ inner  SelectedSystems on SystemID\r\n| join kind=leftantisemi excludedUsers\
    \ on $left.User == $right.User2Exclude\r\n| project TimeGenerated, Instance,SystemID,\
    \ ClientID, User, ABAPProgramName, MessageText, TransactionCode, MessageID\r\n\
    , Email= iff(isempty(Email),User, Email), TerminalIPv6, Host= iff(isempty(Host),\
    \ TerminalIPv6, Host)\r\n| extend AlertDescription= strcat('Obsolete/ Insecure\
    \ Program ' , ABAPProgramName, ' was executed by ', User), Dummy=' '\r\n| extend\
    \ PackedDetails= pack_all()"
queryFrequency: 2h
queryPeriod: 2h
relevantTechniques: ''
requiredDataConnectors:
-   connectorId: SAP
    dataTypes:
    - SAPSystems
    - SAPAuditLog
severity: Medium
tactics:
- Discovery
- CommandAndControl
triggerOperator: gt
triggerThreshold: 0
version: 2.0.15
