id: 4329c5d1-7062-4ec4-8ab8-29846e0e0d9a
name: SAP - (Preview) Data exported from a production system using a transport
description: |-
  'Transports are like pull requests and are normally created in a developement system. This alert rule is triggered when a transport is released from a production system, with data coming from a sensitive table.
  '
severity: Medium
requiredDataConnectors:
- connectorId: SAP
  dataTypes:
  - SAPUsersGetVIP
  - SAPAuditLog
  - SAPCRLog
  - SAPSystems
queryFrequency: 4h
queryPeriod: 5h
triggerOperator: gt
triggerThreshold: 0
tactics:
- Exfiltration
relevantTechniques: ''
query: |-
  // sensitive data was released using transport system
  // here you can exclude system users which are OK to export sensitive data using transport system
  // by adding those users in the SAP_User_Config watchlist with a tag of 'ExportSensitiveDataOK'
  // can also specify SAP Roles or SAP Profiles to exclude
  let excludeUsersTags= dynamic(['ExportSensitiveDataOK']);
  let excludedUsers= SAPUsersGetVIP(SearchForTags= excludeUsersTags)| summarize by User2Exclude=SAPUser;
  let SelectedSystemRoles =  dynamic(["Production"]); //can also do// let SelectedSystemRoles =  dynamic(["Production", "UAT"]); dynamic(["All System Roles"])
  let SelectedSystems = SAPSystems(SelectedSystemRoles= SelectedSystemRoles) | project SystemID= SearchKey;
  let SensitiveTables = _GetWatchlist('SAP - Sensitive Tables') | summarize by TableName= Table | extend IsSensitive= true;
  let TransportReleaseTCODEs= dynamic(["SE10", "SE01"]);
  let TransportReleasePrograms= dynamic(["RDDM0001"]);
  let SensitiveDataExportViaCR= SAPCRLog
  | where SystemID in (SelectedSystems)
  | where isnotempty( SystemID)
  | where isnotempty(TableName)
  | lookup SensitiveTables on TableName
  | where Status == "R" // released
  | where Request startswith_cs SystemID
  | project-rename ExportDT= UpdatedOn
  | summarize Requests= make_set(Request,10), ExportDT= min(ExportDT) by Owner, RequestDescription= Description, TableName, SystemID, Instance, Host, IsSensitive;
  let TransportReleaseTransactions= SAPAuditLog
  | where  MessageID == "AU3"
  | where SystemID in (SelectedSystems)
  | where TransactionCode in(TransportReleaseTCODEs) or ABAPProgramName in (TransportReleasePrograms)
  | join kind=leftantisemi excludedUsers on $left.User == $right.User2Exclude
  | project-rename TransactionStartDT= UpdatedOn_t
  | summarize TransactionCodes= make_set(TransactionCode, 3), ABAPProgramNames= make_set(ABAPProgramName, 3), Email= any(Email), TransactionStartDT= min(TransactionStartDT) by User, TerminalIPv6, Host, SystemID, ClientID, Instance;
  TransportReleaseTransactions
  | join kind= inner SensitiveDataExportViaCR on SystemID
  | extend TimePassed= datetime_diff( "minute", ExportDT, TransactionStartDT)
  | where TimePassed between (0 .. 60)
  | extend AlertDescription= strcat("User has exported ",iff(IsSensitive, "sensitive", "tabular") ," data from a productive system using a transport")
  | extend ExtendedDetails= pack("TransactionStartDT" , TransactionStartDT, "Owner", Owner, "RequestDescription", RequestDescription, 'TransactionCodes', TransactionCodes, 'ABAPProgramNames', ABAPProgramNames)
  | extend Severity= iff(IsSensitive, "High", "Medium"), Dummy= ''
  | project ExportedOn= ExportDT, User, TerminalIPv6, Host, SystemID, TransactionCode= TransactionCodes[0], ABAPProgramName= ABAPProgramNames[0], Email, ExtendedDetails, Requests, AlertDescription, TableName, IsSensitive, Severity, ClientID, Instance, Dummy
  | extend AlertRuleUniqueName = 'dataexportedfromaproductionsystemusingatransport'
alertDetailsOverride:
  alertDisplayNameFormat: '{{AlertDescription}}'
  alertDescriptionFormat: '{{AlertDescription}}<br/>

    '
  alertTacticsColumnName: Dummy
  alertSeverityColumnName: Severity
customDetails:
  SAP_User: User
  ChangeRequests: Requests
  IsSensitive: IsSensitive
  ExtendedDetails: ExtendedDetails
  AlertRuleUniqueName: AlertRuleUniqueName
entityMappings:
- entityType: Account
  fieldMappings:
  - identifier: FullName
    columnName: Email
- entityType: CloudApplication
  fieldMappings:
  - identifier: Name
    columnName: SystemID
  - identifier: AppId
    columnName: ClientID
  - identifier: InstanceName
    columnName: Instance
- entityType: IP
  fieldMappings:
  - identifier: Address
    columnName: TerminalIPv6
- entityType: Host
  fieldMappings:
  - identifier: HostName
    columnName: Host
eventGroupingSettings:
  aggregationKind: AlertPerResult
kind: Scheduled
version: 2.0.33
