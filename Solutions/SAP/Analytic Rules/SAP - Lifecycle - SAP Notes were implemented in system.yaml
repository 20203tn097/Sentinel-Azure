alertDetailsOverride: null
customDetails:
    SAP_User: Owner
description: |
    Identifies SAP Notes implementation in the system.

    Source Action: Implement SAP Note using SNOTE/TCI.

    *Data Sources: SAPcon -  Change Requests*
entityMappings:
-   entityType: Account
    fieldMappings:
    -   columnName: Email
        identifier: FullName
-   entityType: IP
    fieldMappings:
    -   columnName: TerminalIPv6
        identifier: Address
-   entityType: Host
    fieldMappings:
    -   columnName: Host
        identifier: FullName
-   entityType: CloudApplication
    fieldMappings:
    -   columnName: SystemID
        identifier: Name
    -   columnName: ClientID
        identifier: AppId
    -   columnName: Instance
        identifier: InstanceName
eventGroupingSettings:
    aggregationKind: SingleAlert
id: 7f364fac-c6a9-4935-a73b-ba215acace31
kind: Scheduled
name: SAP - Lifecycle - SAP Notes were implemented in system
query: |
    // Define variables
    let VarNote = "NOTE";
    let AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user
    // Query logic
    let LastLogin =
    SAPAuditLog
    | where MessageID in (AuditLogIn)
    | summarize TimeGenerated = arg_max(TimeGenerated, *) by SystemID, ClientID, User; // Get last connection date for user
    SAPCRLog
    | where ObjectType == VarNote // Type is NOTE
    | lookup kind=inner LastLogin on $left.Owner == $right.User // Get last login details
    | summarize by TimeGenerated, Instance, SystemID, SystemNumber, ClientID, Owner, Request, Description, ObjectName, Category, Status, Email, TerminalIPv6, Host
queryFrequency: 1h
queryPeriod: 1h
relevantTechniques: ''
requiredDataConnectors:
-   connectorId: SAP
    dataTypes:
    - SAPAuditLog
    - SAPCRLog
severity: Informational
tactics: []
triggerOperator: gt
triggerThreshold: 0
version: 2.0.19
