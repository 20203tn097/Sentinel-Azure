alertDetailsOverride:
    alertDescriptionFormat: '#### Detailed information

        {{DetailedDescription}}

        #### Additional information

        {{BagOfDetails}}<br/>

        Alerts of this type can be configured using watch list SAPAuditLogConfigurator
        . <br/>

        See  [Sentinel4SAP Dcoumentation](https://aka.ms/sapsecdocs) for further information'
    alertDisplayNameFormat: SAP -  {{Severity}} - Anomaly Detected- {{MessageText}}
        in system {{SystemID}}
    alertSeverityColumnName: Severity
    alertTacticsColumnName: Tactics
customDetails:
    BagOfDetails: BagOfDetails
    DestinationEmail: DestinationEmail
    IsProductionEnv: IsProd
    SAPAuditLogMessageID: MessageID
    SAPProcessType: SAPProcesType
    SAPUser: User
    Source: Source
    SystemRole: SystemRole
    SystemUsage: SystemUsage
    TeamsChannelID: TeamsChannelID
description: 'SAP Audit log events with message IDs preconfigured in Watchlist SAP_Dynamic_Audit_Log_Monitor_Configuration
    and with RuleType  = "AnomaliesOnly" will be shown here.

    <br/>

    See  [Sentinel4SAP Dcoumentation](https://aka.ms/sapsecdocs) for further information'
entityMappings:
-   entityType: Account
    fieldMappings:
    -   columnName: Email
        identifier: FullName
-   entityType: CloudApplication
    fieldMappings:
    -   columnName: SystemID
        identifier: Name
    -   columnName: ClientID
        identifier: AppId
    -   columnName: Instance
        identifier: InstanceName
-   entityType: IP
    fieldMappings:
    -   columnName: TerminalIPv6
        identifier: Address
-   entityType: Process
    fieldMappings:
    -   columnName: TransactionCode
        identifier: ProcessId
    -   columnName: ABAPProgramName
        identifier: CommandLine
eventGroupingSettings:
    aggregationKind: AlertPerResult
id: 49fd3399-67c5-47bf-bb61-8b6efa27a5fe
kind: Scheduled
name: SAP - (Experimental) Dynamic Anomaly-based Audit Log Monitor Alerts
query: "let TopN = 20; // A single analytics rule can generate up to 20 alerts. let's\
    \ make those count \r\nlet SelectedSystems =  dynamic([\"All Systems\"]);//can\
    \ also do// let SelectedSystems =  dynamic([\"S4P\", \"B4X\", \"ODT\"]);\r\nlet\
    \ SelectedSystemRoles =  dynamic([\"All System Roles\"]); //can also do// let\
    \ SelectedSystemRoles =  dynamic([\"Production\", \"UAT\"]);\r\nlet SelectedSeverities=\
    \  dynamic([\"High\", \"Medium\"]);//can also do//let SelectedSeverities =  dynamic([\"\
    All Severities\"])\r\n// get special users for exclusion and in-focus analysis\r\
    \nlet SAPUsersGottenVIP = (SAPUsersGetVIP | project-rename User = SAPUser);\r\n\
    // let SelectedRuleTypes = dynamic([\"All RuleTypes\"]);\r\nlet SelectedRuleTypes=\
    \ dynamic([\"AnomaliesOnly\"]);\r\nlet SAPUserRolesAndProfiles = (SAPUsersAssignments\
    \ | project-keep User, SystemID, DirectRoles, ChildRoles, Profiles \r\n| summarize\
    \ RolesAndProfiles = make_set(array_concat(DirectRoles, ChildRoles, Profiles),\
    \ 120) by User, SystemID); \r\nlet SAPAuditAnomal = SAPAuditLogAnomalies(LearningTime\
    \ = 14d, DetectingTime=1h, SelectedSystems= SelectedSystems,  \r\nSelectedSystemRoles=\
    \ SelectedSystemRoles, SelectedSeverities= SelectedSeverities, SelectedRuleTypes=\
    \ SelectedRuleTypes);\r\n// Query\r\n// get the anomalies\r\nSAPAuditAnomal\r\n\
    // get the user privleged status\r\n| lookup (SAPUsersGetPrivileged() | extend\
    \ IsPrivilegedUser = true) on\r\n$left.SystemID == $right.SystemID\r\n,$left.User\
    \ == $right.User\r\n,$left.ClientID == $right.Client\r\n| extend DetailedDescription\
    \ = iff(IsPrivilegedUser, strcat('User ', User,  ' is a privileged user! <br/>',\
    \ DetailedDescription), DetailedDescription)\r\n| extend TimeGenerated = MaxTime\r\
    \n// handle threshold per system (configurable via the SAPAuditLogConfigurator\
    \ watchlist)\r\n//  apply the threshold criteria, consider that the watchlist\
    \ describes hourly thresholds\r\n| extend MinutesSpan = datetime_diff('Minute',\
    \ MaxTime, MinTime )\r\n| where EventCount > (Threshold * max_of(MinutesSpan,\
    \ 10) / 60) \r\n| extend DetailedDescription = iff(EventCount > 1, strcat(' Event\
    \ occured ', EventCount, ' times within ', MinutesSpan + 1, ' minutes.<br/> ',\
    \ 'The predefined threshold of ', Threshold,  ' Events per hour was exceeded!\
    \ <br/>', DetailedDescription), DetailedDescription)\r\n| extend MessageText =\
    \ iff(MessageText endswith_cs \".\", substring(MessageText, 0, strlen(MessageText)-1),\
    \ MessageText)\r\n| top TopN by Score \r\n| project-keep SystemID, Instance, MessageText,\
    \ MessageClass, MessageID, ClientID, User, TerminalIPv6, TransactionCode, ABAPProgramName,\
    \ SAPProcesType, SAPWPName, Email, Host, CategoryName, DestinationEmail, DetailedDescription,\
    \ Tactics, TeamsChannelID, SystemRole, SystemUsage, IsProd, Severity, BagOfDetails,\
    \ IsPrivilegedUser, EventCount, Threshold, TimeGenerated\r\n| extend Source= 'SAPAuditAnom1\
    \ '"
queryFrequency: 1h
queryPeriod: 14d
relevantTechniques: ''
requiredDataConnectors:
-   connectorId: SAP
    dataTypes:
    - SAPUsersGetVIP
    - SAPAuditLogAnomalies
    - SAPAuditLog
    - SAPUsersAssignments
    - SAPUsersGetPrivileged
severity: High
tactics: []
triggerOperator: gt
triggerThreshold: 0
version: 2.0.15
