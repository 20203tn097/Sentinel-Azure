{
    "version": "Notebook/1.0",
    "items": [
        {
            "type": 11,
            "content": {
                "version": "LinkItem/1.0",
                "style": "tabs",
                "links": [
                    {
                        "id": "b4b1bd11-1f18-4903-a3b6-57fd50e0c302",
                        "cellValue": "wb-param",
                        "linkTarget": "parameter",
                        "linkLabel": "ICF Services",
                        "subTarget": "ICF",
                        "style": "link"
                    },
                    {
                        "id": "a91adc06-f8ab-465f-afb4-4d9008751fb0",
                        "cellValue": "wb-param",
                        "linkTarget": "parameter",
                        "linkLabel": "Insecure Operations",
                        "subTarget": "insec",
                        "style": "link"
                    },
                    {
                        "id": "a0cced2e-7f7c-4fd8-96e3-914896fce721",
                        "cellValue": "wb-param",
                        "linkTarget": "parameter",
                        "linkLabel": "Tables",
                        "subTarget": "table",
                        "style": "link"
                    },
                    {
                        "id": "089fc110-be01-4857-9661-351c5f6c2db4",
                        "cellValue": "wb-param",
                        "linkTarget": "parameter",
                        "linkLabel": "Spool & Downloads",
                        "subTarget": "spd",
                        "style": "link"
                    },
                    {
                        "id": "cb455011-06fb-4334-bb99-dd9714cd2419",
                        "cellValue": "wb-param",
                        "linkTarget": "parameter",
                        "linkLabel": "FTP & Dynamic RFC",
                        "subTarget": "ftp",
                        "style": "link"
                    }
                ]
            },
            "name": "links - 0"
        },
        {
            "type": 9,
            "content": {
                "version": "KqlParameterItem/1.0",
                "parameters": [
                    {
                        "id": "8476146a-f4de-40d9-b0f7-ab1e994c8145",
                        "version": "KqlParameterItem/1.0",
                        "name": "TimeSelect",
                        "label": "Time Range",
                        "type": 4,
                        "isGlobal": true,
                        "value": {
                            "durationMs": 2592000000
                        },
                        "typeSettings": {
                            "selectableValues": [
                                {
                                    "durationMs": 300000
                                },
                                {
                                    "durationMs": 900000
                                },
                                {
                                    "durationMs": 1800000
                                },
                                {
                                    "durationMs": 3600000
                                },
                                {
                                    "durationMs": 14400000
                                },
                                {
                                    "durationMs": 43200000
                                },
                                {
                                    "durationMs": 86400000
                                },
                                {
                                    "durationMs": 172800000
                                },
                                {
                                    "durationMs": 259200000
                                },
                                {
                                    "durationMs": 604800000
                                },
                                {
                                    "durationMs": 1209600000
                                },
                                {
                                    "durationMs": 2419200000
                                },
                                {
                                    "durationMs": 2592000000
                                },
                                {
                                    "durationMs": 5184000000
                                },
                                {
                                    "durationMs": 7776000000
                                }
                            ],
                            "allowCustom": true
                        },
                        "timeContext": {
                            "durationMs": 86400000
                        }
                    },
                    {
                        "id": "07a16f20-8412-4d88-9a8b-1ab9f48c4a62",
                        "version": "KqlParameterItem/1.0",
                        "name": "Systems",
                        "label": "System",
                        "type": 2,
                        "isRequired": true,
                        "isGlobal": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "SAPAuditLog | summarize  by  SystemID ",
                        "value": [
                            "value::all"
                        ],
                        "typeSettings": {
                            "additionalResourceOptions": [
                                "value::all"
                            ]
                        },
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                    }
                ],
                "style": "above",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "parameters - 1"
        },
        {
            "type": 1,
            "content": {
                "json": "<tr><td><h2 style=\"font-family: 'Enriqueta', arial, serif; line-height: 1.25; margin: 0 0 10px; font-size: 24px; font-weight: bold;\"><B>Internet Communication Framework Services</b></h2>\r\n<tr><td><p style=\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\"><B>Identifies activation or deactivation of ICF Services, new services/handlers.</b></p>"
            },
            "conditionalVisibility": {
                "parameterName": "wb-param",
                "comparison": "isEqualTo",
                "value": "ICF"
            },
            "name": "text - 3"
        },
        {
            "type": 12,
            "content": {
                "version": "NotebookGroup/1.0",
                "groupType": "editable",
                "items": [
                    {
                        "type": 3,
                        "content": {
                            "version": "KqlItem/1.0",
                            "query": "let ActivatedICF =\r\nSAPTableDataLog\r\n| where TableName == \"ICFSERVLOC\"\r\n| lookup SAPTableDataLog on TimeGenerated, LogKey, DBLogID // Lookup for combining the data\r\n| where TableField == \"ICF_NAME\" // Service name\r\n| where TableField1 == \"ICFACTIVE\" // Active status\r\n| where OldValue == NewValue and OldValue != \"\" \r\n| where NewValue1 == \"X\" // Status is activated\r\n| project TimeGenerated, Service = NewValue, ICFServiceStatus = \"Activated\";\r\nSAPTableDataLog\r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID in ({Systems}) or  '*' in ({Systems}))\r\n| where TableName == \"ICFSERVLOC\"\r\n| lookup SAPTableDataLog on TimeGenerated, LogKey, DBLogID // Lookup for combining the data\r\n| where TableField == \"ICF_NAME\" // Service name\r\n| where TableField1 == \"ICFACTIVE\" // Active status\r\n| where OldValue1 == \"X\" // Was activated\r\n| where NewValue1 == \"\" // Not activated now\r\n| where OldValue == NewValue and OldValue != \"\"\r\n| project TimeGenerated, Service = NewValue, ICFServiceStatus = \"Deactivated\"\r\n| union ActivatedICF\r\n| summarize count() by Service, ICFServiceStatus\r\n",
                            "size": 0,
                            "title": "ICF Service by Operation",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "barchart",
                            "chartSettings": {
                                "xAxis": "ICFServiceStatus",
                                "xSettings": {
                                    "numberFormatSettings": {
                                        "unit": 0,
                                        "options": {
                                            "style": "decimal",
                                            "useGrouping": true
                                        }
                                    }
                                }
                            }
                        },
                        "customWidth": "50",
                        "name": "query - 0",
                        "styleSettings": {
                            "margin": "4px"
                        }
                    },
                    {
                        "type": 3,
                        "content": {
                            "version": "KqlItem/1.0",
                            "query": "let ActivatedICF =\r\nSAPTableDataLog\r\n| where TableName == \"ICFSERVLOC\"\r\n| lookup SAPTableDataLog on TimeGenerated, LogKey, DBLogID // Lookup for combining the data\r\n| where TableField == \"ICF_NAME\" // Service name\r\n| where TableField1 == \"ICFACTIVE\" // Active status\r\n| where OldValue == NewValue and OldValue != \"\" \r\n| where NewValue1 == \"X\" // Status is activated\r\n| project TimeGenerated, Service = NewValue, ICFServiceStatus = \"Activated\";\r\nSAPTableDataLog\r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID in ({Systems}) or  '*' in ({Systems}))\r\n| where TableName == \"ICFSERVLOC\"\r\n| lookup SAPTableDataLog on TimeGenerated, LogKey, DBLogID // Lookup for combining the data\r\n| where TableField == \"ICF_NAME\" // Service name\r\n| where TableField1 == \"ICFACTIVE\" // Active status\r\n| where OldValue1 == \"X\" // Was activated\r\n| where NewValue1 == \"\" // Not activated now\r\n| where OldValue == NewValue and OldValue != \"\"\r\n| project TimeGenerated, Service = NewValue, ICFServiceStatus = \"Deactivated\"\r\n| union ActivatedICF\r\n",
                            "size": 0,
                            "title": "Activation or Deactivation of ICF Service",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "table",
                            "gridSettings": {
                                "formatters": [
                                    {
                                        "columnMatch": "ICFServiceStatus",
                                        "formatter": 18,
                                        "formatOptions": {
                                            "thresholdsOptions": "colors",
                                            "thresholdsGrid": [
                                                {
                                                    "operator": "==",
                                                    "thresholdValue": "Activated",
                                                    "representation": "green",
                                                    "text": "{0}{1}"
                                                },
                                                {
                                                    "operator": "==",
                                                    "thresholdValue": "Deactivated",
                                                    "representation": "redBright",
                                                    "text": "{0}{1}"
                                                },
                                                {
                                                    "operator": "Default",
                                                    "thresholdValue": "Medium",
                                                    "representation": "blue",
                                                    "text": "{0}{1}"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        "customWidth": "50",
                        "name": "query - 1",
                        "styleSettings": {
                            "margin": "4px"
                        }
                    },
                    {
                        "type": 3,
                        "content": {
                            "version": "KqlItem/1.0",
                            "query": "SAPTableDataLog\r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID in ({Systems}) or  '*' in ({Systems}))\r\n| where TableName == \"ICFSERVLOC\"\r\n| where TableField == \"ICF_NAME\" // Service name\r\n| where OldValue == \"\" and NewValue != \"\" // New value is inserted in name -> new service\r\n| order by TimeGenerated desc\r\n| project TimeGenerated, Service = NewValue\r\n| summarize Services_Created = count() by bin (TimeGenerated, 24h)",
                            "size": 1,
                            "title": "Services Created by Time",
                            "color": "green",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "timechart",
                            "chartSettings": {
                                "ySettings": {
                                    "max": 10
                                }
                            }
                        },
                        "customWidth": "50",
                        "name": "query - 3",
                        "styleSettings": {
                            "margin": "4px"
                        }
                    },
                    {
                        "type": 3,
                        "content": {
                            "version": "KqlItem/1.0",
                            "query": "SAPTableDataLog\r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID in ({Systems}) or  '*' in ({Systems}))\r\n| where TableName == \"ICFSERVLOC\"\r\n| where TableField == \"ICF_NAME\" // Service name\r\n| where OldValue == \"\" and NewValue != \"\" // New value is inserted in name -> new service\r\n| order by TimeGenerated desc\r\n| project TimeGenerated, Service = NewValue\r\n| summarize by Service",
                            "size": 1,
                            "title": "New ICF Services",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "tiles",
                            "tileSettings": {
                                "showBorder": false,
                                "titleContent": {
                                    "columnMatch": "Service",
                                    "formatter": 1
                                },
                                "leftContent": {
                                    "columnMatch": "count_",
                                    "formatter": 12,
                                    "formatOptions": {
                                        "palette": "auto"
                                    },
                                    "numberFormat": {
                                        "unit": 17,
                                        "options": {
                                            "maximumSignificantDigits": 3,
                                            "maximumFractionDigits": 2
                                        }
                                    }
                                }
                            }
                        },
                        "customWidth": "50",
                        "name": "query - 2",
                        "styleSettings": {
                            "margin": "4px"
                        }
                    },
                    {
                        "type": 3,
                        "content": {
                            "version": "KqlItem/1.0",
                            "query": "SAPTableDataLog\r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID in ({Systems}) or  '*' in ({Systems}))\r\n| where TableName == \"ICFHANDLER\"\r\n| where TableField == \"ICF_NAME\" // Service name\r\n| where OldValue == \"\" and NewValue != \"\" // New value is inserted in name -> new service\r\n| order by TimeGenerated desc\r\n| project TimeGenerated, Service = NewValue\r\n| summarize Handlers_Created = count() by bin(TimeGenerated, 24h)",
                            "size": 1,
                            "title": "Handlers Created by Time",
                            "color": "blueDarkDark",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "timechart",
                            "tileSettings": {
                                "showBorder": false,
                                "titleContent": {
                                    "columnMatch": "Service",
                                    "formatter": 1
                                },
                                "leftContent": {
                                    "columnMatch": "count_",
                                    "formatter": 12,
                                    "formatOptions": {
                                        "palette": "auto"
                                    },
                                    "numberFormat": {
                                        "unit": 17,
                                        "options": {
                                            "maximumSignificantDigits": 3,
                                            "maximumFractionDigits": 2
                                        }
                                    }
                                }
                            },
                            "chartSettings": {
                                "ySettings": {
                                    "max": 10
                                }
                            }
                        },
                        "customWidth": "50",
                        "name": "query - 4 - Copy",
                        "styleSettings": {
                            "margin": "4px"
                        }
                    },
                    {
                        "type": 3,
                        "content": {
                            "version": "KqlItem/1.0",
                            "query": "SAPTableDataLog\r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID in ({Systems}) or  '*' in ({Systems}))\r\n| where TableName == \"ICFHANDLER\"\r\n| where TableField == \"ICF_NAME\" // Service name\r\n| where OldValue == \"\" and NewValue != \"\" // New value is inserted in name -> new service\r\n| order by TimeGenerated desc\r\n| project TimeGenerated, Service = NewValue\r\n| summarize by Service",
                            "size": 1,
                            "title": "New ICF Service Handlers",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "tiles",
                            "tileSettings": {
                                "showBorder": false,
                                "titleContent": {
                                    "columnMatch": "Service",
                                    "formatter": 1
                                },
                                "leftContent": {
                                    "columnMatch": "count_",
                                    "formatter": 12,
                                    "formatOptions": {
                                        "palette": "auto"
                                    },
                                    "numberFormat": {
                                        "unit": 17,
                                        "options": {
                                            "maximumSignificantDigits": 3,
                                            "maximumFractionDigits": 2
                                        }
                                    }
                                }
                            }
                        },
                        "customWidth": "50",
                        "name": "query - 4",
                        "styleSettings": {
                            "margin": "4px"
                        }
                    }
                ]
            },
            "conditionalVisibility": {
                "parameterName": "wb-param",
                "comparison": "isEqualTo",
                "value": "ICF"
            },
            "name": "group - 2"
        },
        {
            "type": 12,
            "content": {
                "version": "NotebookGroup/1.0",
                "groupType": "editable",
                "items": [
                    {
                        "type": 1,
                        "content": {
                            "json": "<tr><td><h2 style=\"font-family: 'Enriqueta', arial, serif; line-height: 1.25; margin: 0 0 10px; font-size: 24px; font-weight: bold;\"><B>Executions of Obsolete/Insecure Operations</b></h2>\r\n<tr><td><p style=\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\"><B>Identifies execution of:</b></p>\r\n<tr><td><li style=\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\"><B>Obsolete/insecure Function Module</b></lie>\r\n<tr><td><li style=\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\"><B>Obsolete/insecure ABAP Program</b></lie>"
                        },
                        "name": "text - 5"
                    },
                    {
                        "type": 3,
                        "content": {
                            "version": "KqlItem/1.0",
                            "query": "// Define variables\r\nlet RelTable = \"EUFUNC\"; // Relevant table\r\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\r\nlet ObsoleteModules =  _GetWatchlist('SAP - Obsolete Function Modules');\r\n// Maintain if watchlist is not available\r\nlet fixedModules = datatable(FunctionModule:string)['TH_SAPREL','TH_SAPREL2', 'TH_SAPREL3','SUSR_RFC_USER_INTERFACE','RFC_ABAP_INSTALL_AND_RUN']; \r\nlet UnitedModules =\r\ntoscalar(union fixedModules, ObsoleteModules\r\n| summarize FunctionModules =  make_set(FunctionModule));\r\n// Query logic\r\nlet LastLogin = \r\nSAPAuditLog\r\n| where MessageID in (AuditLogIn)\r\n| summarize TimeGenerated = arg_max(TimeGenerated, *) by SystemID, ClientID, User; // Get last connection date for user\r\nSAPTableDataLog\r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID in ({Systems}) or  '*' in ({Systems}))\r\n| where TableName == RelTable\r\n| extend Module = extract(@\"\\s+(.{1,}\\b)\\s+\", 1, LogKey, typeof(string)) // Extract Function Module\r\n| extend FunctionGroup = extract(@\"^FL([^\\s]*)\\s\", 1, LogKey, typeof(string)) // Extract Function Group\r\n| extend ExecutionVariant = extract(@\"\\b(\\w+)$\", 1, LogKey, typeof(string)) // Extract Execution Varient\r\n| where Module in (UnitedModules) // Module is obsolete\r\n| lookup kind=inner LastLogin on $left.UserName == $right.User\r\n| summarize by TimeGenerated, SystemID, ClientID,  AccountCustomEntity = Email, IPCustomEntity = TerminalIPv6, HostCustomEntity = Host, Module, FunctionGroup, ExecutionVariant",
                            "size": 0,
                            "title": "Execution of Obsolete or Insecure Function Module",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "gridSettings": {
                                "formatters": [
                                    {
                                        "columnMatch": "Module",
                                        "formatter": 18,
                                        "formatOptions": {
                                            "thresholdsOptions": "icons",
                                            "thresholdsGrid": [
                                                {
                                                    "operator": "Default",
                                                    "thresholdValue": "Medium",
                                                    "representation": "warning",
                                                    "text": "{0}{1}"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        "customWidth": "50",
                        "name": "query - 0",
                        "styleSettings": {
                            "margin": "4px"
                        }
                    },
                    {
                        "type": 3,
                        "content": {
                            "version": "KqlItem/1.0",
                            "query": "// Define variables\r\nlet RelTable = \"EUFUNC\"; // Relevant table\r\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\r\nlet ObsoleteModules =  _GetWatchlist('SAP - Obsolete Function Modules');\r\n// Maintain if watchlist is not available\r\nlet fixedModules = datatable(FunctionModule:string)['TH_SAPREL','TH_SAPREL2', 'TH_SAPREL3','SUSR_RFC_USER_INTERFACE','RFC_ABAP_INSTALL_AND_RUN']; \r\nlet UnitedModules =\r\ntoscalar(union fixedModules, ObsoleteModules\r\n| summarize FunctionModules =  make_set(FunctionModule));\r\n// Query logic\r\nlet LastLogin = \r\nSAPAuditLog\r\n| where MessageID in (AuditLogIn)\r\n| summarize TimeGenerated = arg_max(TimeGenerated, *) by SystemID, ClientID, User; // Get last connection date for user\r\nSAPTableDataLog\r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID in ({Systems}) or  '*' in ({Systems}))\r\n| where TableName == RelTable\r\n| extend Module = extract(@\"\\s+(.{1,}\\b)\\s+\", 1, LogKey, typeof(string)) // Extract Function Module\r\n| extend FunctionGroup = extract(@\"^FL([^\\s]*)\\s\", 1, LogKey, typeof(string)) // Extract Function Group\r\n| extend ExecutionVariant = extract(@\"\\b(\\w+)$\", 1, LogKey, typeof(string)) // Extract Execution Varient\r\n| where Module in (UnitedModules) // Module is obsolete\r\n| lookup kind=inner LastLogin on $left.UserName == $right.User\r\n| summarize by TimeGenerated, SystemID, ClientID,  AccountCustomEntity = Email, IPCustomEntity = TerminalIPv6, HostCustomEntity = Host, Module, FunctionGroup, ExecutionVariant\r\n| summarize count() by Module",
                            "size": 0,
                            "title": "Obsolete or Insecure Function Module Execution Count",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "barchart"
                        },
                        "customWidth": "50",
                        "name": "query - 0 - Copy",
                        "styleSettings": {
                            "margin": "4px"
                        }
                    },
                    {
                        "type": 3,
                        "content": {
                            "version": "KqlItem/1.0",
                            "query": "// Define Variables\r\nlet AuditClasses = dynamic(['AUW']); // Audit Log Classes - Report Started\r\nlet ObsoletePrograms = _GetWatchlist(\"SAP - Obsolete Programs\");\r\n// Maintain if watchlist is not available\r\nlet fixedObPrograms = datatable(ABAPProgram:string)['RSAU_READ_LOG'];\r\nlet UnitedPrograms =\r\ntoscalar(union fixedObPrograms, ObsoletePrograms\r\n| summarize Programs = make_set(ABAPProgram));\r\n// Query logic\r\nSAPAuditLog \r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID in ({Systems}) or  '*' in ({Systems}))\r\n| where MessageID in (AuditClasses)\r\n| where ABAPProgramName in (UnitedPrograms) // The program is obsolete\r\n| project TimeGenerated, SystemID, ClientID, User, ABAPProgramName, MessageText, TransactionCode, MessageID, AccountCustomEntity = Email, IPCustomEntity = TerminalIPv6, HostCustomEntity = Host",
                            "size": 0,
                            "title": "Execution of Obsolete or Insecure Program",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "table",
                            "gridSettings": {
                                "formatters": [
                                    {
                                        "columnMatch": "ABAPProgramName_s",
                                        "formatter": 18,
                                        "formatOptions": {
                                            "thresholdsOptions": "icons",
                                            "thresholdsGrid": [
                                                {
                                                    "operator": "Default",
                                                    "thresholdValue": "Medium",
                                                    "representation": "warning",
                                                    "text": "{0}{1}"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        "customWidth": "50",
                        "name": "query - 1",
                        "styleSettings": {
                            "margin": "4px"
                        }
                    },
                    {
                        "type": 3,
                        "content": {
                            "version": "KqlItem/1.0",
                            "query": "// Define Variables\r\nlet AuditClasses = dynamic(['AUW']); // Audit Log Classes - Report Started\r\nlet ObsoletePrograms = _GetWatchlist(\"SAP - Obsolete Programs\");\r\n// Maintain if watchlist is not available\r\nlet fixedObPrograms = datatable(ABAPProgram:string)['RSAU_READ_LOG'];\r\nlet UnitedPrograms =\r\ntoscalar(union fixedObPrograms, ObsoletePrograms\r\n| summarize Programs = make_set(ABAPProgram));\r\n// Query logic\r\nSAPAuditLog \r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID in ({Systems}) or  '*' in ({Systems}))\r\n| where MessageID in (AuditClasses)\r\n| where ABAPProgramName in (UnitedPrograms) // The program is obsolete\r\n| summarize count() by ABAPProgramName",
                            "size": 0,
                            "title": "Obsolete or Insecure Program Execution Count",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "barchart"
                        },
                        "customWidth": "50",
                        "name": "query - 1 - Copy",
                        "styleSettings": {
                            "margin": "4px"
                        }
                    },
                    {
                        "type": 1,
                        "content": {
                            "json": "<tr><td><h2 style=\"font-family: 'Enriqueta', arial, serif; line-height: 1.25; margin: 0 0 10px; font-size: 24px; font-weight: bold;\"><B>Test Function Module</b></h2>\r\n<tr><Td><p style=\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\">Identifies testing of a function module.</b></p>"
                        },
                        "name": "text - 6"
                    },
                    {
                        "type": 3,
                        "content": {
                            "version": "KqlItem/1.0",
                            "query": "let Role = 'Production';\r\nlet ProgramName = 'RS_TESTFRAME_CALL';\r\nlet AuditClasses = dynamic(['AUW']); // Audit Log Classes - Report Started\r\nlet allSystemRoles = dynamic(['Sandbox', 'Developement', 'QualityAssurance', 'Training', 'Production']); // Available System Roles\r\nlet allSystemUsage = dynamic (['ERP', 'CRM', 'BW', 'Solman', 'Gateway', 'Enterprise Portal']); // Available System Usages\r\n// Get Relevant Systems from WatchList\r\nlet systemID = _GetWatchlist('SAP - Systems');\r\nlet fixedSID = datatable(SystemID: string, SystemRole: string, SystemUsage: string)\r\n    // Maintain these if WatchList is not available    \r\n    [\"S4H\", \"Production\", \"ERP\",\r\n    \"XXX\", \"Sandbox\", \"BW\"]\r\n; \r\nlet UnitedSystem = \r\nunion systemID, fixedSID\r\n| summarize by SystemID, SystemRole, SystemUsage\r\n| where SystemRole == Role; // Reccommended is Production only\r\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\r\nSAPAuditLog \r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID in ({Systems}) or  '*' in ({Systems}))\r\n| where MessageID in (AuditClasses)\r\n| where ABAPProgramName == ProgramName\r\n| project-rename SystemIDTemp = SystemID \n| project-rename SystemID= SystemIDTemp \n| project-rename SystemID= SystemID\r\n| lookup kind = inner (UnitedSystem) on SystemID\r\n| order by TimeGenerated asc\r\n| project TimeGenerated, User, SystemID, ClientID, MessageText, MessageID,\r\n    AccountCustomEntity = Email, IPCustomEntity = TerminalIPv6, HostCustomEntity = Host ",
                            "size": 0,
                            "title": "Activity of Function Module Tests ",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "50",
                        "name": "query - 4",
                        "styleSettings": {
                            "margin": "4px"
                        }
                    },
                    {
                        "type": 3,
                        "content": {
                            "version": "KqlItem/1.0",
                            "query": "let Role = 'Production';\r\nlet ProgramName = 'RS_TESTFRAME_CALL';\r\nlet AuditClasses = dynamic(['AUW']); // Audit Log Classes - Report Started\r\nlet allSystemRoles = dynamic(['Sandbox', 'Developement', 'QualityAssurance', 'Training', 'Production']); // Available System Roles\r\nlet allSystemUsage = dynamic (['ERP', 'CRM', 'BW', 'Solman', 'Gateway', 'Enterprise Portal']); // Available System Usages\r\n// Get Relevant Systems from WatchList\r\nlet systemID = _GetWatchlist('SAP - Systems');\r\nlet fixedSID = datatable(SystemID: string, SystemRole: string, SystemUsage: string)\r\n    // Maintain these if WatchList is not available    \r\n    [\"S4H\", \"Production\", \"ERP\",\r\n    \"XXX\", \"Sandbox\", \"BW\"]\r\n; \r\nlet UnitedSystem = \r\nunion systemID, fixedSID\r\n| summarize by SystemID, SystemRole, SystemUsage\r\n| where SystemRole == Role; // Reccommended is Production only\r\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\r\nSAPAuditLog \r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID in ({Systems}) or  '*' in ({Systems}))\r\n| where MessageID in (AuditClasses)\r\n| where ABAPProgramName == ProgramName\r\n| project-rename SystemIDTemp = SystemID \n| project-rename SystemID= SystemIDTemp \n| project-rename SystemID= SystemID\r\n| lookup kind = inner (UnitedSystem) on SystemID\r\n| summarize count() by User",
                            "size": 0,
                            "title": "Users Test Functions",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "piechart"
                        },
                        "customWidth": "50",
                        "name": "query - 4 - Copy",
                        "styleSettings": {
                            "margin": "4px"
                        }
                    }
                ]
            },
            "conditionalVisibility": {
                "parameterName": "wb-param",
                "comparison": "isEqualTo",
                "value": "insec"
            },
            "name": "group - 4"
        },
        {
            "type": 12,
            "content": {
                "version": "NotebookGroup/1.0",
                "groupType": "editable",
                "items": [
                    {
                        "type": 1,
                        "content": {
                            "json": "<tr><td><h2 style=\"font-family: 'Enriqueta', arial, serif; line-height: 1.25; margin: 0 0 10px; font-size: 24px; font-weight: bold;\"><B>Sensitive Tables Direct Access By RFC Logon</b></h2>\r\n<tr><td><p style=\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\"><B>Identifies generic table access by RFC logon</b></p>"
                        },
                        "name": "text - 5"
                    },
                    {
                        "type": 3,
                        "content": {
                            "version": "KqlItem/1.0",
                            "query": "// Define variables\r\nlet Role = \"Production\";\r\nlet AuditClasses = dynamic(['CUZ']); // RFC, Audit Log Classes - Generic Table Access \r\nlet allSystemRoles = dynamic(['Sandbox','Developement','QualityAssurance','Training','Production']); // Available System Roles\r\nlet allSystemUsage = dynamic (['ERP','CRM','BW','Solman','Gateway','Enterprise Portal']); // Available System Usages\r\n// Get Relevant Systems from WatchList\r\nlet systemID = _GetWatchlist('SAP - Systems');\r\nlet fixedSID = datatable(SystemID:string, SystemRole:string, SystemUsage:string)\r\n// Maintain these if WatchList is not available    \r\n    [\"S4H\",\"Production\",\"ERP\",\r\n    \"XXX\",\"Sandbox\",\"BW\"]\r\n; \r\n// Get Relevant Tables\r\nlet SensitiveTables = _GetWatchlist('SAP - Sensitive Tables');\r\nlet fixedTables = datatable(Table:string)\r\n// Maintain these if WatchList is not available    \r\n    [\"USR02\"]\r\n; \r\nlet RelSystemID = union systemID, fixedSID // Create a variable that stores relevent Systems\r\n| where SystemRole == Role // Reccommended is Production only\r\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\r\n| summarize by SystemID;\r\nlet SensitiveUnionTables = union SensitiveTables, fixedTables // Create a variable that stores relevent sensitive tables\r\n    | summarize by Table;\r\n// Query logic\r\nSAPAuditLog \r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID in ({Systems}) or  '*' in ({Systems}))\r\n| project-rename Table = Variable1, Activity = Variable2\r\n| where MessageID in (AuditClasses)\r\n| where SystemID in (RelSystemID)\r\n| where Table in (SensitiveUnionTables)\r\n| order by TimeGenerated asc\r\n| project TimeGenerated, SystemID, ClientID, User, TransactionCode, ABAPProgramName, Table,   Activity, MessageText, MessageID,\r\nAccountCustomEntity = Email, IPCustomEntity = TerminalIPv6, HostCustomEntity = Host",
                            "size": 1,
                            "title": "Sensitive Tables Accessed",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "gridSettings": {
                                "formatters": [
                                    {
                                        "columnMatch": "Table",
                                        "formatter": 18,
                                        "formatOptions": {
                                            "thresholdsOptions": "icons",
                                            "thresholdsGrid": [
                                                {
                                                    "operator": "Default",
                                                    "thresholdValue": "Medium",
                                                    "representation": "info",
                                                    "text": "{0}{1}"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        "customWidth": "50",
                        "name": "query - 0",
                        "styleSettings": {
                            "margin": "10px"
                        }
                    },
                    {
                        "type": 3,
                        "content": {
                            "version": "KqlItem/1.0",
                            "query": "// Define variables\r\nlet Role = \"Production\";\r\nlet AuditClasses = dynamic(['CUZ']); // RFC, Audit Log Classes - Generic Table Access \r\nlet allSystemRoles = dynamic(['Sandbox','Developement','QualityAssurance','Training','Production']); // Available System Roles\r\nlet allSystemUsage = dynamic (['ERP','CRM','BW','Solman','Gateway','Enterprise Portal']); // Available System Usages\r\n// Get Relevant Systems from WatchList\r\nlet systemID = _GetWatchlist('SAP - Systems');\r\nlet fixedSID = datatable(SystemID:string, SystemRole:string, SystemUsage:string)\r\n// Maintain these if WatchList is not available    \r\n    [\"S4H\",\"Production\",\"ERP\",\r\n    \"XXX\",\"Sandbox\",\"BW\"]\r\n; \r\n// Get Relevant Tables\r\nlet SensitiveTables = _GetWatchlist('SAP - Sensitive Tables');\r\nlet fixedTables = datatable(Table:string)\r\n// Maintain these if WatchList is not available    \r\n    [\"USR02\"]\r\n; \r\nlet RelSystemID = union systemID, fixedSID // Create a variable that stores relevent Systems\r\n| where SystemRole == Role // Reccommended is Production only\r\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\r\n| summarize by SystemID;\r\nlet SensitiveUnionTables = union SensitiveTables, fixedTables // Create a variable that stores relevent sensitive tables\r\n    | summarize by Table;\r\n// Query logic\r\nSAPAuditLog \r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID in ({Systems}) or  '*' in ({Systems}))\r\n| project-rename Table = Variable1, Activity = Variable2\r\n| where MessageID in (AuditClasses)\r\n| where SystemID in (RelSystemID)\r\n| where Table in (SensitiveUnionTables)\r\n| summarize count() by Table",
                            "size": 0,
                            "title": "Tables Distribution",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "barchart"
                        },
                        "customWidth": "50",
                        "name": "query - 0 - Copy",
                        "styleSettings": {
                            "margin": "10px"
                        }
                    },
                    {
                        "type": 1,
                        "content": {
                            "json": "<tr><td><h2 style=\"font-family: 'Enriqueta', arial, serif; line-height: 1.25; margin: 0 0 10px; font-size: 24px; font-weight: bold;\"><B>Sensitive Tables Direct Access By Dialog Logon</b></h2>\r\n<tr><td><p style=\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\"><B>Identifies generic table access by dialog logon.</b></p>"
                        },
                        "name": "text - 5 - Copy"
                    },
                    {
                        "type": 3,
                        "content": {
                            "version": "KqlItem/1.0",
                            "query": "// Define variables\r\nlet Role = \"Production\";\r\nlet AuditClasses = dynamic(['DU9']); // Dialog, Audit Log Classes - Generic Table Access \r\nlet allSystemRoles = dynamic(['Sandbox','Developement','QualityAssurance','Training','Production']); // Available System Roles\r\nlet allSystemUsage = dynamic (['ERP','CRM','BW','Solman','Gateway','Enterprise Portal']); // Available System Usages\r\n// Get Relevant Systems from WatchList\r\nlet systemID = _GetWatchlist('SAP - Systems');\r\nlet fixedSID = datatable(SystemID:string, SystemRole:string, SystemUsage:string)\r\n// Maintain these if WatchList is not available    \r\n    [\"S4H\",\"Production\",\"ERP\",\r\n    \"XXX\",\"Sandbox\",\"BW\"]\r\n; \r\n// Get Relevant Tables\r\nlet SensitiveTables = _GetWatchlist('SAP - Sensitive Tables');\r\nlet fixedTables = datatable(Table:string)\r\n// Maintain these if WatchList is not available    \r\n    [\"USR02\"]\r\n; \r\nlet RelSystemID = union systemID, fixedSID // Create a variable that stores relevant Systems\r\n| where SystemRole == Role // Recommended  is Production only\r\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\r\n| summarize by SystemID;\r\nlet SensitiveUnionTables = union SensitiveTables, fixedTables // Create a variable that stores relevant sensitive tables\r\n    | summarize by Table;\r\n// Query logic\r\nSAPAuditLog \r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID in ({Systems}) or  '*' in ({Systems}))\r\n| project-rename Table = Variable1, Activity = Variable2\r\n| where MessageID in (AuditClasses)\r\n| where SystemID in (RelSystemID)\r\n| where Table in (SensitiveUnionTables)\r\n| order by TimeGenerated asc\r\n| project TimeGenerated, SystemID, ClientID, User, TransactionCode, ABAPProgramName, Table,   Activity, MessageText, MessageID,\r\nAccountCustomEntity = Email, IPCustomEntity = TerminalIPv6, HostCustomEntity = Host",
                            "size": 1,
                            "title": "Sensitive Tables Accessed",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "gridSettings": {
                                "formatters": [
                                    {
                                        "columnMatch": "Table",
                                        "formatter": 18,
                                        "formatOptions": {
                                            "thresholdsOptions": "icons",
                                            "thresholdsGrid": [
                                                {
                                                    "operator": "Default",
                                                    "thresholdValue": "Medium",
                                                    "representation": "info",
                                                    "text": "{0}{1}"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        "customWidth": "50",
                        "name": "query - 2",
                        "styleSettings": {
                            "margin": "10px"
                        }
                    },
                    {
                        "type": 3,
                        "content": {
                            "version": "KqlItem/1.0",
                            "query": "// Define variables\r\nlet Role = \"Production\";\r\nlet AuditClasses = dynamic(['DU9']); // Dialog, Audit Log Classes - Generic Table Access \r\nlet allSystemRoles = dynamic(['Sandbox','Developement','QualityAssurance','Training','Production']); // Available System Roles\r\nlet allSystemUsage = dynamic (['ERP','CRM','BW','Solman','Gateway','Enterprise Portal']); // Available System Usages\r\n// Get Relevant Systems from WatchList\r\nlet systemID = _GetWatchlist('SAP - Systems');\r\nlet fixedSID = datatable(SystemID:string, SystemRole:string, SystemUsage:string)\r\n// Maintain these if WatchList is not available    \r\n    [\"S4H\",\"Production\",\"ERP\",\r\n    \"XXX\",\"Sandbox\",\"BW\"]\r\n; \r\n// Get Relevant Tables\r\nlet SensitiveTables = _GetWatchlist('SAP - Sensitive Tables');\r\nlet fixedTables = datatable(Table:string)\r\n// Maintain these if WatchList is not available    \r\n    [\"USR02\"]\r\n; \r\nlet RelSystemID = union systemID, fixedSID // Create a variable that stores relevant Systems\r\n| where SystemRole == Role // Recommended  is Production only\r\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\r\n| summarize by SystemID;\r\nlet SensitiveUnionTables = union SensitiveTables, fixedTables // Create a variable that stores relevant sensitive tables\r\n    | summarize by Table;\r\n// Query logic\r\nSAPAuditLog \r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID in ({Systems}) or  '*' in ({Systems}))\r\n| project-rename Table = Variable1, Activity = Variable2\r\n| where MessageID in (AuditClasses)\r\n| where SystemID in (RelSystemID)\r\n| where Table in (SensitiveUnionTables)\r\n| summarize count() by Table",
                            "size": 0,
                            "title": "Tables Distribution",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "barchart"
                        },
                        "customWidth": "50",
                        "name": "query - 2 - Copy",
                        "styleSettings": {
                            "margin": "10px"
                        }
                    },
                    {
                        "type": 1,
                        "content": {
                            "json": "<tr><td><h2 style=\"font-family: 'Enriqueta', arial, serif; line-height: 1.25; margin: 0 0 10px; font-size: 24px; font-weight: bold;\"><B>Tables</b></h2>\r\n<tr><td><p style=\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\"><B>Logons to tables by type.</b></p>"
                        },
                        "name": "text - 5 - Copy - Copy"
                    },
                    {
                        "type": 3,
                        "content": {
                            "version": "KqlItem/1.0",
                            "query": "// Define variables\r\nlet Role = \"Production\";\r\nlet AuditClasses = dynamic(['CUZ']); // RFC, Audit Log Classes - Generic Table Access \r\nlet DialogAuditClasses = dynamic(['DU9']); // Dialog, Audit Log Classes - Generic Table Access \r\nlet allSystemRoles = dynamic(['Sandbox','Developement','QualityAssurance','Training','Production']); // Available System Roles\r\nlet allSystemUsage = dynamic (['ERP','CRM','BW','Solman','Gateway','Enterprise Portal']); // Available System Usages\r\n// Get Relevant Systems from WatchList\r\nlet systemID = _GetWatchlist('SAP - Systems');\r\nlet fixedSID = datatable(SystemID:string, SystemRole:string, SystemUsage:string)\r\n// Maintain these if WatchList is not available    \r\n    [\"S4H\",\"Production\",\"ERP\",\r\n    \"XXX\",\"Sandbox\",\"BW\"]\r\n; \r\n// Get Relevant Tables\r\nlet SensitiveTables = _GetWatchlist('SAP - Sensitive Tables');\r\nlet fixedTables = datatable(Table:string)\r\n// Maintain these if WatchList is not available    \r\n    [\"USR02\"]\r\n; \r\nlet RelSystemID = union systemID, fixedSID // Create a variable that stores relevent Systems\r\n| where SystemRole == Role // Reccommended is Production only\r\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\r\n| summarize by SystemID;\r\nlet SensitiveUnionTables = union SensitiveTables, fixedTables // Create a variable that stores relevent sensitive tables\r\n    | summarize by Table;\r\n// Query logic\r\nlet RFC = SAPAuditLog \r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID in ({Systems}) or  '*' in ({Systems}))\r\n| project-rename Table = Variable1, Activity = Variable2\r\n| where MessageID in (AuditClasses)\r\n| where SystemID in (RelSystemID)\r\n| where Table in (SensitiveUnionTables)\r\n| order by TimeGenerated asc\r\n| extend Type = \"RFC\";\r\nSAPAuditLog \r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID in ({Systems}) or  '*' in ({Systems}))\r\n| project-rename Table = Variable1, Activity = Variable2\r\n| where MessageID in (DialogAuditClasses)\r\n| where SystemID in (RelSystemID)\r\n| where Table in (SensitiveUnionTables)\r\n| extend Type = \"Dialog\"\r\n| union RFC\r\n| summarize count() by Type\r\n",
                            "size": 0,
                            "title": "Dialog/RFC Logons",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "piechart",
                            "chartSettings": {
                                "ySettings": {
                                    "numberFormatSettings": {
                                        "unit": 0,
                                        "options": {
                                            "style": "decimal",
                                            "useGrouping": true
                                        }
                                    }
                                }
                            }
                        },
                        "name": "query - 4"
                    }
                ]
            },
            "conditionalVisibility": {
                "parameterName": "wb-param",
                "comparison": "isEqualTo",
                "value": "table"
            },
            "name": "group - 5"
        },
        {
            "type": 12,
            "content": {
                "version": "NotebookGroup/1.0",
                "groupType": "editable",
                "items": [
                    {
                        "type": 1,
                        "content": {
                            "json": "<tr><td><h2 style=\"font-family: 'Enriqueta', arial, serif; line-height: 1.25; margin: 0 0 10px; font-size: 24px; font-weight: bold;\"><B>Spool Actions</b></h2>\r\n<tr><td><p p style=\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\"><B>Identifies multiple spools requests for a user within a specific timerange.</b></p>"
                        },
                        "name": "text - 0"
                    },
                    {
                        "type": 9,
                        "content": {
                            "version": "KqlParameterItem/1.0",
                            "parameters": [
                                {
                                    "id": "ddafbb71-cd42-4a9d-acbf-ff2eaee66f10",
                                    "version": "KqlParameterItem/1.0",
                                    "name": "threshold1",
                                    "label": "Threshold for Multiple Spool Executions",
                                    "type": 1,
                                    "value": "3",
                                    "typeSettings": {
                                        "paramValidationRules": [
                                            {
                                                "regExp": "\\d",
                                                "match": true,
                                                "message": "Enter a number to determine multiple spool threshold"
                                            }
                                        ]
                                    },
                                    "timeContext": {
                                        "durationMs": 86400000
                                    }
                                }
                            ],
                            "style": "formVertical",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "parameters - 15"
                    },
                    {
                        "type": 3,
                        "content": {
                            "version": "KqlItem/1.0",
                            "query": "// Define variables\r\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\r\nlet HoursBucket = 2h; // // How much time between buckets\r\n// Query logic\r\nlet LastLogin = \r\nSAPAuditLog\r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID in ({Systems}) or  '*' in ({Systems}))\r\n| where MessageID in (AuditLogIn)\r\n| summarize TimeGenerated = arg_max(TimeGenerated, *) by SystemID, ClientID, User; // Get last connection date for user\r\nSAPSpoolLog // Get all spool requests\r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID in ({Systems}) or  '*' in ({Systems}))\r\n| summarize UserRequests = count() by bin(TimeGenerated, HoursBucket), SystemID, ClientID, User\r\n| where UserRequests >= toint(\"{threshold1}\") // User requested to print more than threshold\r\n| lookup kind=inner LastLogin on User // Check IP of last login\r\n| project TimeGenerated, SystemID, ClientID, User, AccountCustomEntity = Email, IPCustomEntity = TerminalIPv6, HostCustomEntity = Host, UserRequests\r\n",
                            "size": 1,
                            "title": "Multiple Spool Executions (Press to Investigate)",
                            "exportFieldName": "User_s",
                            "exportParameterName": "User1",
                            "exportDefaultValue": "SAP",
                            "showExportToExcel": true,
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "gridSettings": {
                                "formatters": [
                                    {
                                        "columnMatch": "User_s",
                                        "formatter": 18,
                                        "formatOptions": {
                                            "thresholdsOptions": "icons",
                                            "thresholdsGrid": [
                                                {
                                                    "operator": "Default",
                                                    "thresholdValue": "Medium",
                                                    "representation": "info",
                                                    "text": "{0}{1}"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        "name": "query - 1"
                    },
                    {
                        "type": 3,
                        "content": {
                            "version": "KqlItem/1.0",
                            "query": "SAPSpoolLog \r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID in ({Systems}) or  '*' in ({Systems}))\r\n| where User == \"{User1}\"\r\n| project TimeGenerated,SystemID, ClientID, User, SpoolRequestNumber, SpoolRequestName, SpoolRequestSuffix1, SpoolRequestSuffix2",
                            "size": 1,
                            "title": "{User1} Spool Executions",
                            "showExportToExcel": true,
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                            "parameterName": "User1",
                            "comparison": "isNotEqualTo",
                            "value": "SAP"
                        },
                        "name": "query - 3"
                    },
                    {
                        "type": 3,
                        "content": {
                            "version": "KqlItem/1.0",
                            "query": "// Define variables\r\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\r\nlet NumberOfRequests = 3; // Number of requests as threshold\r\nlet HoursBucket = 2h; // // How much time between buckets\r\n// Query logic\r\nlet LastLogin = \r\nSAPAuditLog\r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID in ({Systems}) or  '*' in ({Systems}))\r\n| where MessageID in (AuditLogIn)\r\n| summarize TimeGenerated = arg_max(TimeGenerated, *) by SystemID, ClientID, User; // Get last connection date for user\r\nSAPSpoolLog // Get all spool requests\r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID in ({Systems}) or  '*' in ({Systems}))\r\n| where User == \"{User1}\"\r\n| summarize UserRequests = count() by bin(TimeGenerated, HoursBucket), User\r\n",
                            "size": 1,
                            "title": "{User1} Spool Executions by Time",
                            "color": "redBright",
                            "showExportToExcel": true,
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "timechart"
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                            "parameterName": "User1",
                            "comparison": "isNotEqualTo",
                            "value": "SAP"
                        },
                        "name": "query - 1 - Copy"
                    },
                    {
                        "type": 3,
                        "content": {
                            "version": "KqlItem/1.0",
                            "query": "SAPSpoolLog \r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID in ({Systems}) or  '*' in ({Systems}))\r\n| project TimeGenerated,SystemID, ClientID, User, SpoolRequestNumber, SpoolRequestName, SpoolRequestSuffix1, SpoolRequestSuffix2\r\n| summarize count() by SpoolRequestSuffix2, SpoolRequestSuffix1",
                            "size": 0,
                            "title": "Spool Requests by Printer",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "barchart",
                            "chartSettings": {
                                "xAxis": "SpoolRequestSuffix1",
                                "xSettings": {
                                    "numberFormatSettings": {
                                        "unit": 0,
                                        "options": {
                                            "style": "decimal",
                                            "useGrouping": true
                                        }
                                    }
                                }
                            }
                        },
                        "name": "query - 3 - Copy"
                    },
                    {
                        "type": 1,
                        "content": {
                            "json": "<tr><td><h2 style=\"font-family: 'Enriqueta', arial, serif; line-height: 1.25; margin: 0 0 10px; font-size: 24px; font-weight: bold;\"><B>Spool Output Actions</b></h2>\r\n<tr><td><p style=\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\"><B>Identifies multiple spool outputs for a user within a specific timerange.</b></p>"
                        },
                        "name": "text - 4"
                    },
                    {
                        "type": 9,
                        "content": {
                            "version": "KqlParameterItem/1.0",
                            "parameters": [
                                {
                                    "id": "86744350-b2b6-417e-9c2b-01d3315933a8",
                                    "version": "KqlParameterItem/1.0",
                                    "name": "threshold2",
                                    "label": "Threshold for Multiple Output Spool Executions",
                                    "type": 1,
                                    "typeSettings": {
                                        "paramValidationRules": [
                                            {
                                                "regExp": "\\d",
                                                "match": true,
                                                "message": "Enter a number to determine multiple spool output threshold"
                                            }
                                        ]
                                    },
                                    "timeContext": {
                                        "durationMs": 86400000
                                    },
                                    "value": "3"
                                }
                            ],
                            "style": "formVertical",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "parameters - 16"
                    },
                    {
                        "type": 3,
                        "content": {
                            "version": "KqlItem/1.0",
                            "query": "// Define variables\r\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messeges of connect with user\r\nlet HoursBucket = 2h; // // How much time between buckets\r\n// Query logic\r\nlet LastLogin =\r\nSAPAuditLog\r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID in ({Systems}) or  '*' in ({Systems}))\r\n| where MessageID in (AuditLogIn)\r\n| summarize arg_max(TimeGenerated, *) by SystemID, ClientID, User; // Get last connection date for user\r\nSAPSpoolOutputLog // Get all spool outputs\r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID in ({Systems}) or  '*' in ({Systems}))\r\n| summarize UserPrints = count() by bin(TimeGenerated, HoursBucket), SystemID, ClientID, User\r\n| where UserPrints >= toint(\"{threshold2}\") // User requested to print more than threshold\r\n| lookup kind=inner LastLogin on User // Get IP of last login\r\n| project TimeGenerated, SystemID, ClientID, User, AccountCustomEntity = Email, IPCustomEntity = TerminalIPv6, HostCustomEntity = Host, UserPrints",
                            "size": 1,
                            "title": "Multiple Spool Output Executions (Press to Investigate)",
                            "exportFieldName": "User_s",
                            "exportParameterName": "User2",
                            "exportDefaultValue": "SAP",
                            "showExportToExcel": true,
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "gridSettings": {
                                "formatters": [
                                    {
                                        "columnMatch": "User_s",
                                        "formatter": 18,
                                        "formatOptions": {
                                            "thresholdsOptions": "icons",
                                            "thresholdsGrid": [
                                                {
                                                    "operator": "Default",
                                                    "thresholdValue": "Medium",
                                                    "representation": "info",
                                                    "text": "{0}{1}"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        "name": "query - 5"
                    },
                    {
                        "type": 3,
                        "content": {
                            "version": "KqlItem/1.0",
                            "query": "SAPSpoolOutputLog\r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID in ({Systems}) or  '*' in ({Systems}))\r\n| where User == \"{User2}\"\r\n| project TimeGenerated,SystemID, ClientID, User, SpoolRequestNumber, OutputRequestNumber, OutputDevice, FormatType",
                            "size": 1,
                            "title": "{User2} Output Spool Executions",
                            "showExportToExcel": true,
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                            "parameterName": "User2",
                            "comparison": "isNotEqualTo",
                            "value": "SAP"
                        },
                        "name": "query - 7"
                    },
                    {
                        "type": 3,
                        "content": {
                            "version": "KqlItem/1.0",
                            "query": "// Define variables\r\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messeges of connect with user\r\nlet NumberOfPrints = 3; // Number of prints as threshold\r\nlet HoursBucket = 2h; // // How much time between buckets\r\n// Query logic\r\nlet LastLogin =\r\nSAPAuditLog\r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID in ({Systems}) or  '*' in ({Systems}))\r\n| where MessageID in (AuditLogIn)\r\n| summarize arg_max(TimeGenerated, *) by SystemID, ClientID, User; // Get last connection date for user\r\nSAPSpoolOutputLog // Get all spool outputs\r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID in ({Systems}) or  '*' in ({Systems}))\r\n| where User == \"{User2}\"\r\n| summarize UserPrints = count() by bin(TimeGenerated, HoursBucket), User",
                            "size": 1,
                            "title": "{User2} Spool Output Executions by Time",
                            "color": "redBright",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "timechart"
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                            "parameterName": "User2",
                            "comparison": "isNotEqualTo",
                            "value": "SAP"
                        },
                        "name": "query - 5 - Copy"
                    },
                    {
                        "type": 3,
                        "content": {
                            "version": "KqlItem/1.0",
                            "query": "// Define variables\r\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\r\n// Query logic\r\nlet LastLogin = \r\nSAPAuditLog\r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID in ({Systems}) or  '*' in ({Systems}))\r\n| where MessageID in (AuditLogIn)\r\n| summarize TimeGenerated = arg_max(TimeGenerated, *) by SystemID, ClientID, User; // Get last connection date for user\r\n// Query Logic\r\nSAPSpoolOutputLog // Get all spool outputs\r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID in ({Systems}) or  '*' in ({Systems}))\r\n| lookup kind=inner SAPSpoolLog on SpoolRequestNumber\r\n| lookup kind=inner LastLogin on User\r\n| where User != User1 // The user that created the request is not the one that printed it\r\n| project TimeGenerated, SystemID, ClientID, UserCreated = User1, UserPrinted = User, SpoolRequestNumber, AccountCustomEntity = Email, IPCustomEntity = TerminalIPv6, HostCustomEntity = Host",
                            "size": 1,
                            "title": "Spool Takeover -  User Prints a Spool Request which was Created by Other User",
                            "showExportToExcel": true,
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "table"
                        },
                        "name": "query - 8"
                    },
                    {
                        "type": 1,
                        "content": {
                            "json": "<tr><td><h2 style=\"font-family: 'Enriqueta', arial, serif; line-height: 1.25; margin: 0 0 10px; font-size: 24px; font-weight: bold;\"><B>Downloads</b></h2>\r\n<tr><td><p style=\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\"><B>Identifies multiple files downloads for a user within a specific timerange.</b></p>"
                        },
                        "name": "text - 9"
                    },
                    {
                        "type": 9,
                        "content": {
                            "version": "KqlParameterItem/1.0",
                            "parameters": [
                                {
                                    "id": "f5e82a34-aefe-4331-92e4-1a976742d3e7",
                                    "version": "KqlParameterItem/1.0",
                                    "name": "threshold3",
                                    "label": "Threshold for Multiple Downloads",
                                    "type": 1,
                                    "typeSettings": {
                                        "paramValidationRules": [
                                            {
                                                "regExp": "\\d",
                                                "match": true,
                                                "message": "Enter a number to determine multiple downloads threshold"
                                            }
                                        ]
                                    },
                                    "timeContext": {
                                        "durationMs": 86400000
                                    },
                                    "value": "3"
                                }
                            ],
                            "style": "formVertical",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "parameters - 17"
                    },
                    {
                        "type": 3,
                        "content": {
                            "version": "KqlItem/1.0",
                            "query": "// Define variables\r\nlet HoursBucket = 2h; // How much time between buckets\r\nlet AuditClasses = dynamic([\"AUY\"]); // Relevant message\r\n// Query logic\r\nSAPAuditLog // Get all downloads\r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID in ({Systems}) or  '*' in ({Systems}))\r\n| where MessageID in (AuditClasses)\r\n| summarize DownloadsByUser = count() by bin(TimeGenerated, HoursBucket), SystemID, ClientID, User, TerminalIPv6, Email, Host\r\n| where DownloadsByUser >= toint(\"{threshold3}\") // User downloaded more than threshold\r\n| project SystemID, ClientID, User, AccountCustomEntity = Email, IPCustomEntity = TerminalIPv6, HostCustomEntity = Host,DownloadsByUser",
                            "size": 1,
                            "title": "Multiple Files Download (Press to Investigate)",
                            "exportFieldName": "User_s",
                            "exportParameterName": "User3",
                            "exportDefaultValue": "SAP",
                            "showExportToExcel": true,
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "table",
                            "gridSettings": {
                                "formatters": [
                                    {
                                        "columnMatch": "User_s",
                                        "formatter": 18,
                                        "formatOptions": {
                                            "thresholdsOptions": "icons",
                                            "thresholdsGrid": [
                                                {
                                                    "operator": "Default",
                                                    "thresholdValue": "Medium",
                                                    "representation": "info",
                                                    "text": "{0}{1}"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        "name": "query - 10"
                    },
                    {
                        "type": 3,
                        "content": {
                            "version": "KqlItem/1.0",
                            "query": "let AuditClasses = dynamic([\"AUY\"]); // Relevant message\r\n// Query logic\r\nSAPAuditLog // Get all downloads\r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID in ({Systems}) or  '*' in ({Systems}))\r\n| where MessageID in (AuditClasses)\r\n| where User == \"{User3}\"\r\n| project SystemID, ClientID, User, AccountCustomEntity = Email, IPCustomEntity = TerminalIPv6, HostCustomEntity = Host,ABAPProgramName, MessageText, Path = Variable3",
                            "size": 1,
                            "title": "{User3} Downloads from System",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                            "parameterName": "User3",
                            "comparison": "isNotEqualTo",
                            "value": "SAP"
                        },
                        "name": "query - 12"
                    },
                    {
                        "type": 3,
                        "content": {
                            "version": "KqlItem/1.0",
                            "query": "// Define variables\r\nlet NumberOfDownloads = 10; // Number of downloads of user as threshold\r\nlet HoursBucket = 2h; // How much time between buckets\r\nlet AuditClasses = dynamic([\"AUY\"]); // Relevant message\r\n// Query logic\r\nSAPAuditLog // Get all downloads\r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID in ({Systems}) or  '*' in ({Systems}))\r\n| where User == \"{User3}\"\r\n| where MessageID in (AuditClasses)\r\n| summarize DownloadsByUser = count() by bin(TimeGenerated, HoursBucket), User",
                            "size": 1,
                            "title": "{User3} Downloads By Time",
                            "color": "redBright",
                            "showExportToExcel": true,
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "timechart"
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                            "parameterName": "User3",
                            "comparison": "isNotEqualTo",
                            "value": "SAP"
                        },
                        "name": "query - 10 - Copy"
                    },
                    {
                        "type": 3,
                        "content": {
                            "version": "KqlItem/1.0",
                            "query": "let AuditClasses = dynamic([\"AUY\"]); // Relevant message\r\n// Query logic\r\nSAPAuditLog // Get all downloads\r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID in ({Systems}) or  '*' in ({Systems}))\r\n| where MessageID in (AuditClasses)\r\n| summarize count() by User",
                            "size": 0,
                            "title": "Downloads by User",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "barchart"
                        },
                        "name": "query - 12 - Copy"
                    }
                ]
            },
            "conditionalVisibility": {
                "parameterName": "wb-param",
                "comparison": "isEqualTo",
                "value": "spd"
            },
            "name": "group - 2"
        },
        {
            "type": 12,
            "content": {
                "version": "NotebookGroup/1.0",
                "groupType": "editable",
                "items": [
                    {
                        "type": 1,
                        "content": {
                            "json": "<tr><td><h2 style=\"font-family: 'Enriqueta', arial, serif; line-height: 1.25; margin: 0 0 10px; font-size: 24px; font-weight: bold;\"><B>FTP</b></h2>\r\n<tr><td><p style=\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\"><B>Identifies suspicious activity related to FTP.</b></p>"
                        },
                        "name": "text - 3"
                    },
                    {
                        "type": 3,
                        "content": {
                            "version": "KqlItem/1.0",
                            "query": "// Define variables\r\nlet AuditClasses = dynamic(['DU8']); // Message of Successfull FTP Connection\r\nlet FTPSafeConnections = _GetWatchlist(\"SAP - FTP Servers\");\r\nlet fixedConnections = datatable(Client: string, Description: string,\r\nFTP_Server_Name: string, FTP_Server_Port: string)\r\n    // Maintain these if WatchList is not available    \r\n    [100, \"description\", \"http://ourorgftpserver.com/\", 22]\r\n;\r\nlet UnitedConnections = toscalar(union kind=outer isfuzzy = ture FTPSafeConnections, fixedConnections | summarize Connections = make_set(FTP_Server_Name));\r\n// Query logic\r\nSAPAuditLog\r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID in ({Systems}) or  '*' in ({Systems})) \r\n| where MessageID in (AuditClasses)\r\n| where TerminalIPv6 !in (UnitedConnections) // The IP is unknown\r\n| project TimeGenerated, SystemID, ClientID, User, AccountCustomEntity = Email,IPCustomEntity = TerminalIPv6, HostCustomEntity = Host, MessageText, Server = Variable1",
                            "size": 1,
                            "title": "FTP for Non Authorized Servers (Press to Investigate)",
                            "exportFieldName": "User_s",
                            "exportParameterName": "User1",
                            "exportDefaultValue": "SAP",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "gridSettings": {
                                "formatters": [
                                    {
                                        "columnMatch": "Server",
                                        "formatter": 18,
                                        "formatOptions": {
                                            "thresholdsOptions": "icons",
                                            "thresholdsGrid": [
                                                {
                                                    "operator": "Default",
                                                    "thresholdValue": "Medium",
                                                    "representation": "2",
                                                    "text": "{0}{1}"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        "name": "query - 2"
                    },
                    {
                        "type": 3,
                        "content": {
                            "version": "KqlItem/1.0",
                            "query": "// Define variables\r\nlet AuditClasses = dynamic(['DU8']); // Message of Successfull FTP Connection\r\nlet FTPSafeConnections = _GetWatchlist(\"SAP - FTP Servers\");\r\nlet fixedConnections = datatable(Client: string, Description: string,\r\nFTP_Server_Name: string, FTP_Server_Port: string)\r\n    // Maintain these if WatchList is not available    \r\n    [100, \"description\", \"http://ourorgftpserver.com/\", 22]\r\n;\r\nlet UnitedConnections = toscalar(union kind=outer isfuzzy=true FTPSafeConnections, fixedConnections | summarize Connections = make_set(FTP_Server_Name));\r\n// Query logic\r\nSAPAuditLog\r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID in ({Systems}) or  '*' in ({Systems})) \r\n| where MessageID in (AuditClasses)\r\n| where TerminalIPv6 !in (UnitedConnections) // The IP is unknown\r\n| summarize count() by Server = Variable1\r\n",
                            "size": 1,
                            "title": "Unauthorized Servers FTP Connections",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "barchart",
                            "graphSettings": {
                                "type": 0
                            },
                            "chartSettings": {
                                "ySettings": {
                                    "max": 10
                                }
                            },
                            "mapSettings": {
                                "locInfo": "LatLong",
                                "sizeSettings": "count_",
                                "sizeAggregation": "Sum",
                                "legendMetric": "count_",
                                "legendAggregation": "Sum",
                                "itemColorSettings": {
                                    "type": "heatmap",
                                    "colorAggregation": "Sum",
                                    "nodeColorField": "count_",
                                    "heatmapPalette": "greenRed"
                                }
                            }
                        },
                        "customWidth": "50",
                        "name": "query - 2 - Copy"
                    },
                    {
                        "type": 3,
                        "content": {
                            "version": "KqlItem/1.0",
                            "query": "SAPAuditLog \r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID in ({Systems}) or  '*' in ({Systems}))\r\n| where User=='{User1}'\r\n| order by TimeGenerated desc\r\n| project TimeGenerated, SystemID, ClientID, MessageID ,MessageClass, MessageText\r\n| take 20",
                            "size": 1,
                            "title": "Detailed Activity of Suspicious User: {User1}",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "table",
                            "graphSettings": {
                                "type": 0
                            },
                            "mapSettings": {
                                "locInfo": "LatLong",
                                "sizeSettings": "count_",
                                "sizeAggregation": "Sum",
                                "legendMetric": "count_",
                                "legendAggregation": "Sum",
                                "itemColorSettings": {
                                    "type": "heatmap",
                                    "colorAggregation": "Sum",
                                    "nodeColorField": "count_",
                                    "heatmapPalette": "greenRed"
                                }
                            }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                            "parameterName": "User1",
                            "comparison": "isNotEqualTo",
                            "value": "SAP"
                        },
                        "name": "query - 2 - Copy - Copy"
                    },
                    {
                        "type": 3,
                        "content": {
                            "version": "KqlItem/1.0",
                            "query": "// Define variables\r\nlet AuditClasses = dynamic(['DU1', 'DU2']); // Messages of FTP Whitelist is empty / Contains Placeholders\r\n// Query logic\r\nSAPAuditLog\r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID in ({Systems}) or  '*' in ({Systems})) \r\n| where MessageID in (AuditClasses)\r\n| project TimeGenerated, SystemID, ClientID, User, AccountCustomEntity = Email, IPCustomEntity = TerminalIPv6, HostCustomEntity = Host, Reason = MessageText",
                            "size": 1,
                            "title": "Insecure FTP Servers Configuration (Press to Investigate)",
                            "exportFieldName": "User_s",
                            "exportParameterName": "User2",
                            "exportDefaultValue": "SAP",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "query - 1"
                    },
                    {
                        "type": 3,
                        "content": {
                            "version": "KqlItem/1.0",
                            "query": "// Define variables\r\nlet AuditClasses = dynamic(['DU1', 'DU2']); // Messages of FTP Whitelist is empty / Contains Placeholders\r\n// Query logic\r\nSAPAuditLog\r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID in ({Systems}) or  '*' in ({Systems})) \r\n| where MessageID in (AuditClasses)\r\n| summarize Number_Of_Events = count() by bin(TimeGenerated, 1h)",
                            "size": 1,
                            "title": "Insecure FTP Servers Configuration by Time",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "timechart"
                        },
                        "customWidth": "50",
                        "name": "query - 1 - Copy"
                    },
                    {
                        "type": 3,
                        "content": {
                            "version": "KqlItem/1.0",
                            "query": "SAPAuditLog \r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID in ({Systems}) or  '*' in ({Systems}))\r\n| where User=='{User2}'\r\n| order by TimeGenerated desc\r\n| project TimeGenerated, SystemID, ClientID, MessageID ,MessageClass, MessageText\r\n| take 20",
                            "size": 1,
                            "title": "Detailed Activity of Suspicious User: {User2}",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "table"
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                            "parameterName": "User2",
                            "comparison": "isNotEqualTo",
                            "value": "SAP"
                        },
                        "name": "query - 1 - Copy - Copy"
                    },
                    {
                        "type": 3,
                        "content": {
                            "version": "KqlItem/1.0",
                            "query": "// Define variables\r\nlet AuditClasses = dynamic(['DU1', 'DU2']); // Messages of FTP Whitelist is empty / Contains Placeholders\r\n// Query logic\r\nSAPAuditLog\r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID in ({Systems}) or  '*' in ({Systems})) \r\n| where MessageID in (AuditClasses)\r\n| summarize Number_Of_Events = count() by bin(TimeGenerated, 1h)\r\n| make-series Number_Of_Events=avg(Number_Of_Events) on TimeGenerated from ago(30d) to ago(0d) step 1h\r\n| extend (Anomalies, Score, Baseline) = series_decompose_anomalies(Number_Of_Events, 1.5, -1, 'linefit')\r\n| project-away Score\r\n",
                            "size": 1,
                            "title": "Insecure FTP Servers Configuration Anomalies",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "timechart"
                        },
                        "name": "query - 1 - Copy - Copy"
                    },
                    {
                        "type": 1,
                        "content": {
                            "json": "<tr><td><h2 style=\"font-family: 'Enriqueta', arial, serif; line-height: 1.25; margin: 0 0 10px; font-size: 24px; font-weight: bold;\"><B>Dynamic RFC</b></h2>\r\n<tr><td><p style=\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\"><B>Identifies execution of RFC using dynamic destinations.</b></p>"
                        },
                        "name": "text - 4"
                    },
                    {
                        "type": 3,
                        "content": {
                            "version": "KqlItem/1.0",
                            "query": "// Define variables\r\nlet AuditClasses = dynamic(['FU1']); // Message of dynamic RFC execution using dynamic destination\r\n// Query logic\r\nSAPAuditLog\r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID in ({Systems}) or  '*' in ({Systems})) \r\n| where MessageID in (AuditClasses)\r\n| parse Variable3 with \"id=\" Created_RFC_Name\r\n| project TimeGenerated, SystemID, ClientID, User, AccountCustomEntity = Email, IPCustomEntity = TerminalIPv6, HostCustomEntity = Host, ABAPProgramName, ExecutedProgram = Variable2, Created_RFC_Name",
                            "size": 1,
                            "title": "Dynamic RFC Destination",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "query - 0"
                    },
                    {
                        "type": 3,
                        "content": {
                            "version": "KqlItem/1.0",
                            "query": "// Define variables\r\nlet AuditClasses = dynamic(['FU1']); // Message of dynamic RFC execution using dynamic destination\r\n// Query logic\r\nSAPAuditLog\r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID in ({Systems}) or  '*' in ({Systems})) \r\n| where MessageID in (AuditClasses)\r\n| parse Variable3 with \"id=\" Created_RFC_Name\r\n| summarize Dynamic_RFC_Created = count() by bin(TimeGenerated, 1h)",
                            "size": 1,
                            "title": "Dynamic RFC Destination Creation by Time",
                            "color": "green",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "visualization": "timechart"
                        },
                        "name": "query - 0 - Copy"
                    },
                    {
                        "type": 1,
                        "content": {
                            "json": "<tr><td><h2 style=\"font-family: 'Enriqueta', arial, serif; line-height: 1.25; margin: 0 0 10px; font-size: 24px; font-weight: bold;\"><B>User Admin</b></h2>\r\n<tr><td><p style=\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\"><B>User admin actions such as create/delete/update user.</b></p>"
                        },
                        "name": "text - 6"
                    },
                    {
                        "type": 3,
                        "content": {
                            "version": "KqlItem/1.0",
                            "query": "Syslog \r\n| where TimeGenerated {TimeSelect}\r\n| where ProcessName startswith \"HDB\"\r\n| where SyslogMessage contains \"CREATE USER\" or \r\n    SyslogMessage contains 'ALTER USER' or \r\n    SyslogMessage contains 'DROP USER' or \r\n    SyslogMessage contains 'DROP SCHEMA'\r\n| project TimeGenerated, HostIP, SyslogMessage, ProcessName",
                            "size": 1,
                            "title": "HANA DB - User Admin Actions",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "query - 5"
                    }
                ]
            },
            "conditionalVisibility": {
                "parameterName": "wb-param",
                "comparison": "isEqualTo",
                "value": "ftp"
            },
            "name": "group - 4"
        }
    ],
    "fallbackResourceIds": [
        "/subscriptions/fdee8146-8bcf-460f-86f3-3f788c285efd/resourcegroups/p_yoavdaniely/providers/microsoft.operationalinsights/workspaces/saplookalike"
    ],
    "fromTemplateId": "sentinel-SAP-PersistencyDataexfiltration",
    "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}