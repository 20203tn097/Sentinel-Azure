{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "3218e2b0-1bcc-46d4-affa-d298e0cf90f6",
            "version": "KqlParameterItem/1.0",
            "name": "Help",
            "label": "üîé Guide",
            "type": 10,
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n    {\"value\": \"Yes\", \"label\": \"Yes\", \"selected\":true},\r\n    {\"value\": \"No\", \"label\": \"No\"}\r\n]",
            "value": "No"
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "DefaultSubscription_Internal",
            "type": 1,
            "isRequired": true,
            "query": "where type =~ 'microsoft.operationalinsights/workspaces'\r\n| take 1\r\n| project subscriptionId",
            "isHiddenWhenLocked": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "id": []
          },
          {
            "id": "e6ded9a1-a83c-4762-938d-5bf8ff3d3d38",
            "version": "KqlParameterItem/1.0",
            "name": "Subscription",
            "type": 6,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "summarize by subscriptionId\r\n| project value = strcat(\"/subscriptions/\", subscriptionId), label = subscriptionId, selected = iff(subscriptionId =~ '{DefaultSubscription_Internal}', true, false)",
            "crossComponentResources": [
              "value::selected"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "value": [
              "value::all"
            ]
          },
          {
            "id": "e3225ed0-6210-40a1-b2d0-66e42ffa71d6",
            "version": "KqlParameterItem/1.0",
            "name": "Workspace",
            "type": 5,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "resources\r\n| where type =~ 'microsoft.operationalinsights/workspaces'\r\n| order by name asc\r\n| summarize Selected = makelist(id, 10), All = makelist(id, 1000)\r\n| mvexpand All limit 100\r\n| project value = tostring(All), label = tostring(All), selected = iff(Selected contains All, true, false)",
            "crossComponentResources": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "value": [
              "value::all"
            ]
          },
          {
            "id": "15b2c181-7397-43c1-900a-28e175ae8a6f",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "label": "‚è±Ô∏è Time Range",
            "type": 4,
            "isRequired": true,
            "value": {
              "durationMs": 7776000000
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2592000000
                },
                {
                  "durationMs": 5184000000
                },
                {
                  "durationMs": 7776000000
                }
              ],
              "allowCustom": true
            }
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "name": "Parameter Selectors"
    },
    {
      "type": 1,
      "content": {
        "json": "<svg viewBox=\"0 0 19 19\" width=\"20\" class=\"fxt-escapeShadow\" role=\"presentation\" focusable=\"false\" xmlns:svg=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-hidden=\"true\"><g><path fill=\"#1b93eb\" d=\"M16.82 8.886c0 4.81-5.752 8.574-7.006 9.411a.477.477 0 01-.523 0C8.036 17.565 2.18 13.7 2.18 8.886V3.135a.451.451 0 01.42-.419C7.2 2.612 6.154.625 9.5.625s2.3 1.987 6.8 2.091a.479.479 0 01.523.419z\"></path><path fill=\"url(#0024423711759027356)\" d=\"M16.192 8.99c0 4.392-5.333 7.947-6.483 8.575a.319.319 0 01-.418 0c-1.15-.732-6.483-4.183-6.483-8.575V3.762a.575.575 0 01.313-.523C7.2 3.135 6.258 1.357 9.4 1.357s2.2 1.882 6.274 1.882a.45.45 0 01.419.418z\"></path><path d=\"M9.219 5.378a.313.313 0 01.562 0l.875 1.772a.314.314 0 00.236.172l1.957.284a.314.314 0 01.174.535l-1.416 1.38a.312.312 0 00-.09.278l.334 1.949a.313.313 0 01-.455.33l-1.75-.92a.314.314 0 00-.292 0l-1.75.92a.313.313 0 01-.455-.33L7.483 9.8a.312.312 0 00-.09-.278L5.977 8.141a.314.314 0 01.174-.535l1.957-.284a.314.314 0 00.236-.172z\" class=\"msportalfx-svg-c01\"></path></g></svg>&nbsp;<span style=\"font-family: Open Sans; font-weight: 620; font-size: 14px;font-style: bold;margin:-10px 0px 0px 0px;position: relative;top:-3px;left:-4px;\"> Please take time to answer a quick survey,\r\n</span>[<span style=\"font-family: Open Sans; font-weight: 620; font-size: 14px;font-style: bold;margin:-10px 0px 0px 0px;position: relative;top:-3px;left:-4px;\"> click here. </span>](https://forms.office.com/r/NXQxaCxzFi)"
      },
      "name": "Survey"
    },
    {
      "type": 1,
      "content": {
        "json": "# Insider Risk Management\n---\n\nInsider risk management helps minimize internal risks by enabling you to detect, investigate, and act on malicious and inadvertent activities in your organization. Insider risk policies allow you to define the types of risks to identify and detect in your organization, including acting on cases and escalating cases to Microsoft Advanced eDiscovery. Risk analysts in your organization can quickly take appropriate actions to make sure users are compliant with your organization's compliance standards. Insider risks come in various forms including both witting (intentional) and unwitting (unintentional). This workbook provides an automated visualization of Insider risk behavior cross walked to Microsoft security offerings. \n\nThis solution is enhanced when integrated with complimentary Microsoft Offerings such asüí°[Insider Risk Management](https://docs.microsoft.com/microsoft-365/compliance/insider-risk-management-solution-overview), üí°[Communications Compliance](https://docs.microsoft.com/microsoft-365/compliance/communication-compliance-solution-overview), üí°[Microsoft Information Protection](https://docs.microsoft.com/microsoft-365/compliance/information-protection), üí°[Advanced eDiscovery](https://docs.microsoft.com/microsoft-365/compliance/ediscovery), and üí°[Azure Sentinel Notebooks](https://docs.microsoft.com/azure/sentinel/notebooks). This workbook enables Insider Risk Teams, SecOps Analysts, and MSSPs to gain situational awareness for cloud workload security posture. This workbook is designed to augment staffing through automation, artificial intelligence, machine learning, query/alerting generation and visualizations. For more information, seeüí° [Insider Risk Management]( https://docs.microsoft.com/microsoft-365/compliance/insider-risk-management-solution-overview)\n"
      },
      "conditionalVisibility": {
        "parameterName": "Help",
        "comparison": "isEqualTo",
        "value": "Yes"
      },
      "customWidth": "75",
      "name": "text - 2",
      "styleSettings": {
        "maxWidth": "75"
      }
    },
    {
      "type": 1,
      "content": {
        "json": "![Image Name](https://azure.microsoft.com/svghandler/azure-sentinel?width=600&height=315) "
      },
      "conditionalVisibility": {
        "parameterName": "Help",
        "comparison": "isEqualTo",
        "value": "Yes"
      },
      "customWidth": "21",
      "name": "Azure Sentinel Logo"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "18c690d7-7cbd-46c1-b677-1f72692d40cd",
                  "cellValue": "TAB",
                  "linkTarget": "parameter",
                  "linkLabel": "Overview",
                  "subTarget": "OV",
                  "preText": "Alert rules",
                  "style": "link"
                },
                {
                  "id": "94d4ab9a-4ec7-4e4b-a69d-b6acb5cccd62",
                  "cellValue": "TAB",
                  "linkTarget": "parameter",
                  "linkLabel": "Insider Risk",
                  "subTarget": "IR",
                  "style": "link"
                },
                {
                  "id": "aca04db4-7e65-4ed7-8f55-1e473eb34574",
                  "cellValue": "TAB",
                  "linkTarget": "parameter",
                  "linkLabel": "Watchlist",
                  "subTarget": "WL",
                  "style": "link"
                },
                {
                  "id": "22ae20ce-0142-4784-9b48-e0f74bf705b4",
                  "cellValue": "TAB",
                  "linkTarget": "parameter",
                  "linkLabel": "User Forensics",
                  "subTarget": "UP",
                  "style": "link"
                }
              ]
            },
            "customWidth": "30",
            "name": "IRM Tabs Link"
          },
          {
            "type": 1,
            "content": {
              "json": "#### [Go To > Open Microsoft 365 Insider Risk Management Case](https://compliance.microsoft.com/insiderriskmgmt)<br>\r\n#### [Go To > Open Microsoft 365 Communications Compliance Report](https://compliance.microsoft.com/supervisoryreview)\r\n"
            },
            "customWidth": "50",
            "name": "text - 5"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "## Common Insider Risks\r\n![Image Name](https://docs.microsoft.com/microsoft-365/media/ir-solution-threats.png)\r\n\r\nFor more information, see üí° [Insider Risk Solutions in Microsoft 365](https://docs.microsoft.com/microsoft-365/compliance/insider-risk-solution-overview)\r\n\r\n"
                  },
                  "customWidth": "50",
                  "name": "text - 179",
                  "styleSettings": {
                    "maxWidth": "50"
                  }
                },
                {
                  "type": 1,
                  "content": {
                    "json": "## Insider Risk Workflows\r\n![Image Name](https://docs.microsoft.com/microsoft-365/media/insider-risk-workflow.png) \r\n\r\nFor more information, see üí° [Insider Risk Management Workflows](https://docs.microsoft.com/microsoft-365/compliance/insider-risk-management#workflow)\r\n\r\n\r\n"
                  },
                  "customWidth": "50",
                  "name": "text - 179",
                  "styleSettings": {
                    "maxWidth": "50"
                  }
                },
                {
                  "type": 1,
                  "content": {
                    "json": "## Deploy Microsoft 365 Insider Risk Solutions\r\n![Image Name](https://docs.microsoft.com/microsoft-365/media/ir-solution-defense-in-depth.png)\r\n\r\nFor more information, see üí° [Deploy Microsoft 365 Insider Risk Solutions](https://docs.microsoft.com/microsoft-365/compliance/insider-risk-solution-overview?#deploy-microsoft-365-insider-risk-solutions)\r\n\r\n"
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {
                    "parameterName": "TAB",
                    "comparison": "isEqualTo",
                    "value": "OV"
                  },
                  "name": "text - 179",
                  "styleSettings": {
                    "maxWidth": "50"
                  }
                },
                {
                  "type": 1,
                  "content": {
                    "json": "## Implement Communication Compliance to Detect, Capture, and Act on Inappropriate Messages\r\n![Image Name](https://docs.microsoft.com/microsoft-365/media/ir-solution-cc-steps.png) \r\n\r\nFor more information, see üí° [Communication Compliance in Microsoft 365](https://docs.microsoft.com//microsoft-365/compliance/communication-compliance-solution-overview)\r\n\r\n\r\n"
                  },
                  "customWidth": "50",
                  "name": "text - 179",
                  "styleSettings": {
                    "maxWidth": "50"
                  }
                },
                {
                  "type": 1,
                  "content": {
                    "json": "## Implement Microsoft Information Protection for Data Loss Prevention (DLP)\r\n![Image Name](https://docs.microsoft.com/microsoft-365/media/powered-by-intelligent-platform.png) \r\n\r\nFor more information, see üí° [Microsoft Information Protection](https://docs.microsoft.com/microsoft-365/compliance/information-protection)\r\n\r\n\r\n"
                  },
                  "customWidth": "50",
                  "name": "text - 179",
                  "styleSettings": {
                    "maxWidth": "50"
                  }
                },
                {
                  "type": 1,
                  "content": {
                    "json": "## Implement Advanced eDiscovery to Preserve, Collect, Analyze, Review, and Export Content For Internal/External Investigations\r\n![Image Name](https://docs.microsoft.com/microsoft-365/media/aedworkflow.png) \r\n\r\nFor more information, see üí° [Advanced eDiscovery](https://docs.microsoft.com/microsoft-365/compliance/create-and-manage-advanced-ediscoveryv2-case)\r\n\r\n\r\n"
                  },
                  "customWidth": "50",
                  "name": "text - 179",
                  "styleSettings": {
                    "maxWidth": "50"
                  }
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "TAB",
              "comparison": "isEqualTo",
              "value": "OV"
            },
            "name": "Overview Group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "tabs",
                    "links": [
                      {
                        "id": "ed3412be-0d0c-457b-8ddd-2d812aadf5b8",
                        "cellValue": "TAB",
                        "linkTarget": "parameter",
                        "linkLabel": "Insider Risk Management",
                        "subTarget": "IRM",
                        "preText": "",
                        "style": "link"
                      },
                      {
                        "id": "22ae20ce-0142-4784-9b48-e0f74bf705b4",
                        "cellValue": "TAB",
                        "linkTarget": "parameter",
                        "linkLabel": "User & Entity Behavior Analytics",
                        "subTarget": "UEBA",
                        "style": "link"
                      },
                      {
                        "id": "ad1550ac-1efe-4a39-83ec-d80a01a18580",
                        "cellValue": "TAB",
                        "linkTarget": "parameter",
                        "linkLabel": "Artificial Intelligence & Machine Learning",
                        "subTarget": "AIML",
                        "style": "link"
                      },
                      {
                        "id": "4e503085-a98f-40ba-b00b-f6e5d75aef45",
                        "cellValue": "TAB",
                        "linkTarget": "parameter",
                        "linkLabel": "Sensitive Data Leaks",
                        "subTarget": "SL",
                        "style": "link"
                      },
                      {
                        "id": "27de9753-36b7-4718-98b7-6137b8b81388",
                        "cellValue": "TAB",
                        "linkTarget": "parameter",
                        "linkLabel": "Security Violations",
                        "subTarget": "SV",
                        "style": "link"
                      },
                      {
                        "id": "80ad256f-41ad-4e34-8359-ed333fd8f395",
                        "cellValue": "TAB",
                        "linkTarget": "parameter",
                        "linkLabel": "MITRE ATT&CK Tactics",
                        "subTarget": "MA",
                        "style": "link"
                      }
                    ]
                  },
                  "name": "Risk Activity Tabs Link"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "7afa304d-b448-4d6c-8c54-69e51a7249a9",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results300",
                              "type": 1,
                              "query": "SecurityAlert\r\n| where ProductName == \"Microsoft 365 Insider Risk Management\"\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "100",
                        "name": "Results300",
                        "styleSettings": {
                          "maxWidth": "100"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SecurityAlert\r\n| where ProductName == \"Microsoft 365 Insider Risk Management\"\r\n    | summarize hint.strategy = shuffle arg_max(TimeGenerated, *), NumberOfUpdates = count() by SystemAlertId\r\n    | mv-expand todynamic(Entities)\r\n    | where Entities[\"Type\"] =~ \"account\"\r\n    | extend Name = tostring(tolower(Entities[\"Name\"])), NTDomain = tostring(Entities[\"NTDomain\"]), UPNSuffix = tostring(Entities[\"UPNSuffix\"]), AadUserId = tostring(Entities[\"AadUserId\"]), AadTenantId = tostring(Entities[\"AadTenantId\"]), \r\n        Sid = tostring(Entities[\"Sid\"]), IsDomainJoined = tobool(Entities[\"IsDomainJoined\"]), Host = tostring(Entities[\"Host\"])\r\n    | extend UPN = iff(Name != \"\" and UPNSuffix != \"\", strcat(Name, \"@\", UPNSuffix), \"\")\r\n| extend Href_ = tostring(parse_json(ExtendedLinks)[0].Href)\r\n| extend UserPrincipalName = UPN| where ProductName == \"Microsoft 365 Insider Risk Management\"\r\n| distinct AlertName, ProductName, Status, AlertLink, UserPrincipalName, Tactics, TimeGenerated\r\n| make-series count() default=0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step 1d by AlertName\r\n| render timechart",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Microsoft 365: Insider Risk Management Alerts over Time",
                          "noDataMessage": "There are no results within the selected thresholds (time, workspace, subscription). Confirm Security Alerts are onboarded to Azure Sentinel and see Getting Started with Insider Risk Management for respective IRM configurations (https://docs.microsoft.com/microsoft-365/compliance/insider-risk-management-configure)",
                          "timeContext": {
                            "durationMs": 7776000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "AlertName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "3",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Severity",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "High",
                                      "representation": "red",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Medium",
                                      "representation": "orange",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Low",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "ProductName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "uninitialized",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "AlertLink",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Alert >"
                                }
                              },
                              {
                                "columnMatch": "UPN",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "2",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "IncidentUrl",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Incident >"
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results300",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Yes"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SecurityAlert\r\n| where ProductName == \"Microsoft 365 Insider Risk Management\"\r\n    | summarize hint.strategy = shuffle arg_max(TimeGenerated, *), NumberOfUpdates = count() by SystemAlertId\r\n    | mv-expand todynamic(Entities)\r\n    | where Entities[\"Type\"] =~ \"account\"\r\n    | extend Name = tostring(tolower(Entities[\"Name\"])), NTDomain = tostring(Entities[\"NTDomain\"]), UPNSuffix = tostring(Entities[\"UPNSuffix\"]), AadUserId = tostring(Entities[\"AadUserId\"]), AadTenantId = tostring(Entities[\"AadTenantId\"]), \r\n        Sid = tostring(Entities[\"Sid\"]), IsDomainJoined = tobool(Entities[\"IsDomainJoined\"]), Host = tostring(Entities[\"Host\"])\r\n    | extend UPN = iff(Name != \"\" and UPNSuffix != \"\", strcat(Name, \"@\", UPNSuffix), \"\")\r\n| extend Href_ = tostring(parse_json(ExtendedLinks)[0].Href)\r\n| extend UserPrincipalName = UPN\r\n| summarize count() by UserPrincipalName\r\n| render piechart\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Microsoft 365: Insider Risk Management Alerts by Severity",
                          "noDataMessage": "There are no results within the selected thresholds (time, workspace, subscription). Confirm Security Alerts are onboarded to Azure Sentinel and see Getting Started with Insider Risk Management for respective IRM configurations (https://docs.microsoft.com/microsoft-365/compliance/insider-risk-management-configure)",
                          "timeContext": {
                            "durationMs": 7776000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "AlertName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "3",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "redBright"
                                }
                              },
                              {
                                "columnMatch": "Severity",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "High",
                                      "representation": "red",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Medium",
                                      "representation": "orange",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Low",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "ProductName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "uninitialized",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "AlertLink",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Alert >"
                                }
                              },
                              {
                                "columnMatch": "UPN",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "2",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "IncidentUrl",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Incident >"
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results300",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results300"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SecurityAlert\r\n| where ProductName == \"Microsoft 365 Insider Risk Management\"\r\n    | summarize hint.strategy = shuffle arg_max(TimeGenerated, *), NumberOfUpdates = count() by SystemAlertId\r\n    | mv-expand todynamic(Entities)\r\n    | where Entities[\"Type\"] =~ \"account\"\r\n    | extend Name = tostring(tolower(Entities[\"Name\"])), NTDomain = tostring(Entities[\"NTDomain\"]), UPNSuffix = tostring(Entities[\"UPNSuffix\"]), AadUserId = tostring(Entities[\"AadUserId\"]), AadTenantId = tostring(Entities[\"AadTenantId\"]), \r\n        Sid = tostring(Entities[\"Sid\"]), IsDomainJoined = tobool(Entities[\"IsDomainJoined\"]), Host = tostring(Entities[\"Host\"])\r\n    | extend UPN = iff(Name != \"\" and UPNSuffix != \"\", strcat(Name, \"@\", UPNSuffix), \"\")\r\n| extend Href_ = tostring(parse_json(ExtendedLinks)[0].Href)\r\n| extend UserPrincipalName = UPN\r\n| distinct AlertName, ProductName, Status, AlertLink, UserPrincipalName, Tactics, TimeGenerated\r\n| sort by TimeGenerated desc\r\n| limit 250",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Microsoft 365: Insider Risk Management Alert Details",
                          "noDataMessage": "There are no results within the selected thresholds (time, workspace, subscription). Confirm Security Alerts are onboarded to Azure Sentinel and see Getting Started with Insider Risk Management for respective IRM configurations (https://docs.microsoft.com/microsoft-365/compliance/insider-risk-management-configure)",
                          "timeContext": {
                            "durationMs": 7776000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "AlertName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "3",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "ProductName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "uninitialized",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "AlertLink",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Alert >"
                                }
                              },
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Severity",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "High",
                                      "representation": "red",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Medium",
                                      "representation": "orange",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Low",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "UPN",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "2",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "IncidentUrl",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Incident >"
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "Results300",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Microsoft 365: Insider Risk Management Alerts"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "TAB",
                    "comparison": "isEqualTo",
                    "value": "IRM"
                  },
                  "name": "Insider Risk Management Alerts"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "ac6f7462-59ff-4d82-86b0-0a6eccc35a51",
                              "version": "KqlParameterItem/1.0",
                              "name": "UserPrincipalName",
                              "label": "üîÄ User Selector",
                              "type": 2,
                              "isRequired": true,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "SigninLogs\r\n| summarize by UserPrincipalName ",
                              "value": [
                                "value::all"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 7776000000
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "User Selector Parameter - Copy"
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "7afa304d-b448-4d6c-8c54-69e51a7249a9",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results301",
                              "type": 1,
                              "query": "BehaviorAnalytics\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 604800000
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "25",
                        "name": "Results301",
                        "styleSettings": {
                          "maxWidth": "25"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "819038bd-5d50-4ed8-a1e2-b41e6bea0b73",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results302",
                              "type": 1,
                              "query": "BehaviorAnalytics\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| extend FirstTimeDeviceLogon = tostring(ActivityInsights.FirstTimeUserLoggedOnToDevice)\r\n| extend FirstTimeUserAction = tostring(ActivityInsights.FirstTimeUserPerformedAction)\r\n| extend UncommonAction = tostring(ActivityInsights.ActionUncommonlyPerformedByUser)\r\n| extend UncommonVolumeOfActions = tostring(ActivityInsights.UncommonHighVolumeOfActions)\r\n| where FirstTimeDeviceLogon == \"True\" or FirstTimeUserAction == \"True\" or UncommonAction == \"True\" or UncommonVolumeOfActions == \"True\"\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "25",
                        "name": "Results302",
                        "styleSettings": {
                          "maxWidth": "25"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "814cbbb7-c5a8-4f22-9a09-a92c7d066ef1",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results303",
                              "type": 1,
                              "query": "SigninLogs\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "25",
                        "name": "Results303",
                        "styleSettings": {
                          "maxWidth": "25"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "4c012e1a-bd4b-49f3-9b0f-2e8ff7864531",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results304",
                              "type": 1,
                              "query": "AADUserRiskEvents\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "15",
                        "name": "Results303 - Copy",
                        "styleSettings": {
                          "maxWidth": "15"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "200b8aa0-63e2-4e78-ac38-7c79bc6ca1b0",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results333",
                              "type": 1,
                              "query": "Anomalies\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| extend AnomalyScoring = tostring(AnomalyDetails.Score)\r\n| join (SigninLogs) on UserPrincipalName\r\n| extend UserProfile = strcat(\"https://portal.azure.com/#blade/Microsoft_AAD_IAM/UserDetailsMenuBlade/Profile/userId/\",UserId)\r\n| distinct UserPrincipalName, UserProfile, RuleName, AnomalyScoring, Description, TimeGenerated\r\n| sort by AnomalyScoring desc\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "10",
                        "name": "Results333",
                        "styleSettings": {
                          "maxWidth": "10"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let AnomalousSigninActivity = BehaviorAnalytics\r\n    | where ActionType == \"Sign-in\"\r\n    | where (UsersInsights.NewAccount == True or UsersInsights.DormantAccount == True) and (\r\n        ActivityInsights.FirstTimeUserAccessedResource == True and ActivityInsights.ResourceUncommonlyAccessedAmongPeers == True\r\n        or ActivityInsights.FirstTimeUserUsedApp == True and ActivityInsights.AppUncommonlyUsedAmongPeers == False)\r\n    | join (\r\n        SigninLogs | where Status.errorCode == 0 or Status.errorCode == 0 and RiskDetail != \"none\"\r\n        )\r\n        on $left.SourceRecordId == $right._ItemId\r\n    | extend UserPrincipalName = iff(UserPrincipalName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserPrincipalName),\r\n        UserName = iff(UserName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserName)\r\n    | extend AnomalyName = \"Anomalous Successful Logon\",\r\n        Tactic = \"Persistence\",\r\n        Technique = \"Valid Accounts\",\r\n        SubTechnique = \"\",\r\n        Description = \"Successful Sign-in with one or more of the following indications: sign by new or recently dormant accounts and sign in with resource for the first time (while none of their peers did) or to an app for the first time (while none of their peers did) or performed by a user with Risk indicaiton from AAD\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"Evidence\"]=ActivityInsights, ResourceDisplayName, AppDisplayName, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority; \r\nlet critical = dynamic(['9b895d92-2cd3-44c7-9d02-a6ac2d5ea5c3', 'c4e39bd9-1100-46d3-8c65-fb160da0071f', '158c047a-c907-4556-b7ef-446551a6b5f7', '62e90394-69f5-4237-9190-012177145e10', 'd29b2b05-8046-44ba-8758-1e26182fcf32', '729827e3-9c14-49f7-bb1b-9608f156bbb8', '966707d0-3269-4727-9be2-8c3a10f19b9d', '194ae4cb-b126-40b2-bd5b-6091b380977d', 'fe930be7-5e62-47db-91af-98c3a49a38b1']);\r\nlet high = dynamic(['cf1c38e5-3621-4004-a7cb-879624dced7c', '7495fdc4-34c4-4d15-a289-98788ce399fd', 'aaf43236-0c0d-4d5f-883a-6955382ac081', '3edaf663-341e-4475-9f94-5c398ef6c070', '7698a772-787b-4ac8-901f-60d6b08affd2', 'b1be1c3e-b65d-4f19-8427-f6fa0d97feb9', '9f06204d-73c1-4d4c-880a-6edb90606fd8', '29232cdf-9323-42fd-ade2-1d097af3e4de', 'be2f45a1-457d-42af-a067-6ec1fa63bc45', '7be44c8a-adaf-4e2a-84d6-ab2649e08a13', 'e8611ab8-c189-46e8-94e1-60213ab1f814']);//witdstomstl\r\nlet AnomalousRoleAssignment = AuditLogs\r\n    | where TimeGenerated > ago(28d)\r\n    | where OperationName == \"Add member to role\"\r\n    | mv-expand TargetResources\r\n    | extend RoleId = tostring(TargetResources.modifiedProperties[0].newValue)\r\n    | where isnotempty(RoleId) and RoleId in (critical, high)\r\n    | extend RoleName = tostring(TargetResources.modifiedProperties[1].newValue)\r\n    | where isnotempty(RoleName)\r\n    | extend TargetId = tostring(TargetResources.id)\r\n    | extend Target = tostring(TargetResources.userPrincipalName)\r\n    | join kind=inner (\r\n        BehaviorAnalytics\r\n        | where ActionType == \"Add member to role\"\r\n        | where UsersInsights.BlasrRadius == \"High\" or ActivityInsights.FirstTimeUserPerformedAction == true\r\n        )\r\n        on $left._ItemId == $right.SourceRecordId\r\n    | extend AnomalyName = \"Anomalous Role Assignemt\",\r\n        Tactic = \"Persistence\",\r\n        Technique = \"Account Manipulation\",\r\n        SubTechnique = \"\",\r\n        Description = \"Adversaries may manipulate accounts to maintain access to victim systems. These actions include adding new accounts to high privilleged groups. Dragonfly 2.0, for example, added newly created accounts to the administrators group to maintain elevated access.  The query below generates an output of all high Blast Radius users performing Add member to priveleged role, or ones that add users for the first time.\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"TargetUser\"]=Target, RoleName, [\"Evidence\"]=ActivityInsights, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority; let LogOns=materialize(\r\n    BehaviorAnalytics\r\n    | where ActivityType == \"LogOn\");\r\nlet AnomalousResourceAccess = LogOns\r\n    | where ActionType == \"ResourceAccess\"\r\n    | where ActivityInsights.FirstTimeUserLoggedOnToDevice == true\r\n    | extend AnomalyName = \"Anomalous Resource Access\",\r\n        Tactic = \"Lateral Movement\",\r\n        Technique = \"\",\r\n        SubTechnique = \"\",\r\n        Description = \"Adversary may be trying to move through the environment. APT29 and APT32, for example, has used PtH & PtT techniques to lateral move around the network. The query below generates an output of all users performing an resource access (4624:3) to devices for the first time.\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"Evidence\"]=ActivityInsights, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority; \r\nlet AnomalousRDPActivity = LogOns\r\n    | where ActionType == \"RemoteInteractiveLogon\"\r\n    | where ActivityInsights.FirstTimeUserLoggedOnToDevice == true\r\n    | extend AnomalyName = \"Anomalous RDP Activity\",\r\n        Tactic = \"Lateral Movement\",\r\n        Technique = \"\",\r\n        SubTechnique = \"\",\r\n        Description = \"Adversaries may use Valid Accounts to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user. FIN10, for example, has used RDP to move laterally to systems in the victim environment. The query below generates an output of all users performing a remote interactive logon (4624:10) to a device for the first time.\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"Evidence\"]=ActivityInsights, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority; \r\nlet AnomalousLogintoDevices = LogOns\r\n    | where ActionType == \"InteractiveLogon\"\r\n    | where ActivityInsights.FirstTimeUserLoggedOnToDevice == true\r\n    | where UsersInsights.DormantAccount == true or DevicesInsights.LocalAdmin == true\r\n    | extend AnomalyName = \"Anomalous Login To Devices\",\r\n        Tactic = \"Privilege Escalation\",\r\n        Technique = \"Valid Accounts\",\r\n        SubTechnique = \"\",\r\n        Description = \"Adversaries may steal the credentials of a specific user or service account using Credential Access techniques or capture credentials earlier in their reconnaissance process through social engineering for means of gaining Initial Access. APT33, for example, has used valid accounts for initial access and privilege escalation. The query below generates an output of all administator users performing an interactive logon (4624:2) to a device for the first time.\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"Evidence\"]=ActivityInsights, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority; \r\nlet AnomalousPasswordReset = BehaviorAnalytics\r\n    | where ActionType == \"Reset user password\"\r\n    | where ActivityInsights.FirstTimeUserPerformedAction == \"True\"\r\n    | join (\r\n        AuditLogs\r\n        | where OperationName == \"Reset user password\"\r\n        )\r\n        on $left.SourceRecordId == $right._ItemId\r\n    | mv-expand TargetResources\r\n    | extend Target =  iff(tostring(TargetResources.userPrincipalName) contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(TargetResources.userPrincipalName, \"#\")[0])), TargetResources.userPrincipalName), tostring(TargetResources.userPrincipalName)\r\n    | extend UserPrincipalName = iff(UserPrincipalName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserPrincipalName),\r\n        UserName = iff(UserName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserName)\r\n    | extend AnomalyName = \"Anomalous Password Reset\",\r\n        Tactic = \"Impact\",\r\n        Technique = \"Account Access Removal\",\r\n        SubTechnique = \"\",\r\n        Description = \"Adversaries may interrupt availability of system and network resources by inhibiting access to accounts utilized by legitimate users. Accounts may be deleted, locked, or manipulated (ex: changed credentials) to remove access to accounts. LockerGoga, for example, has been observed changing account passwords and logging off current users. The query below generates an output of all users performing Reset user password for the first time.\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"TargetUser\"]=Target, [\"Evidence\"]=ActivityInsights, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority\r\n    | sort by TimeGenerated desc;\r\nlet AnomalousGeoLocationLogon = BehaviorAnalytics\r\n    | where ActionType == \"Sign-in\"\r\n    | where ActivityInsights.FirstTimeUserConnectedFromCountry == True and (ActivityInsights.FirstTimeConnectionFromCountryObservedInTenant == True or ActivityInsights.CountryUncommonlyConnectedFromAmongPeers == True)\r\n    | join (\r\n        SigninLogs\r\n        )\r\n        on $left.SourceRecordId == $right._ItemId\r\n    | extend UserPrincipalName = iff(UserPrincipalName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserPrincipalName),\r\n        UserName = iff(UserName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserName)\r\n    | extend AnomalyName = \"Anomalous Successful Logon\",\r\n        Tactic = \"Initial Access\",\r\n        Technique = \"Valid Accounts\",\r\n        SubTechnique = \"\",\r\n        Description = \"Adversaries may steal the credentials of a specific user or service account using Credential Access techniques or capture credentials earlier in their reconnaissance process through social engineering for means of gaining Initial Access. APT33, for example, has used valid accounts for initial access. The query below generates an output of successful Sign-in performed by a user from a new geo location he has never connected from before, and none of his peers as well.\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"Evidence\"]=ActivityInsights, ResourceDisplayName, AppDisplayName, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority; \r\nlet AnomalousFailedLogon = BehaviorAnalytics\r\n    | where ActivityType == \"LogOn\"\r\n    | where UsersInsights.BlastRadius == \"High\"\r\n    | join (\r\n        SigninLogs  \r\n        | where Status.errorCode == 50126\r\n        )\r\n        on $left.SourceRecordId == $right._ItemId\r\n    | extend UserPrincipalName = iff(UserPrincipalName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserPrincipalName),\r\n        UserName = iff(UserName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserName)\r\n    | extend AnomalyName = \"Anomalous Failed Logon\",\r\n        Tactic = \"Credential Access\",\r\n        Technique = \"Brute Force\",\r\n        SubTechnique = \"Password Guessing\",\r\n        Description = \"Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Emotet, for example, has been observed using a hard coded list of passwords to brute force user accounts. The query below generates an output of all users with 'High' BlastRadius that perform failed Sign-in:Invalid username or password.\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"Evidence\"]=ActivityInsights, ResourceDisplayName, AppDisplayName, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority; \r\nlet AnomalousAADAccountManipulation = AuditLogs\r\n    | where OperationName == \"Update user\"\r\n    | mv-expand AdditionalDetails\r\n    | where AdditionalDetails.key == \"UserPrincipalName\"\r\n    | mv-expand TargetResources\r\n    | extend RoleId = tostring(TargetResources.modifiedProperties[0].newValue)\r\n    | where isnotempty(RoleId) and RoleId in (critical, high)\r\n    | extend RoleName = tostring(TargetResources.modifiedProperties[1].newValue)\r\n    | where isnotempty(RoleName)\r\n    | extend TargetId = tostring(TargetResources.id)\r\n    | extend Target =  iff(tostring(TargetResources.userPrincipalName) contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(TargetResources.userPrincipalName, \"#\")[0])), TargetResources.userPrincipalName), tostring(TargetResources.userPrincipalName)\r\n    | join kind=inner ( \r\n        BehaviorAnalytics\r\n        | where ActionType == \"Update user\"\r\n        | where UsersInsights.BlasrRadius == \"High\" or ActivityInsights.FirstTimeUserPerformedAction == true\r\n        )\r\n        on $left._ItemId == $right.SourceRecordId\r\n    | extend UserPrincipalName = iff(UserPrincipalName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserPrincipalName),\r\n        UserName = iff(UserName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserName) \r\n    | extend AnomalyName = \"Anomalous Account Manipulation\",\r\n        Tactic = \"Persistence\",\r\n        Technique = \"Account Manipulation\",\r\n        SubTechnique = \"\",\r\n        Description = \"Adversaries may manipulate accounts to maintain access to victim systems. These actions include adding new accounts to high privilleged groups. Dragonfly 2.0, for example, added newly created accounts to the administrators group to maintain elevated access. The query below generates an output of all high Blast Radius users performing 'Update user' (name change) to priveleged role, or ones that changed users for the first time.\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"TargetUser\"]=Target, RoleName, [\"Evidence\"]=ActivityInsights, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority; let AnomalousAADAccountCreation = BehaviorAnalytics\r\n    | where ActionType == \"Add user\"\r\n    | where ActivityInsights.FirstTimeUserPerformedAction == True or ActivityInsights.FirstTimeActionPerformedInTenant == True or ActivityInsights.ActionUncommonlyPerformedAmongPeers == true\r\n    | join(\r\n        AuditLogs\r\n        | where OperationName == \"Add user\"\r\n        )\r\n        on $left.SourceRecordId == $right._ItemId\r\n    | mv-expand TargetResources\r\n    | extend Target =  iff(tostring(TargetResources.userPrincipalName) contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(TargetResources.userPrincipalName, \"#\")[0])), TargetResources.userPrincipalName), tostring(TargetResources.userPrincipalName)\r\n    | extend DisplayName = tostring(UsersInsights.AccountDisplayName),\r\n        UserPrincipalName = iff(UserPrincipalName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserPrincipalName),\r\n        UserName = iff(UserName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserName)\r\n    | extend AnomalyName = \"Anomalous Account Creation\",\r\n        Tactic = \"Persistence\",\r\n        Technique = \"Create Account\",\r\n        SubTechnique = \"Cloud Account\",\r\n        Description = \"Adversaries may create a cloud account to maintain access to victim systems. With a sufficient level of access, such accounts may be used to establish secondary credentialed access that does not require persistent remote access tools to be deployed on the system. The query below generates an output of all the users performing user creation for the first time and the target users that were created.\"\t\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"TargetUser\"]=Target, [\"Evidence\"]=ActivityInsights, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority\r\n    | sort by TimeGenerated desc;\r\nlet AnomalyTable = union kind=outer AnomalousSigninActivity, AnomalousRoleAssignment, AnomalousResourceAccess, AnomalousRDPActivity, AnomalousPasswordReset, AnomalousLogintoDevices, AnomalousGeoLocationLogon, AnomalousAADAccountManipulation, AnomalousAADAccountCreation, AnomalousFailedLogon;\r\nlet TopUsersByAnomalies = AnomalyTable\r\n    | summarize hint.strategy = shuffle AnomalyCount=count() by UserName, UserPrincipalName, tostring(UsersInsights.OnPremSid), tostring(UsersInsights.AccountObjectId)\r\n    | project Name=tolower(UserName), UPN=tolower(UserPrincipalName), AadUserId=UsersInsights_AccountObjectId, Sid=UsersInsights_OnPremSid, AnomalyCount\r\n    | sort by AnomalyCount desc;\r\nlet TopUsersByIncidents = SecurityIncident\r\n    | summarize hint.strategy = shuffle arg_max(LastModifiedTime, *) by IncidentNumber\r\n    | where Status == \"New\" or Status == \"Active\"\r\n    | mv-expand AlertIds\r\n    | extend AlertId = tostring(AlertIds)\r\n    | join kind= innerunique ( \r\n        SecurityAlert \r\n        )\r\n        on $left.AlertId == $right.SystemAlertId\r\n    | summarize hint.strategy = shuffle arg_max(TimeGenerated, *), NumberOfUpdates = count() by SystemAlertId\r\n    | mv-expand todynamic(Entities)\r\n    | where Entities[\"Type\"] =~ \"account\"\r\n    | extend Name = tostring(tolower(Entities[\"Name\"])), NTDomain = tostring(Entities[\"NTDomain\"]), UPNSuffix = tostring(Entities[\"UPNSuffix\"]), AadUserId = tostring(Entities[\"AadUserId\"]), AadTenantId = tostring(Entities[\"AadTenantId\"]), \r\n        Sid = tostring(Entities[\"Sid\"]), IsDomainJoined = tobool(Entities[\"IsDomainJoined\"]), Host = tostring(Entities[\"Host\"])\r\n    | extend UPN = iff(Name != \"\" and UPNSuffix != \"\", strcat(Name, \"@\", UPNSuffix), \"\")\r\n    | union TopUsersByAnomalies\r\n    | extend \r\n        AadPivot = iff(isempty(AadUserId), iff(isempty(Sid), Name, Sid), AadUserId),\r\n        SidPivot = iff(isempty(Sid), iff(isempty(AadUserId), Name, AadUserId), Sid),\r\n        UPNExists = iff(isempty(UPN), false, true),\r\n        NameExists = iff(isempty(Name), false, true),\r\n        SidExists = iff(isempty(Sid), false, true),\r\n        AADExists = iff(isempty(AadUserId), false, true)\r\n    | summarize hint.strategy = shuffle IncidentCount=dcount(IncidentNumber, 4), AlertCount=dcountif(AlertId, isnotempty(AlertId), 4), AnomalyCount=sum(AnomalyCount), any(Title, Severity, Status, StartTime, IncidentNumber, IncidentUrl, Owner), UPNAnchor=anyif(UPN, UPNExists == true), NameAnchor=anyif(Name, NameExists == true), AadAnchor=anyif(AadUserId, AADExists == true), SidAnchor=anyif(Sid, SidExists == true), any(SidPivot) by AadPivot\r\n    | summarize hint.strategy = shuffle IncidentCount=sum(IncidentCount), AlertCount=sum(AlertCount), AnomalyCount=sum(AnomalyCount), UPNAnchor=anyif(UPNAnchor, isempty(UPNAnchor) == false), NameAnchor=anyif(NameAnchor, isempty(NameAnchor) == false), AadAnchor=anyif(AadAnchor, isempty(AadAnchor) == false), SidAnchor=anyif(SidAnchor, isempty(SidAnchor) == false), any(any_Title, any_Severity, any_StartTime, any_IncidentNumber, any_IncidentUrl) by any_SidPivot\r\n    | summarize hint.strategy = shuffle IncidentCount=sum(IncidentCount), AlertCount=sum(AlertCount), AnomalyCount=sum(AnomalyCount), UPNAnchor=anyif(UPNAnchor, isempty(UPNAnchor) == false), AadAnchor=anyif(AadAnchor, isempty(AadAnchor) == false), SidAnchor=anyif(SidAnchor, isempty(SidAnchor) == false), any(any_any_Title, any_any_Severity, any_any_StartTime, any_any_IncidentNumber, any_any_IncidentUrl) by NameAnchor\r\n    | project [\"UserName\"]=NameAnchor, IncidentCount, AlertCount, AnomalyCount, [\"AadUserId\"]=AadAnchor, [\"OnPremSid\"]=SidAnchor, [\"UserPrincipalName\"]=UPNAnchor;\r\nTopUsersByIncidents\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| project UserPrincipalName, IncidentCount, AlertCount, AnomalyCount\r\n| sort by AlertCount desc\r\n| limit 250\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Entity Behavior Analytics Alerts",
                          "noDataMessage": "There are no results within the selected thresholds (time, workspace, subscription). See Enable User and Entity Behavior Analytics (UEBA) in Azure Sentinel for respective UEBA configurations (https://docs.microsoft.com/azure/sentinel/enable-entity-behavior-analytics)",
                          "timeContext": {
                            "durationMs": 7776000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "IncidentCount",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "redBright"
                                }
                              },
                              {
                                "columnMatch": "AlertCount",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "orange"
                                }
                              },
                              {
                                "columnMatch": "AnomalyCount",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "yellow"
                                }
                              }
                            ],
                            "filter": true,
                            "sortBy": [
                              {
                                "itemKey": "$gen_heatmap_AlertCount_2",
                                "sortOrder": 2
                              }
                            ]
                          },
                          "sortBy": [
                            {
                              "itemKey": "$gen_heatmap_AlertCount_2",
                              "sortOrder": 2
                            }
                          ],
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results301",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "query - 1",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let UncommonActionVolume = BehaviorAnalytics\r\n| extend UncommonActionVolume = tostring(ActivityInsights.UncommonHighVolumeOfActions)\r\n| where UncommonActionVolume == \"True\"\r\n| summarize count() by UserPrincipalName\r\n| project-rename UncommonActionVolume = count_;\r\nlet UncommonAction = BehaviorAnalytics\r\n| extend UncommonAction = tostring(ActivityInsights.ActionUncommonlyPerformedByUser)\r\n| where UncommonAction == \"True\"\r\n| summarize count() by UserPrincipalName\r\n| project-rename UncommonAction = count_;\r\nlet Uncommon = UncommonActionVolume | join(UncommonAction) on UserPrincipalName;\r\nlet FirstTimeDeviceLogon = BehaviorAnalytics\r\n| extend FirstTimeDeviceLogon = tostring(ActivityInsights.FirstTimeUserLoggedOnToDevice)\r\n| where FirstTimeDeviceLogon == \"True\"\r\n| summarize count() by UserPrincipalName\r\n| project-rename FirstTimeDeviceLogon = count_;\r\nlet FirstTimeUserAction = BehaviorAnalytics\r\n| extend FirstTimeUserAction = tostring(ActivityInsights.FirstTimeUserPerformedAction)\r\n| where FirstTimeUserAction == \"True\"\r\n| summarize count() by UserPrincipalName\r\n| project-rename FirstTimeUserAction = count_;\r\nlet FirstTime = FirstTimeUserAction | join(FirstTimeDeviceLogon) on UserPrincipalName;\r\nUncommon | join kind=fullouter(FirstTime) on UserPrincipalName\r\n| where UserPrincipalName <> \"\"\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| project UserPrincipalName, UncommonActionVolume, UncommonAction, FirstTimeUserAction, FirstTimeDeviceLogon\r\n| sort by UncommonActionVolume desc \r\n| limit 250\r\n\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Anomalies",
                          "noDataMessage": "There are no results within the selected thresholds (time, workspace, subscription). See Enable User and Entity Behavior Analytics (UEBA) in Azure Sentinel for respective UEBA configurations (https://docs.microsoft.com/azure/sentinel/enable-entity-behavior-analytics)",
                          "timeContext": {
                            "durationMs": 7776000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "UncommonActionVolume",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "redBright"
                                }
                              },
                              {
                                "columnMatch": "UncommonAction",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "green"
                                }
                              },
                              {
                                "columnMatch": "FirstTimeUserAction",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "FirstTimeDeviceLogon",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "yellow"
                                }
                              },
                              {
                                "columnMatch": "IncidentCount",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "redBright"
                                }
                              },
                              {
                                "columnMatch": "AlertCount",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "orange"
                                }
                              },
                              {
                                "columnMatch": "AnomalyCount",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "yellow"
                                }
                              }
                            ],
                            "filter": true,
                            "sortBy": [
                              {
                                "itemKey": "$gen_bar_FirstTimeDeviceLogon_4",
                                "sortOrder": 2
                              }
                            ]
                          },
                          "sortBy": [
                            {
                              "itemKey": "$gen_bar_FirstTimeDeviceLogon_4",
                              "sortOrder": 2
                            }
                          ],
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results302",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "query - 4",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "Anomalies\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| extend AnomalyScoring = tostring(AnomalyDetails.Score)\r\n| join (SigninLogs) on UserPrincipalName\r\n| extend UserProfile = strcat(\"https://portal.azure.com/#blade/Microsoft_AAD_IAM/UserDetailsMenuBlade/Profile/userId/\",UserId)\r\n| distinct UserPrincipalName, UserProfile, RuleName, AnomalyScoring, Description, TimeGenerated\r\n| sort by AnomalyScoring desc",
                          "size": 3,
                          "showAnalytics": true,
                          "title": "Anomaly Detection Rules",
                          "noDataMessage": "There are no results within the selected thresholds (time, workspace, subscription). See Enable User and Entity Behavior Analytics (UEBA) in Azure Sentinel for respective UEBA configurations (https://docs.microsoft.com/azure/sentinel/enable-entity-behavior-analytics)",
                          "timeContext": {
                            "durationMs": 7776000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "UserProfile",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to AAD User Profile >"
                                }
                              },
                              {
                                "columnMatch": "Location",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Globe",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "SourceIPLocation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Globe",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "red"
                                }
                              },
                              {
                                "columnMatch": "UncommonActionVolume",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "redBright"
                                }
                              },
                              {
                                "columnMatch": "UncommonAction",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "green"
                                }
                              },
                              {
                                "columnMatch": "FirstTimeUserAction",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "FirstTimeDeviceLogon",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "yellow"
                                }
                              },
                              {
                                "columnMatch": "IncidentCount",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "redBright"
                                }
                              },
                              {
                                "columnMatch": "AlertCount",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "orange"
                                }
                              },
                              {
                                "columnMatch": "AnomalyCount",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "yellow"
                                }
                              }
                            ],
                            "filter": true
                          },
                          "sortBy": [],
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "latitude_",
                            "longitude": "longitude_",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "labelSettings": "city_",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "redBright"
                                }
                              ]
                            }
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "Results333",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "query - 13"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let AnomalySignIns = BehaviorAnalytics\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| extend FirstTimeDeviceLogon = tostring(ActivityInsights.FirstTimeUserLoggedOnToDevice)\r\n| extend FirstTimeUserAction = tostring(ActivityInsights.FirstTimeUserPerformedAction)\r\n| extend UncommonAction = tostring(ActivityInsights.ActionUncommonlyPerformedByUser)\r\n| extend UncommonVolumeOfActions = tostring(ActivityInsights.UncommonHighVolumeOfActions)\r\n| where FirstTimeDeviceLogon == \"True\" or FirstTimeUserAction == \"True\" or UncommonAction == \"True\" or UncommonVolumeOfActions == \"True\";\r\nAnomalySignIns | join (SigninLogs) on UserPrincipalName",
                          "size": 3,
                          "showAnalytics": true,
                          "title": "Anomalous Activity by Geolocation",
                          "noDataMessage": "There are no results within the selected thresholds (time, workspace, subscription). See Enable User and Entity Behavior Analytics (UEBA) in Azure Sentinel for respective UEBA configurations (https://docs.microsoft.com/azure/sentinel/enable-entity-behavior-analytics)",
                          "timeContext": {
                            "durationMs": 7776000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "map",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "warning",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "UncommonActionVolume",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "redBright"
                                }
                              },
                              {
                                "columnMatch": "UncommonAction",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "green"
                                }
                              },
                              {
                                "columnMatch": "FirstTimeUserAction",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "FirstTimeDeviceLogon",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "yellow"
                                }
                              },
                              {
                                "columnMatch": "IncidentCount",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "redBright"
                                }
                              },
                              {
                                "columnMatch": "AlertCount",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "orange"
                                }
                              },
                              {
                                "columnMatch": "AnomalyCount",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "yellow"
                                }
                              }
                            ]
                          },
                          "sortBy": [],
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "latitude_",
                            "longitude": "longitude_",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "labelSettings": "city_",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "redBright"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "60",
                        "conditionalVisibility": {
                          "parameterName": "Results302",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results46"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let AnomalySignIns = BehaviorAnalytics\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| extend FirstTimeDeviceLogon = tostring(ActivityInsights.FirstTimeUserLoggedOnToDevice)\r\n| extend FirstTimeUserAction = tostring(ActivityInsights.FirstTimeUserPerformedAction)\r\n| extend UncommonAction = tostring(ActivityInsights.ActionUncommonlyPerformedByUser)\r\n| extend UncommonVolumeOfActions = tostring(ActivityInsights.UncommonHighVolumeOfActions)\r\n| where FirstTimeDeviceLogon == \"True\" or FirstTimeUserAction == \"True\" or UncommonAction == \"True\" or UncommonVolumeOfActions == \"True\";\r\nAnomalySignIns | join (SigninLogs) on UserPrincipalName\r\n| where SourceIPLocation <> \"\"\r\n| summarize count() by UserPrincipalName, Location, SourceIPLocation\r\n| sort by count_ desc",
                          "size": 0,
                          "title": "Anomalous Activity by User & GeoLocation",
                          "noDataMessage": "There are no results within the selected thresholds (time, workspace, subscription). See Enable User and Entity Behavior Analytics (UEBA) in Azure Sentinel for respective UEBA configurations (https://docs.microsoft.com/azure/sentinel/enable-entity-behavior-analytics)",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "timeContextFromParameter": "TimeRange",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Location",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Globe",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "SourceIPLocation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Globe",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "redDark"
                                }
                              }
                            ],
                            "filter": true
                          }
                        },
                        "customWidth": "40",
                        "conditionalVisibility": {
                          "parameterName": "Results302",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "query - 14"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SigninLogs\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| extend UserProfile = strcat(\"https://portal.azure.com/#blade/Microsoft_AAD_IAM/UserDetailsMenuBlade/Profile/userId/\",UserId)\r\n| extend UserRoles = strcat(\"https://portal.azure.com/#blade/Microsoft_AAD_IAM/UserDetailsMenuBlade/AdministrativeRole/userId/\",UserId)\r\n| extend AdminRoles = strcat(\"https://portal.azure.com/#blade/Microsoft_AAD_IAM/UserDetailsMenuBlade/AdminUnit/userId/\",UserId)\r\n| extend Groups = strcat(\"https://portal.azure.com/#blade/Microsoft_AAD_IAM/UserDetailsMenuBlade/Groups/userId/\",UserId)\r\n| extend Applications = strcat(\"https://portal.azure.com/#blade/Microsoft_AAD_IAM/UserDetailsMenuBlade/AssignedApplications/userId/\",UserId)\r\n| extend Licenses = strcat(\"https://portal.azure.com/#blade/Microsoft_AAD_IAM/UserDetailsMenuBlade/Licenses/userId/\",UserId)\r\n| extend Devices = strcat(\"https://portal.azure.com/#blade/Microsoft_AAD_IAM/UserDetailsMenuBlade/Devices/userId/\",UserId)\r\n| extend AzureRoles = strcat(\"https://portal.azure.com/#blade/Microsoft_AAD_IAM/UserDetailsMenuBlade/SubscriptionResources/userId/\",UserId)\r\n| extend SignIns = strcat(\"https://portal.azure.com/#blade/Microsoft_AAD_IAM/UserDetailsMenuBlade/SignIns/userId/\",UserId)\r\n| extend AuditLogs = strcat(\"https://portal.azure.com/#blade/Microsoft_AAD_IAM/UserDetailsMenuBlade/Audit/userId/\",UserId)\r\n| summarize count() by UserPrincipalName, UserProfile, UserRoles, AdminRoles, Groups, Applications, Licenses, Devices, AzureRoles, SignIns, AuditLogs\r\n| sort by count_ desc\r\n| limit 250\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "AAD User Profiles",
                          "timeContext": {
                            "durationMs": 7776000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "UserProfile",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to User Profile >"
                                }
                              },
                              {
                                "columnMatch": "UserRoles",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Roles >"
                                }
                              },
                              {
                                "columnMatch": "AdminRoles",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to AdminRoles >"
                                }
                              },
                              {
                                "columnMatch": "Groups",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Groups >"
                                }
                              },
                              {
                                "columnMatch": "Applications",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Apps >"
                                }
                              },
                              {
                                "columnMatch": "Licenses",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Licenses >"
                                }
                              },
                              {
                                "columnMatch": "Devices",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Devices >"
                                }
                              },
                              {
                                "columnMatch": "AzureRoles",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to AzureRoles >"
                                }
                              },
                              {
                                "columnMatch": "SignIns",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to SignIns >"
                                }
                              },
                              {
                                "columnMatch": "AuditLogs",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to AuditLogs >"
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "AzureActiveDirectoryProfile",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to AAD Profile >"
                                }
                              },
                              {
                                "columnMatch": "IncidentCount",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "redBright"
                                }
                              },
                              {
                                "columnMatch": "AlertCount",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "orange"
                                }
                              },
                              {
                                "columnMatch": "AnomalyCount",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "yellow"
                                }
                              }
                            ],
                            "filter": true
                          },
                          "sortBy": [],
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "Results303",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "query - 1 - Copy"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AADUserRiskEvents\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| extend UserProfile = strcat(\"https://portal.azure.com/#blade/Microsoft_AAD_IAM/UserDetailsMenuBlade/Profile/userId/\",UserId)\r\n| extend countryOrRegion_ = tostring(Location.countryOrRegion)\r\n| extend city_ = tostring(Location.city)\r\n| extend state_ = tostring(Location.state)\r\n| extend latitude_ = tostring(parse_json(tostring(Location.geoCoordinates)).latitude)\r\n| extend longitude_ = tostring(parse_json(tostring(Location.geoCoordinates)).longitude)\r\n| summarize count() by UserPrincipalName, UserProfile, RiskLevel, RiskEventType, city_, countryOrRegion_, state_, latitude_, longitude_, IpAddress\r\n| sort by count_ desc\r\n| limit 250",
                          "size": 3,
                          "showAnalytics": true,
                          "title": "AAD Identity Protection: Sign-in Risk",
                          "noDataMessage": "There are no results within the selected thresholds (time, workspace, subscription). See How To: Configure and enable Azure Active Directory: Identity Protection risk policies (https://docs.microsoft.com/azure/active-directory/identity-protection/howto-identity-protection-configure-risk-policies)",
                          "timeContext": {
                            "durationMs": 7776000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "map",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "warning",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "UncommonActionVolume",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "redBright"
                                }
                              },
                              {
                                "columnMatch": "UncommonAction",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "green"
                                }
                              },
                              {
                                "columnMatch": "FirstTimeUserAction",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "FirstTimeDeviceLogon",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "yellow"
                                }
                              },
                              {
                                "columnMatch": "IncidentCount",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "redBright"
                                }
                              },
                              {
                                "columnMatch": "AlertCount",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "orange"
                                }
                              },
                              {
                                "columnMatch": "AnomalyCount",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "yellow"
                                }
                              }
                            ]
                          },
                          "sortBy": [],
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "countryOrRegion_",
                            "latitude": "latitude_",
                            "longitude": "longitude_",
                            "sizeSettings": "countryOrRegion_",
                            "sizeAggregation": "Count",
                            "labelSettings": "city_",
                            "legendMetric": "countryOrRegion_",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "countryOrRegion_",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "purpleDark"
                                }
                              ]
                            }
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "Results304",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results46 - Copy"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AADUserRiskEvents\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| extend UserProfile = strcat(\"https://portal.azure.com/#blade/Microsoft_AAD_IAM/UserDetailsMenuBlade/Profile/userId/\",UserId)\r\n| extend countryOrRegion_ = tostring(Location.countryOrRegion)\r\n| extend city_ = tostring(Location.city)\r\n| extend state_ = tostring(Location.state)\r\n| extend latitude_ = tostring(parse_json(tostring(Location.geoCoordinates)).latitude)\r\n| extend longitude_ = tostring(parse_json(tostring(Location.geoCoordinates)).longitude)\r\n| summarize count() by UserPrincipalName, UserProfile, RiskLevel, RiskEventType, city_, countryOrRegion_, state_, latitude_, longitude_, IpAddress\r\n| sort by count_ desc\r\n| limit 250",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "AAD Identity Protection: User Sign-in Risk Details",
                          "noDataMessage": "There are no results within the selected thresholds (time, workspace, subscription). See How To: Configure and enable Azure Active Directory: Identity Protection risk policies (https://docs.microsoft.com/azure/active-directory/identity-protection/howto-identity-protection-configure-risk-policies)",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "UserProfile",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to AAD User Profile >"
                                }
                              },
                              {
                                "columnMatch": "RiskLevel",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "high",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "medium",
                                      "representation": "orange",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "low",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Globe",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "countryOrRegion_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Globe",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Globe",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "purpleDark"
                                }
                              }
                            ],
                            "filter": true
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "Results304",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "query - 14"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "TAB",
                    "comparison": "isEqualTo",
                    "value": "UEBA"
                  },
                  "name": "Entity Insights"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "7afa304d-b448-4d6c-8c54-69e51a7249a9",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results310",
                              "type": 1,
                              "query": "SecurityAlert\r\n| where ProviderName contains \"fusion\" or AlertName contains \"fusion\"\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 604800000
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "14",
                        "name": "Results310",
                        "styleSettings": {
                          "maxWidth": "14"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "f5b358a1-f960-4260-af95-79bc72d1652f",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results316",
                              "type": 1,
                              "query": "SecurityAlert\r\n| where AlertName contains \"anomal\" or ProviderName contains \"anomal\"\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "14",
                        "name": "Results316",
                        "styleSettings": {
                          "maxWidth": "14"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "65d42fd9-6206-45ef-9730-45a75bab6335",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results311",
                              "type": 1,
                              "query": "AzureActivity\r\n| where OperationName == \"Create or Update Virtual Machine\" or OperationName == \"Create Deployment\"\r\n| where ActivityStatus == \"Succeeded\"\r\n| make-series num = dcount(ResourceId)  default=0 on EventSubmissionTimestamp in range(ago(90d), now(), 1d) by Caller\r\n| extend  outliers=series_outliers(num, \"ctukey\", 0, 10, 90)\r\n| mvexpand outliers\r\n| where outliers > 0.9\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "14",
                        "name": "Results311",
                        "styleSettings": {
                          "maxWidth": "14"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "f1e93b1f-2c9c-49bf-a46d-328d2cf8764d",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results312",
                              "type": 1,
                              "query": "AzureActivity\r\n| where OperationName contains \"delet\" or OperationName contains \"remove\"\r\n| where ActivityStatus == \"Succeeded\"\r\n| make-series num = dcount(ResourceId)  default=0 on EventSubmissionTimestamp in range(ago(90d), now(), 1d) by Caller\r\n| extend  outliers=series_outliers(num, \"ctukey\", 0, 10, 90)\r\n| mvexpand outliers\r\n| where outliers > 0.9\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "14",
                        "name": "Results312",
                        "styleSettings": {
                          "maxWidth": "14"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "806f4007-3a45-4d61-8ea0-4b77b506d125",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results313",
                              "type": 1,
                              "query": "SecurityAlert\r\n| extend User_Account_ = tostring(parse_json(ExtendedProperties).[\"User Account\"])\r\n| project AlertName, ProviderName, User_Account_\r\n| evaluate basket(0.01)\r\n| project Percent, Count, AlertName, ProviderName, User_Account_\r\n| where ProviderName <> \"\"\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 604800000
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "14",
                        "name": "Results313",
                        "styleSettings": {
                          "maxWidth": "14"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "eba88cfe-45c5-40d6-a14c-1cd8933282cb",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results314",
                              "type": 1,
                              "query": "SecurityAlert\r\n| project AlertName, ProviderName\r\n| evaluate autocluster(0.1)\r\n| where ProviderName <> \"\"\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "14",
                        "name": "Results314",
                        "styleSettings": {
                          "maxWidth": "14"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "d8e8ac75-e764-4ff8-941b-bc8ad77df072",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results315",
                              "type": 1,
                              "query": "SigninLogs\r\n| where RiskState == \"atRisk\"\r\n| project UserPrincipalName, Location, AppDisplayName, RiskState\r\n| evaluate basket(0.01)\r\n| where UserPrincipalName <> \"\"\r\n| where AppDisplayName <> \"\"\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "14",
                        "name": "Results315",
                        "styleSettings": {
                          "maxWidth": "14"
                        }
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "## Artificial Intelligence & Machine Learning (AI/ML)\r\nMachine Learning (ML) is one of the major underpinnings of Azure Sentinel, and one of the main attributes that set it apart. Azure Sentinel offers ML in several experiences: built-in to the üí° [Fusion](https://docs.microsoft.com/azure/sentinel/fusion) correlation engine and Jupyter notebooks, and the newly available Build-Your-Own ML (BYOML) platform. ML detection models can adapt to individual environments and to changes in user behavior, to reduce üí°[false positives](https://docs.microsoft.com/azure/sentinel/false-positives) and identify threats that wouldn't be found with a traditional approach. Many security organizations understand the value of ML for security, though not many of them have the luxury of professionals who have expertise in both security and ML. We designed the framework presented here for security organizations and professionals to grow with us in their ML journey. Organizations new to ML, or without the necessary expertise, can get significant protection value out of Azure Sentinel's built-in ML capabilities\r\n\r\nThere are several layers and components of Microsoft's AI/ML offerings for security detections which include, but are not limited to:<br>\r\n‚Ä¢> KQL Query: üí°[Autocluster](https://docs.microsoft.com/azure/data-explorer/kusto/query/autoclusterplugin), üí°[Basket](https://docs.microsoft.com/azure/data-explorer/kusto/query/basketplugin), & üí°[DiffPatterns](https://docs.microsoft.com/azure/data-explorer/kusto/query/diffpatternsplugin)<br> ‚Ä¢> Built-in Tooling Algorithms: üí°[Detect Threats Out-Of-The-Box](https://docs.microsoft.com/azure/sentinel/detect-threats-built-in), üí°[Insider Risk Management Policies](https://docs.microsoft.com/azure/sentinel/detect-threats-built-in), üí°[Intelligent Customizable Templates](https://docs.microsoft.com/microsoft-365/compliance/communication-compliance#intelligent-customizable-templates), üí°[Optical Character Recognition](https://docs.microsoft.com/microsoft-365/compliance/communication-compliance-feature-reference#optical-character-recognition-ocr), & üí°[Trainable Classifiers](https://docs.microsoft.com/microsoft-365/compliance/classifier-get-started-with)<br>\r\n‚Ä¢> User and Entity Behavior Analytics: üí°[Azure Sentinel UEBA](https://docs.microsoft.com/azure/sentinel/identify-threats-with-entity-behavior-analytics), üí°[M365 Insider Risk Management UEBA](https://docs.microsoft.com/microsoft-365/compliance/insider-risk-management-cases), & üí°[Microsoft Cloud App Security UEBA](https://docs.microsoft.com/cloud-app-security/tutorial-suspicious-activity)<br>\r\n‚Ä¢> Advanced Multistage Attack Detection: üí°[Fusion Rules](https://docs.microsoft.com/azure/sentinel/fusion#enable-fusion-rule), & üí°[SOC-ML Anomaly Rules](https://docs.microsoft.com/azure/sentinel/soc-ml-anomalies) <br>\r\n‚Ä¢> Bring Your Own Machine Learning & Trainable Algorithms: üí°[Azure Sentinel BYOML](https://docs.microsoft.com/azure/sentinel/bring-your-own-ml), üí°[Azure Sentinel Notebooks](https://docs.microsoft.com/azure/sentinel/notebooks), & üí°[Machine Learning Studio](https://docs.microsoft.com/azure/machine-learning/overview-what-is-machine-learning-studio)\r\n\r\n## Implement Azure Sentinel for SIEM/SOAR and Bring Your Own Machine Learning (BYOML) Capabilities\r\n![Image Name](https://docs.microsoft.com/azure/sentinel/media/bring-your-own-ml/machine-learning-framework.png)<br> For more information, see üí° [Bring Your Own Machine Learning](https://docs.microsoft.com/azure/sentinel/bring-your-own-ml)\r\n\r\n\r\n"
                        },
                        "name": "text - 179"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SecurityAlert\r\n| where ProviderName contains \"fusion\" or AlertName contains \"fusion\"\r\n| distinct AlertName, ProviderName, AlertLink, Tactics, TimeGenerated\r\n| sort by TimeGenerated desc\r\n| limit 250",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Fusion Alerts",
                          "noDataMessage": "There are no results within the selected thresholds (time, workspace, subscription). See Advanced multistage attack detection in Azure Sentinel (https://docs.microsoft.com/azure/sentinel/fusion)",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "AlertName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "3",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Severity",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "High",
                                      "representation": "red",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Medium",
                                      "representation": "orange",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Low",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "ProductName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "uninitialized",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "AlertLink",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Alert >"
                                }
                              },
                              {
                                "columnMatch": "UPN",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "2",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "IncidentUrl",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Incident >"
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results310",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "310a"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SecurityAlert\r\n| where ProviderName contains \"fusion\" or AlertName contains \"fusion\"\r\n| make-series count() default=0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step 1d by AlertName\r\n| render timechart",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Fusion Alerts over Time",
                          "noDataMessage": "There are no results within the selected thresholds (time, workspace, subscription). See Advanced multistage attack detection in Azure Sentinel (https://docs.microsoft.com/azure/sentinel/fusion)",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "AlertName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "3",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Severity",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "High",
                                      "representation": "red",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Medium",
                                      "representation": "orange",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Low",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "ProductName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "uninitialized",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "AlertLink",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Alert >"
                                }
                              },
                              {
                                "columnMatch": "UPN",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "2",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "IncidentUrl",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Incident >"
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results310",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "310b"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SecurityAlert\r\n| where AlertName contains \"anomal\" or ProviderName contains \"anomal\"\r\n| distinct AlertName, ProviderName, AlertLink, Tactics, TimeGenerated\r\n| sort by TimeGenerated desc\r\n| limit 250",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Anomaly Alerts",
                          "noDataMessage": "There are no results within the selected thresholds (time, workspace, subscription). See Use SOC-ML anomalies to detect threats in Azure Sentinel (https://docs.microsoft.com/azure/sentinel/soc-ml-anomalies)",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "AlertName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "3",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Severity",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "High",
                                      "representation": "red",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Medium",
                                      "representation": "orange",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Low",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "ProductName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "uninitialized",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "AlertLink",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Alert >"
                                }
                              },
                              {
                                "columnMatch": "UPN",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "2",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "IncidentUrl",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Incident >"
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results316",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "316a"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SecurityAlert\r\n| where AlertName contains \"anomal\" or ProviderName contains \"anomal\"\r\n| make-series count() default=0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step 1d by AlertName\r\n| render timechart",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Anomaly Alerts",
                          "noDataMessage": "There are no results within the selected thresholds (time, workspace, subscription). See Use SOC-ML anomalies to detect threats in Azure Sentinel (https://docs.microsoft.com/azure/sentinel/soc-ml-anomalies)",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "AlertName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "3",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Severity",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "High",
                                      "representation": "red",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Medium",
                                      "representation": "orange",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Low",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "ProductName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "uninitialized",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "AlertLink",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Alert >"
                                }
                              },
                              {
                                "columnMatch": "UPN",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "2",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "IncidentUrl",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Incident >"
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results316",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results316b"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureActivity\r\n| where OperationName == \"Create or Update Virtual Machine\" or OperationName == \"Create Deployment\"\r\n| where ActivityStatus == \"Succeeded\"\r\n| make-series num = dcount(ResourceId)  default=0 on EventSubmissionTimestamp in range(ago(90d), now(), 1d) by Caller\r\n| extend  outliers=series_outliers(num, \"ctukey\", 0, 10, 90)\r\n| mvexpand outliers\r\n| where outliers > 0.9\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Creation of An Anomalous Number of Resources (Outliers) by UserName",
                          "noDataMessage": "There are no results within the selected thresholds (time, workspace, subscription). See Use SOC-ML anomalies to detect threats in Azure Sentinel (https://docs.microsoft.com/azure/sentinel/soc-ml-anomalies)",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "linechart",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "AlertName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "3",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Severity",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "High",
                                      "representation": "red",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Medium",
                                      "representation": "orange",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Low",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "ProductName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "uninitialized",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "AlertLink",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Alert >"
                                }
                              },
                              {
                                "columnMatch": "UPN",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "2",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "IncidentUrl",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Incident >"
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "graphSettings": {
                            "type": 0
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results311",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "311"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureActivity\r\n| where OperationName contains \"delet\" or OperationName contains \"remove\"\r\n| where ActivityStatus == \"Succeeded\"\r\n| make-series num = dcount(ResourceId)  default=0 on EventSubmissionTimestamp in range(ago(90d), now(), 1d) by Caller\r\n| extend  outliers=series_outliers(num, \"ctukey\", 0, 10, 90)\r\n| mvexpand outliers\r\n| where outliers > 0.9\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Deletion of An Anomalous Number of Resources (Outliers) by UserName",
                          "noDataMessage": "There are no results within the selected thresholds (time, workspace, subscription). See Use SOC-ML anomalies to detect threats in Azure Sentinel (https://docs.microsoft.com/azure/sentinel/soc-ml-anomalies)",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "linechart",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "AlertName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "3",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Severity",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "High",
                                      "representation": "red",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Medium",
                                      "representation": "orange",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Low",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "ProductName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "uninitialized",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "AlertLink",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Alert >"
                                }
                              },
                              {
                                "columnMatch": "UPN",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "2",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "IncidentUrl",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Incident >"
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "graphSettings": {
                            "type": 0
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results312",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "312"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SecurityAlert\r\n| extend User_Account_ = tostring(parse_json(ExtendedProperties).[\"User Account\"])\r\n| project AlertName, ProviderName, User_Account_\r\n| evaluate basket(0.01)\r\n| project Percent, Count, AlertName, ProviderName, User_Account_\r\n| where ProviderName <> \"\"\r\n| sort by Percent desc\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Security Alert Frequency by Basket",
                          "noDataMessage": "There are no results within the selected thresholds (time, workspace, subscription). See Use SOC-ML anomalies to detect threats in Azure Sentinel (https://docs.microsoft.com/azure/sentinel/soc-ml-anomalies)",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Percent",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "AlertName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "3",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "Severity",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "High",
                                      "representation": "red",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Medium",
                                      "representation": "orange",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Low",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "ProductName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "uninitialized",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "AlertLink",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Alert >"
                                }
                              },
                              {
                                "columnMatch": "UPN",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "2",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "IncidentUrl",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Incident >"
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "graphSettings": {
                            "type": 0
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results313",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "313"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SecurityAlert\r\n| project AlertName, ProviderName\r\n| evaluate autocluster(0.1)\r\n| where ProviderName <> \"\"\r\n| project Percent, Count, ProviderName, AlertName\r\n| sort by Percent desc\r\n\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Security Alert Autocluster (Tool Efficiency Tuning)",
                          "noDataMessage": "There are no results within the selected thresholds (time, workspace, subscription). See Use SOC-ML anomalies to detect threats in Azure Sentinel (https://docs.microsoft.com/azure/sentinel/soc-ml-anomalies)",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Percent",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "AlertName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "3",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "Severity",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "High",
                                      "representation": "red",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Medium",
                                      "representation": "orange",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Low",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "ProductName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "uninitialized",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "AlertLink",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Alert >"
                                }
                              },
                              {
                                "columnMatch": "UPN",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "2",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "IncidentUrl",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Incident >"
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "graphSettings": {
                            "type": 0
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results314",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "314"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SigninLogs\r\n| where RiskState == \"atRisk\"\r\n| project UserPrincipalName, Location, AppDisplayName, RiskState\r\n| evaluate basket(0.01)\r\n| where UserPrincipalName <> \"\"\r\n| where AppDisplayName <> \"\"\r\n| project Percent, UserPrincipalName, Location, AppDisplayName, RiskState\r\n| sort by Percent desc\r\n\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Risky Application Access (Basket)",
                          "noDataMessage": "There are no results within the selected thresholds (time, workspace, subscription). See Use SOC-ML anomalies to detect threats in Azure Sentinel (https://docs.microsoft.com/azure/sentinel/soc-ml-anomalies)",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Percent",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Location",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Globe",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "AlertName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "3",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "Severity",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "High",
                                      "representation": "red",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Medium",
                                      "representation": "orange",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Low",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "ProductName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "uninitialized",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "AlertLink",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Alert >"
                                }
                              },
                              {
                                "columnMatch": "UPN",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "2",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "IncidentUrl",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Incident >"
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "graphSettings": {
                            "type": 0
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results315",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "315"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "TAB",
                    "comparison": "isEqualTo",
                    "value": "AIML"
                  },
                  "name": "AI/ML"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "7afa304d-b448-4d6c-8c54-69e51a7249a9",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results305",
                              "type": 1,
                              "query": "SecurityAlert\r\n    | summarize hint.strategy = shuffle arg_max(TimeGenerated, *), NumberOfUpdates = count() by SystemAlertId\r\n    | mv-expand todynamic(Entities)\r\n    | where Entities[\"Type\"] =~ \"account\"\r\n    | extend Name = tostring(tolower(Entities[\"Name\"])), NTDomain = tostring(Entities[\"NTDomain\"]), UPNSuffix = tostring(Entities[\"UPNSuffix\"]), AadUserId = tostring(Entities[\"AadUserId\"]), AadTenantId = tostring(Entities[\"AadTenantId\"]), \r\n        Sid = tostring(Entities[\"Sid\"]), IsDomainJoined = tobool(Entities[\"IsDomainJoined\"]), Host = tostring(Entities[\"Host\"])\r\n    | extend UPN = iff(Name != \"\" and UPNSuffix != \"\", strcat(Name, \"@\", UPNSuffix), \"\")\r\n| extend Href_ = tostring(parse_json(ExtendedLinks)[0].Href)\r\n| extend UserPrincipalName = UPN\r\n| distinct AlertName, ProductName, Status, AlertLink, UserPrincipalName, Tactics, TimeGenerated\r\n| where AlertName contains \"sensitive\" or AlertName contains \"data\" or AlertName contains \"leak\" or Tactics contains \"exfil\" or AlertName contains \"theft\" or AlertName contains \"steal\" or AlertName contains \"PII\" or AlertName contains \"intellectual\" or AlertName contains \"confidential\" or AlertName contains \"spill\"\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "50",
                        "name": "Results305",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "04a06f0b-7190-4af9-9d04-473d54a3f923",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results306",
                              "type": 1,
                              "query": "InformationProtectionLogs_CL\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "50",
                        "name": "Results306",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SecurityAlert\r\n    | summarize hint.strategy = shuffle arg_max(TimeGenerated, *), NumberOfUpdates = count() by SystemAlertId\r\n    | mv-expand todynamic(Entities)\r\n    | where Entities[\"Type\"] =~ \"account\"\r\n    | extend Name = tostring(tolower(Entities[\"Name\"])), NTDomain = tostring(Entities[\"NTDomain\"]), UPNSuffix = tostring(Entities[\"UPNSuffix\"]), AadUserId = tostring(Entities[\"AadUserId\"]), AadTenantId = tostring(Entities[\"AadTenantId\"]), \r\n        Sid = tostring(Entities[\"Sid\"]), IsDomainJoined = tobool(Entities[\"IsDomainJoined\"]), Host = tostring(Entities[\"Host\"])\r\n    | extend UPN = iff(Name != \"\" and UPNSuffix != \"\", strcat(Name, \"@\", UPNSuffix), \"\")\r\n| extend Href_ = tostring(parse_json(ExtendedLinks)[0].Href)\r\n| extend UserPrincipalName = UPN\r\n| distinct AlertName, ProductName, Status, AlertLink, UserPrincipalName, Tactics, TimeGenerated\r\n| where AlertName contains \"sensitive\" or AlertName contains \"data\" or AlertName contains \"leak\" or Tactics contains \"exfil\" or AlertName contains \"theft\" or AlertName contains \"steal\" or AlertName contains \"PII\" or AlertName contains \"intellectual\" or AlertName contains \"confidential\" or AlertName contains \"spill\"\r\n| make-series count() default=0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step 1d by AlertName\r\n| render timechart",
                          "size": 0,
                          "title": "Sensitive Data Leaks over Time",
                          "noDataMessage": "There are no results within the selected thresholds (time, workspace, subscription). Confirm Security Alerts are onboarded to Azure Sentinel and see Getting Started with Insider Risk Management for respective IRM configurations (https://docs.microsoft.com/microsoft-365/compliance/insider-risk-management-configure)",
                          "timeContext": {
                            "durationMs": 604800000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "AlertName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "3",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Severity",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "High",
                                      "representation": "red",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Medium",
                                      "representation": "orange",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Low",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "ProductName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "uninitialized",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "AlertLink",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Alert >"
                                }
                              },
                              {
                                "columnMatch": "UPN",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "2",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "IncidentUrl",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Incident >"
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "Results305",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "305"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SecurityAlert\r\n    | summarize hint.strategy = shuffle arg_max(TimeGenerated, *), NumberOfUpdates = count() by SystemAlertId\r\n    | mv-expand todynamic(Entities)\r\n    | where Entities[\"Type\"] =~ \"account\"\r\n    | extend Name = tostring(tolower(Entities[\"Name\"])), NTDomain = tostring(Entities[\"NTDomain\"]), UPNSuffix = tostring(Entities[\"UPNSuffix\"]), AadUserId = tostring(Entities[\"AadUserId\"]), AadTenantId = tostring(Entities[\"AadTenantId\"]), \r\n        Sid = tostring(Entities[\"Sid\"]), IsDomainJoined = tobool(Entities[\"IsDomainJoined\"]), Host = tostring(Entities[\"Host\"])\r\n    | extend UPN = iff(Name != \"\" and UPNSuffix != \"\", strcat(Name, \"@\", UPNSuffix), \"\")\r\n| extend Href_ = tostring(parse_json(ExtendedLinks)[0].Href)\r\n| extend UserPrincipalName = UPN\r\n| distinct UserPrincipalName, AlertName, ProductName, Status, AlertLink, Tactics, TimeGenerated\r\n| where AlertName contains \"sensitive\" or AlertName contains \"data\" or AlertName contains \"leak\" or Tactics contains \"exfil\" or AlertName contains \"theft\" or AlertName contains \"steal\" or AlertName contains \"PII\" or AlertName contains \"intellectual\" or AlertName contains \"confidential\" or AlertName contains \"spill\"\r\n| sort by TimeGenerated desc\r\n| limit 250",
                          "size": 0,
                          "title": "Sensitive Data Leaks Alert Details",
                          "noDataMessage": "There are no results within the selected thresholds (time, workspace, subscription). Confirm Security Alerts are onboarded to Azure Sentinel and see Getting Started with Insider Risk Management for respective IRM configurations (https://docs.microsoft.com/microsoft-365/compliance/insider-risk-management-configure)",
                          "timeContext": {
                            "durationMs": 604800000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "AlertName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "3",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "ProductName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "uninitialized",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "AlertLink",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Alert >"
                                }
                              },
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Severity",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "High",
                                      "representation": "red",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Medium",
                                      "representation": "orange",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Low",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "UPN",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "2",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "IncidentUrl",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Incident >"
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "Results305",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "305b"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "InformationProtectionLogs_CL\r\n| make-series count() default=0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step 1d by¬†LabelName_s, ApplicationName_s\r\n| render timechart ",
                          "size": 0,
                          "title": "Microsoft Information Protection Document Access by Labels",
                          "noDataMessage": "There are no results within the selected thresholds (time, workspace, subscription). Confirm Security Alerts are onboarded to Azure Sentinel and see Getting Started with Insider Risk Management for respective IRM configurations (https://docs.microsoft.com/microsoft-365/compliance/insider-risk-management-configure)",
                          "timeContext": {
                            "durationMs": 604800000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "AlertName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "3",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Severity",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "High",
                                      "representation": "red",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Medium",
                                      "representation": "orange",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Low",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "ProductName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "uninitialized",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "AlertLink",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Alert >"
                                }
                              },
                              {
                                "columnMatch": "UPN",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "2",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "IncidentUrl",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Incident >"
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results306",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "306a"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "InformationProtectionLogs_CL\r\n| summarize count() by LabelName_s\r\n| render piechart",
                          "size": 0,
                          "title": "Microsoft Information Protection Access by Label",
                          "noDataMessage": "There are no results within the selected thresholds (time, workspace, subscription). Confirm Security Alerts are onboarded to Azure Sentinel and see Getting Started with Insider Risk Management for respective IRM configurations (https://docs.microsoft.com/microsoft-365/compliance/insider-risk-management-configure)",
                          "timeContext": {
                            "durationMs": 604800000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "AlertName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "3",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Severity",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "High",
                                      "representation": "red",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Medium",
                                      "representation": "orange",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Low",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "ProductName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "uninitialized",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "AlertLink",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Alert >"
                                }
                              },
                              {
                                "columnMatch": "UPN",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "2",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "IncidentUrl",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Incident >"
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results306",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "306b"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "#### [Go To > Microsoft 365 Compliance Manager: Information Protection](https://compliance.microsoft.com/informationprotection)<br>             \r\n"
                        },
                        "customWidth": "33",
                        "name": "text - 5",
                        "styleSettings": {
                          "maxWidth": "33"
                        }
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "#### [Go To > Azure Information Protection](https://portal.azure.com/#blade/Microsoft_Azure_InformationProtection/DataClassGroupEditBlade/quickstartBlade)<br>            \r\n"
                        },
                        "customWidth": "50",
                        "name": "text - 5 - Copy",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "InformationProtectionLogs_CL\r\n| distinct UserId_s, LabelName_s, ApplicationName_s_s, Operation_s_s, Protected_b_s, Platform_s_s, Activity_s_s, ProtectionOwner_s, TimeGenerated_s\r\n| sort by TimeGenerated_s desc\r\n\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Microsoft Information Protection Details",
                          "noDataMessage": "There are no results within the selected thresholds (time, workspace, subscription). Confirm Security Alerts are onboarded to Azure Sentinel and see Getting Started with Insider Risk Management for respective IRM configurations (https://docs.microsoft.com/microsoft-365/compliance/insider-risk-management-configure)",
                          "timeContext": {
                            "durationMs": 604800000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserId_s",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "AlertName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "3",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Severity",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "High",
                                      "representation": "red",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Medium",
                                      "representation": "orange",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Low",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "ProductName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "uninitialized",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "AlertLink",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Alert >"
                                }
                              },
                              {
                                "columnMatch": "UPN",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "2",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "IncidentUrl",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Incident >"
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "Results306",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results306c"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "TAB",
                    "comparison": "isEqualTo",
                    "value": "SL"
                  },
                  "name": "Sensitive Data Leak"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "7afa304d-b448-4d6c-8c54-69e51a7249a9",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results308",
                              "type": 1,
                              "query": "SecurityAlert\r\n    | summarize hint.strategy = shuffle arg_max(TimeGenerated, *), NumberOfUpdates = count() by SystemAlertId\r\n    | mv-expand todynamic(Entities)\r\n    | where Entities[\"Type\"] =~ \"account\"\r\n    | extend Name = tostring(tolower(Entities[\"Name\"])), NTDomain = tostring(Entities[\"NTDomain\"]), UPNSuffix = tostring(Entities[\"UPNSuffix\"]), AadUserId = tostring(Entities[\"AadUserId\"]), AadTenantId = tostring(Entities[\"AadTenantId\"]), \r\n        Sid = tostring(Entities[\"Sid\"]), IsDomainJoined = tobool(Entities[\"IsDomainJoined\"]), Host = tostring(Entities[\"Host\"])\r\n    | extend UPN = iff(Name != \"\" and UPNSuffix != \"\", strcat(Name, \"@\", UPNSuffix), \"\")\r\n| extend Href_ = tostring(parse_json(ExtendedLinks)[0].Href)\r\n| extend UserPrincipalName = UPN\r\n| where UserPrincipalName <> \"\"\r\n| render timechart\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "100",
                        "name": "Results308",
                        "styleSettings": {
                          "maxWidth": "100"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SecurityAlert\r\n    | summarize hint.strategy = shuffle arg_max(TimeGenerated, *), NumberOfUpdates = count() by SystemAlertId\r\n    | mv-expand todynamic(Entities)\r\n    | where Entities[\"Type\"] =~ \"account\"\r\n    | extend Name = tostring(tolower(Entities[\"Name\"])), NTDomain = tostring(Entities[\"NTDomain\"]), UPNSuffix = tostring(Entities[\"UPNSuffix\"]), AadUserId = tostring(Entities[\"AadUserId\"]), AadTenantId = tostring(Entities[\"AadTenantId\"]), \r\n        Sid = tostring(Entities[\"Sid\"]), IsDomainJoined = tobool(Entities[\"IsDomainJoined\"]), Host = tostring(Entities[\"Host\"])\r\n    | extend UPN = iff(Name != \"\" and UPNSuffix != \"\", strcat(Name, \"@\", UPNSuffix), \"\")\r\n| extend Href_ = tostring(parse_json(ExtendedLinks)[0].Href)\r\n| extend UserPrincipalName = UPN\r\n| where UserPrincipalName <> \"\"\r\n| make-series count() default=0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step 1d by AlertName\r\n| render timechart",
                          "size": 0,
                          "title": "Security Violations over Time",
                          "noDataMessage": "There are no results within the selected thresholds (time, workspace, subscription). Confirm Security Alerts are onboarded to Azure Sentinel and see Getting Started with Insider Risk Management for respective IRM configurations (https://docs.microsoft.com/microsoft-365/compliance/insider-risk-management-configure)",
                          "timeContext": {
                            "durationMs": 604800000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "AlertName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "3",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "redBright"
                                }
                              },
                              {
                                "columnMatch": "Severity",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "High",
                                      "representation": "red",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Medium",
                                      "representation": "orange",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Low",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "ProductName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "uninitialized",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "AlertLink",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Alert >"
                                }
                              },
                              {
                                "columnMatch": "UPN",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "2",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "IncidentUrl",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Incident >"
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results308",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "308a"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SecurityAlert\r\n    | summarize hint.strategy = shuffle arg_max(TimeGenerated, *), NumberOfUpdates = count() by SystemAlertId\r\n    | mv-expand todynamic(Entities)\r\n    | where Entities[\"Type\"] =~ \"account\"\r\n    | extend Name = tostring(tolower(Entities[\"Name\"])), NTDomain = tostring(Entities[\"NTDomain\"]), UPNSuffix = tostring(Entities[\"UPNSuffix\"]), AadUserId = tostring(Entities[\"AadUserId\"]), AadTenantId = tostring(Entities[\"AadTenantId\"]), \r\n        Sid = tostring(Entities[\"Sid\"]), IsDomainJoined = tobool(Entities[\"IsDomainJoined\"]), Host = tostring(Entities[\"Host\"])\r\n    | extend UPN = iff(Name != \"\" and UPNSuffix != \"\", strcat(Name, \"@\", UPNSuffix), \"\")\r\n| extend Href_ = tostring(parse_json(ExtendedLinks)[0].Href)\r\n| extend UserPrincipalName = UPN\r\n| where UserPrincipalName !contains \"[\"\r\n| where UserPrincipalName <> \"\"\r\n| summarize count() by UserPrincipalName\r\n| sort by count_ desc",
                          "size": 0,
                          "title": "Security Violations by User",
                          "noDataMessage": "There are no results within the selected thresholds (time, workspace, subscription). Confirm Security Alerts are onboarded to Azure Sentinel and see Getting Started with Insider Risk Management for respective IRM configurations (https://docs.microsoft.com/microsoft-365/compliance/insider-risk-management-configure)",
                          "timeContext": {
                            "durationMs": 604800000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "redBright"
                                }
                              },
                              {
                                "columnMatch": "AlertName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "3",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Severity",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "High",
                                      "representation": "red",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Medium",
                                      "representation": "orange",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Low",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "ProductName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "uninitialized",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "AlertLink",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Alert >"
                                }
                              },
                              {
                                "columnMatch": "UPN",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "2",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "IncidentUrl",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Incident >"
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results308",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "308b"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SecurityAlert\r\n    | summarize hint.strategy = shuffle arg_max(TimeGenerated, *), NumberOfUpdates = count() by SystemAlertId\r\n    | mv-expand todynamic(Entities)\r\n    | where Entities[\"Type\"] =~ \"account\"\r\n    | extend Name = tostring(tolower(Entities[\"Name\"])), NTDomain = tostring(Entities[\"NTDomain\"]), UPNSuffix = tostring(Entities[\"UPNSuffix\"]), AadUserId = tostring(Entities[\"AadUserId\"]), AadTenantId = tostring(Entities[\"AadTenantId\"]), \r\n        Sid = tostring(Entities[\"Sid\"]), IsDomainJoined = tobool(Entities[\"IsDomainJoined\"]), Host = tostring(Entities[\"Host\"])\r\n    | extend UPN = iff(Name != \"\" and UPNSuffix != \"\", strcat(Name, \"@\", UPNSuffix), \"\")\r\n| extend Href_ = tostring(parse_json(ExtendedLinks)[0].Href)\r\n| extend UserPrincipalName = UPN\r\n| distinct UserPrincipalName, AlertName, ProductName, Status, AlertLink, Tactics, TimeGenerated\r\n| where UserPrincipalName <> \"\"\r\n| where UserPrincipalName !contains \"[\"\r\n| sort by TimeGenerated desc\r\n| limit 250",
                          "size": 0,
                          "title": "Security Violation Details",
                          "noDataMessage": "There are no results within the selected thresholds (time, workspace, subscription). Confirm Security Alerts are onboarded to Azure Sentinel and see Getting Started with Insider Risk Management for respective IRM configurations (https://docs.microsoft.com/microsoft-365/compliance/insider-risk-management-configure)",
                          "timeContext": {
                            "durationMs": 604800000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "AlertName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "3",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "ProductName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "uninitialized",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "AlertLink",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Alert >"
                                }
                              },
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Severity",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "High",
                                      "representation": "red",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Medium",
                                      "representation": "orange",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Low",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "UPN",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "2",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "IncidentUrl",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Incident >"
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "Results308",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "308c"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "TAB",
                    "comparison": "isEqualTo",
                    "value": "SV"
                  },
                  "name": "Security Violations"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "bd0a2fab-b83d-4e2a-80c9-ce3f4991770f",
                              "version": "KqlParameterItem/1.0",
                              "name": "Tactics",
                              "label": "MITRE ATT&CK Tactics",
                              "type": 2,
                              "description": "Filter on All or a named Product",
                              "isRequired": true,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "SecurityAlert\r\n| where Tactics == \"InitialAccess\" or Tactics == \"Execution\" or Tactics == \"Persistence\" or Tactics == \"PrivilegeEscalation\" or Tactics == \"DefenseEvasion\" or Tactics == \"CredentialAccess\" or Tactics == \"Discovery\" or Tactics == \"LateralMovement\" or Tactics == \"Collection\" or Tactics == \"Exfiltration\" or Tactics == \"Impact\" or Tactics == \"Unknown\" or Tactics == \"\"\r\n| summarize by Tactics\r\n",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "value": [
                                "value::all"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            },
                            {
                              "id": "e938b34d-89de-496b-ad7d-ed16ccee6c96",
                              "version": "KqlParameterItem/1.0",
                              "name": "Product",
                              "label": "Product ",
                              "type": 2,
                              "description": "Filter on All or a named Product",
                              "isRequired": true,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "SecurityAlert\r\n| summarize by ProductName",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "value": [
                                "value::all"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "Parameters: Help"
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "7afa304d-b448-4d6c-8c54-69e51a7249a9",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results309",
                              "type": 1,
                              "query": "SecurityAlert\r\n| where ProductName in ({Product})\r\n| where Tactics in ({Tactics})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "100",
                        "name": "Results309",
                        "styleSettings": {
                          "maxWidth": "100"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SecurityAlert\r\n| where ProductName in ({Product})\r\n| where Tactics in ({Tactics})\r\n| summarize count() by Tactics\r\n| sort by count_ desc",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "üü• Tactics Count",
                          "timeContext": {
                            "durationMs": 604800000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showRefreshButton": true,
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "tiles",
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "Tactics"
                            },
                            "leftContent": {
                              "columnMatch": "count_",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "orangeRed"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal"
                                }
                              }
                            },
                            "showBorder": false
                          },
                          "graphSettings": {
                            "type": 0
                          }
                        },
                        "customWidth": "70",
                        "conditionalVisibility": {
                          "parameterName": "Results309",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "309a",
                        "styleSettings": {
                          "maxWidth": "70"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SecurityAlert\r\n| where ProductName in ({Product})\r\n| where Tactics in ({Tactics})\r\n| summarize count() by Tactics\r\n| render piechart",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "üü• Tactics Proportions",
                          "timeContext": {
                            "durationMs": 604800000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "Tactics"
                            },
                            "leftContent": {
                              "columnMatch": "count_",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "orangeRed"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal"
                                }
                              }
                            },
                            "showBorder": false
                          },
                          "graphSettings": {
                            "type": 0
                          }
                        },
                        "customWidth": "30",
                        "conditionalVisibility": {
                          "parameterName": "Results309",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "309b",
                        "styleSettings": {
                          "maxWidth": "30"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SecurityAlert\r\n| where ProductName in ({Product})\r\n| where Tactics in ({Tactics})\r\n| make-series count() default=0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step 1d by Tactics\r\n| render areachart",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "üü• Tactics Over Time",
                          "timeContext": {
                            "durationMs": 604800000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "Results309",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "309c"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SecurityAlert\r\n| where ProductName in ({Product})\r\n| where Tactics in ({Tactics})\r\n| summarize count() by AlertSeverity\r\n| render piechart",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "üü¶ Security Alerts by Severity",
                          "noDataMessage": "An Empty Panel Provides Opportunity To Explore Further and Implement Hardening                                                                                                                                          ‚Ä¢    Controls: Confirm Licensing, Availability, and Health of Respective Offerings                                                                                                                                                ‚Ä¢    Logging: Confirm Log Source is Onboarded to Azure Sentinel Workspace                                                                                                                                                     ‚Ä¢    Time: Adjust the Time Parameter for a Larger Data-Set  ",
                          "timeContext": {
                            "durationMs": 604800000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "AlertName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Fired",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Count",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "yellowOrangeRed"
                                }
                              },
                              {
                                "columnMatch": "AlertLink",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Alert >"
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "yellowOrangeRed"
                                }
                              },
                              {
                                "columnMatch": "RecommendationName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "warning",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Recommendation",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Recommendation >"
                                }
                              },
                              {
                                "columnMatch": "RecommendationClick",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Click to Recommendation"
                                }
                              },
                              {
                                "columnMatch": "RecommendationLink",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Recommendation >"
                                }
                              }
                            ]
                          }
                        },
                        "customWidth": "25",
                        "conditionalVisibility": {
                          "parameterName": "Results309",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "309d"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SecurityAlert\r\n| where ProductName in ({Product})\r\n| where Tactics in ({Tactics})\r\n| make-series count() default=0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step 1d by AlertName\r\n| render timechart\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "üü¶ Security Alerts over Time",
                          "noDataMessage": "An Empty Panel Provides Opportunity To Explore Further and Implement Hardening                                                                                                                                          ‚Ä¢    Controls: Confirm Licensing, Availability, and Health of Respective Offerings                                                                                                                                                ‚Ä¢    Logging: Confirm Log Source is Onboarded to Azure Sentinel Workspace                                                                                                                                                     ‚Ä¢    Time: Adjust the Time Parameter for a Larger Data-Set  ",
                          "timeContext": {
                            "durationMs": 604800000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "AlertName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Fired",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Count",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "yellowOrangeRed"
                                }
                              },
                              {
                                "columnMatch": "AlertLink",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Alert >"
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "yellowOrangeRed"
                                }
                              },
                              {
                                "columnMatch": "RecommendationName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "warning",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Recommendation",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Recommendation >"
                                }
                              },
                              {
                                "columnMatch": "RecommendationClick",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Click to Recommendation"
                                }
                              },
                              {
                                "columnMatch": "RecommendationLink",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Recommendation >"
                                }
                              }
                            ]
                          }
                        },
                        "customWidth": "75",
                        "conditionalVisibility": {
                          "parameterName": "Results309",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "309e"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SecurityIncident\r\n    | summarize hint.strategy = shuffle arg_max(LastModifiedTime, *) by IncidentNumber\r\n    | where Status == \"New\" or Status == \"Active\"\r\n    | mv-expand AlertIds\r\n    | extend AlertId = tostring(AlertIds)\r\n    | join kind= innerunique ( \r\n        SecurityAlert \r\n| where ProductName in ({Product})\r\n| where Tactics in ({Tactics}))\r\n        on $left.AlertId == $right.SystemAlertId\r\n    | summarize hint.strategy = shuffle arg_max(TimeGenerated, *), NumberOfUpdates = count() by SystemAlertId\r\n    | mv-expand todynamic(Entities)\r\n    | where Entities[\"Type\"] =~ \"account\"\r\n    | extend Name = tostring(tolower(Entities[\"Name\"])), NTDomain = tostring(Entities[\"NTDomain\"]), UPNSuffix = tostring(Entities[\"UPNSuffix\"]), AadUserId = tostring(Entities[\"AadUserId\"]), AadTenantId = tostring(Entities[\"AadTenantId\"]), \r\n        Sid = tostring(Entities[\"Sid\"]), IsDomainJoined = tobool(Entities[\"IsDomainJoined\"]), Host = tostring(Entities[\"Host\"])\r\n    | extend UPN = iff(Name != \"\" and UPNSuffix != \"\", strcat(Name, \"@\", UPNSuffix), \"\")\r\n| extend Href_ = tostring(parse_json(ExtendedLinks)[0].Href)\r\n| extend UserPrincipalName = UPN\r\n| distinct AlertName, Severity, ProductName, Status, AlertLink, UserPrincipalName, TimeGenerated\r\n| sort by TimeGenerated desc\r\n| limit 250\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Security Alerts: Go-To >",
                          "timeContext": {
                            "durationMs": 604800000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "AlertName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "3",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Severity",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "High",
                                      "representation": "red",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Medium",
                                      "representation": "orange",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Low",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "ProductName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "uninitialized",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "AlertLink",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Alert >"
                                }
                              },
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "UPN",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "2",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "IncidentUrl",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Incident >"
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "Results309",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "309f"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let SecurityProducts = datatable(ProviderName:string, shortName:string)\r\n[\r\n    \"Office 365 Security and Compliance\", \"Microsoft 365 Insider Risk Management\",\r\n    \"ASI Scheduled Alerts\", \"Azure Sentinel\",\r\n    \"MCAS\", \"Microsoft Cloud App Security\",\r\n    \"MDATP\", \"Microsoft Defender for Endpoint\",\r\n    \"Azure Security Center\", \"Azure Security Center\",\r\n    \"Detection-WarmPathV2\", \"Azure Defender\",\r\n    \"MicrosoftThreatProtection\", \"Microsoft 365 Defender\",\r\n    \"IPC\", \"Azure Active Directory Identity Protection\",\r\n   \"Detection-Fusion\", \"Machine Learning Fusion Alert\",\r\n    \"Sentinel Fusion\", \"Machine Learning Fusion Alert\",\r\n    \"Azure Advanced Threat Protection\", \"Microsoft Defender for Identity\",\r\n    \"Threat Intelligence Alerts\", \"Threat Intelligence\",\r\n    \"IoTSecurity\", \"Azure Defender for IoT\",\r\n    \"MSTIC\", \"Microsoft Intelligent Security Graph\",\r\n    \"AntimalwarePublisher\", \"Microsoft Anti-Malware\",\r\n    \"OATP\", \"Microsoft Defender for Office 365\",\r\n    \"AdaptiveNetworkHardenings\", \"ASC Adaptive Network Hardening\",\r\n    \"StorageThreatDetection\", \"Azure Defender for Storage\",\r\n    \"CloudNetworkSecurity\", \"Azure Network Security\",\r\n    \"SQLThreatDetection\", \"Azure Defender for SQL\"\r\n];\r\nSecurityAlert\r\n| where Tactics in ({Tactics})\r\n| where ProductName in ({Product})\r\n| summarize count() by ProviderName\r\n| join SecurityProducts on ProviderName\r\n| project shortName, count_\r\n| sort by count_ desc\r\n\r\n\r\n\r\n\r\n\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "üü¶  Detecting Security Controls",
                          "timeContext": {
                            "durationMs": 604800000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "shortName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "uninitialized",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "ProductName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results309",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "309g"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SecurityAlert\r\n| where Tactics in ({Tactics})\r\n| where ProductName in ({Product})\r\n| summarize count() by AlertName\r\n| sort by count_ desc\r\n\r\n\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "üü¶  Detected Techniques",
                          "timeContext": {
                            "durationMs": 604800000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "AlertName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "3",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "ProductName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results309",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "309h"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "TAB",
                    "comparison": "isEqualTo",
                    "value": "MA"
                  },
                  "name": "MITRE ATT&CK"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "TAB",
              "comparison": "isEqualTo",
              "value": "IR"
            },
            "name": "Insider Risk"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "eab159e7-d9cf-46d4-bea5-72de411a598f",
                        "version": "KqlParameterItem/1.0",
                        "name": "WHelp",
                        "label": "üîé Watchlist Help",
                        "type": 10,
                        "isRequired": true,
                        "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n    {\\\"value\\\": \\\"Yes\\\", \\\"label\\\": \\\"Yes\\\", \\\"selected\\\":true},\\r\\n    {\\\"value\\\": \\\"No\\\", \\\"label\\\": \\\"No\\\"}\\r\\n]\",\"transformers\":null}",
                        "typeSettings": {
                          "additionalResourceOptions": [],
                          "showDefault": false
                        },
                        "timeContext": {
                          "durationMs": 604800000
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 8,
                        "value": "No"
                      },
                      {
                        "version": "KqlParameterItem/1.0",
                        "name": "Watchlist",
                        "label": "üîÄ Watchlist Selector",
                        "type": 2,
                        "isRequired": true,
                        "query": "_GetWatchlistAlias",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "value": "watchlist",
                        "typeSettings": {
                          "additionalResourceOptions": [],
                          "showDefault": false
                        },
                        "timeContext": {
                          "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "id": "3ed0bed7-469e-4200-9b3c-6260a7d81bd0"
                      }
                    ],
                    "style": "pills",
                    "queryType": 8
                  },
                  "name": "Watchlist Selector Parameter"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "## Watchlists\r\nAzure Sentinel watchlists enable the collection of data from external data sources for correlation with the events in your Azure Sentinel environment. Once created, you can use watchlists in your search, detection rules, threat hunting, and response playbooks. Watchlists are stored in your Azure Sentinel workspace as name-value pairs and are cached for optimal query performance and low latency. Common scenarios for using watchlists include:\r\n\r\n    ‚Ä¢ Investigating threats and responding to incidents quickly with the rapid import of IP addresses, file hashes, and other data from CSV files. Once imported, you can use watchlist name-value pairs for joins and filters in alert rules, threat hunting, workbooks, notebooks, and general queries.\r\n    ‚Ä¢ Importing business data as a watchlist. For example, import user lists with privileged system access, or terminated employees, and then use the watchlist to create allow and deny lists used to detect or prevent those users from logging in to the network.\r\n    ‚Ä¢ Reducing alert fatigue. Create allow lists to suppress alerts from a group of users, such as users from authorized IP addresses that perform tasks that would normally trigger the alert, and prevent benign events from becoming alerts.\r\n    ‚Ä¢ Enriching event data. Use watchlists to enrich your event data with name-value combinations derived from external data sources.\r\nThis section's panels require Azure Sentinel Watchlists. Your available Watchlists are displayed in the first panel below, if this panel is blank, configure watchlists as needed. For more information, see üí°[Use Azure Sentinel Watchlists](https://docs.microsoft.com/azure/sentinel/watchlists). This section requires that Watchlists are configured with use of the SearchKey column which groups queries to UserPrincipalName, AADEmail, Caller and respective user identifier fields. For more information, see üí°[Use Watchlists in Queries](https://docs.microsoft.com/azure/sentinel/watchlists#use-watchlists-in-queries). This section is bound to the parameters above for Subscription, Workspace, and TimeRange. This section is dynamically displayed meaning numerous hunting queries are executed and only panels returning data are displayed. For more information, see üí°[Modern Risk Pain Points](https://docs.microsoft.com/microsoft-365/compliance/insider-risk-management#modern-risk-pain-points) & üí°[Hunt for Threats with Azure Sentinel](https://docs.microsoft.com/azure/sentinel/hunting)\r\n\r\n| <strong> Hunting Queries Executed </strong> | \r\n|:--|\r\n| Watchlist Users: Sign-ins by Location Over Time |\r\n| Watchlist Users: Entity Behavior Analytics Alerts|\r\n| Watchlist Users: Authentication Details|\r\n| User Account Blast Radius |\r\n| Watchlist Users: Audit Logs |\r\n| Watchlist Users: Anomalous Apps Based on User's Authentication Location|\r\n| Watchlist Users: Searching for VIP Indicators/Emails|\r\n| Watchlist Users: Multiple Failed Queries |\r\n| Watchlist Users: Searching for Sensitive Word List |\r\n| Watchlist Users: Excessive Granting Privileges to Accounts |\r\n| Watchlist Users: Sign-in Authentication Failures |\r\n| Watchlist Users: Deleting or Removing Assets |\r\n| Watchlist Users: Privileged Identity Management Actions |\r\n| Watchlist Users: Failed Attempts to Access a Microsoft Portal |\r\n| Watchlist Users: Office Workload Operations |\r\n| Watchlist Users: Office Mail Forwarding |\r\n| Watchlist Users: Sensitive Data Access |",
                    "style": "info"
                  },
                  "conditionalVisibility": {
                    "parameterName": "WHelp",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "Watchlist"
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "parameters": [
                      {
                        "id": "7afa304d-b448-4d6c-8c54-69e51a7249a9",
                        "version": "KqlParameterItem/1.0",
                        "name": "Results27",
                        "type": 1,
                        "query": "SigninLogs\r\n| lookup kind=inner _GetWatchlist('{Watchlist}')\r\non $left.UserPrincipalName == $right.SearchKey\r\n| where IsInteractive == true\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "isHiddenWhenLocked": true,
                        "timeContext": {
                          "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      }
                    ],
                    "style": "pills",
                    "doNotRunWhenHidden": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "customWidth": "0",
                  "name": "Results27",
                  "styleSettings": {
                    "maxWidth": "0"
                  }
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "parameters": [
                      {
                        "id": "058e14bf-3a83-4282-8e08-a4b74a9c6a8d",
                        "version": "KqlParameterItem/1.0",
                        "name": "Results28",
                        "type": 1,
                        "query": "let AnomalousSigninActivity = BehaviorAnalytics\r\n    | where ActionType == \"Sign-in\"\r\n    | where (UsersInsights.NewAccount == True or UsersInsights.DormantAccount == True) and (\r\n        ActivityInsights.FirstTimeUserAccessedResource == True and ActivityInsights.ResourceUncommonlyAccessedAmongPeers == True\r\n        or ActivityInsights.FirstTimeUserUsedApp == True and ActivityInsights.AppUncommonlyUsedAmongPeers == False)\r\n    | join (\r\n        SigninLogs | where Status.errorCode == 0 or Status.errorCode == 0 and RiskDetail != \"none\"\r\n        )\r\n        on $left.SourceRecordId == $right._ItemId\r\n    | extend UserPrincipalName = iff(UserPrincipalName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserPrincipalName),\r\n        UserName = iff(UserName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserName)\r\n    | extend AnomalyName = \"Anomalous Successful Logon\",\r\n        Tactic = \"Persistence\",\r\n        Technique = \"Valid Accounts\",\r\n        SubTechnique = \"\",\r\n        Description = \"Successful Sign-in with one or more of the following indications: sign by new or recently dormant accounts and sign in with resource for the first time (while none of their peers did) or to an app for the first time (while none of their peers did) or performed by a user with Risk indicaiton from AAD\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"Evidence\"]=ActivityInsights, ResourceDisplayName, AppDisplayName, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority; \r\nlet critical = dynamic(['9b895d92-2cd3-44c7-9d02-a6ac2d5ea5c3', 'c4e39bd9-1100-46d3-8c65-fb160da0071f', '158c047a-c907-4556-b7ef-446551a6b5f7', '62e90394-69f5-4237-9190-012177145e10', 'd29b2b05-8046-44ba-8758-1e26182fcf32', '729827e3-9c14-49f7-bb1b-9608f156bbb8', '966707d0-3269-4727-9be2-8c3a10f19b9d', '194ae4cb-b126-40b2-bd5b-6091b380977d', 'fe930be7-5e62-47db-91af-98c3a49a38b1']);\r\nlet high = dynamic(['cf1c38e5-3621-4004-a7cb-879624dced7c', '7495fdc4-34c4-4d15-a289-98788ce399fd', 'aaf43236-0c0d-4d5f-883a-6955382ac081', '3edaf663-341e-4475-9f94-5c398ef6c070', '7698a772-787b-4ac8-901f-60d6b08affd2', 'b1be1c3e-b65d-4f19-8427-f6fa0d97feb9', '9f06204d-73c1-4d4c-880a-6edb90606fd8', '29232cdf-9323-42fd-ade2-1d097af3e4de', 'be2f45a1-457d-42af-a067-6ec1fa63bc45', '7be44c8a-adaf-4e2a-84d6-ab2649e08a13', 'e8611ab8-c189-46e8-94e1-60213ab1f814']);//witdstomstl\r\nlet AnomalousRoleAssignment = AuditLogs\r\n    | where TimeGenerated > ago(28d)\r\n    | where OperationName == \"Add member to role\"\r\n    | mv-expand TargetResources\r\n    | extend RoleId = tostring(TargetResources.modifiedProperties[0].newValue)\r\n    | where isnotempty(RoleId) and RoleId in (critical, high)\r\n    | extend RoleName = tostring(TargetResources.modifiedProperties[1].newValue)\r\n    | where isnotempty(RoleName)\r\n    | extend TargetId = tostring(TargetResources.id)\r\n    | extend Target = tostring(TargetResources.userPrincipalName)\r\n    | join kind=inner (\r\n        BehaviorAnalytics\r\n        | where ActionType == \"Add member to role\"\r\n        | where UsersInsights.BlasrRadius == \"High\" or ActivityInsights.FirstTimeUserPerformedAction == true\r\n        )\r\n        on $left._ItemId == $right.SourceRecordId\r\n    | extend AnomalyName = \"Anomalous Role Assignemt\",\r\n        Tactic = \"Persistence\",\r\n        Technique = \"Account Manipulation\",\r\n        SubTechnique = \"\",\r\n        Description = \"Adversaries may manipulate accounts to maintain access to victim systems. These actions include adding new accounts to high privilleged groups. Dragonfly 2.0, for example, added newly created accounts to the administrators group to maintain elevated access.  The query below generates an output of all high Blast Radius users performing Add member to priveleged role, or ones that add users for the first time.\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"TargetUser\"]=Target, RoleName, [\"Evidence\"]=ActivityInsights, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority; let LogOns=materialize(\r\n    BehaviorAnalytics\r\n    | where ActivityType == \"LogOn\");\r\nlet AnomalousResourceAccess = LogOns\r\n    | where ActionType == \"ResourceAccess\"\r\n    | where ActivityInsights.FirstTimeUserLoggedOnToDevice == true\r\n    | extend AnomalyName = \"Anomalous Resource Access\",\r\n        Tactic = \"Lateral Movement\",\r\n        Technique = \"\",\r\n        SubTechnique = \"\",\r\n        Description = \"Adversary may be trying to move through the environment. APT29 and APT32, for example, has used PtH & PtT techniques to lateral move around the network. The query below generates an output of all users performing an resource access (4624:3) to devices for the first time.\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"Evidence\"]=ActivityInsights, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority; \r\nlet AnomalousRDPActivity = LogOns\r\n    | where ActionType == \"RemoteInteractiveLogon\"\r\n    | where ActivityInsights.FirstTimeUserLoggedOnToDevice == true\r\n    | extend AnomalyName = \"Anomalous RDP Activity\",\r\n        Tactic = \"Lateral Movement\",\r\n        Technique = \"\",\r\n        SubTechnique = \"\",\r\n        Description = \"Adversaries may use Valid Accounts to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user. FIN10, for example, has used RDP to move laterally to systems in the victim environment. The query below generates an output of all users performing a remote interactive logon (4624:10) to a device for the first time.\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"Evidence\"]=ActivityInsights, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority; \r\nlet AnomalousLogintoDevices = LogOns\r\n    | where ActionType == \"InteractiveLogon\"\r\n    | where ActivityInsights.FirstTimeUserLoggedOnToDevice == true\r\n    | where UsersInsights.DormantAccount == true or DevicesInsights.LocalAdmin == true\r\n    | extend AnomalyName = \"Anomalous Login To Devices\",\r\n        Tactic = \"Privilege Escalation\",\r\n        Technique = \"Valid Accounts\",\r\n        SubTechnique = \"\",\r\n        Description = \"Adversaries may steal the credentials of a specific user or service account using Credential Access techniques or capture credentials earlier in their reconnaissance process through social engineering for means of gaining Initial Access. APT33, for example, has used valid accounts for initial access and privilege escalation. The query below generates an output of all administator users performing an interactive logon (4624:2) to a device for the first time.\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"Evidence\"]=ActivityInsights, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority; \r\nlet AnomalousPasswordReset = BehaviorAnalytics\r\n    | where ActionType == \"Reset user password\"\r\n    | where ActivityInsights.FirstTimeUserPerformedAction == \"True\"\r\n    | join (\r\n        AuditLogs\r\n        | where OperationName == \"Reset user password\"\r\n        )\r\n        on $left.SourceRecordId == $right._ItemId\r\n    | mv-expand TargetResources\r\n    | extend Target =  iff(tostring(TargetResources.userPrincipalName) contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(TargetResources.userPrincipalName, \"#\")[0])), TargetResources.userPrincipalName), tostring(TargetResources.userPrincipalName)\r\n    | extend UserPrincipalName = iff(UserPrincipalName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserPrincipalName),\r\n        UserName = iff(UserName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserName)\r\n    | extend AnomalyName = \"Anomalous Password Reset\",\r\n        Tactic = \"Impact\",\r\n        Technique = \"Account Access Removal\",\r\n        SubTechnique = \"\",\r\n        Description = \"Adversaries may interrupt availability of system and network resources by inhibiting access to accounts utilized by legitimate users. Accounts may be deleted, locked, or manipulated (ex: changed credentials) to remove access to accounts. LockerGoga, for example, has been observed changing account passwords and logging off current users. The query below generates an output of all users performing Reset user password for the first time.\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"TargetUser\"]=Target, [\"Evidence\"]=ActivityInsights, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority\r\n    | sort by TimeGenerated desc;\r\nlet AnomalousGeoLocationLogon = BehaviorAnalytics\r\n    | where ActionType == \"Sign-in\"\r\n    | where ActivityInsights.FirstTimeUserConnectedFromCountry == True and (ActivityInsights.FirstTimeConnectionFromCountryObservedInTenant == True or ActivityInsights.CountryUncommonlyConnectedFromAmongPeers == True)\r\n    | join (\r\n        SigninLogs\r\n        )\r\n        on $left.SourceRecordId == $right._ItemId\r\n    | extend UserPrincipalName = iff(UserPrincipalName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserPrincipalName),\r\n        UserName = iff(UserName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserName)\r\n    | extend AnomalyName = \"Anomalous Successful Logon\",\r\n        Tactic = \"Initial Access\",\r\n        Technique = \"Valid Accounts\",\r\n        SubTechnique = \"\",\r\n        Description = \"Adversaries may steal the credentials of a specific user or service account using Credential Access techniques or capture credentials earlier in their reconnaissance process through social engineering for means of gaining Initial Access. APT33, for example, has used valid accounts for initial access. The query below generates an output of successful Sign-in performed by a user from a new geo location he has never connected from before, and none of his peers as well.\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"Evidence\"]=ActivityInsights, ResourceDisplayName, AppDisplayName, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority; \r\nlet AnomalousFailedLogon = BehaviorAnalytics\r\n    | where ActivityType == \"LogOn\"\r\n    | where UsersInsights.BlastRadius == \"High\"\r\n    | join (\r\n        SigninLogs  \r\n        | where Status.errorCode == 50126\r\n        )\r\n        on $left.SourceRecordId == $right._ItemId\r\n    | extend UserPrincipalName = iff(UserPrincipalName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserPrincipalName),\r\n        UserName = iff(UserName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserName)\r\n    | extend AnomalyName = \"Anomalous Failed Logon\",\r\n        Tactic = \"Credential Access\",\r\n        Technique = \"Brute Force\",\r\n        SubTechnique = \"Password Guessing\",\r\n        Description = \"Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Emotet, for example, has been observed using a hard coded list of passwords to brute force user accounts. The query below generates an output of all users with 'High' BlastRadius that perform failed Sign-in:Invalid username or password.\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"Evidence\"]=ActivityInsights, ResourceDisplayName, AppDisplayName, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority; \r\nlet AnomalousAADAccountManipulation = AuditLogs\r\n    | where OperationName == \"Update user\"\r\n    | mv-expand AdditionalDetails\r\n    | where AdditionalDetails.key == \"UserPrincipalName\"\r\n    | mv-expand TargetResources\r\n    | extend RoleId = tostring(TargetResources.modifiedProperties[0].newValue)\r\n    | where isnotempty(RoleId) and RoleId in (critical, high)\r\n    | extend RoleName = tostring(TargetResources.modifiedProperties[1].newValue)\r\n    | where isnotempty(RoleName)\r\n    | extend TargetId = tostring(TargetResources.id)\r\n    | extend Target =  iff(tostring(TargetResources.userPrincipalName) contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(TargetResources.userPrincipalName, \"#\")[0])), TargetResources.userPrincipalName), tostring(TargetResources.userPrincipalName)\r\n    | join kind=inner ( \r\n        BehaviorAnalytics\r\n        | where ActionType == \"Update user\"\r\n        | where UsersInsights.BlasrRadius == \"High\" or ActivityInsights.FirstTimeUserPerformedAction == true\r\n        )\r\n        on $left._ItemId == $right.SourceRecordId\r\n    | extend UserPrincipalName = iff(UserPrincipalName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserPrincipalName),\r\n        UserName = iff(UserName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserName) \r\n    | extend AnomalyName = \"Anomalous Account Manipulation\",\r\n        Tactic = \"Persistence\",\r\n        Technique = \"Account Manipulation\",\r\n        SubTechnique = \"\",\r\n        Description = \"Adversaries may manipulate accounts to maintain access to victim systems. These actions include adding new accounts to high privilleged groups. Dragonfly 2.0, for example, added newly created accounts to the administrators group to maintain elevated access. The query below generates an output of all high Blast Radius users performing 'Update user' (name change) to priveleged role, or ones that changed users for the first time.\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"TargetUser\"]=Target, RoleName, [\"Evidence\"]=ActivityInsights, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority; let AnomalousAADAccountCreation = BehaviorAnalytics\r\n    | where ActionType == \"Add user\"\r\n    | where ActivityInsights.FirstTimeUserPerformedAction == True or ActivityInsights.FirstTimeActionPerformedInTenant == True or ActivityInsights.ActionUncommonlyPerformedAmongPeers == true\r\n    | join(\r\n        AuditLogs\r\n        | where OperationName == \"Add user\"\r\n        )\r\n        on $left.SourceRecordId == $right._ItemId\r\n    | mv-expand TargetResources\r\n    | extend Target =  iff(tostring(TargetResources.userPrincipalName) contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(TargetResources.userPrincipalName, \"#\")[0])), TargetResources.userPrincipalName), tostring(TargetResources.userPrincipalName)\r\n    | extend DisplayName = tostring(UsersInsights.AccountDisplayName),\r\n        UserPrincipalName = iff(UserPrincipalName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserPrincipalName),\r\n        UserName = iff(UserName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserName)\r\n    | extend AnomalyName = \"Anomalous Account Creation\",\r\n        Tactic = \"Persistence\",\r\n        Technique = \"Create Account\",\r\n        SubTechnique = \"Cloud Account\",\r\n        Description = \"Adversaries may create a cloud account to maintain access to victim systems. With a sufficient level of access, such accounts may be used to establish secondary credentialed access that does not require persistent remote access tools to be deployed on the system. The query below generates an output of all the users performing user creation for the first time and the target users that were created.\"\t\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"TargetUser\"]=Target, [\"Evidence\"]=ActivityInsights, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority\r\n    | sort by TimeGenerated desc;\r\nlet AnomalyTable = union kind=outer AnomalousSigninActivity, AnomalousRoleAssignment, AnomalousResourceAccess, AnomalousRDPActivity, AnomalousPasswordReset, AnomalousLogintoDevices, AnomalousGeoLocationLogon, AnomalousAADAccountManipulation, AnomalousAADAccountCreation, AnomalousFailedLogon;\r\nlet TopUsersByAnomalies = AnomalyTable\r\n    | summarize hint.strategy = shuffle AnomalyCount=count() by UserName, UserPrincipalName, tostring(UsersInsights.OnPremSid), tostring(UsersInsights.AccountObjectId)\r\n    | project Name=tolower(UserName), UPN=tolower(UserPrincipalName), AadUserId=UsersInsights_AccountObjectId, Sid=UsersInsights_OnPremSid, AnomalyCount\r\n    | sort by AnomalyCount desc;\r\nlet TopUsersByIncidents = SecurityIncident\r\n    | summarize hint.strategy = shuffle arg_max(LastModifiedTime, *) by IncidentNumber\r\n    | where Status == \"New\" or Status == \"Active\"\r\n    | mv-expand AlertIds\r\n    | extend AlertId = tostring(AlertIds)\r\n    | join kind= innerunique ( \r\n        SecurityAlert \r\n        )\r\n        on $left.AlertId == $right.SystemAlertId\r\n    | summarize hint.strategy = shuffle arg_max(TimeGenerated, *), NumberOfUpdates = count() by SystemAlertId\r\n    | mv-expand todynamic(Entities)\r\n    | where Entities[\"Type\"] =~ \"account\"\r\n    | extend Name = tostring(tolower(Entities[\"Name\"])), NTDomain = tostring(Entities[\"NTDomain\"]), UPNSuffix = tostring(Entities[\"UPNSuffix\"]), AadUserId = tostring(Entities[\"AadUserId\"]), AadTenantId = tostring(Entities[\"AadTenantId\"]), \r\n        Sid = tostring(Entities[\"Sid\"]), IsDomainJoined = tobool(Entities[\"IsDomainJoined\"]), Host = tostring(Entities[\"Host\"])\r\n    | extend UPN = iff(Name != \"\" and UPNSuffix != \"\", strcat(Name, \"@\", UPNSuffix), \"\")\r\n    | union TopUsersByAnomalies\r\n    | extend \r\n        AadPivot = iff(isempty(AadUserId), iff(isempty(Sid), Name, Sid), AadUserId),\r\n        SidPivot = iff(isempty(Sid), iff(isempty(AadUserId), Name, AadUserId), Sid),\r\n        UPNExists = iff(isempty(UPN), false, true),\r\n        NameExists = iff(isempty(Name), false, true),\r\n        SidExists = iff(isempty(Sid), false, true),\r\n        AADExists = iff(isempty(AadUserId), false, true)\r\n    | summarize hint.strategy = shuffle IncidentCount=dcount(IncidentNumber, 4), AlertCount=dcountif(AlertId, isnotempty(AlertId), 4), AnomalyCount=sum(AnomalyCount), any(Title, Severity, Status, StartTime, IncidentNumber, IncidentUrl, Owner), UPNAnchor=anyif(UPN, UPNExists == true), NameAnchor=anyif(Name, NameExists == true), AadAnchor=anyif(AadUserId, AADExists == true), SidAnchor=anyif(Sid, SidExists == true), any(SidPivot) by AadPivot\r\n    | summarize hint.strategy = shuffle IncidentCount=sum(IncidentCount), AlertCount=sum(AlertCount), AnomalyCount=sum(AnomalyCount), UPNAnchor=anyif(UPNAnchor, isempty(UPNAnchor) == false), NameAnchor=anyif(NameAnchor, isempty(NameAnchor) == false), AadAnchor=anyif(AadAnchor, isempty(AadAnchor) == false), SidAnchor=anyif(SidAnchor, isempty(SidAnchor) == false), any(any_Title, any_Severity, any_StartTime, any_IncidentNumber, any_IncidentUrl) by any_SidPivot\r\n    | summarize hint.strategy = shuffle IncidentCount=sum(IncidentCount), AlertCount=sum(AlertCount), AnomalyCount=sum(AnomalyCount), UPNAnchor=anyif(UPNAnchor, isempty(UPNAnchor) == false), AadAnchor=anyif(AadAnchor, isempty(AadAnchor) == false), SidAnchor=anyif(SidAnchor, isempty(SidAnchor) == false), any(any_any_Title, any_any_Severity, any_any_StartTime, any_any_IncidentNumber, any_any_IncidentUrl) by NameAnchor\r\n    | project [\"UserName\"]=NameAnchor, IncidentCount, AlertCount, AnomalyCount, [\"AadUserId\"]=AadAnchor, [\"OnPremSid\"]=SidAnchor, [\"UserPrincipalName\"]=UPNAnchor;\r\nTopUsersByIncidents\r\n| sort by AlertCount desc\r\n| lookup kind=inner _GetWatchlist('{Watchlist}')\r\non $left.UserPrincipalName == $right.SearchKey\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "isHiddenWhenLocked": true,
                        "timeContext": {
                          "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      }
                    ],
                    "style": "pills",
                    "doNotRunWhenHidden": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "customWidth": "0",
                  "name": "Results28",
                  "styleSettings": {
                    "maxWidth": "0"
                  }
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "parameters": [
                      {
                        "id": "cf7f0788-e6b0-4c5e-a850-a8f682aa9be8",
                        "version": "KqlParameterItem/1.0",
                        "name": "Results29",
                        "type": 1,
                        "query": "let nonInteractive = AADNonInteractiveUserSignInLogs\r\n| extend LocationDetails = parse_json(LocationDetails)\r\n| extend Status = parse_json(Status);\r\nlet data = \r\nunion SigninLogs,nonInteractive\r\n|extend errorCode = Status.errorCode\r\n|extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending user action\",errorCode == 50140, \"Pending user action\", errorCode == 51006, \"Pending user action\", errorCode == 50059, \"Pending user action\",errorCode == 65001, \"Pending user action\", errorCode == 52004, \"Pending user action\", errorCode == 50055, \"Pending user action\", errorCode == 50144, \"Pending user action\", errorCode == 50072, \"Pending user action\", errorCode == 50074, \"Pending user action\", errorCode == 16000, \"Pending user action\", errorCode == 16001, \"Pending user action\", errorCode == 16003, \"Pending user action\", errorCode == 50127, \"Pending user action\", errorCode == 50125, \"Pending user action\", errorCode == 50129, \"Pending user action\", errorCode == 50143, \"Pending user action\", errorCode == 81010, \"Pending user action\", errorCode == 81014, \"Pending user action\", errorCode == 81012 ,\"Pending user action\", \"Failure\");\r\ndata\r\n| lookup kind=inner _GetWatchlist('{Watchlist}')\r\non $left.UserPrincipalName == $right.SearchKey\r\n| where IsInteractive == true\r\n| summarize Count = count() by SigninStatus\r\n| join kind = fullouter (datatable(SigninStatus:string)['Success', 'Pending action (Interrupts)', 'Failure']) on SigninStatus\r\n| project SigninStatus = iff(SigninStatus == '', SigninStatus1, SigninStatus), Count = iff(SigninStatus == '', 0, Count)\r\n| join kind = inner (data\r\n    | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by SigninStatus)\r\n    on SigninStatus\r\n| project-away SigninStatus1, TimeGenerated\r\n| extend Status = SigninStatus\r\n| union (\r\n    data \r\n    | summarize Count = count()\r\n    | extend jkey = 1\r\n    | join kind=inner (data\r\n        | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain}\r\n        | extend jkey = 1) on jkey\r\n    | extend SigninStatus = 'All Sign-ins', Status = '*'    \r\n)\r\n| where SigninStatus <> \"All Sign-ins\"\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "isHiddenWhenLocked": true,
                        "timeContext": {
                          "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      }
                    ],
                    "style": "pills",
                    "doNotRunWhenHidden": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "customWidth": "0",
                  "name": "Results29",
                  "styleSettings": {
                    "maxWidth": "0"
                  }
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "parameters": [
                      {
                        "id": "281165fd-b441-4062-a36c-9462fc4f0214",
                        "version": "KqlParameterItem/1.0",
                        "name": "Results30",
                        "type": 1,
                        "query": "BehaviorAnalytics\r\n| lookup kind=inner _GetWatchlist('{Watchlist}')\r\non $left.UserPrincipalName == $right.SearchKey\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "isHiddenWhenLocked": true,
                        "timeContext": {
                          "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      }
                    ],
                    "style": "pills",
                    "doNotRunWhenHidden": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "customWidth": "0",
                  "name": "Results30",
                  "styleSettings": {
                    "maxWidth": "0"
                  }
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "parameters": [
                      {
                        "id": "60b8fb5d-bd1f-4543-b13b-e26b07fdd287",
                        "version": "KqlParameterItem/1.0",
                        "name": "Results31",
                        "type": 1,
                        "query": "AzureActivity\r\n| lookup kind=inner _GetWatchlist('{Watchlist}')\r\non $left.Caller == $right.SearchKey\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "isHiddenWhenLocked": true,
                        "timeContext": {
                          "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      }
                    ],
                    "style": "pills",
                    "doNotRunWhenHidden": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "customWidth": "0",
                  "name": "Results31",
                  "styleSettings": {
                    "maxWidth": "0"
                  }
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "parameters": [
                      {
                        "id": "917180ac-e0b8-4ad0-b19c-0640f56bedaf",
                        "version": "KqlParameterItem/1.0",
                        "name": "Results32",
                        "type": 1,
                        "query": "let azureSignIns = \r\n    SigninLogs\r\n    | lookup kind=inner _GetWatchlist('{Watchlist}')\r\non $left.UserPrincipalName == $right.SearchKey\r\n    | where SourceSystem == \"Azure AD\"\r\n    | where OperationName == \"Sign-in activity\"\r\n    | project TimeGenerated, OperationName, AppDisplayName, Identity, UserId, UserPrincipalName, Location, LocationDetails, \r\n        ClientAppUsed, DeviceDetail, ConditionalAccessPolicies;\r\nazureSignIns\r\n| extend locationString = strcat(tostring(LocationDetails[\"countryOrRegion\"]), \"/\", \r\n    tostring(LocationDetails[\"state\"]), \"/\", tostring(LocationDetails[\"city\"]), \";\", tostring(LocationDetails[\"geoCoordinates\"]))\r\n| summarize rawSigninCount = count(), countByAccount = dcount(UserId), locationCount = dcount(locationString) by AppDisplayName\r\n// tail - pick a threshold to rule out the very-high volume Azure AD apps\r\n| where rawSigninCount < 1000\r\n// more locations than accounts\r\n| where locationCount > countByAccount\r\n// almost as many / more locations than sign-ins!\r\n| where 1.0 * rawSigninCount / locationCount > 0.8 \r\n| order by rawSigninCount desc\r\n| join kind = leftouter (\r\n    azureSignIns \r\n    )\r\n    on AppDisplayName \r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "isHiddenWhenLocked": true,
                        "timeContext": {
                          "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      }
                    ],
                    "style": "pills",
                    "doNotRunWhenHidden": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "customWidth": "0",
                  "name": "Results32",
                  "styleSettings": {
                    "maxWidth": "0"
                  }
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "parameters": [
                      {
                        "id": "43dcfedf-97fb-40fe-88ed-d200ce72014e",
                        "version": "KqlParameterItem/1.0",
                        "name": "Results33",
                        "type": 1,
                        "query": "let viplist = dynamic(['vipuser1@example.com','vipuser2@example.com','vipuser3@example.com']); //Update with VIP User Email Addresses\r\n  LAQueryLogs\r\n| lookup kind=inner _GetWatchlist('{Watchlist}')\r\non $left.AADEmail == $right.SearchKey\r\n| where QueryText has_any (viplist)\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "isHiddenWhenLocked": true,
                        "timeContext": {
                          "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      }
                    ],
                    "style": "pills",
                    "doNotRunWhenHidden": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "customWidth": "0",
                  "name": "Results33",
                  "styleSettings": {
                    "maxWidth": "0"
                  }
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "parameters": [
                      {
                        "id": "46f737ff-a2a8-48d4-99b0-d44b9d88e71d",
                        "version": "KqlParameterItem/1.0",
                        "name": "Results34",
                        "type": 1,
                        "query": "let lookback = {TimeRange:grain};\r\n  let timeframe = 1h;\r\n  let threshold = 3;   //Adjust failure threshold as needed\r\n  LAQueryLogs\r\n  | where TimeGenerated > ago(lookback)\r\n  | where ResponseCode != 200\r\n  | summarize count() by AADEmail, bin(TimeGenerated, timeframe)\r\n  | where count_ > threshold\r\n  | join kind=rightsemi (\r\n  LAQueryLogs\r\n  | where TimeGenerated > ago(lookback)\r\n  | summarize make_set(QueryText) by AADEmail, bin(TimeGenerated, timeframe))\r\n  on AADEmail, TimeGenerated\r\n| lookup kind=inner _GetWatchlist('{Watchlist}')\r\non $left.AADEmail == $right.SearchKey\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "isHiddenWhenLocked": true,
                        "timeContext": {
                          "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      }
                    ],
                    "style": "pills",
                    "doNotRunWhenHidden": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "customWidth": "0",
                  "name": "Results34",
                  "styleSettings": {
                    "maxWidth": "0"
                  }
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "parameters": [
                      {
                        "id": "86a681d0-f4b7-4ead-b10a-7ba67106c8b8",
                        "version": "KqlParameterItem/1.0",
                        "name": "Results35",
                        "type": 1,
                        "query": "  let wordlist = dynamic(['example']); //Update with respective wordlists\r\n  LAQueryLogs\r\n  | where QueryText has_any (wordlist)\r\n| lookup kind=inner _GetWatchlist('{Watchlist}')\r\non $left.AADEmail == $right.SearchKey\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "isHiddenWhenLocked": true,
                        "timeContext": {
                          "durationMs": 1209600000
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      }
                    ],
                    "style": "pills",
                    "doNotRunWhenHidden": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "customWidth": "0",
                  "name": "Results35",
                  "styleSettings": {
                    "maxWidth": "0"
                  }
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "parameters": [
                      {
                        "id": "a4ede2d0-6779-4c07-b827-33b723bda30e",
                        "version": "KqlParameterItem/1.0",
                        "name": "Results36",
                        "type": 1,
                        "query": "AzureActivity\r\n| where OperationName == \"Create role assignment\"\r\n| where ActivityStatus == \"Succeeded\" \r\n| project Caller, CallerIpAddress\r\n| evaluate basket()\r\n| join kind=leftouter (AzureActivity\r\n    | where OperationName == \"Create role assignment\"\r\n    | where ActivityStatus == \"Succeeded\"\r\n    | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by Caller, CallerIpAddress)\r\n    on Caller, CallerIpAddress\r\n| project-away Caller1, CallerIpAddress1\r\n| extend timestamp = StartTime, AccountCustomEntity = Caller, IPCustomEntity = CallerIpAddress\r\n| lookup kind=inner _GetWatchlist('{Watchlist}')\r\non $left.Caller == $right.SearchKey\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "isHiddenWhenLocked": true,
                        "timeContext": {
                          "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      }
                    ],
                    "style": "pills",
                    "doNotRunWhenHidden": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "customWidth": "0",
                  "name": "Results36",
                  "styleSettings": {
                    "maxWidth": "0"
                  }
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "parameters": [
                      {
                        "id": "b0b5b8e8-0857-4cae-b371-d3d6bf1d7be8",
                        "version": "KqlParameterItem/1.0",
                        "name": "Results37",
                        "type": 1,
                        "query": "SigninLogs\r\n| extend ResultText = case(isnotempty(ResultDescription), ResultDescription, ResultType == 0 and isempty(ResultDescription), \"Successfull login\", \"unknown\")\r\n| where ResultText !contains \"success\"\r\n| lookup kind=inner _GetWatchlist('{Watchlist}')\r\non $left.UserPrincipalName == $right.SearchKey\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "isHiddenWhenLocked": true,
                        "timeContext": {
                          "durationMs": 1209600000
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      }
                    ],
                    "style": "pills",
                    "doNotRunWhenHidden": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "customWidth": "0",
                  "name": "Results37",
                  "styleSettings": {
                    "maxWidth": "0"
                  }
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "parameters": [
                      {
                        "id": "1fed64f7-f11a-4f75-9ba2-1e1942759878",
                        "version": "KqlParameterItem/1.0",
                        "name": "Results38",
                        "type": 1,
                        "query": "AzureActivity\r\n| where OperationName contains \"delete\" or OperationName contains \"remove\"\r\n| lookup kind=inner _GetWatchlist('{Watchlist}')\r\non $left.Caller == $right.SearchKey\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "isHiddenWhenLocked": true,
                        "timeContext": {
                          "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      }
                    ],
                    "style": "pills",
                    "doNotRunWhenHidden": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "customWidth": "0",
                  "name": "Results38",
                  "styleSettings": {
                    "maxWidth": "0"
                  }
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "parameters": [
                      {
                        "id": "dfab6ab6-497f-4fc5-86d1-5e3dec3755fc",
                        "version": "KqlParameterItem/1.0",
                        "name": "Results39",
                        "type": 1,
                        "query": "AuditLogs\r\n| where Identity == \"MS-PIM\"\r\n| extend userPrincipalName_ = tostring(TargetResources[0].userPrincipalName)\r\n| project userPrincipalName_, OperationName\r\n| lookup kind=inner _GetWatchlist('{Watchlist}')\r\non $left.userPrincipalName_ == $right.SearchKey\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "isHiddenWhenLocked": true,
                        "timeContext": {
                          "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      }
                    ],
                    "style": "pills",
                    "doNotRunWhenHidden": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "customWidth": "0",
                  "name": "Results39",
                  "styleSettings": {
                    "maxWidth": "0"
                  }
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "parameters": [
                      {
                        "id": "d0621776-4273-49a3-b6cf-157e78d21184",
                        "version": "KqlParameterItem/1.0",
                        "name": "Results40",
                        "type": 1,
                        "query": "SigninLogs\r\n| where AppDisplayName contains \"Portal\"\r\n// 50126 - Invalid username or password, or invalid on-premises username or password.\r\n// 50020? - The user doesn't exist in the tenant.\r\n| where ResultType in (\"50126\", \"50020\")\r\n| extend OS = DeviceDetail.operatingSystem, Browser = DeviceDetail.browser\r\n| extend StatusCode = tostring(Status.errorCode), StatusDetails = tostring(Status.additionalDetails)\r\n| extend State = tostring(LocationDetails.state), City = tostring(LocationDetails.city)\r\n| summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), IPAddresses = makeset(IPAddress), DistinctIPCount = dcount(IPAddress), \r\n    makeset(OS), makeset(Browser), makeset(City), AttemptCount = count() \r\n    by UserDisplayName, UserPrincipalName, AppDisplayName, ResultType, ResultDescription, StatusCode, StatusDetails, Location, State\r\n| extend timestamp = StartTimeUtc, AccountCustomEntity = UserPrincipalName\r\n| sort by AttemptCount\r\n| lookup kind=inner _GetWatchlist('{Watchlist}')\r\non $left.UserPrincipalName == $right.SearchKey\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "isHiddenWhenLocked": true,
                        "timeContext": {
                          "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      }
                    ],
                    "style": "pills",
                    "doNotRunWhenHidden": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "customWidth": "0",
                  "name": "Results40",
                  "styleSettings": {
                    "maxWidth": "0"
                  }
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "parameters": [
                      {
                        "id": "73f4427b-efed-446f-a44f-bede2eb02521",
                        "version": "KqlParameterItem/1.0",
                        "name": "Results41",
                        "type": 1,
                        "query": "OfficeActivity\r\n| lookup kind=inner _GetWatchlist('{Watchlist}')\r\non $left.UserId == $right.SearchKey\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "isHiddenWhenLocked": true,
                        "timeContext": {
                          "durationMs": 1209600000
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      }
                    ],
                    "style": "pills",
                    "doNotRunWhenHidden": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "customWidth": "0",
                  "name": "Results41",
                  "styleSettings": {
                    "maxWidth": "0"
                  }
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "parameters": [
                      {
                        "id": "dcb9e53d-3cba-4293-be1c-cfc441585b8f",
                        "version": "KqlParameterItem/1.0",
                        "name": "Results42",
                        "type": 1,
                        "query": "OfficeActivity\r\n| lookup kind=inner _GetWatchlist('{Watchlist}')\r\non $left.UserId == $right.SearchKey\r\n| where (Operation =~ \"Set-Mailbox\" and Parameters contains 'ForwardingSmtpAddress') \r\n    or (Operation =~ 'New-InboxRule' and Parameters contains 'ForwardTo')\r\n| extend parsed=parse_json(Parameters)\r\n| extend fwdingDestination_initial = (iif(Operation =~ \"Set-Mailbox\", tostring(parsed[1].Value), tostring(parsed[2].Value)))\r\n| where isnotempty(fwdingDestination_initial)\r\n| extend fwdingDestination = iff(fwdingDestination_initial has \"smtp\", (split(fwdingDestination_initial, \":\")[1]), fwdingDestination_initial)\r\n| parse fwdingDestination with * '@' ForwardedtoDomain \r\n| parse UserId with *'@' UserDomain\r\n| extend subDomain = ((split(strcat(tostring(split(UserDomain, '.')[-2]), '.', tostring(split(UserDomain, '.')[-1])), '.')[0]))\r\n| where ForwardedtoDomain !contains subDomain\r\n| extend Result = iff(ForwardedtoDomain != UserDomain, \"Mailbox rule created to forward to External Domain\", \"Forward rule for Internal domain\")\r\n| extend ClientIPAddress = case(ClientIP has \".\", tostring(split(ClientIP, \":\")[0]), ClientIP has \"[\", tostring(trim_start(@'[[]', tostring(split(ClientIP, \"]\")[0]))), ClientIP)\r\n| extend Port = case(\r\n    ClientIP has \".\", (split(ClientIP, \":\")[1]),\r\n    ClientIP has \"[\", tostring(split(ClientIP, \"]:\")[1]),\r\n    ClientIP\r\n    )\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "isHiddenWhenLocked": true,
                        "timeContext": {
                          "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      }
                    ],
                    "style": "pills",
                    "doNotRunWhenHidden": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "customWidth": "0",
                  "name": "Results42",
                  "styleSettings": {
                    "maxWidth": "0"
                  }
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "parameters": [
                      {
                        "id": "7b5b38d8-cc15-4bd0-8ae3-787dcb2d0179",
                        "version": "KqlParameterItem/1.0",
                        "name": "Results43",
                        "type": 1,
                        "query": "InformationProtectionLogs_CL\r\n| lookup kind=inner _GetWatchlist('{Watchlist}')\r\non $left.UserId_s_s == $right.SearchKey\r\n| where Activity_s <> \"\"\r\n| where Activity_s <> \"NewLabel\"\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "isHiddenWhenLocked": true,
                        "timeContext": {
                          "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      }
                    ],
                    "style": "pills",
                    "doNotRunWhenHidden": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "customWidth": "0",
                  "name": "Results43",
                  "styleSettings": {
                    "maxWidth": "0"
                  }
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "parameters": [
                      {
                        "id": "f09ddb66-17ee-42fc-bf81-e0f2d073664b",
                        "version": "KqlParameterItem/1.0",
                        "name": "Results151",
                        "type": 1,
                        "query": "SecurityIncident\r\n    | summarize hint.strategy = shuffle arg_max(LastModifiedTime, *) by IncidentNumber\r\n    | where Status == \"New\" or Status == \"Active\"\r\n    | mv-expand AlertIds\r\n    | extend AlertId = tostring(AlertIds)\r\n    | join kind= innerunique ( \r\n        SecurityAlert \r\n        )\r\n        on $left.AlertId == $right.SystemAlertId\r\n    | summarize hint.strategy = shuffle arg_max(TimeGenerated, *), NumberOfUpdates = count() by SystemAlertId\r\n    | mv-expand todynamic(Entities)\r\n    | where Entities[\"Type\"] =~ \"account\"\r\n    | extend Name = tostring(tolower(Entities[\"Name\"])), NTDomain = tostring(Entities[\"NTDomain\"]), UPNSuffix = tostring(Entities[\"UPNSuffix\"]), AadUserId = tostring(Entities[\"AadUserId\"]), AadTenantId = tostring(Entities[\"AadTenantId\"]), \r\n        Sid = tostring(Entities[\"Sid\"]), IsDomainJoined = tobool(Entities[\"IsDomainJoined\"]), Host = tostring(Entities[\"Host\"])\r\n    | extend UPN = iff(Name != \"\" and UPNSuffix != \"\", strcat(Name, \"@\", UPNSuffix), \"\")\r\n| extend Href_ = tostring(parse_json(ExtendedLinks)[0].Href)\r\n| where UPN <> \"\"\r\n| lookup kind=inner _GetWatchlist('{Watchlist}')\r\non $left.UPN == $right.SearchKey\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "isHiddenWhenLocked": true,
                        "timeContext": {
                          "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      }
                    ],
                    "style": "pills",
                    "doNotRunWhenHidden": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "customWidth": "0",
                  "name": "Results151",
                  "styleSettings": {
                    "maxWidth": "0"
                  }
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "parameters": [
                      {
                        "id": "9807f26d-303d-4e61-bbb8-fbcd017ec351",
                        "version": "KqlParameterItem/1.0",
                        "name": "Results154",
                        "type": 1,
                        "query": "SecurityIncident\r\n    | summarize hint.strategy = shuffle arg_max(LastModifiedTime, *) by IncidentNumber\r\n    | where Status == \"New\" or Status == \"Active\"\r\n    | mv-expand AlertIds\r\n    | extend AlertId = tostring(AlertIds)\r\n    | join kind= innerunique ( \r\n        SecurityAlert \r\n        )\r\n        on $left.AlertId == $right.SystemAlertId\r\n    | summarize hint.strategy = shuffle arg_max(TimeGenerated, *), NumberOfUpdates = count() by SystemAlertId\r\n    | mv-expand todynamic(Entities)\r\n    | where Entities[\"Type\"] =~ \"account\"\r\n    | extend Name = tostring(tolower(Entities[\"Name\"])), NTDomain = tostring(Entities[\"NTDomain\"]), UPNSuffix = tostring(Entities[\"UPNSuffix\"]), AadUserId = tostring(Entities[\"AadUserId\"]), AadTenantId = tostring(Entities[\"AadTenantId\"]), \r\n        Sid = tostring(Entities[\"Sid\"]), IsDomainJoined = tobool(Entities[\"IsDomainJoined\"]), Host = tostring(Entities[\"Host\"])\r\n    | extend UPN = iff(Name != \"\" and UPNSuffix != \"\", strcat(Name, \"@\", UPNSuffix), \"\")\r\n| extend Href_ = tostring(parse_json(ExtendedLinks)[0].Href)\r\n| where UPN <> \"\"\r\n| lookup kind=inner _GetWatchlist('{Watchlist}')\r\non $left.UPN == $right.SearchKey\r\n| extend Workspace = tostring(parse_json(tostring(parse_json(ExtendedProperties).[\"Data Sources\"]))[0])\r\n| extend IncidentURL = strcat(\"https://portal.azure.com/#asset/Microsoft_Azure_Security_Insights/Incident/subscriptions/\",WorkspaceSubscriptionId,\"/resourceGroups/\",WorkspaceResourceGroup,\"/providers/Microsoft.OperationalInsights/workspaces/\",Workspace,\"/providers/Microsoft.SecurityInsights/Incidents/\",IncidentName)\r\n| where IncidentURL !contains \"//resourceGroups\"\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "isHiddenWhenLocked": true,
                        "timeContext": {
                          "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      }
                    ],
                    "style": "pills",
                    "doNotRunWhenHidden": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "customWidth": "0",
                  "name": "Results154",
                  "styleSettings": {
                    "maxWidth": "0"
                  }
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "parameters": [
                      {
                        "id": "1f11f4c1-44d2-4f70-8f79-8eb831f1a68f",
                        "version": "KqlParameterItem/1.0",
                        "name": "Spacer",
                        "type": 1,
                        "query": "",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "isHiddenWhenLocked": true,
                        "timeContext": {
                          "durationMs": 1209600000
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      }
                    ],
                    "style": "pills",
                    "doNotRunWhenHidden": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "customWidth": "90",
                  "name": "Spacer",
                  "styleSettings": {
                    "maxWidth": "90"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "_GetWatchlistAlias",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Available Watchlists",
                    "noDataMessage": "You don't have any Watchlists configured. For more information on setting up watchlists, see https://docs.microsoft.com/azure/sentinel/watchlists",
                    "timeContext": {
                      "durationMs": 5184000000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "filter": true,
                      "sortBy": [
                        {
                          "itemKey": "WatchlistAlias",
                          "sortOrder": 1
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "WatchlistAlias",
                        "sortOrder": 1
                      }
                    ],
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "WatchlistAlias",
                        "formatter": 7,
                        "formatOptions": {
                          "linkTarget": "CellDetails",
                          "linkIsContextBlade": true
                        }
                      },
                      "showBorder": false
                    }
                  },
                  "customWidth": "50",
                  "name": "Available Watchlists",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "_GetWatchlist('{Watchlist}')\r\n| project-away _DTItemId, LastUpdatedTimeUTC",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Selected Watchlist",
                    "noDataMessage": "No Watchlist Selected",
                    "timeContext": {
                      "durationMs": 5184000000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "WatchlistAlias",
                          "formatter": 7
                        }
                      ],
                      "filter": true
                    },
                    "sortBy": [],
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "WatchlistAlias",
                        "formatter": 7,
                        "formatOptions": {
                          "linkTarget": "CellDetails",
                          "linkIsContextBlade": true
                        }
                      },
                      "showBorder": false
                    }
                  },
                  "customWidth": "50",
                  "name": "Selected Watchlist",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "SecurityIncident\r\n    | summarize hint.strategy = shuffle arg_max(LastModifiedTime, *) by IncidentNumber\r\n    | mv-expand AlertIds\r\n    | extend AlertId = tostring(AlertIds)\r\n    | join kind= innerunique ( \r\n        SecurityAlert \r\n        )\r\n        on $left.AlertId == $right.SystemAlertId\r\n    | summarize hint.strategy = shuffle arg_max(TimeGenerated, *), NumberOfUpdates = count() by SystemAlertId\r\n    | mv-expand todynamic(Entities)\r\n    | where Entities[\"Type\"] =~ \"account\"\r\n    | extend Name = tostring(tolower(Entities[\"Name\"])), NTDomain = tostring(Entities[\"NTDomain\"]), UPNSuffix = tostring(Entities[\"UPNSuffix\"]), AadUserId = tostring(Entities[\"AadUserId\"]), AadTenantId = tostring(Entities[\"AadTenantId\"]), \r\n        Sid = tostring(Entities[\"Sid\"]), IsDomainJoined = tobool(Entities[\"IsDomainJoined\"]), Host = tostring(Entities[\"Host\"])\r\n    | extend UPN = iff(Name != \"\" and UPNSuffix != \"\", strcat(Name, \"@\", UPNSuffix), \"\")\r\n| extend Href_ = tostring(parse_json(ExtendedLinks)[0].Href)\r\n| where UPN <> \"\"\r\n| lookup kind=inner _GetWatchlist('{Watchlist}')\r\non $left.UPN == $right.SearchKey\r\n| distinct UPN, AlertName, Severity, ProductName, AlertLink, TimeGenerated\r\n| sort by TimeGenerated desc\r\n| limit 250\r\n",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "User Security Alerts: Go-To >",
                    "timeContext": {
                      "durationMs": 5184000000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "showRefreshButton": true,
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "UPN",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "PersonWithFriend",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "AlertName",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "3",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Severity",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "High",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Medium",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Low",
                                "representation": "yellow",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "blue",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "ProductName",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "uninitialized",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "AlertLink",
                          "formatter": 7,
                          "formatOptions": {
                            "linkTarget": "Url",
                            "linkLabel": "Go to Alert >"
                          }
                        },
                        {
                          "columnMatch": "IncidentUrl",
                          "formatter": 7,
                          "formatOptions": {
                            "linkTarget": "Url",
                            "linkLabel": "Go to Incident >"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "count_",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "blue"
                          }
                        },
                        {
                          "columnMatch": "UserPrincipalName",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "resource",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "city_",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "blue",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "state_",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "blueDark",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ],
                      "filter": true
                    },
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "SigninStatus",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "Count",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "blue"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 2,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "Trend",
                        "formatter": 9,
                        "formatOptions": {
                          "palette": "green"
                        }
                      },
                      "showBorder": false
                    },
                    "mapSettings": {
                      "locInfo": "CountryRegion",
                      "locInfoColumn": "Location",
                      "latitude": "SourceIPLocation",
                      "longitude": "SourceIPLocation",
                      "sizeSettings": "Location",
                      "sizeAggregation": "Count",
                      "legendMetric": "Location",
                      "legendAggregation": "Count",
                      "itemColorSettings": {
                        "nodeColorField": "Location",
                        "colorAggregation": "Count",
                        "type": "thresholds",
                        "thresholdsGrid": [
                          {
                            "operator": "Default",
                            "thresholdValue": null,
                            "representation": "blueDark"
                          }
                        ]
                      }
                    }
                  },
                  "conditionalVisibility": {
                    "parameterName": "Results151",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "Results151"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "SecurityIncident\r\n    | summarize hint.strategy = shuffle arg_max(LastModifiedTime, *) by IncidentNumber\r\n    | mv-expand AlertIds\r\n    | extend AlertId = tostring(AlertIds)\r\n    | join kind= innerunique ( \r\n        SecurityAlert \r\n        )\r\n        on $left.AlertId == $right.SystemAlertId\r\n    | summarize hint.strategy = shuffle arg_max(TimeGenerated, *), NumberOfUpdates = count() by SystemAlertId\r\n    | mv-expand todynamic(Entities)\r\n    | where Entities[\"Type\"] =~ \"account\"\r\n    | extend Name = tostring(tolower(Entities[\"Name\"])), NTDomain = tostring(Entities[\"NTDomain\"]), UPNSuffix = tostring(Entities[\"UPNSuffix\"]), AadUserId = tostring(Entities[\"AadUserId\"]), AadTenantId = tostring(Entities[\"AadTenantId\"]), \r\n        Sid = tostring(Entities[\"Sid\"]), IsDomainJoined = tobool(Entities[\"IsDomainJoined\"]), Host = tostring(Entities[\"Host\"])\r\n    | extend UPN = iff(Name != \"\" and UPNSuffix != \"\", strcat(Name, \"@\", UPNSuffix), \"\")\r\n| extend Href_ = tostring(parse_json(ExtendedLinks)[0].Href)\r\n| where UPN <> \"\"\r\n| lookup kind=inner _GetWatchlist('{Watchlist}')\r\non $left.UPN == $right.SearchKey\r\n| extend Workspace = tostring(parse_json(tostring(parse_json(ExtendedProperties).[\"Data Sources\"]))[0])\r\n| extend IncidentURL = strcat(\"https://portal.azure.com/#asset/Microsoft_Azure_Security_Insights/Incident/subscriptions/\",WorkspaceSubscriptionId,\"/resourceGroups/\",WorkspaceResourceGroup,\"/providers/Microsoft.OperationalInsights/workspaces/\",Workspace,\"/providers/Microsoft.SecurityInsights/Incidents/\",IncidentName)\r\n| where IncidentURL !contains \"//resourceGroups\"\r\n| distinct UPN, IncidentNumber, Title, Severity, ProductName, IncidentURL, TimeGenerated\r\n| sort by TimeGenerated desc\r\n| limit 250\r\n",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "User Security Incidents: Go-To >",
                    "timeContext": {
                      "durationMs": 5184000000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "UPN",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "PersonWithFriend",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Title",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "error",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Severity",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "High",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Medium",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Low",
                                "representation": "yellow",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "blue",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "ProductName",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "uninitialized",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "IncidentURL",
                          "formatter": 7,
                          "formatOptions": {
                            "linkTarget": "Url",
                            "linkLabel": "Go to Incident >"
                          }
                        },
                        {
                          "columnMatch": "AlertName",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "3",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "AlertLink",
                          "formatter": 7,
                          "formatOptions": {
                            "linkTarget": "Url",
                            "linkLabel": ""
                          }
                        },
                        {
                          "columnMatch": "IncidentUrl",
                          "formatter": 7,
                          "formatOptions": {
                            "linkTarget": "Url",
                            "linkLabel": "Go to Incident >"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "count_",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "blue"
                          }
                        },
                        {
                          "columnMatch": "UserPrincipalName",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "resource",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "city_",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "blue",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "state_",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "blueDark",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ],
                      "filter": true
                    },
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "SigninStatus",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "Count",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "blue"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 2,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "Trend",
                        "formatter": 9,
                        "formatOptions": {
                          "palette": "green"
                        }
                      },
                      "showBorder": false
                    },
                    "mapSettings": {
                      "locInfo": "CountryRegion",
                      "locInfoColumn": "Location",
                      "latitude": "SourceIPLocation",
                      "longitude": "SourceIPLocation",
                      "sizeSettings": "Location",
                      "sizeAggregation": "Count",
                      "legendMetric": "Location",
                      "legendAggregation": "Count",
                      "itemColorSettings": {
                        "nodeColorField": "Location",
                        "colorAggregation": "Count",
                        "type": "thresholds",
                        "thresholdsGrid": [
                          {
                            "operator": "Default",
                            "thresholdValue": null,
                            "representation": "blueDark"
                          }
                        ]
                      }
                    }
                  },
                  "conditionalVisibility": {
                    "parameterName": "Results154",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "Results154"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "SigninLogs\r\n| lookup kind=inner _GetWatchlist('{Watchlist}')\r\non $left.UserPrincipalName == $right.SearchKey\r\n| where IsInteractive == true\r\n| extend city_ = tostring(LocationDetails.city)\r\n| extend state_ = tostring(LocationDetails.state)\r\n| make-series count() default=0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step 1d by state_\r\n| render timechart\r\n",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Watchlist Users: Sign-ins by Location Over Time",
                    "timeContext": {
                      "durationMs": 5184000000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "UserPrincipalName",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "resource",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "city_",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "blue",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "state_",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "blueDark",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "count_",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "blue"
                          }
                        }
                      ]
                    },
                    "sortBy": [],
                    "mapSettings": {
                      "locInfo": "CountryRegion",
                      "locInfoColumn": "Location",
                      "latitude": "SourceIPLocation",
                      "longitude": "SourceIPLocation",
                      "sizeSettings": "Location",
                      "sizeAggregation": "Count",
                      "legendMetric": "Location",
                      "legendAggregation": "Count",
                      "itemColorSettings": {
                        "nodeColorField": "Location",
                        "colorAggregation": "Count",
                        "type": "thresholds",
                        "thresholdsGrid": [
                          {
                            "operator": "Default",
                            "thresholdValue": null,
                            "representation": "blueDark"
                          }
                        ]
                      }
                    }
                  },
                  "conditionalVisibility": {
                    "parameterName": "Results27",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "Results27"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let AnomalousSigninActivity = BehaviorAnalytics\r\n    | where ActionType == \"Sign-in\"\r\n    | where (UsersInsights.NewAccount == True or UsersInsights.DormantAccount == True) and (\r\n        ActivityInsights.FirstTimeUserAccessedResource == True and ActivityInsights.ResourceUncommonlyAccessedAmongPeers == True\r\n        or ActivityInsights.FirstTimeUserUsedApp == True and ActivityInsights.AppUncommonlyUsedAmongPeers == False)\r\n    | join (\r\n        SigninLogs | where Status.errorCode == 0 or Status.errorCode == 0 and RiskDetail != \"none\"\r\n        )\r\n        on $left.SourceRecordId == $right._ItemId\r\n    | extend UserPrincipalName = iff(UserPrincipalName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserPrincipalName),\r\n        UserName = iff(UserName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserName)\r\n    | extend AnomalyName = \"Anomalous Successful Logon\",\r\n        Tactic = \"Persistence\",\r\n        Technique = \"Valid Accounts\",\r\n        SubTechnique = \"\",\r\n        Description = \"Successful Sign-in with one or more of the following indications: sign by new or recently dormant accounts and sign in with resource for the first time (while none of their peers did) or to an app for the first time (while none of their peers did) or performed by a user with Risk indicaiton from AAD\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"Evidence\"]=ActivityInsights, ResourceDisplayName, AppDisplayName, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority; \r\nlet critical = dynamic(['9b895d92-2cd3-44c7-9d02-a6ac2d5ea5c3', 'c4e39bd9-1100-46d3-8c65-fb160da0071f', '158c047a-c907-4556-b7ef-446551a6b5f7', '62e90394-69f5-4237-9190-012177145e10', 'd29b2b05-8046-44ba-8758-1e26182fcf32', '729827e3-9c14-49f7-bb1b-9608f156bbb8', '966707d0-3269-4727-9be2-8c3a10f19b9d', '194ae4cb-b126-40b2-bd5b-6091b380977d', 'fe930be7-5e62-47db-91af-98c3a49a38b1']);\r\nlet high = dynamic(['cf1c38e5-3621-4004-a7cb-879624dced7c', '7495fdc4-34c4-4d15-a289-98788ce399fd', 'aaf43236-0c0d-4d5f-883a-6955382ac081', '3edaf663-341e-4475-9f94-5c398ef6c070', '7698a772-787b-4ac8-901f-60d6b08affd2', 'b1be1c3e-b65d-4f19-8427-f6fa0d97feb9', '9f06204d-73c1-4d4c-880a-6edb90606fd8', '29232cdf-9323-42fd-ade2-1d097af3e4de', 'be2f45a1-457d-42af-a067-6ec1fa63bc45', '7be44c8a-adaf-4e2a-84d6-ab2649e08a13', 'e8611ab8-c189-46e8-94e1-60213ab1f814']);//witdstomstl\r\nlet AnomalousRoleAssignment = AuditLogs\r\n    | where TimeGenerated > ago(28d)\r\n    | where OperationName == \"Add member to role\"\r\n    | mv-expand TargetResources\r\n    | extend RoleId = tostring(TargetResources.modifiedProperties[0].newValue)\r\n    | where isnotempty(RoleId) and RoleId in (critical, high)\r\n    | extend RoleName = tostring(TargetResources.modifiedProperties[1].newValue)\r\n    | where isnotempty(RoleName)\r\n    | extend TargetId = tostring(TargetResources.id)\r\n    | extend Target = tostring(TargetResources.userPrincipalName)\r\n    | join kind=inner (\r\n        BehaviorAnalytics\r\n        | where ActionType == \"Add member to role\"\r\n        | where UsersInsights.BlasrRadius == \"High\" or ActivityInsights.FirstTimeUserPerformedAction == true\r\n        )\r\n        on $left._ItemId == $right.SourceRecordId\r\n    | extend AnomalyName = \"Anomalous Role Assignemt\",\r\n        Tactic = \"Persistence\",\r\n        Technique = \"Account Manipulation\",\r\n        SubTechnique = \"\",\r\n        Description = \"Adversaries may manipulate accounts to maintain access to victim systems. These actions include adding new accounts to high privilleged groups. Dragonfly 2.0, for example, added newly created accounts to the administrators group to maintain elevated access.  The query below generates an output of all high Blast Radius users performing Add member to priveleged role, or ones that add users for the first time.\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"TargetUser\"]=Target, RoleName, [\"Evidence\"]=ActivityInsights, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority; let LogOns=materialize(\r\n    BehaviorAnalytics\r\n    | where ActivityType == \"LogOn\");\r\nlet AnomalousResourceAccess = LogOns\r\n    | where ActionType == \"ResourceAccess\"\r\n    | where ActivityInsights.FirstTimeUserLoggedOnToDevice == true\r\n    | extend AnomalyName = \"Anomalous Resource Access\",\r\n        Tactic = \"Lateral Movement\",\r\n        Technique = \"\",\r\n        SubTechnique = \"\",\r\n        Description = \"Adversary may be trying to move through the environment. APT29 and APT32, for example, has used PtH & PtT techniques to lateral move around the network. The query below generates an output of all users performing an resource access (4624:3) to devices for the first time.\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"Evidence\"]=ActivityInsights, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority; \r\nlet AnomalousRDPActivity = LogOns\r\n    | where ActionType == \"RemoteInteractiveLogon\"\r\n    | where ActivityInsights.FirstTimeUserLoggedOnToDevice == true\r\n    | extend AnomalyName = \"Anomalous RDP Activity\",\r\n        Tactic = \"Lateral Movement\",\r\n        Technique = \"\",\r\n        SubTechnique = \"\",\r\n        Description = \"Adversaries may use Valid Accounts to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user. FIN10, for example, has used RDP to move laterally to systems in the victim environment. The query below generates an output of all users performing a remote interactive logon (4624:10) to a device for the first time.\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"Evidence\"]=ActivityInsights, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority; \r\nlet AnomalousLogintoDevices = LogOns\r\n    | where ActionType == \"InteractiveLogon\"\r\n    | where ActivityInsights.FirstTimeUserLoggedOnToDevice == true\r\n    | where UsersInsights.DormantAccount == true or DevicesInsights.LocalAdmin == true\r\n    | extend AnomalyName = \"Anomalous Login To Devices\",\r\n        Tactic = \"Privilege Escalation\",\r\n        Technique = \"Valid Accounts\",\r\n        SubTechnique = \"\",\r\n        Description = \"Adversaries may steal the credentials of a specific user or service account using Credential Access techniques or capture credentials earlier in their reconnaissance process through social engineering for means of gaining Initial Access. APT33, for example, has used valid accounts for initial access and privilege escalation. The query below generates an output of all administator users performing an interactive logon (4624:2) to a device for the first time.\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"Evidence\"]=ActivityInsights, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority; \r\nlet AnomalousPasswordReset = BehaviorAnalytics\r\n    | where ActionType == \"Reset user password\"\r\n    | where ActivityInsights.FirstTimeUserPerformedAction == \"True\"\r\n    | join (\r\n        AuditLogs\r\n        | where OperationName == \"Reset user password\"\r\n        )\r\n        on $left.SourceRecordId == $right._ItemId\r\n    | mv-expand TargetResources\r\n    | extend Target =  iff(tostring(TargetResources.userPrincipalName) contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(TargetResources.userPrincipalName, \"#\")[0])), TargetResources.userPrincipalName), tostring(TargetResources.userPrincipalName)\r\n    | extend UserPrincipalName = iff(UserPrincipalName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserPrincipalName),\r\n        UserName = iff(UserName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserName)\r\n    | extend AnomalyName = \"Anomalous Password Reset\",\r\n        Tactic = \"Impact\",\r\n        Technique = \"Account Access Removal\",\r\n        SubTechnique = \"\",\r\n        Description = \"Adversaries may interrupt availability of system and network resources by inhibiting access to accounts utilized by legitimate users. Accounts may be deleted, locked, or manipulated (ex: changed credentials) to remove access to accounts. LockerGoga, for example, has been observed changing account passwords and logging off current users. The query below generates an output of all users performing Reset user password for the first time.\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"TargetUser\"]=Target, [\"Evidence\"]=ActivityInsights, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority\r\n    | sort by TimeGenerated desc;\r\nlet AnomalousGeoLocationLogon = BehaviorAnalytics\r\n    | where ActionType == \"Sign-in\"\r\n    | where ActivityInsights.FirstTimeUserConnectedFromCountry == True and (ActivityInsights.FirstTimeConnectionFromCountryObservedInTenant == True or ActivityInsights.CountryUncommonlyConnectedFromAmongPeers == True)\r\n    | join (\r\n        SigninLogs\r\n        )\r\n        on $left.SourceRecordId == $right._ItemId\r\n    | extend UserPrincipalName = iff(UserPrincipalName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserPrincipalName),\r\n        UserName = iff(UserName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserName)\r\n    | extend AnomalyName = \"Anomalous Successful Logon\",\r\n        Tactic = \"Initial Access\",\r\n        Technique = \"Valid Accounts\",\r\n        SubTechnique = \"\",\r\n        Description = \"Adversaries may steal the credentials of a specific user or service account using Credential Access techniques or capture credentials earlier in their reconnaissance process through social engineering for means of gaining Initial Access. APT33, for example, has used valid accounts for initial access. The query below generates an output of successful Sign-in performed by a user from a new geo location he has never connected from before, and none of his peers as well.\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"Evidence\"]=ActivityInsights, ResourceDisplayName, AppDisplayName, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority; \r\nlet AnomalousFailedLogon = BehaviorAnalytics\r\n    | where ActivityType == \"LogOn\"\r\n    | where UsersInsights.BlastRadius == \"High\"\r\n    | join (\r\n        SigninLogs  \r\n        | where Status.errorCode == 50126\r\n        )\r\n        on $left.SourceRecordId == $right._ItemId\r\n    | extend UserPrincipalName = iff(UserPrincipalName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserPrincipalName),\r\n        UserName = iff(UserName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserName)\r\n    | extend AnomalyName = \"Anomalous Failed Logon\",\r\n        Tactic = \"Credential Access\",\r\n        Technique = \"Brute Force\",\r\n        SubTechnique = \"Password Guessing\",\r\n        Description = \"Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Emotet, for example, has been observed using a hard coded list of passwords to brute force user accounts. The query below generates an output of all users with 'High' BlastRadius that perform failed Sign-in:Invalid username or password.\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"Evidence\"]=ActivityInsights, ResourceDisplayName, AppDisplayName, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority; \r\nlet AnomalousAADAccountManipulation = AuditLogs\r\n    | where OperationName == \"Update user\"\r\n    | mv-expand AdditionalDetails\r\n    | where AdditionalDetails.key == \"UserPrincipalName\"\r\n    | mv-expand TargetResources\r\n    | extend RoleId = tostring(TargetResources.modifiedProperties[0].newValue)\r\n    | where isnotempty(RoleId) and RoleId in (critical, high)\r\n    | extend RoleName = tostring(TargetResources.modifiedProperties[1].newValue)\r\n    | where isnotempty(RoleName)\r\n    | extend TargetId = tostring(TargetResources.id)\r\n    | extend Target =  iff(tostring(TargetResources.userPrincipalName) contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(TargetResources.userPrincipalName, \"#\")[0])), TargetResources.userPrincipalName), tostring(TargetResources.userPrincipalName)\r\n    | join kind=inner ( \r\n        BehaviorAnalytics\r\n        | where ActionType == \"Update user\"\r\n        | where UsersInsights.BlasrRadius == \"High\" or ActivityInsights.FirstTimeUserPerformedAction == true\r\n        )\r\n        on $left._ItemId == $right.SourceRecordId\r\n    | extend UserPrincipalName = iff(UserPrincipalName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserPrincipalName),\r\n        UserName = iff(UserName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserName) \r\n    | extend AnomalyName = \"Anomalous Account Manipulation\",\r\n        Tactic = \"Persistence\",\r\n        Technique = \"Account Manipulation\",\r\n        SubTechnique = \"\",\r\n        Description = \"Adversaries may manipulate accounts to maintain access to victim systems. These actions include adding new accounts to high privilleged groups. Dragonfly 2.0, for example, added newly created accounts to the administrators group to maintain elevated access. The query below generates an output of all high Blast Radius users performing 'Update user' (name change) to priveleged role, or ones that changed users for the first time.\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"TargetUser\"]=Target, RoleName, [\"Evidence\"]=ActivityInsights, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority; let AnomalousAADAccountCreation = BehaviorAnalytics\r\n    | where ActionType == \"Add user\"\r\n    | where ActivityInsights.FirstTimeUserPerformedAction == True or ActivityInsights.FirstTimeActionPerformedInTenant == True or ActivityInsights.ActionUncommonlyPerformedAmongPeers == true\r\n    | join(\r\n        AuditLogs\r\n        | where OperationName == \"Add user\"\r\n        )\r\n        on $left.SourceRecordId == $right._ItemId\r\n    | mv-expand TargetResources\r\n    | extend Target =  iff(tostring(TargetResources.userPrincipalName) contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(TargetResources.userPrincipalName, \"#\")[0])), TargetResources.userPrincipalName), tostring(TargetResources.userPrincipalName)\r\n    | extend DisplayName = tostring(UsersInsights.AccountDisplayName),\r\n        UserPrincipalName = iff(UserPrincipalName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserPrincipalName),\r\n        UserName = iff(UserName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserName)\r\n    | extend AnomalyName = \"Anomalous Account Creation\",\r\n        Tactic = \"Persistence\",\r\n        Technique = \"Create Account\",\r\n        SubTechnique = \"Cloud Account\",\r\n        Description = \"Adversaries may create a cloud account to maintain access to victim systems. With a sufficient level of access, such accounts may be used to establish secondary credentialed access that does not require persistent remote access tools to be deployed on the system. The query below generates an output of all the users performing user creation for the first time and the target users that were created.\"\t\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"TargetUser\"]=Target, [\"Evidence\"]=ActivityInsights, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority\r\n    | sort by TimeGenerated desc;\r\nlet AnomalyTable = union kind=outer AnomalousSigninActivity, AnomalousRoleAssignment, AnomalousResourceAccess, AnomalousRDPActivity, AnomalousPasswordReset, AnomalousLogintoDevices, AnomalousGeoLocationLogon, AnomalousAADAccountManipulation, AnomalousAADAccountCreation, AnomalousFailedLogon;\r\nlet TopUsersByAnomalies = AnomalyTable\r\n    | summarize hint.strategy = shuffle AnomalyCount=count() by UserName, UserPrincipalName, tostring(UsersInsights.OnPremSid), tostring(UsersInsights.AccountObjectId)\r\n    | project Name=tolower(UserName), UPN=tolower(UserPrincipalName), AadUserId=UsersInsights_AccountObjectId, Sid=UsersInsights_OnPremSid, AnomalyCount\r\n    | sort by AnomalyCount desc;\r\nlet TopUsersByIncidents = SecurityIncident\r\n    | summarize hint.strategy = shuffle arg_max(LastModifiedTime, *) by IncidentNumber\r\n    | where Status == \"New\" or Status == \"Active\"\r\n    | mv-expand AlertIds\r\n    | extend AlertId = tostring(AlertIds)\r\n    | join kind= innerunique ( \r\n        SecurityAlert \r\n        )\r\n        on $left.AlertId == $right.SystemAlertId\r\n    | summarize hint.strategy = shuffle arg_max(TimeGenerated, *), NumberOfUpdates = count() by SystemAlertId\r\n    | mv-expand todynamic(Entities)\r\n    | where Entities[\"Type\"] =~ \"account\"\r\n    | extend Name = tostring(tolower(Entities[\"Name\"])), NTDomain = tostring(Entities[\"NTDomain\"]), UPNSuffix = tostring(Entities[\"UPNSuffix\"]), AadUserId = tostring(Entities[\"AadUserId\"]), AadTenantId = tostring(Entities[\"AadTenantId\"]), \r\n        Sid = tostring(Entities[\"Sid\"]), IsDomainJoined = tobool(Entities[\"IsDomainJoined\"]), Host = tostring(Entities[\"Host\"])\r\n    | extend UPN = iff(Name != \"\" and UPNSuffix != \"\", strcat(Name, \"@\", UPNSuffix), \"\")\r\n    | union TopUsersByAnomalies\r\n    | extend \r\n        AadPivot = iff(isempty(AadUserId), iff(isempty(Sid), Name, Sid), AadUserId),\r\n        SidPivot = iff(isempty(Sid), iff(isempty(AadUserId), Name, AadUserId), Sid),\r\n        UPNExists = iff(isempty(UPN), false, true),\r\n        NameExists = iff(isempty(Name), false, true),\r\n        SidExists = iff(isempty(Sid), false, true),\r\n        AADExists = iff(isempty(AadUserId), false, true)\r\n    | summarize hint.strategy = shuffle IncidentCount=dcount(IncidentNumber, 4), AlertCount=dcountif(AlertId, isnotempty(AlertId), 4), AnomalyCount=sum(AnomalyCount), any(Title, Severity, Status, StartTime, IncidentNumber, IncidentUrl, Owner), UPNAnchor=anyif(UPN, UPNExists == true), NameAnchor=anyif(Name, NameExists == true), AadAnchor=anyif(AadUserId, AADExists == true), SidAnchor=anyif(Sid, SidExists == true), any(SidPivot) by AadPivot\r\n    | summarize hint.strategy = shuffle IncidentCount=sum(IncidentCount), AlertCount=sum(AlertCount), AnomalyCount=sum(AnomalyCount), UPNAnchor=anyif(UPNAnchor, isempty(UPNAnchor) == false), NameAnchor=anyif(NameAnchor, isempty(NameAnchor) == false), AadAnchor=anyif(AadAnchor, isempty(AadAnchor) == false), SidAnchor=anyif(SidAnchor, isempty(SidAnchor) == false), any(any_Title, any_Severity, any_StartTime, any_IncidentNumber, any_IncidentUrl) by any_SidPivot\r\n    | summarize hint.strategy = shuffle IncidentCount=sum(IncidentCount), AlertCount=sum(AlertCount), AnomalyCount=sum(AnomalyCount), UPNAnchor=anyif(UPNAnchor, isempty(UPNAnchor) == false), AadAnchor=anyif(AadAnchor, isempty(AadAnchor) == false), SidAnchor=anyif(SidAnchor, isempty(SidAnchor) == false), any(any_any_Title, any_any_Severity, any_any_StartTime, any_any_IncidentNumber, any_any_IncidentUrl) by NameAnchor\r\n    | project [\"UserName\"]=NameAnchor, IncidentCount, AlertCount, AnomalyCount, [\"AadUserId\"]=AadAnchor, [\"OnPremSid\"]=SidAnchor, [\"UserPrincipalName\"]=UPNAnchor;\r\nTopUsersByIncidents\r\n| sort by AlertCount desc\r\n| lookup kind=inner _GetWatchlist('{Watchlist}')\r\non $left.UserPrincipalName == $right.SearchKey\r\n| project UserPrincipalName, IncidentCount, AlertCount, AnomalyCount\r\n| sort by IncidentCount desc\r\n| limit 250\r\n",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Watchlist Users: Entity Behavior Analytics Alerts",
                    "timeContext": {
                      "durationMs": 5184000000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "UserPrincipalName",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "PersonWithFriend",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "IncidentCount",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "redBright"
                          }
                        },
                        {
                          "columnMatch": "AlertCount",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "orange"
                          }
                        },
                        {
                          "columnMatch": "AnomalyCount",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "yellow"
                          }
                        }
                      ],
                      "filter": true,
                      "sortBy": [
                        {
                          "itemKey": "$gen_heatmap_IncidentCount_1",
                          "sortOrder": 2
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "$gen_heatmap_IncidentCount_1",
                        "sortOrder": 2
                      }
                    ]
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {
                    "parameterName": "Results28",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "Results28",
                  "styleSettings": {
                    "maxWidth": "50"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let nonInteractive = AADNonInteractiveUserSignInLogs\r\n| extend LocationDetails = parse_json(LocationDetails)\r\n| extend Status = parse_json(Status);\r\nlet data = \r\nunion SigninLogs,nonInteractive\r\n|extend errorCode = Status.errorCode\r\n|extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending user action\",errorCode == 50140, \"Pending user action\", errorCode == 51006, \"Pending user action\", errorCode == 50059, \"Pending user action\",errorCode == 65001, \"Pending user action\", errorCode == 52004, \"Pending user action\", errorCode == 50055, \"Pending user action\", errorCode == 50144, \"Pending user action\", errorCode == 50072, \"Pending user action\", errorCode == 50074, \"Pending user action\", errorCode == 16000, \"Pending user action\", errorCode == 16001, \"Pending user action\", errorCode == 16003, \"Pending user action\", errorCode == 50127, \"Pending user action\", errorCode == 50125, \"Pending user action\", errorCode == 50129, \"Pending user action\", errorCode == 50143, \"Pending user action\", errorCode == 81010, \"Pending user action\", errorCode == 81014, \"Pending user action\", errorCode == 81012 ,\"Pending user action\", \"Failure\");\r\ndata\r\n| lookup kind=inner _GetWatchlist('{Watchlist}')\r\non $left.UserPrincipalName == $right.SearchKey\r\n| where IsInteractive == true\r\n| summarize Count = count() by SigninStatus\r\n| join kind = fullouter (datatable(SigninStatus:string)['Success', 'Pending action (Interrupts)', 'Failure']) on SigninStatus\r\n| project SigninStatus = iff(SigninStatus == '', SigninStatus1, SigninStatus), Count = iff(SigninStatus == '', 0, Count)\r\n| join kind = inner (data\r\n    | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by SigninStatus)\r\n    on SigninStatus\r\n| project-away SigninStatus1, TimeGenerated\r\n| extend Status = SigninStatus\r\n| union (\r\n    data \r\n    | summarize Count = count()\r\n    | extend jkey = 1\r\n    | join kind=inner (data\r\n        | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain}\r\n        | extend jkey = 1) on jkey\r\n    | extend SigninStatus = 'All Sign-ins', Status = '*'    \r\n)\r\n| where SigninStatus <> \"All Sign-ins\"\r\n\r\n",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Watchlist Users: Authentication Details",
                    "timeContext": {
                      "durationMs": 5184000000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "visualization": "tiles",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "User",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "info",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Activities",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "blue"
                          }
                        }
                      ]
                    },
                    "sortBy": [],
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "SigninStatus",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "Count",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "blue"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 2,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "Trend",
                        "formatter": 9,
                        "formatOptions": {
                          "palette": "green"
                        }
                      },
                      "showBorder": false
                    },
                    "mapSettings": {
                      "locInfo": "CountryRegion",
                      "locInfoColumn": "Location",
                      "latitude": "SourceIPLocation",
                      "longitude": "SourceIPLocation",
                      "sizeSettings": "Location",
                      "sizeAggregation": "Count",
                      "legendMetric": "Location",
                      "legendAggregation": "Count",
                      "itemColorSettings": {
                        "nodeColorField": "Location",
                        "colorAggregation": "Count",
                        "type": "thresholds",
                        "thresholdsGrid": [
                          {
                            "operator": "Default",
                            "thresholdValue": null,
                            "representation": "blueDark"
                          }
                        ]
                      }
                    }
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {
                    "parameterName": "Results29",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "Results29",
                  "styleSettings": {
                    "maxWidth": "50"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "BehaviorAnalytics\r\n| lookup kind=inner _GetWatchlist('{Watchlist}')\r\non $left.UserPrincipalName == $right.SearchKey\r\n| extend ActionUncommonlyPerformedByUser_ = tostring(ActivityInsights.ActionUncommonlyPerformedByUser)\r\n| extend FirstTimeUserConnectedViaISP_ = tostring(ActivityInsights.FirstTimeUserConnectedViaISP)\r\n| extend ISPUncommonlyUsedAmongPeers_ = tostring(ActivityInsights.ISPUncommonlyUsedAmongPeers)\r\n| extend UncommonHighVolumeOfActions_ = tostring(ActivityInsights.UncommonHighVolumeOfActions)\r\n| extend BlastRadius_ = tostring(UsersInsights.BlastRadius)\r\n| summarize count() by UserPrincipalName, BlastRadius_\r\n| project UserPrincipalName, BlastRadius_\r\n| limit 250\r\n\r\n\r\n\r\n\r\n",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "User Account Blast Radius",
                    "timeContext": {
                      "durationMs": 5184000000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "UserPrincipalName",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "PersonWithFriend",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "BlastRadius_",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "High",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Medium",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Low",
                                "representation": "blue",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ],
                      "filter": true
                    },
                    "sortBy": [],
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "SigninStatus",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "Count",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "blue"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 2,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "Trend",
                        "formatter": 9,
                        "formatOptions": {
                          "palette": "green"
                        }
                      },
                      "showBorder": false
                    },
                    "mapSettings": {
                      "locInfo": "CountryRegion",
                      "locInfoColumn": "Location",
                      "latitude": "SourceIPLocation",
                      "longitude": "SourceIPLocation",
                      "sizeSettings": "Location",
                      "sizeAggregation": "Count",
                      "legendMetric": "Location",
                      "legendAggregation": "Count",
                      "itemColorSettings": {
                        "nodeColorField": "Location",
                        "colorAggregation": "Count",
                        "type": "thresholds",
                        "thresholdsGrid": [
                          {
                            "operator": "Default",
                            "thresholdValue": null,
                            "representation": "blueDark"
                          }
                        ]
                      }
                    }
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {
                    "parameterName": "Results30",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "Results30",
                  "styleSettings": {
                    "maxWidth": "50"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "AzureActivity\r\n| lookup kind=inner _GetWatchlist('{Watchlist}')\r\non $left.Caller == $right.SearchKey\r\n| summarize count() by Caller, OperationName\r\n| sort by count_ desc \r\n| limit 250\r\n",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Watchlist Users: Audit Logs",
                    "timeContext": {
                      "durationMs": 5184000000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Caller",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "PersonWithFriend",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OperationName",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "info",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "count_",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "blue"
                          }
                        }
                      ],
                      "filter": true
                    },
                    "sortBy": [],
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "SigninStatus",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "Count",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "blue"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 2,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "Trend",
                        "formatter": 9,
                        "formatOptions": {
                          "palette": "green"
                        }
                      },
                      "showBorder": false
                    },
                    "mapSettings": {
                      "locInfo": "CountryRegion",
                      "locInfoColumn": "Location",
                      "latitude": "SourceIPLocation",
                      "longitude": "SourceIPLocation",
                      "sizeSettings": "Location",
                      "sizeAggregation": "Count",
                      "legendMetric": "Location",
                      "legendAggregation": "Count",
                      "itemColorSettings": {
                        "nodeColorField": "Location",
                        "colorAggregation": "Count",
                        "type": "thresholds",
                        "thresholdsGrid": [
                          {
                            "operator": "Default",
                            "thresholdValue": null,
                            "representation": "blueDark"
                          }
                        ]
                      }
                    }
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {
                    "parameterName": "Results31",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "Results31",
                  "styleSettings": {
                    "maxWidth": "50"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let azureSignIns = \r\n    SigninLogs\r\n    | lookup kind=inner _GetWatchlist('{Watchlist}')\r\non $left.UserPrincipalName == $right.SearchKey\r\n    | where SourceSystem == \"Azure AD\"\r\n    | where OperationName == \"Sign-in activity\"\r\n    | project TimeGenerated, OperationName, AppDisplayName, Identity, UserId, UserPrincipalName, Location, LocationDetails, \r\n        ClientAppUsed, DeviceDetail, ConditionalAccessPolicies;\r\nazureSignIns\r\n| extend locationString = strcat(tostring(LocationDetails[\"countryOrRegion\"]), \"/\", \r\n    tostring(LocationDetails[\"state\"]), \"/\", tostring(LocationDetails[\"city\"]), \";\", tostring(LocationDetails[\"geoCoordinates\"]))\r\n| summarize rawSigninCount = count(), countByAccount = dcount(UserId), locationCount = dcount(locationString) by AppDisplayName\r\n// tail - pick a threshold to rule out the very-high volume Azure AD apps\r\n| where rawSigninCount < 1000\r\n// more locations than accounts\r\n| where locationCount > countByAccount\r\n// almost as many / more locations than sign-ins!\r\n| where 1.0 * rawSigninCount / locationCount > 0.8 \r\n| order by rawSigninCount desc\r\n| join kind = leftouter (\r\n    azureSignIns \r\n    )\r\n    on AppDisplayName \r\n| project AppDisplayName, TimeGenerated, Identity, rawSigninCount, countByAccount, locationCount,  \r\n    locationString = strcat(tostring(LocationDetails[\"countryOrRegion\"]), \"/\", tostring(LocationDetails[\"state\"]), \"/\", \r\n    tostring(LocationDetails[\"city\"]), \";\", tostring(LocationDetails[\"geoCoordinates\"])), UserPrincipalName\r\n| make-series count() default=0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step 1d by Identity\r\n| render timechart",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Watchlist Users: Anomalous Apps Based on User's Authentication Location ",
                    "timeContext": {
                      "durationMs": 5184000000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "UserPrincipalName",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "Fired",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "IncidentCount",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "orange"
                          }
                        },
                        {
                          "columnMatch": "AlertCount",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "redBright"
                          }
                        },
                        {
                          "columnMatch": "AnomalyCount",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "yellow"
                          }
                        },
                        {
                          "columnMatch": "UserName",
                          "formatter": 16,
                          "formatOptions": {
                            "showIcon": true
                          }
                        }
                      ]
                    },
                    "sortBy": [],
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "SigninStatus",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "Count",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "blue"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 2,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "Trend",
                        "formatter": 9,
                        "formatOptions": {
                          "palette": "green"
                        }
                      },
                      "showBorder": false
                    },
                    "mapSettings": {
                      "locInfo": "CountryRegion",
                      "locInfoColumn": "Location",
                      "latitude": "SourceIPLocation",
                      "longitude": "SourceIPLocation",
                      "sizeSettings": "Location",
                      "sizeAggregation": "Count",
                      "legendMetric": "Location",
                      "legendAggregation": "Count",
                      "itemColorSettings": {
                        "nodeColorField": "Location",
                        "colorAggregation": "Count",
                        "type": "thresholds",
                        "thresholdsGrid": [
                          {
                            "operator": "Default",
                            "thresholdValue": null,
                            "representation": "blueDark"
                          }
                        ]
                      }
                    }
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {
                    "parameterName": "Results32",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "Results32",
                  "styleSettings": {
                    "maxWidth": "50"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let viplist = dynamic(['vipuser1@example.com','vipuser2@example.com','vipuser3@example.com']); //Update with VIP User Email Addresses\r\n  LAQueryLogs\r\n| lookup kind=inner _GetWatchlist('{Watchlist}')\r\non $left.AADEmail == $right.SearchKey\r\n  | where QueryText has_any (viplist)\r\n  | project AADEmail, QueryText, RequestTarget, TimeGenerated\r\n  | sort by TimeGenerated desc\r\n  | limit 250\r\n ",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Watchlist Users: Searching for VIP Indicators/Emails ",
                    "timeContext": {
                      "durationMs": 5184000000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "AADEmail",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "PersonWithFriend",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "UserPrincipalName",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "Fired",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "IncidentCount",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "orange"
                          }
                        },
                        {
                          "columnMatch": "AlertCount",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "redBright"
                          }
                        },
                        {
                          "columnMatch": "AnomalyCount",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "yellow"
                          }
                        },
                        {
                          "columnMatch": "UserName",
                          "formatter": 16,
                          "formatOptions": {
                            "showIcon": true
                          }
                        }
                      ]
                    },
                    "sortBy": [],
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "SigninStatus",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "Count",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "blue"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 2,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "Trend",
                        "formatter": 9,
                        "formatOptions": {
                          "palette": "green"
                        }
                      },
                      "showBorder": false
                    },
                    "mapSettings": {
                      "locInfo": "CountryRegion",
                      "locInfoColumn": "Location",
                      "latitude": "SourceIPLocation",
                      "longitude": "SourceIPLocation",
                      "sizeSettings": "Location",
                      "sizeAggregation": "Count",
                      "legendMetric": "Location",
                      "legendAggregation": "Count",
                      "itemColorSettings": {
                        "nodeColorField": "Location",
                        "colorAggregation": "Count",
                        "type": "thresholds",
                        "thresholdsGrid": [
                          {
                            "operator": "Default",
                            "thresholdValue": null,
                            "representation": "blueDark"
                          }
                        ]
                      }
                    }
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {
                    "parameterName": "Results33",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "Results33",
                  "styleSettings": {
                    "maxWidth": "50"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let lookback = {TimeRange:grain};\r\n  let timeframe = 1h;\r\n  let threshold = 3;   //Adjust failure threshold as needed\r\n  LAQueryLogs\r\n  | where TimeGenerated > ago(lookback)\r\n  | where ResponseCode != 200\r\n  | summarize count() by AADEmail, bin(TimeGenerated, timeframe)\r\n  | where count_ > threshold\r\n  | join kind=rightsemi (\r\n  LAQueryLogs\r\n  | where TimeGenerated > ago(lookback)\r\n  | summarize make_set(QueryText) by AADEmail, bin(TimeGenerated, timeframe))\r\n  on AADEmail, TimeGenerated\r\n| lookup kind=inner _GetWatchlist('{Watchlist}')\r\non $left.AADEmail == $right.SearchKey\r\n| summarize count() by AADEmail\r\n\r\n\r\n",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Watchlist Users: Multiple Failed Queries",
                    "timeContext": {
                      "durationMs": 5184000000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "AADEmail",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "PersonWithFriend",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "count_",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "redBright"
                          }
                        }
                      ]
                    },
                    "sortBy": [],
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "SigninStatus",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "Count",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "blue"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 2,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "Trend",
                        "formatter": 9,
                        "formatOptions": {
                          "palette": "green"
                        }
                      },
                      "showBorder": false
                    },
                    "mapSettings": {
                      "locInfo": "CountryRegion",
                      "locInfoColumn": "Location",
                      "latitude": "SourceIPLocation",
                      "longitude": "SourceIPLocation",
                      "sizeSettings": "Location",
                      "sizeAggregation": "Count",
                      "legendMetric": "Location",
                      "legendAggregation": "Count",
                      "itemColorSettings": {
                        "nodeColorField": "Location",
                        "colorAggregation": "Count",
                        "type": "thresholds",
                        "thresholdsGrid": [
                          {
                            "operator": "Default",
                            "thresholdValue": null,
                            "representation": "blueDark"
                          }
                        ]
                      }
                    }
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {
                    "parameterName": "Results34",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "Results34",
                  "styleSettings": {
                    "maxWidth": "50"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "  let wordlist = dynamic(['example']); //Update with respective wordlists\r\n  LAQueryLogs\r\n  | where QueryText has_any (wordlist)\r\n| lookup kind=inner _GetWatchlist('{Watchlist}')\r\non $left.AADEmail == $right.SearchKey\r\n  | project TimeGenerated, AADEmail, RequestClientApp, QueryText, ResponseRowCount, RequestTarget\r\n  | project AADEmail,QueryText, TimeGenerated\r\n  | summarize count() by AADEmail,QueryText\r\n  | sort by count_ desc\r\n  | limit 250\r\n",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Watchlist Users: Searching for Sensitive Word List",
                    "timeContext": {
                      "durationMs": 5184000000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "AADEmail",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "PersonWithFriend",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "QueryText",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "info",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "count_",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "blue"
                          }
                        }
                      ],
                      "filter": true
                    },
                    "sortBy": [],
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "SigninStatus",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "Count",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "blue"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 2,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "Trend",
                        "formatter": 9,
                        "formatOptions": {
                          "palette": "green"
                        }
                      },
                      "showBorder": false
                    },
                    "mapSettings": {
                      "locInfo": "CountryRegion",
                      "locInfoColumn": "Location",
                      "latitude": "SourceIPLocation",
                      "longitude": "SourceIPLocation",
                      "sizeSettings": "Location",
                      "sizeAggregation": "Count",
                      "legendMetric": "Location",
                      "legendAggregation": "Count",
                      "itemColorSettings": {
                        "nodeColorField": "Location",
                        "colorAggregation": "Count",
                        "type": "thresholds",
                        "thresholdsGrid": [
                          {
                            "operator": "Default",
                            "thresholdValue": null,
                            "representation": "blueDark"
                          }
                        ]
                      }
                    }
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {
                    "parameterName": "Results35",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "Results35",
                  "styleSettings": {
                    "maxWidth": "50"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "AzureActivity\r\n| where OperationName == \"Create role assignment\"\r\n| where ActivityStatus == \"Succeeded\" \r\n| project Caller, CallerIpAddress\r\n| evaluate basket()\r\n| join kind=leftouter (AzureActivity\r\n    | where OperationName == \"Create role assignment\"\r\n    | where ActivityStatus == \"Succeeded\"\r\n    | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by Caller, CallerIpAddress)\r\n    on Caller, CallerIpAddress\r\n| project-away Caller1, CallerIpAddress1\r\n| extend timestamp = StartTime, AccountCustomEntity = Caller, IPCustomEntity = CallerIpAddress\r\n| lookup kind=inner _GetWatchlist('{Watchlist}')\r\non $left.Caller == $right.SearchKey\r\n| extend GrantedPrivileges = Caller1\r\n| project Caller, GrantedPrivileges, timestamp\r\n\r\n",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Watchlist Users: Excessive Granting Privileges to Accounts",
                    "timeContext": {
                      "durationMs": 5184000000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Caller",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "resource",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "GrantedPrivileges",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "Fired",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "AADEmail",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "resource",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "QueryText",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "red",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ],
                      "filter": true
                    },
                    "sortBy": [],
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "SigninStatus",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "Count",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "blue"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 2,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "Trend",
                        "formatter": 9,
                        "formatOptions": {
                          "palette": "green"
                        }
                      },
                      "showBorder": false
                    },
                    "mapSettings": {
                      "locInfo": "CountryRegion",
                      "locInfoColumn": "Location",
                      "latitude": "SourceIPLocation",
                      "longitude": "SourceIPLocation",
                      "sizeSettings": "Location",
                      "sizeAggregation": "Count",
                      "legendMetric": "Location",
                      "legendAggregation": "Count",
                      "itemColorSettings": {
                        "nodeColorField": "Location",
                        "colorAggregation": "Count",
                        "type": "thresholds",
                        "thresholdsGrid": [
                          {
                            "operator": "Default",
                            "thresholdValue": null,
                            "representation": "blueDark"
                          }
                        ]
                      }
                    }
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {
                    "parameterName": "Results36",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "Results36",
                  "styleSettings": {
                    "maxWidth": "50"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "SigninLogs\r\n| extend ResultText = case(isnotempty(ResultDescription), ResultDescription, ResultType == 0 and isempty(ResultDescription), \"Successfull login\", \"unknown\")\r\n| where ResultText !contains \"success\"\r\n| lookup kind=inner _GetWatchlist('{Watchlist}')\r\non $left.UserPrincipalName == $right.SearchKey\r\n| summarize count() by UserPrincipalName, ResultDescription, AppDisplayName, ConditionalAccessStatus\r\n| sort by count_ desc\r\n| limit 250\r\n",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Watchlist Users: Sign-in Authentication Failures",
                    "timeContext": {
                      "durationMs": 5184000000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "UserPrincipalName",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "PersonWithFriend",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "ResultDescription",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "Important",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "count_",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "orange"
                          }
                        },
                        {
                          "columnMatch": "userPrincipalName_",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "resource",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OperationName",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "uninitialized",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "AADEmail",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "warning",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "QueryText",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "yellow",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ],
                      "filter": true
                    },
                    "sortBy": [],
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "SigninStatus",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "Count",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "blue"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 2,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "Trend",
                        "formatter": 9,
                        "formatOptions": {
                          "palette": "green"
                        }
                      },
                      "showBorder": false
                    },
                    "mapSettings": {
                      "locInfo": "CountryRegion",
                      "locInfoColumn": "Location",
                      "latitude": "SourceIPLocation",
                      "longitude": "SourceIPLocation",
                      "sizeSettings": "Location",
                      "sizeAggregation": "Count",
                      "legendMetric": "Location",
                      "legendAggregation": "Count",
                      "itemColorSettings": {
                        "nodeColorField": "Location",
                        "colorAggregation": "Count",
                        "type": "thresholds",
                        "thresholdsGrid": [
                          {
                            "operator": "Default",
                            "thresholdValue": null,
                            "representation": "blueDark"
                          }
                        ]
                      }
                    }
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {
                    "parameterName": "Results37",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "Results37",
                  "styleSettings": {
                    "maxWidth": "50"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "AzureActivity\r\n| where OperationName contains \"delete\" or OperationName contains \"remove\"\r\n| lookup kind=inner _GetWatchlist('{Watchlist}')\r\non $left.Caller == $right.SearchKey\r\n| project Caller, OperationName, ActivityStatus, ResourceId, TimeGenerated\r\n| sort by TimeGenerated desc\r\n| limit 250\r\n",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Watchlist Users: Deleting or Removing Assets",
                    "timeContext": {
                      "durationMs": 5184000000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Caller",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "PersonWithFriend",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "ActivityStatus",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Succeeded",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Failed",
                                "representation": "critical",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Started",
                                "representation": "pending",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "AADEmail",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "warning",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "QueryText",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "yellow",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ],
                      "filter": true
                    },
                    "sortBy": [],
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "SigninStatus",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "Count",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "blue"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 2,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "Trend",
                        "formatter": 9,
                        "formatOptions": {
                          "palette": "green"
                        }
                      },
                      "showBorder": false
                    },
                    "mapSettings": {
                      "locInfo": "CountryRegion",
                      "locInfoColumn": "Location",
                      "latitude": "SourceIPLocation",
                      "longitude": "SourceIPLocation",
                      "sizeSettings": "Location",
                      "sizeAggregation": "Count",
                      "legendMetric": "Location",
                      "legendAggregation": "Count",
                      "itemColorSettings": {
                        "nodeColorField": "Location",
                        "colorAggregation": "Count",
                        "type": "thresholds",
                        "thresholdsGrid": [
                          {
                            "operator": "Default",
                            "thresholdValue": null,
                            "representation": "blueDark"
                          }
                        ]
                      }
                    }
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {
                    "parameterName": "Results38",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "Results38",
                  "styleSettings": {
                    "maxWidth": "50"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "AuditLogs\r\n| where Identity == \"MS-PIM\"\r\n| extend userPrincipalName_ = tostring(TargetResources[0].userPrincipalName)\r\n| project userPrincipalName_, OperationName\r\n| lookup kind=inner _GetWatchlist('{Watchlist}')\r\non $left.userPrincipalName_ == $right.SearchKey\r\n| summarize count() by userPrincipalName_,OperationName\r\n| sort by count_ desc",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Watchlist Users: Privileged Identity Management Actions",
                    "timeContext": {
                      "durationMs": 5184000000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "userPrincipalName_",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "PersonWithFriend",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OperationName",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "uninitialized",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "count_",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "orange"
                          }
                        },
                        {
                          "columnMatch": "AADEmail",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "warning",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "QueryText",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "yellow",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "sortBy": [],
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "SigninStatus",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "Count",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "blue"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 2,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "Trend",
                        "formatter": 9,
                        "formatOptions": {
                          "palette": "green"
                        }
                      },
                      "showBorder": false
                    },
                    "mapSettings": {
                      "locInfo": "CountryRegion",
                      "locInfoColumn": "Location",
                      "latitude": "SourceIPLocation",
                      "longitude": "SourceIPLocation",
                      "sizeSettings": "Location",
                      "sizeAggregation": "Count",
                      "legendMetric": "Location",
                      "legendAggregation": "Count",
                      "itemColorSettings": {
                        "nodeColorField": "Location",
                        "colorAggregation": "Count",
                        "type": "thresholds",
                        "thresholdsGrid": [
                          {
                            "operator": "Default",
                            "thresholdValue": null,
                            "representation": "blueDark"
                          }
                        ]
                      }
                    }
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {
                    "parameterName": "Results39",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "Results39",
                  "styleSettings": {
                    "maxWidth": "50"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "SigninLogs\r\n| where AppDisplayName contains \"Portal\"\r\n// 50126 - Invalid username or password, or invalid on-premises username or password.\r\n// 50020? - The user doesn't exist in the tenant.\r\n| where ResultType in (\"50126\", \"50020\")\r\n| extend OS = DeviceDetail.operatingSystem, Browser = DeviceDetail.browser\r\n| extend StatusCode = tostring(Status.errorCode), StatusDetails = tostring(Status.additionalDetails)\r\n| extend State = tostring(LocationDetails.state), City = tostring(LocationDetails.city)\r\n| summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), IPAddresses = makeset(IPAddress), DistinctIPCount = dcount(IPAddress), \r\n    makeset(OS), makeset(Browser), makeset(City), AttemptCount = count() \r\n    by UserDisplayName, UserPrincipalName, AppDisplayName, ResultType, ResultDescription, StatusCode, StatusDetails, Location, State\r\n| extend timestamp = StartTimeUtc, AccountCustomEntity = UserPrincipalName\r\n| sort by AttemptCount\r\n| lookup kind=inner _GetWatchlist('{Watchlist}')\r\non $left.UserPrincipalName == $right.SearchKey\r\n| summarize count() by UserDisplayName\r\n| sort by count_ desc\r\n| render columnchart",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Watchlist Users: Failed Attempts to Access a Microsoft Portal",
                    "timeContext": {
                      "durationMs": 5184000000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "userPrincipalName_",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "resource",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OperationName",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "uninitialized",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "count_",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "orange"
                          }
                        },
                        {
                          "columnMatch": "AADEmail",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "warning",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "QueryText",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "yellow",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "sortBy": [],
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "SigninStatus",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "Count",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "blue"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 2,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "Trend",
                        "formatter": 9,
                        "formatOptions": {
                          "palette": "green"
                        }
                      },
                      "showBorder": false
                    },
                    "mapSettings": {
                      "locInfo": "CountryRegion",
                      "locInfoColumn": "Location",
                      "latitude": "SourceIPLocation",
                      "longitude": "SourceIPLocation",
                      "sizeSettings": "Location",
                      "sizeAggregation": "Count",
                      "legendMetric": "Location",
                      "legendAggregation": "Count",
                      "itemColorSettings": {
                        "nodeColorField": "Location",
                        "colorAggregation": "Count",
                        "type": "thresholds",
                        "thresholdsGrid": [
                          {
                            "operator": "Default",
                            "thresholdValue": null,
                            "representation": "blueDark"
                          }
                        ]
                      }
                    }
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {
                    "parameterName": "Results40",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "Results40",
                  "styleSettings": {
                    "maxWidth": "50"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "OfficeActivity\r\n| lookup kind=inner _GetWatchlist('{Watchlist}')\r\non $left.UserId == $right.SearchKey\r\n| summarize count() by UserId, Operation, OfficeWorkload\r\n| sort by count_ desc\r\n| limit 250\r\n\r\n",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Watchlist Users: Office Workload Operations",
                    "timeContext": {
                      "durationMs": 5184000000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "UserId",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "PersonWithFriend",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Operation",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "uninitialized",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "count_",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "blue"
                          }
                        },
                        {
                          "columnMatch": "AADEmail",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "warning",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "QueryText",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "yellow",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ],
                      "filter": true
                    },
                    "sortBy": [],
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "SigninStatus",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "Count",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "blue"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 2,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "Trend",
                        "formatter": 9,
                        "formatOptions": {
                          "palette": "green"
                        }
                      },
                      "showBorder": false
                    },
                    "mapSettings": {
                      "locInfo": "CountryRegion",
                      "locInfoColumn": "Location",
                      "latitude": "SourceIPLocation",
                      "longitude": "SourceIPLocation",
                      "sizeSettings": "Location",
                      "sizeAggregation": "Count",
                      "legendMetric": "Location",
                      "legendAggregation": "Count",
                      "itemColorSettings": {
                        "nodeColorField": "Location",
                        "colorAggregation": "Count",
                        "type": "thresholds",
                        "thresholdsGrid": [
                          {
                            "operator": "Default",
                            "thresholdValue": null,
                            "representation": "blueDark"
                          }
                        ]
                      }
                    }
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {
                    "parameterName": "Results41",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "Results41",
                  "styleSettings": {
                    "maxWidth": "50"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "OfficeActivity\r\n| lookup kind=inner _GetWatchlist('{Watchlist}')\r\non $left.UserId == $right.SearchKey\r\n| where (Operation =~ \"Set-Mailbox\" and Parameters contains 'ForwardingSmtpAddress') \r\n    or (Operation =~ 'New-InboxRule' and Parameters contains 'ForwardTo')\r\n| extend parsed=parse_json(Parameters)\r\n| extend fwdingDestination_initial = (iif(Operation =~ \"Set-Mailbox\", tostring(parsed[1].Value), tostring(parsed[2].Value)))\r\n| where isnotempty(fwdingDestination_initial)\r\n| extend fwdingDestination = iff(fwdingDestination_initial has \"smtp\", (split(fwdingDestination_initial, \":\")[1]), fwdingDestination_initial)\r\n| parse fwdingDestination with * '@' ForwardedtoDomain \r\n| parse UserId with *'@' UserDomain\r\n| extend subDomain = ((split(strcat(tostring(split(UserDomain, '.')[-2]), '.', tostring(split(UserDomain, '.')[-1])), '.')[0]))\r\n| where ForwardedtoDomain !contains subDomain\r\n| extend Result = iff(ForwardedtoDomain != UserDomain, \"Mailbox rule created to forward to External Domain\", \"Forward rule for Internal domain\")\r\n| extend ClientIPAddress = case(ClientIP has \".\", tostring(split(ClientIP, \":\")[0]), ClientIP has \"[\", tostring(trim_start(@'[[]', tostring(split(ClientIP, \"]\")[0]))), ClientIP)\r\n| extend Port = case(\r\n    ClientIP has \".\", (split(ClientIP, \":\")[1]),\r\n    ClientIP has \"[\", tostring(split(ClientIP, \"]:\")[1]),\r\n    ClientIP\r\n    )\r\n| project TimeGenerated, UserId, UserDomain, subDomain, Operation, ForwardedtoDomain, ClientIPAddress, Result, Port, OriginatingServer, OfficeObjectId, fwdingDestination\r\n| extend timestamp = TimeGenerated, AccountCustomEntity = UserId, IPCustomEntity = ClientIPAddress, HostCustomEntity = OriginatingServer\r\n| summarize count() by UserId, Operation",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Watchlist Users: Office Mail Forwarding",
                    "timeContext": {
                      "durationMs": 5184000000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "UserId",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "resource",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Operation",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "redBright",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "count_",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "coldHot"
                          }
                        }
                      ]
                    },
                    "sortBy": [],
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "SigninStatus",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "Count",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "blue"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 2,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "Trend",
                        "formatter": 9,
                        "formatOptions": {
                          "palette": "green"
                        }
                      },
                      "showBorder": false
                    },
                    "mapSettings": {
                      "locInfo": "CountryRegion",
                      "locInfoColumn": "Location",
                      "latitude": "SourceIPLocation",
                      "longitude": "SourceIPLocation",
                      "sizeSettings": "Location",
                      "sizeAggregation": "Count",
                      "legendMetric": "Location",
                      "legendAggregation": "Count",
                      "itemColorSettings": {
                        "nodeColorField": "Location",
                        "colorAggregation": "Count",
                        "type": "thresholds",
                        "thresholdsGrid": [
                          {
                            "operator": "Default",
                            "thresholdValue": null,
                            "representation": "blueDark"
                          }
                        ]
                      }
                    }
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {
                    "parameterName": "Results42",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "Results42",
                  "styleSettings": {
                    "maxWidth": "50"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "InformationProtectionLogs_CL\r\n| lookup kind=inner _GetWatchlist('{Watchlist}')\r\non $left.UserId_s_s == $right.SearchKey\r\n| where Activity_s <> \"\"\r\n| where Activity_s <> \"NewLabel\"\r\n| project UserId_s_s, Activity_s, Workload_s_s, ApplicationName_s_s, Platform_s_s, Operation_s_s, MachineName_s, Type, TimeGenerated\r\n| make-series count() default=0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step 1d by Activity_s\r\n| render areachart",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Watchlist Users: Sensitive Data Access",
                    "timeContext": {
                      "durationMs": 5184000000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "AADEmail",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "warning",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "QueryText",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "yellow",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "sortBy": [],
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "SigninStatus",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "Count",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "blue"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 2,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "Trend",
                        "formatter": 9,
                        "formatOptions": {
                          "palette": "green"
                        }
                      },
                      "showBorder": false
                    },
                    "mapSettings": {
                      "locInfo": "CountryRegion",
                      "locInfoColumn": "Location",
                      "latitude": "SourceIPLocation",
                      "longitude": "SourceIPLocation",
                      "sizeSettings": "Location",
                      "sizeAggregation": "Count",
                      "legendMetric": "Location",
                      "legendAggregation": "Count",
                      "itemColorSettings": {
                        "nodeColorField": "Location",
                        "colorAggregation": "Count",
                        "type": "thresholds",
                        "thresholdsGrid": [
                          {
                            "operator": "Default",
                            "thresholdValue": null,
                            "representation": "blueDark"
                          }
                        ]
                      }
                    }
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {
                    "parameterName": "Results43",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "Results43",
                  "styleSettings": {
                    "maxWidth": "50"
                  }
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "TAB",
              "comparison": "isEqualTo",
              "value": "WL"
            },
            "name": "Watchlist Group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "parameters": [
                      {
                        "id": "ac6f7462-59ff-4d82-86b0-0a6eccc35a51",
                        "version": "KqlParameterItem/1.0",
                        "name": "UserPrincipalName",
                        "label": "üîÄ User Selector",
                        "type": 2,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "SigninLogs\r\n| summarize by UserPrincipalName ",
                        "value": [
                          "thbanasi@seccxpninja.onmicrosoft.com"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "showDefault": false
                        },
                        "timeContext": {
                          "durationMs": 7776000000
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "name": "User Selector Parameter - Copy"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "tabs",
                    "links": [
                      {
                        "id": "18c690d7-7cbd-46c1-b677-1f72692d40cd",
                        "cellValue": "TAB",
                        "linkTarget": "parameter",
                        "linkLabel": "User Logs",
                        "subTarget": "UL",
                        "preText": "",
                        "style": "link"
                      },
                      {
                        "id": "0b780193-962d-4b26-b3ee-6c559a2c12d9",
                        "cellValue": "TAB",
                        "linkTarget": "parameter",
                        "linkLabel": "Security Alerts",
                        "subTarget": "SA",
                        "style": "link"
                      },
                      {
                        "id": "85c17370-2f93-4eb5-9d0b-ea204aa1025b",
                        "cellValue": "TAB",
                        "linkTarget": "parameter",
                        "linkLabel": "Behavior Logs",
                        "subTarget": "BL",
                        "style": "link"
                      },
                      {
                        "id": "94d4ab9a-4ec7-4e4b-a69d-b6acb5cccd62",
                        "cellValue": "TAB",
                        "linkTarget": "parameter",
                        "linkLabel": "Sign-ins",
                        "subTarget": "SI",
                        "style": "link"
                      },
                      {
                        "id": "42883e63-89fe-4433-89bd-206e44df1aca",
                        "cellValue": "TAB",
                        "linkTarget": "parameter",
                        "linkLabel": "Azure Activity",
                        "subTarget": "AA",
                        "style": "link"
                      },
                      {
                        "id": "fb0d66ba-8308-4f0e-a685-01264ff673de",
                        "cellValue": "TAB",
                        "linkTarget": "parameter",
                        "linkLabel": "Office Activity",
                        "subTarget": "OA",
                        "style": "link"
                      },
                      {
                        "id": "0c4802f2-f366-40e4-b32b-011aa458636b",
                        "cellValue": "TAB",
                        "linkTarget": "parameter",
                        "linkLabel": "Audit Logs",
                        "subTarget": "AL",
                        "style": "link"
                      },
                      {
                        "id": "89c5aa08-6ffa-4a88-a1a5-ccdb9717b344",
                        "cellValue": "TAB",
                        "linkTarget": "parameter",
                        "linkLabel": "Log Queries",
                        "subTarget": "LQ",
                        "style": "link"
                      }
                    ]
                  },
                  "customWidth": "50",
                  "name": "User Package Tabs Link"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "#### [Go To > Collect Artifacts for Microsoft 365 Advanced eDiscovery Investigation](https://compliance.microsoft.com/advancedediscovery?viewid=Overview)<br>\r\n"
                  },
                  "customWidth": "40",
                  "name": "text - 5"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "d8e8ac75-e764-4ff8-941b-bc8ad77df072",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results316",
                              "type": 1,
                              "query": "SigninLogs\r\n| where UserPrincipalName in ({UserPrincipalName}) \r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "100",
                        "name": "Results316",
                        "styleSettings": {
                          "maxWidth": "100"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "//If query errors for \"where\" statement, comment out the missing column name\r\nunion withsource = Table_Name *\r\n| where UserPrincipalName in ({UserPrincipalName}) or UPN in ({UserPrincipalName}) or Caller in ({UserPrincipalName}) or UserId in ({UserPrincipalName}) or Account in ({UserPrincipalName}) or AADEmail in ({UserPrincipalName}) or DisplayName in ({UserPrincipalName}) or AccountUPN in ({UserPrincipalName}) or AccountUPN in ({UserPrincipalName}) or AccountName in ({UserPrincipalName}) or InitiatingProcessAccountUpn in ({UserPrincipalName}) or AccountUpn in ({UserPrincipalName}) or UserName in ({UserPrincipalName}) \r\n| summarize count() by Table_Name\r\n| project-rename Log_Tables=Table_Name, Logs_Count=count_\r\n| sort by Logs_Count desc\r\n\r\n\r\n\r\n\r\n\r\n ",
                          "size": 1,
                          "showAnalytics": true,
                          "title": "Available User Logs",
                          "color": "blue",
                          "noDataMessage": "No User Logs Available During This TimeRange",
                          "timeContext": {
                            "durationMs": 7776000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "timeBrushParameterName": "tbMthlyUsage",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "table",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Log_Tables",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Logs_Count",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal",
                                    "useGrouping": true
                                  }
                                }
                              }
                            ],
                            "filter": true
                          },
                          "sortBy": [],
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "chartSettings": {
                            "seriesLabelSettings": [
                              {
                                "seriesName": "Other",
                                "color": "green"
                              }
                            ],
                            "xSettings": {},
                            "ySettings": {}
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "40",
                        "conditionalVisibility": {
                          "parameterName": "Results316",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results316"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "union withsource = Table_Name *\r\n| where UserPrincipalName in ({UserPrincipalName}) or UPN in ({UserPrincipalName}) or Caller in ({UserPrincipalName}) or UserId in ({UserPrincipalName}) or Account in ({UserPrincipalName}) or AADEmail in ({UserPrincipalName})\r\n| project-rename Log_Tables=Table_Name\r\n| make-series count() default=0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step 1d by Log_Tables\r\n| render areachart\r\n\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Available Logs over Time",
                          "noDataMessage": "No User Logs Available During This TimeRange",
                          "timeContext": {
                            "durationMs": 7776000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Logs_Count",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ]
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "60",
                        "conditionalVisibility": {
                          "parameterName": "Results316",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results316b"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "TAB",
                    "comparison": "isEqualTo",
                    "value": "UL"
                  },
                  "name": "User Logs"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "This section is bound by the above parameters for Subscription, Workspace, TimeRange, and User. Panels are dynamically displayed meaning numerous queries are executed and only panels returning data are displayed. For more information, see üí°[Modern Risk Pain Points](https://docs.microsoft.com/microsoft-365/compliance/insider-risk-management#modern-risk-pain-points) & üí°[Hunt for Threats with Azure Sentinel](https://docs.microsoft.com/azure/sentinel/hunting)\r\n\r\n| <strong> User Package Queries </strong> | \r\n|:--|\r\n| User Sign-Ins by Geolocation |\r\n| User Authentication Details |\r\n| User Sign-Ins by Application Count |\r\n| User Sign-Ins by Location Over Time |\r\n| User Sign-Ins by City & State |\r\n| User Applications Accessed |\r\n| User Client Apps |\r\n| Anomalous Sign-in Location by User Account and Authenticating Application |\r\n| User Failed Attempt to Access Microsoft Portal |\r\n| User Brute Force Against a Microsoft Portal|\r\n| User Successful Sign-in on App Followed by Failed Sign-in on Different App |\r\n| User Sign-In Burst from Multiple Locations |\r\n| User Sign-ins From VPNs |",
                          "style": "info"
                        },
                        "conditionalVisibility": {
                          "parameterName": "Help",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "SI OV"
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "7afa304d-b448-4d6c-8c54-69e51a7249a9",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results46",
                              "type": 1,
                              "query": "SigninLogs\r\n| where Location <> \"\"\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results46",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "e7de4575-c167-4818-8820-ec17513a02b2",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results47",
                              "type": 1,
                              "query": "let nonInteractive = AADNonInteractiveUserSignInLogs\r\n| extend LocationDetails = parse_json(LocationDetails)\r\n| extend Status = parse_json(Status);\r\nlet data = \r\nunion SigninLogs,nonInteractive\r\n|extend errorCode = Status.errorCode\r\n|extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending user action\",errorCode == 50140, \"Pending user action\", errorCode == 51006, \"Pending user action\", errorCode == 50059, \"Pending user action\",errorCode == 65001, \"Pending user action\", errorCode == 52004, \"Pending user action\", errorCode == 50055, \"Pending user action\", errorCode == 50144, \"Pending user action\", errorCode == 50072, \"Pending user action\", errorCode == 50074, \"Pending user action\", errorCode == 16000, \"Pending user action\", errorCode == 16001, \"Pending user action\", errorCode == 16003, \"Pending user action\", errorCode == 50127, \"Pending user action\", errorCode == 50125, \"Pending user action\", errorCode == 50129, \"Pending user action\", errorCode == 50143, \"Pending user action\", errorCode == 81010, \"Pending user action\", errorCode == 81014, \"Pending user action\", errorCode == 81012 ,\"Pending user action\", \"Failure\");\r\ndata\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| where IsInteractive == true\r\n| summarize Count = count() by SigninStatus\r\n| join kind = fullouter (datatable(SigninStatus:string)['Success', 'Pending action (Interrupts)', 'Failure']) on SigninStatus\r\n| project SigninStatus = iff(SigninStatus == '', SigninStatus1, SigninStatus), Count = iff(SigninStatus == '', 0, Count)\r\n| join kind = inner (data\r\n    | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by SigninStatus)\r\n    on SigninStatus\r\n| project-away SigninStatus1, TimeGenerated\r\n| extend Status = SigninStatus\r\n| union (\r\n    data \r\n    | summarize Count = count()\r\n    | extend jkey = 1\r\n    | join kind=inner (data\r\n        | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain}\r\n        | extend jkey = 1) on jkey\r\n    | extend SigninStatus = 'All Sign-ins', Status = '*'    \r\n)\r\n| where SigninStatus <> \"All Sign-ins\"\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results47",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "e62c1567-e61e-4acd-9731-d6a2c59bf3a0",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results48",
                              "type": 1,
                              "query": "SigninLogs\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| where ResultType == 0 and AppDisplayName != \"\"\r\n| summarize count() by AppDisplayName\r\n| join (\r\nSigninLogs\r\n| make-series TrendList = count() on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, 4h) by AppDisplayName \r\n) on AppDisplayName\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results48",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "48559d4f-7025-4580-b316-2134c07b7ad7",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results49",
                              "type": 1,
                              "query": "SigninLogs\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| where IsInteractive == true\r\n| extend city_ = tostring(LocationDetails.city)\r\n| extend state_ = tostring(LocationDetails.state)\r\n| where state_ <> \"\"\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results49",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "d0eea57b-83c9-41b1-affe-043b15594e1a",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results50",
                              "type": 1,
                              "query": "SigninLogs\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| where isnotempty(LocationDetails['countryOrRegion']) and ResultType == 0// Where location details are available and login is successfull\r\n| extend city = tostring(LocationDetails['city'])\r\n| summarize count() by city, Location // Summarize by city name\r\n| join (\r\nSigninLogs\r\n| extend city = tostring(LocationDetails['city'])\r\n| make-series TrendList = count() on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by city \r\n) on city\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results50",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "88a39c54-0e1f-4f7f-b7f7-a3e798a26b4e",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results51",
                              "type": 1,
                              "query": "SigninLogs\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results51",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "08ed6d78-dbc0-4d10-84da-e37fae50ba4e",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results52",
                              "type": 1,
                              "query": "SigninLogs\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| extend browser_ = tostring(DeviceDetail.browser)\r\n| extend operatingSystem_ = tostring(DeviceDetail.operatingSystem)\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results52",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "66899fa7-9a59-4fee-882c-3d182a726a49",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results53",
                              "type": 1,
                              "query": "SigninLogs\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n// Forces Log Analytics to recognize that the query should be run over full time range\r\n| extend locationString= strcat(tostring(LocationDetails[\"countryOrRegion\"]), \"/\", \r\n    tostring(LocationDetails[\"state\"]), \"/\", tostring(LocationDetails[\"city\"]), \";\") \r\n| project TimeGenerated, AppDisplayName, UserPrincipalName, locationString \r\n// Create time series \r\n| make-series dLocationCount = dcount(locationString)\r\n    on TimeGenerated\r\n    step 1d\r\n    by UserPrincipalName, AppDisplayName \r\n// Compute best fit line for each entry \r\n| extend (RSquare, Slope, Variance, RVariance, Interception, LineFit) = series_fit_line(dLocationCount) \r\n// Chart the 3 most interesting lines  \r\n// A 0-value slope corresponds to an account being completely stable over time for a given Azure Active Directory application\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results53",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "82dfffd6-7e78-4412-a69b-5d3d096a4e94",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results54",
                              "type": 1,
                              "query": "SigninLogs\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n// 50126 - Invalid username or password, or invalid on-premises username or password.\r\n// 50020? - The user doesn't exist in the tenant.\r\n| where ResultType in (\"50126\", \"50020\")\r\n| extend OS = DeviceDetail.operatingSystem, Browser = DeviceDetail.browser\r\n| extend StatusCode = tostring(Status.errorCode), StatusDetails = tostring(Status.additionalDetails)\r\n| extend State = tostring(LocationDetails.state), City = tostring(LocationDetails.city)\r\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), IPAddresses = makeset(IPAddress), DistinctIPCount = dcount(IPAddress), \r\n    makeset(OS), makeset(Browser), makeset(City), AttemptCount = count() \r\n    by UserDisplayName, UserPrincipalName, AppDisplayName, ResultType, ResultDescription, StatusCode, StatusDetails, Location, State\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results54",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "3b974333-5ea4-4a64-9067-0d206e3d91fd",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results55",
                              "type": 1,
                              "query": "let failureCountThreshold = 5;\r\nlet successCountThreshold = 1;\r\nlet authenticationWindow = 20m;\r\nlet aadFunc = (tableName: string) {\r\n    table(tableName)\r\n    | where UserPrincipalName in ({UserPrincipalName})\r\n    | extend DeviceDetail = todynamic(DeviceDetail), Status = todynamic(DeviceDetail), LocationDetails = todynamic(LocationDetails)\r\n    | extend OS = DeviceDetail.operatingSystem, Browser = DeviceDetail.browser\r\n    | extend StatusCode = tostring(Status.errorCode), StatusDetails = tostring(Status.additionalDetails)\r\n    | extend State = tostring(LocationDetails.state), City = tostring(LocationDetails.city), Region = tostring(LocationDetails.countryOrRegion)\r\n    // Split out failure versus non-failure types\r\n    | extend FailureOrSuccess = iff(ResultType in (\"0\", \"50125\", \"50140\", \"70043\", \"70044\"), \"Success\", \"Failure\")\r\n    | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), IPAddress = make_set(IPAddress), make_set(OS), make_set(Browser), make_set(City),\r\n        make_set(State), make_set(Region), make_set(ResultType), FailureCount = countif(FailureOrSuccess == \"Failure\"), SuccessCount = countif(FailureOrSuccess == \"Success\") \r\n        by bin(TimeGenerated, authenticationWindow), UserDisplayName, UserPrincipalName, AppDisplayName, Type\r\n    | where FailureCount >= failureCountThreshold and SuccessCount >= successCountThreshold\r\n    | mvexpand IPAddress\r\n    | extend IPAddress = tostring(IPAddress)\r\n    | extend timestamp = StartTime, AccountCustomEntity = UserPrincipalName, IPCustomEntity = IPAddress \r\n};\r\nlet aadSignin = aadFunc(\"SigninLogs\");\r\nlet aadNonInt = aadFunc(\"AADNonInteractiveUserSignInLogs\");\r\nunion isfuzzy=true aadSignin, aadNonInt\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results55",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "6ae59cc4-9e9a-4392-b946-89e77025f3b3",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results56",
                              "type": 1,
                              "query": "let timeFrame = {TimeRange:grain};\r\nlet logonDiff = 1m;\r\nlet Success = SigninLogs \r\n    | where UserPrincipalName in ({UserPrincipalName})\r\n    | where TimeGenerated >= timeFrame \r\n    | where ResultType == \"0\" \r\n    | where AppDisplayName !in (\"Office 365 Exchange Online\", \"Skype for Business Online\", \"Office 365 SharePoint Online\")\r\n    | project SuccessLogonTime = TimeGenerated, UserPrincipalName, IPAddress, SuccessAppDisplayName = AppDisplayName;\r\nlet Fail = SigninLogs \r\n    | where TimeGenerated >= timeFrame \r\n    | where ResultType !in (\"0\", \"50140\") \r\n    | where ResultDescription !~ \"Other\" \r\n    | where AppDisplayName !in (\"Office 365 Exchange Online\", \"Skype for Business Online\", \"Office 365 SharePoint Online\")\r\n    | project FailedLogonTime = TimeGenerated, UserPrincipalName, IPAddress, FailedAppDisplayName = AppDisplayName, ResultType, ResultDescription;\r\nlet InitialDataSet = \r\n    Success\r\n    | join kind= inner (\r\n        Fail\r\n        )\r\n        on UserPrincipalName, IPAddress \r\n    | where isnotempty(FailedAppDisplayName)\r\n    | where SuccessLogonTime < FailedLogonTime and FailedLogonTime - SuccessLogonTime <= logonDiff and SuccessAppDisplayName != FailedAppDisplayName;\r\nlet InitialHits = \r\n    InitialDataSet\r\n    | summarize FailedLogonTime = min(FailedLogonTime), SuccessLogonTime = min(SuccessLogonTime) \r\n        by UserPrincipalName, SuccessAppDisplayName, FailedAppDisplayName, IPAddress, ResultType, ResultDescription;\r\n// Only take hits where there is 5 or less distinct AppDisplayNames on the success side as this limits highly active applications where failures occur more regularly\r\nlet Distribution =\r\n    InitialDataSet\r\n    | summarize count(SuccessAppDisplayName) by SuccessAppDisplayName, ResultType\r\n    | where count_SuccessAppDisplayName <= 5;\r\nInitialHits\r\n| join (\r\n    Distribution \r\n    )\r\n    on SuccessAppDisplayName, ResultType\r\n| project UserPrincipalName, SuccessLogonTime, IPAddress, SuccessAppDisplayName, FailedLogonTime, FailedAppDisplayName, ResultType, ResultDescription \r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results56",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "b297d67a-c87f-469d-b50a-df226179f729",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results57",
                              "type": 1,
                              "query": "let signIns = SigninLogs\r\n    | where UserPrincipalName in ({UserPrincipalName})\r\n    | extend locationString= strcat(tostring(LocationDetails[\"countryOrRegion\"]), \"/\",\r\n        tostring(LocationDetails[\"state\"]), \"/\", tostring(LocationDetails[\"city\"]))\r\n    | where locationString != \"//\" \r\n    // filter out signins associated with top 100 signin locations \r\n    | join kind=anti (\r\n        SigninLogs\r\n        | extend locationString= strcat(tostring(LocationDetails[\"countryOrRegion\"]), \"/\", \r\n            tostring(LocationDetails[\"state\"]), \"/\", tostring(LocationDetails[\"city\"]))\r\n        | where locationString != \"//\"\r\n        | summarize count() by locationString\r\n        | order by count_ desc\r\n        | take 100)\r\n        on locationString; // TODO - make this threshold percentage-based\r\n// We will perform a time window join to identify signins from multiple locations within a 10-minute period\r\nlet lookupWindow = 10m;\r\nlet lookupBin = lookupWindow / 2.0; // lookup bin = equal to 1/2 of the lookup window\r\nsignIns \r\n| project-rename Start=TimeGenerated \r\n| extend TimeKey = bin(Start, lookupBin)\r\n| join kind = inner (\r\n    signIns \r\n    | project-rename End=TimeGenerated, EndLocationString=locationString \r\n    // TimeKey on the right side of the join - emulates this authentication appearing several times\r\n    | extend TimeKey = range(bin(End - lookupWindow, lookupBin),\r\n        bin(End, lookupBin), lookupBin)\r\n    | mvexpand TimeKey to typeof(datetime) // translate TimeKey arrange range to a column\r\n    )\r\n    on Identity, TimeKey\r\n| where End > Start\r\n| project timeSpan = End - Start, Identity, locationString, EndLocationString, tostring(Start), tostring(End), UserPrincipalName\r\n| where locationString != EndLocationString\r\n| summarize by timeSpan, Identity, locationString, EndLocationString, Start, End, UserPrincipalName\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results57",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "909d0019-23cb-43ad-8285-9f1dca1cd1be",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results58",
                              "type": 1,
                              "query": "let IP_Data = (externaldata(network: string)\r\n    [@\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Sample%20Data/Feeds/VPS_Networks.csv\"] with (format=\"csv\"));\r\nSigninLogs\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| where ResultType == 0\r\n| extend additionalDetails = tostring(Status.additionalDetails)\r\n| evaluate ipv4_lookup(IP_Data, IPAddress, network, return_unmatched = false)\r\n| summarize make_set(additionalDetails), min(TimeGenerated), max(TimeGenerated) by IPAddress, UserPrincipalName\r\n// Uncomment the remaining lines to only see logons from VPS providers with token only logons.\r\n//| where array_length(set_additionalDetails) == 2\r\n//| where (set_additionalDetails[1] == \"MFA requirement satisfied by claim in the token\" and set_additionalDetails[0] == \"MFA requirement satisfied by claim provided by external provider\") or (set_additionalDetails[0] == \"MFA requirement satisfied by claim in the token\" and set_additionalDetails[1] == \"MFA requirement satisfied by claim provided by external provider\")\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results58",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "9f9017d7-ba1e-4bac-8a15-89c65b213746",
                              "version": "KqlParameterItem/1.0",
                              "name": "Spacer",
                              "type": 1,
                              "query": "",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 604800000
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "35",
                        "name": "Spacer",
                        "styleSettings": {
                          "maxWidth": "35"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SigninLogs\r\n| where Location <> \"\"\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| extend latitude_ = tostring(parse_json(tostring(LocationDetails.geoCoordinates)).latitude)\r\n| extend longitude_ = tostring(parse_json(tostring(LocationDetails.geoCoordinates)).longitude)\r\n| extend city_ = tostring(LocationDetails.city)",
                          "size": 3,
                          "showAnalytics": true,
                          "title": "User Sign-Ins by Geolocation",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "map",
                          "mapSettings": {
                            "locInfo": "LatLong",
                            "locInfoColumn": "Location",
                            "latitude": "latitude_",
                            "longitude": "longitude_",
                            "sizeSettings": "city_",
                            "sizeAggregation": "Count",
                            "labelSettings": "city_",
                            "legendMetric": "city_",
                            "numberOfMetrics": 100,
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "state_",
                              "colorAggregation": "Count",
                              "type": "heatmap",
                              "heatmapPalette": "coldHot"
                            }
                          }
                        },
                        "customWidth": "70",
                        "conditionalVisibility": {
                          "parameterName": "Results46",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results46"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let nonInteractive = AADNonInteractiveUserSignInLogs\r\n| extend LocationDetails = parse_json(LocationDetails)\r\n| extend Status = parse_json(Status);\r\nlet data = \r\nunion SigninLogs,nonInteractive\r\n|extend errorCode = Status.errorCode\r\n|extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending user action\",errorCode == 50140, \"Pending user action\", errorCode == 51006, \"Pending user action\", errorCode == 50059, \"Pending user action\",errorCode == 65001, \"Pending user action\", errorCode == 52004, \"Pending user action\", errorCode == 50055, \"Pending user action\", errorCode == 50144, \"Pending user action\", errorCode == 50072, \"Pending user action\", errorCode == 50074, \"Pending user action\", errorCode == 16000, \"Pending user action\", errorCode == 16001, \"Pending user action\", errorCode == 16003, \"Pending user action\", errorCode == 50127, \"Pending user action\", errorCode == 50125, \"Pending user action\", errorCode == 50129, \"Pending user action\", errorCode == 50143, \"Pending user action\", errorCode == 81010, \"Pending user action\", errorCode == 81014, \"Pending user action\", errorCode == 81012 ,\"Pending user action\", \"Failure\");\r\ndata\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| where IsInteractive == true\r\n| summarize Count = count() by SigninStatus\r\n| join kind = fullouter (datatable(SigninStatus:string)['Success', 'Pending action (Interrupts)', 'Failure']) on SigninStatus\r\n| project SigninStatus = iff(SigninStatus == '', SigninStatus1, SigninStatus), Count = iff(SigninStatus == '', 0, Count)\r\n| join kind = inner (data\r\n    | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by SigninStatus)\r\n    on SigninStatus\r\n| project-away SigninStatus1, TimeGenerated\r\n| extend Status = SigninStatus\r\n| union (\r\n    data \r\n    | summarize Count = count()\r\n    | extend jkey = 1\r\n    | join kind=inner (data\r\n        | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain}\r\n        | extend jkey = 1) on jkey\r\n    | extend SigninStatus = 'All Sign-ins', Status = '*'    \r\n)\r\n| where SigninStatus <> \"All Sign-ins\"\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Authentication Details",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "tiles",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "User",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "info",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Activities",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ]
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "LatLong",
                            "locInfoColumn": "Location",
                            "latitude": "latitude_",
                            "longitude": "longitude_",
                            "sizeSettings": "city_",
                            "sizeAggregation": "Count",
                            "labelSettings": "city_",
                            "legendMetric": "city_",
                            "numberOfMetrics": 100,
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "state_",
                              "colorAggregation": "Count",
                              "type": "heatmap",
                              "heatmapPalette": "coldHot"
                            }
                          }
                        },
                        "customWidth": "30",
                        "conditionalVisibility": {
                          "parameterName": "Results47",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results47",
                        "styleSettings": {
                          "maxWidth": "30"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SigninLogs\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| where ResultType == 0 and AppDisplayName != \"\"\r\n| summarize count() by AppDisplayName\r\n| join (\r\nSigninLogs\r\n| make-series TrendList = count() on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, 4h) by AppDisplayName \r\n) on AppDisplayName\r\n| top 10 by count_ desc",
                          "size": 4,
                          "showAnalytics": true,
                          "title": "User Sign-Ins By Application",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "tiles",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "User",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "info",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Activities",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ]
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "AppDisplayName",
                              "formatter": 1,
                              "formatOptions": {
                                "showIcon": true
                              }
                            },
                            "leftContent": {
                              "columnMatch": "count_",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "auto",
                                "showIcon": true
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "TrendList",
                              "formatter": 9,
                              "formatOptions": {
                                "showIcon": true
                              }
                            },
                            "showBorder": false
                          },
                          "graphSettings": {
                            "type": 0,
                            "topContent": {
                              "columnMatch": "AppDisplayName",
                              "formatter": 1
                            },
                            "centerContent": {
                              "columnMatch": "count_",
                              "formatter": 1,
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            }
                          },
                          "mapSettings": {
                            "locInfo": "LatLong",
                            "locInfoColumn": "Location",
                            "latitude": "latitude_",
                            "longitude": "longitude_",
                            "sizeSettings": "city_",
                            "sizeAggregation": "Count",
                            "labelSettings": "city_",
                            "legendMetric": "city_",
                            "numberOfMetrics": 100,
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "state_",
                              "colorAggregation": "Count",
                              "type": "heatmap",
                              "heatmapPalette": "coldHot"
                            }
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "Results48",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results48"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SigninLogs\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| where IsInteractive == true\r\n| extend city_ = tostring(LocationDetails.city)\r\n| extend state_ = tostring(LocationDetails.state)\r\n| where state_ <> \"\"\r\n| make-series count() default=0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step 1d by state_\r\n| render timechart\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Sign-In Locations Over Time",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ]
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "Results49",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results49"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SigninLogs\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| where isnotempty(LocationDetails['countryOrRegion']) and ResultType == 0// Where location details are available and login is successfull\r\n| extend city = tostring(LocationDetails['city'])\r\n| summarize count() by city, Location // Summarize by city name\r\n| join (\r\nSigninLogs\r\n| extend city = tostring(LocationDetails['city'])\r\n| make-series TrendList = count() on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by city \r\n) on city\r\n| project Location, city, [\"Total events\"] = count_, TrendLine = TrendList\r\n| top 10 by [\"Total events\"] desc\r\n\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Sign-Ins by City & State",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "table",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Total events",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "TrendLine",
                                "formatter": 9,
                                "formatOptions": {
                                  "palette": "greenRed"
                                }
                              },
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ],
                            "filter": true
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results50",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results50",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SigninLogs\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| summarize count() by UserPrincipalName, AppDisplayName\r\n| sort by count_ desc\r\n| limit 250\r\n\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Applications Accessed",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "AppDisplayName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "trendup",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "IPAddress",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "uninitialized",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results51",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results51",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SigninLogs\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| extend browser_ = tostring(DeviceDetail.browser)\r\n| extend operatingSystem_ = tostring(DeviceDetail.operatingSystem)\r\n| summarize count() by UserPrincipalName, browser_, operatingSystem_\r\n| sort by count_ desc\r\n| limit 250\r\n\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Client Apps",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "UserAgent",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "1",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "ClientAppUsed",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "trenddown",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "AppDisplayName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "trendup",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "IPAddress",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "uninitialized",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results52",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results52",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SigninLogs\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n// Forces Log Analytics to recognize that the query should be run over full time range\r\n| extend locationString= strcat(tostring(LocationDetails[\"countryOrRegion\"]), \"/\", \r\n    tostring(LocationDetails[\"state\"]), \"/\", tostring(LocationDetails[\"city\"]), \";\") \r\n| project TimeGenerated, AppDisplayName, UserPrincipalName, locationString \r\n// Create time series \r\n| make-series dLocationCount = dcount(locationString)\r\n    on TimeGenerated\r\n    step 1d\r\n    by UserPrincipalName, AppDisplayName \r\n// Compute best fit line for each entry \r\n| extend (RSquare, Slope, Variance, RVariance, Interception, LineFit) = series_fit_line(dLocationCount) \r\n// Chart the 3 most interesting lines  \r\n// A 0-value slope corresponds to an account being completely stable over time for a given Azure Active Directory application\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| summarize count() by UserPrincipalName\r\n| sort by count_ desc\r\n| limit 250\r\n\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Anomalous Sign-in Location by User Account and Authenticating Application",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "orange"
                                }
                              },
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Operation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "OfficeWorkload",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results53",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results53",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SigninLogs\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n// 50126 - Invalid username or password, or invalid on-premises username or password.\r\n// 50020? - The user doesn't exist in the tenant.\r\n| where ResultType in (\"50126\", \"50020\")\r\n| extend OS = DeviceDetail.operatingSystem, Browser = DeviceDetail.browser\r\n| extend StatusCode = tostring(Status.errorCode), StatusDetails = tostring(Status.additionalDetails)\r\n| extend State = tostring(LocationDetails.state), City = tostring(LocationDetails.city)\r\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), IPAddresses = makeset(IPAddress), DistinctIPCount = dcount(IPAddress), \r\n    makeset(OS), makeset(Browser), makeset(City), AttemptCount = count() \r\n    by UserDisplayName, UserPrincipalName, AppDisplayName, ResultType, ResultDescription, StatusCode, StatusDetails, Location, State\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| summarize count() by UserPrincipalName, AppDisplayName\r\n| sort by count_ desc\r\n| limit 250\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Failed Attempt to Access Microsoft Portal",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "orange"
                                }
                              },
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Operation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "OfficeWorkload",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results54",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results54",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let failureCountThreshold = 5;\r\nlet successCountThreshold = 1;\r\nlet authenticationWindow = 20m;\r\nlet aadFunc = (tableName: string) {\r\n    table(tableName)\r\n    | where UserPrincipalName in ({UserPrincipalName})\r\n    | extend DeviceDetail = todynamic(DeviceDetail), Status = todynamic(DeviceDetail), LocationDetails = todynamic(LocationDetails)\r\n    | extend OS = DeviceDetail.operatingSystem, Browser = DeviceDetail.browser\r\n    | extend StatusCode = tostring(Status.errorCode), StatusDetails = tostring(Status.additionalDetails)\r\n    | extend State = tostring(LocationDetails.state), City = tostring(LocationDetails.city), Region = tostring(LocationDetails.countryOrRegion)\r\n    // Split out failure versus non-failure types\r\n    | extend FailureOrSuccess = iff(ResultType in (\"0\", \"50125\", \"50140\", \"70043\", \"70044\"), \"Success\", \"Failure\")\r\n    | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), IPAddress = make_set(IPAddress), make_set(OS), make_set(Browser), make_set(City),\r\n        make_set(State), make_set(Region), make_set(ResultType), FailureCount = countif(FailureOrSuccess == \"Failure\"), SuccessCount = countif(FailureOrSuccess == \"Success\") \r\n        by bin(TimeGenerated, authenticationWindow), UserDisplayName, UserPrincipalName, AppDisplayName, Type\r\n    | where FailureCount >= failureCountThreshold and SuccessCount >= successCountThreshold\r\n    | mvexpand IPAddress\r\n    | extend IPAddress = tostring(IPAddress)\r\n    | extend timestamp = StartTime, AccountCustomEntity = UserPrincipalName, IPCustomEntity = IPAddress \r\n};\r\nlet aadSignin = aadFunc(\"SigninLogs\");\r\nlet aadNonInt = aadFunc(\"AADNonInteractiveUserSignInLogs\");\r\nunion isfuzzy=true aadSignin, aadNonInt\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| summarize count() by UserPrincipalName, AppDisplayName\r\n| sort by count_ desc\r\n| limit 250",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Brute Force Against a Microsoft Portal",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "orange"
                                }
                              },
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Operation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "OfficeWorkload",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results55",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results55",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let timeFrame = {TimeRange:grain};\r\nlet logonDiff = 1m;\r\nlet Success = SigninLogs \r\n    | where UserPrincipalName in ({UserPrincipalName})\r\n    | where TimeGenerated >= timeFrame \r\n    | where ResultType == \"0\" \r\n    | where AppDisplayName !in (\"Office 365 Exchange Online\", \"Skype for Business Online\", \"Office 365 SharePoint Online\")\r\n    | project SuccessLogonTime = TimeGenerated, UserPrincipalName, IPAddress, SuccessAppDisplayName = AppDisplayName;\r\nlet Fail = SigninLogs \r\n    | where TimeGenerated >= timeFrame \r\n    | where ResultType !in (\"0\", \"50140\") \r\n    | where ResultDescription !~ \"Other\" \r\n    | where AppDisplayName !in (\"Office 365 Exchange Online\", \"Skype for Business Online\", \"Office 365 SharePoint Online\")\r\n    | project FailedLogonTime = TimeGenerated, UserPrincipalName, IPAddress, FailedAppDisplayName = AppDisplayName, ResultType, ResultDescription;\r\nlet InitialDataSet = \r\n    Success\r\n    | join kind= inner (\r\n        Fail\r\n        )\r\n        on UserPrincipalName, IPAddress \r\n    | where isnotempty(FailedAppDisplayName)\r\n    | where SuccessLogonTime < FailedLogonTime and FailedLogonTime - SuccessLogonTime <= logonDiff and SuccessAppDisplayName != FailedAppDisplayName;\r\nlet InitialHits = \r\n    InitialDataSet\r\n    | summarize FailedLogonTime = min(FailedLogonTime), SuccessLogonTime = min(SuccessLogonTime) \r\n        by UserPrincipalName, SuccessAppDisplayName, FailedAppDisplayName, IPAddress, ResultType, ResultDescription;\r\n// Only take hits where there is 5 or less distinct AppDisplayNames on the success side as this limits highly active applications where failures occur more regularly\r\nlet Distribution =\r\n    InitialDataSet\r\n    | summarize count(SuccessAppDisplayName) by SuccessAppDisplayName, ResultType\r\n    | where count_SuccessAppDisplayName <= 5;\r\nInitialHits\r\n| join (\r\n    Distribution \r\n    )\r\n    on SuccessAppDisplayName, ResultType\r\n| project UserPrincipalName, SuccessLogonTime, IPAddress, SuccessAppDisplayName, FailedLogonTime, FailedAppDisplayName, ResultType, ResultDescription \r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| summarize count() by UserPrincipalName, SuccessAppDisplayName, FailedAppDisplayName\r\n| sort by count_ desc\r\n| limit 250\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Successful Sign-in on App Followed by Failed Sign-in on Different App",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "SuccessAppDisplayName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "FailedAppDisplayName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "failed",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "orange"
                                }
                              },
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Operation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "OfficeWorkload",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results56",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results56",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let signIns = SigninLogs\r\n    | where UserPrincipalName in ({UserPrincipalName})\r\n    | extend locationString= strcat(tostring(LocationDetails[\"countryOrRegion\"]), \"/\",\r\n        tostring(LocationDetails[\"state\"]), \"/\", tostring(LocationDetails[\"city\"]))\r\n    | where locationString != \"//\" \r\n    // filter out signins associated with top 100 signin locations \r\n    | join kind=anti (\r\n        SigninLogs\r\n        | extend locationString= strcat(tostring(LocationDetails[\"countryOrRegion\"]), \"/\", \r\n            tostring(LocationDetails[\"state\"]), \"/\", tostring(LocationDetails[\"city\"]))\r\n        | where locationString != \"//\"\r\n        | summarize count() by locationString\r\n        | order by count_ desc\r\n        | take 100)\r\n        on locationString; // TODO - make this threshold percentage-based\r\n// We will perform a time window join to identify signins from multiple locations within a 10-minute period\r\nlet lookupWindow = 10m;\r\nlet lookupBin = lookupWindow / 2.0; // lookup bin = equal to 1/2 of the lookup window\r\nsignIns \r\n| project-rename Start=TimeGenerated \r\n| extend TimeKey = bin(Start, lookupBin)\r\n| join kind = inner (\r\n    signIns \r\n    | project-rename End=TimeGenerated, EndLocationString=locationString \r\n    // TimeKey on the right side of the join - emulates this authentication appearing several times\r\n    | extend TimeKey = range(bin(End - lookupWindow, lookupBin),\r\n        bin(End, lookupBin), lookupBin)\r\n    | mvexpand TimeKey to typeof(datetime) // translate TimeKey arrange range to a column\r\n    )\r\n    on Identity, TimeKey\r\n| where End > Start\r\n| project timeSpan = End - Start, Identity, locationString, EndLocationString, tostring(Start), tostring(End), UserPrincipalName\r\n| where locationString != EndLocationString\r\n| summarize by timeSpan, Identity, locationString, EndLocationString, Start, End, UserPrincipalName\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| summarize count() by UserPrincipalName, locationString, EndLocationString\r\n| sort by count_ desc\r\n| limit 250\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Sign-In Burst From Multiple Locations",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "orange"
                                }
                              },
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Operation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "OfficeWorkload",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results57",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results57",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let IP_Data = (externaldata(network: string)\r\n    [@\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Sample%20Data/Feeds/VPS_Networks.csv\"] with (format=\"csv\"));\r\nSigninLogs\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| where ResultType == 0\r\n| extend additionalDetails = tostring(Status.additionalDetails)\r\n| evaluate ipv4_lookup(IP_Data, IPAddress, network, return_unmatched = false)\r\n| summarize count() by UserPrincipalName, AppDisplayName, network\r\n| sort by count_ desc\r\n| limit 250",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Sign-ins From VPNs",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "orange"
                                }
                              },
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Operation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "OfficeWorkload",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results58",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results58",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "TAB",
                    "comparison": "isEqualTo",
                    "value": "SI"
                  },
                  "name": "Sign-Ins"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "This section is bound by the above parameters for Subscription, Workspace, TimeRange, and User. Panels are dynamically displayed meaning numerous queries are executed and only panels returning data are displayed. For more information, see üí°[Modern Risk Pain Points](https://docs.microsoft.com/microsoft-365/compliance/insider-risk-management#modern-risk-pain-points) & üí°[Hunt for Threats with Azure Sentinel](https://docs.microsoft.com/azure/sentinel/hunting)\r\n\r\n| <strong> User Package Queries </strong> | \r\n|:--|\r\n| User Azure Activity over Time |\r\n| User Activity Action Summary |\r\n| User Activities |\r\n| User Top 10 Resource Groups Accessed |\r\n| User Azure Storage Key Enumeration |\r\n| User Azure Sentinel Analytics Rules Administrative Operations |\r\n| User Uncommonly Deployed Resources |\r\n| User Granting Permissions to Account |\r\n| User Azure Sentinel Connectors Administrative Operations |\r\n| User Opened Network Port for an Azure Resource |\r\n| User Azure Cloud Shell Usage |\r\n| User Network Security Group Operations |\r\n| User Creation of Anomalous Number of Resources |",
                          "style": "info"
                        },
                        "conditionalVisibility": {
                          "parameterName": "Help",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "AA OV"
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "7afa304d-b448-4d6c-8c54-69e51a7249a9",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results64",
                              "type": 1,
                              "query": "AzureActivity\r\n| where Caller in ({UserPrincipalName})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results64",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "24eac888-2435-44f0-9e0c-d0490a124a24",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results65",
                              "type": 1,
                              "query": "let data = AuditLogs\r\n| extend UserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n    | where \"All\" == \"All\" or Result in ('All')\r\n    | extend initiator = iif (tostring(InitiatedBy.user.userPrincipalName) != \"\", tostring(InitiatedBy.user.userPrincipalName), \"unknown\")\r\n    | where \"All\" == \"All\" or initiator in ('All')\r\n    | where \"All\" == \"All\" or Category in ('All')\r\n    | where Category == 'All' or 'All' == \"All\";\r\nlet appData = data\r\n    | summarize TotalCount = count() by OperationName, Category\r\n    | join kind=inner (data\r\n        | make-series Trend = count() default = 0 on TimeGenerated in range(ago(7d), now(), 3h) by OperationName\r\n        | project-away TimeGenerated)\r\n        on OperationName\r\n    | order by TotalCount desc, OperationName asc\r\n    | project OperationName, TotalCount, Trend, Category\r\n    | serialize Id = row_number();\r\ndata\r\n| summarize TotalCount = count() by initiator = iif (tostring(InitiatedBy.user.userPrincipalName) != \"\", tostring(InitiatedBy.user.userPrincipalName), \"unknown\"), Category, OperationName\r\n| join kind=inner (data\r\n    | make-series Trend = count() default = 0 on TimeGenerated in range(ago(7d), now(), 3h) by OperationName, initiator = iif (tostring(InitiatedBy.user.userPrincipalName) != \"\", tostring(InitiatedBy.user.userPrincipalName), \"unknown\")\r\n    | project-away TimeGenerated)\r\n    on OperationName, initiator\r\n| order by TotalCount desc, OperationName asc\r\n| project OperationName, initiator, TotalCount, Category, Trend\r\n| serialize Id = row_number(1000000)\r\n| join kind=inner (appData) on OperationName\r\n| project Id, Name = initiator, Type = 'initiator', ['Operations Count'] = TotalCount, Trend, Category, ParentId = Id1\r\n| union (appData \r\n    | project Id, Name = OperationName, Type = 'Operation', ['Operations Count'] = TotalCount, Category, Trend)\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results65",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "52271f7e-fe90-4d96-aa88-4d84d53a3811",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results66",
                              "type": 1,
                              "query": "AzureActivity\r\n| where Caller in ({UserPrincipalName})\r\n| summarize Count = count() by ResourceGroup\r\n| join kind = fullouter (datatable(ResourceGroup:string)['Medium', 'high', 'low']) on ResourceGroup\r\n| project ResourceGroup = iff(ResourceGroup == '', ResourceGroup1, ResourceGroup), Count = iff(ResourceGroup == '', 0, Count)\r\n| join kind = inner (AzureActivity\r\n | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by ResourceGroup)\r\n on ResourceGroup\r\n| project-away ResourceGroup1, TimeGenerated\r\n| extend ResourceGroups = ResourceGroup\r\n| union (\r\n AzureActivity\r\n | summarize Count = count() \r\n | extend jkey = 1\r\n | join kind=inner (AzureActivity\r\n | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain}\r\n | extend jkey = 1) on jkey\r\n | extend ResourceGroup = 'All', ResourceGroups = '*' \r\n)\r\n| take 10\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results66",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "81c2f458-845a-46a5-bf87-081e5909df27",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results67",
                              "type": 1,
                              "query": "let opValues = dynamic([\"microsoft.insights/workbooks/write\", \"microsoft.insights/workbooks/delete\"]);\r\n// Azure Sentinel Workbook Create / Update / Delete\r\nAzureActivity\r\n| where Caller in ({UserPrincipalName})\r\n| where Category == \"Administrative\"\r\n| where OperationNameValue in (opValues)\r\n| where ActivitySubstatusValue in (\"Created\", \"OK\")\r\n| sort by TimeGenerated desc\r\n| where Caller in ({UserPrincipalName})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results67",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "948780e8-672d-4e7d-99cd-28bf10e28abc",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results68",
                              "type": 1,
                              "query": "AzureActivity\r\n| where Caller in ({UserPrincipalName})\r\n| where OperationName == \"List Storage Account Keys\"\r\n| where ActivityStatus == \"Succeeded\" \r\n| join kind= inner (\r\n    AzureActivity\r\n    | where OperationName == \"List Storage Account Keys\"\r\n    | where ActivityStatus == \"Succeeded\" \r\n    | project ExpectedIpAddress=CallerIpAddress, Caller \r\n    | evaluate autocluster()\r\n    )\r\n    on Caller \r\n| where CallerIpAddress != ExpectedIpAddress\r\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), ResourceIds = makeset(ResourceId), ResourceIdCount = dcount(ResourceId) by OperationName, Caller, CallerIpAddress\r\n| where Caller in ({UserPrincipalName})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results68",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "9daf2582-119f-479c-8efe-9aef4abd5db8",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results69",
                              "type": 1,
                              "query": "let opValues = dynamic([\"Microsoft.SecurityInsights/alertRules/write\", \"Microsoft.SecurityInsights/alertRules/delete\"]);\r\n// Azure Sentinel Analytics - Rule Create / Update / Delete\r\nAzureActivity\r\n| where Caller in ({UserPrincipalName})\r\n| where Category == \"Administrative\"\r\n| where OperationNameValue in (opValues)\r\n| where ActivitySubstatusValue in (\"Created\", \"OK\")\r\n| sort by TimeGenerated desc\r\n| where Caller in ({UserPrincipalName})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results69",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "7cc8ad5e-0d54-42fb-a5c7-4a1136066cc2",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results70",
                              "type": 1,
                              "query": "AzureActivity\r\n| where Caller in ({UserPrincipalName})\r\n| where OperationName == \"Create or Update Virtual Machine\" or OperationName == \"Create Deployment\" \r\n| where ActivityStatus == \"Succeeded\" \r\n| project Resource, ResourceGroup, Caller\r\n| evaluate basket()\r\n| where Percent <= 30\r\n| where Caller in ({UserPrincipalName})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results70",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "329cd1b9-17ab-4179-b502-600d35c08f97",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results71",
                              "type": 1,
                              "query": "AzureActivity\r\n| where Caller in ({UserPrincipalName})\r\n| where OperationName == \"Create role assignment\"\r\n| where ActivityStatus == \"Succeeded\" \r\n| project Caller, CallerIpAddress\r\n| evaluate basket()\r\n| join kind=leftouter (AzureActivity\r\n    | where OperationName == \"Create role assignment\"\r\n    | where ActivityStatus == \"Succeeded\"\r\n    | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by Caller, CallerIpAddress)\r\n    on Caller, CallerIpAddress\r\n| project-away Caller1, CallerIpAddress1\r\n| where Caller in ({UserPrincipalName})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results71",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "0aeb13f5-7f28-49a7-9313-778d1b25f530",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results72",
                              "type": 1,
                              "query": "let opValues = dynamic([\"Microsoft.SecurityInsights/dataConnectors/write\", \"Microsoft.SecurityInsights/dataConnectors/delete\"]);\r\n// Azure Sentinel Data Connectors Update / Delete\r\nAzureActivity\r\n| where Caller in ({UserPrincipalName})\r\n| where Category == \"Administrative\"\r\n| where OperationNameValue in (opValues)\r\n| where ActivitySubstatusValue in (\"Created\", \"OK\")\r\n| sort by TimeGenerated desc\r\n| where Caller in ({UserPrincipalName})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results72",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "d1cc625e-0cda-4497-8c14-c0fa163df6fc",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results73",
                              "type": 1,
                              "query": "AzureActivity\r\n| where Caller in ({UserPrincipalName})\r\n| where OperationName has_any (\"Create\", \"Update\") and OperationName has_any (\"Ip\", \"Security Rule\")\r\n// Choosing Accepted here because it has the Rule Attributes included\r\n| where ActivityStatus == \"Accepted\" \r\n// If there is publicIP info, include it\r\n| extend publicIPAddress_ = tostring(parse_json(tostring(parse_json(tostring(parse_json(Properties).responseBody)).properties)).ipAddress) \r\n| extend publicIPAddressVersion_ = tostring(parse_json(tostring(parse_json(tostring(parse_json(Properties).responseBody)).properties)).publicIPAddressVersion) \r\n| extend publicIPAllocationMethod_ = tostring(parse_json(tostring(parse_json(tostring(parse_json(Properties).responseBody)).properties)).publicIPAllocationMethod) \r\n// Include rule attributes for context\r\n| extend access = tostring(parse_json(tostring(parse_json(tostring(parse_json(Properties).responseBody)).properties)).access) \r\n| extend description = tostring(parse_json(tostring(parse_json(tostring(parse_json(Properties).responseBody)).properties)).description) \r\n| extend destinationPortRange = tostring(parse_json(tostring(parse_json(tostring(parse_json(Properties).responseBody)).properties)).destinationPortRange) \r\n| extend direction = tostring(parse_json(tostring(parse_json(tostring(parse_json(Properties).responseBody)).properties)).direction) \r\n| extend protocol = tostring(parse_json(tostring(parse_json(tostring(parse_json(Properties).responseBody)).properties)).protocol) \r\n| extend sourcePortRange = tostring(parse_json(tostring(parse_json(tostring(parse_json(Properties).responseBody)).properties)).sourcePortRange) \r\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), ResourceIds = makeset(ResourceId)\r\n    by Caller, CallerIpAddress, Resource, ResourceGroup, \r\n    ActivityStatus, ActivitySubstatus, SubscriptionId, access, description, destinationPortRange, direction, protocol, sourcePortRange  \r\n| where Caller in ({UserPrincipalName})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results73",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "5b49fb4c-0fd4-4948-af1a-e4d2e262f8b8",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results74",
                              "type": 1,
                              "query": "AzureActivity\r\n| where Caller in ({UserPrincipalName})\r\n| where ResourceGroup has \"cloud-shell-storage\"\r\n| where Caller in ({UserPrincipalName})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results74",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "c11195ea-b375-4942-be82-70727a721b41",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results75",
                              "type": 1,
                              "query": "let opValues = dynamic([\"Microsoft.Network/networkSecurityGroups/write\", \"Microsoft.Network/networkSecurityGroups/delete\"]);\r\n// Azure NSG Create / Update / Delete\r\nAzureActivity\r\n| where Caller in ({UserPrincipalName})\r\n| where Category == \"Administrative\"\r\n| where OperationNameValue in (opValues)\r\n| where ActivitySubstatusValue in (\"Created\", \"OK\")\r\n| sort by TimeGenerated desc\r\n| where Caller in ({UserPrincipalName})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results75",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "650a840b-078f-4f8f-97a5-69222046266d",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results76",
                              "type": 1,
                              "query": "AzureActivity\r\n| where Caller in ({UserPrincipalName})\r\n| where OperationName == \"Create or Update Virtual Machine\" or OperationName == \"Create Deployment\" \r\n| where ActivityStatus == \"Succeeded\" \r\n| summarize count() by Caller, ResourceId\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results76",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "f032072b-8c09-460d-8210-e52d00f0c282",
                              "version": "KqlParameterItem/1.0",
                              "name": "Spacer",
                              "type": 1,
                              "query": "",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 86400000
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "35",
                        "name": "Spacer",
                        "styleSettings": {
                          "maxWidth": "35"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureActivity\r\n| where Caller in ({UserPrincipalName})\r\n| make-series count() default=0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step 1d by OperationName\r\n| render timechart\r\n\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Azure Activity over Time",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ]
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "Results64",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results64"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureActivity\r\n| where Caller in ({UserPrincipalName})\r\n| summarize Deletions = countif(OperationName contains \"Delete\"), Creations = countif(OperationName contains \"Create\"), Updates = countif(OperationName contains \"Update\"), Activities = count() by Caller\r\n",
                          "size": 1,
                          "showAnalytics": true,
                          "title": "User Activity Actions Summary",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Caller",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Deletions",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "Creations",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "purple"
                                }
                              },
                              {
                                "columnMatch": "Updates",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "gray"
                                }
                              },
                              {
                                "columnMatch": "Activities",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "greenDark",
                                  "linkTarget": "GenericDetails",
                                  "linkIsContextBlade": true,
                                  "aggregation": "Count",
                                  "workbookContext": {
                                    "componentIdSource": "workbook",
                                    "resourceIdsSource": "workbook",
                                    "templateIdSource": "static",
                                    "templateId": "https://go.microsoft.com/fwlink/?linkid=874159&resourceId=%2Fsubscriptions%2F44e4eff8-1fcb-4a22-a7d6-992ac7286382%2FresourceGroups%2FSOC&featureName=Workbooks&itemId=%2Fsubscriptions%2F44e4eff8-1fcb-4a22-a7d6-992ac7286382%2Fresourcegroups%2Fsoc%2Fproviders%2Fmicrosoft.insights%2Fworkbooks%2F4c195aec-747f-40bb-addb-934acb3ec646&name=CiscoASA&func=NavigateToPortalFeature&type=workbook",
                                    "typeSource": "workbook",
                                    "gallerySource": "workbook"
                                  }
                                }
                              },
                              {
                                "columnMatch": "deletions",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "blue",
                                  "aggregation": "Count"
                                }
                              },
                              {
                                "columnMatch": "creations",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "purple",
                                  "aggregation": "Count"
                                }
                              },
                              {
                                "columnMatch": "updates",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "gray",
                                  "aggregation": "Count"
                                }
                              }
                            ],
                            "filter": true
                          },
                          "sortBy": [],
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results64",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "showPin": false,
                        "name": "Results64b"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let data = AuditLogs\r\n| extend UserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n    | where \"All\" == \"All\" or Result in ('All')\r\n    | extend initiator = iif (tostring(InitiatedBy.user.userPrincipalName) != \"\", tostring(InitiatedBy.user.userPrincipalName), \"unknown\")\r\n    | where \"All\" == \"All\" or initiator in ('All')\r\n    | where \"All\" == \"All\" or Category in ('All')\r\n    | where Category == 'All' or 'All' == \"All\";\r\nlet appData = data\r\n    | summarize TotalCount = count() by OperationName, Category\r\n    | join kind=inner (data\r\n        | make-series Trend = count() default = 0 on TimeGenerated in range(ago(7d), now(), 3h) by OperationName\r\n        | project-away TimeGenerated)\r\n        on OperationName\r\n    | order by TotalCount desc, OperationName asc\r\n    | project OperationName, TotalCount, Trend, Category\r\n    | serialize Id = row_number();\r\ndata\r\n| summarize TotalCount = count() by initiator = iif (tostring(InitiatedBy.user.userPrincipalName) != \"\", tostring(InitiatedBy.user.userPrincipalName), \"unknown\"), Category, OperationName\r\n| join kind=inner (data\r\n    | make-series Trend = count() default = 0 on TimeGenerated in range(ago(7d), now(), 3h) by OperationName, initiator = iif (tostring(InitiatedBy.user.userPrincipalName) != \"\", tostring(InitiatedBy.user.userPrincipalName), \"unknown\")\r\n    | project-away TimeGenerated)\r\n    on OperationName, initiator\r\n| order by TotalCount desc, OperationName asc\r\n| project OperationName, initiator, TotalCount, Category, Trend\r\n| serialize Id = row_number(1000000)\r\n| join kind=inner (appData) on OperationName\r\n| project Id, Name = initiator, Type = 'initiator', ['Operations Count'] = TotalCount, Trend, Category, ParentId = Id1\r\n| union (appData \r\n    | project Id, Name = OperationName, Type = 'Operation', ['Operations Count'] = TotalCount, Category, Trend)\r\n| order by ['Operations Count'] desc, Name asc",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Activities",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "exportParameterName": "UserInfo",
                          "exportDefaultValue": "{ \"Name\":\"\", \"Type\":\"*\"}",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Id",
                                "formatter": 5,
                                "formatOptions": {
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "Type",
                                "formatter": 5,
                                "formatOptions": {
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "Operations Count",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "palette": "blue",
                                  "showIcon": true
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "Trend",
                                "formatter": 9,
                                "formatOptions": {
                                  "min": 0,
                                  "palette": "turquoise",
                                  "showIcon": true
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "ParentId",
                                "formatter": 5,
                                "formatOptions": {
                                  "showIcon": true
                                }
                              }
                            ],
                            "rowLimit": 1000,
                            "filter": true,
                            "hierarchySettings": {
                              "idColumn": "Id",
                              "parentColumn": "ParentId",
                              "treeType": 0,
                              "expanderColumn": "Name"
                            }
                          },
                          "sortBy": [],
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results65",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results65"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureActivity\r\n| where Caller in ({UserPrincipalName})\r\n| summarize Count = count() by ResourceGroup\r\n| join kind = fullouter (datatable(ResourceGroup:string)['Medium', 'high', 'low']) on ResourceGroup\r\n| project ResourceGroup = iff(ResourceGroup == '', ResourceGroup1, ResourceGroup), Count = iff(ResourceGroup == '', 0, Count)\r\n| join kind = inner (AzureActivity\r\n | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by ResourceGroup)\r\n on ResourceGroup\r\n| project-away ResourceGroup1, TimeGenerated\r\n| extend ResourceGroups = ResourceGroup\r\n| union (\r\n AzureActivity\r\n | summarize Count = count() \r\n | extend jkey = 1\r\n | join kind=inner (AzureActivity\r\n | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain}\r\n | extend jkey = 1) on jkey\r\n | extend ResourceGroup = 'All', ResourceGroups = '*' \r\n)\r\n| order by Count desc\r\n| take 10",
                          "size": 4,
                          "showAnalytics": true,
                          "title": "User Top 10 Resource Groups Accessed",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "tiles",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ],
                            "filter": true
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "ResourceGroup",
                              "formatter": 1,
                              "formatOptions": {
                                "showIcon": true
                              }
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "auto",
                                "showIcon": true
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "blueOrange",
                                "showIcon": true
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "Results66",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "showPin": false,
                        "name": "Results66"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let opValues = dynamic([\"microsoft.insights/workbooks/write\", \"microsoft.insights/workbooks/delete\"]);\r\n// Azure Sentinel Workbook Create / Update / Delete\r\nAzureActivity\r\n| where Caller in ({UserPrincipalName})\r\n| where Category == \"Administrative\"\r\n| where OperationNameValue in (opValues)\r\n| where ActivitySubstatusValue in (\"Created\", \"OK\")\r\n| summarize count() by Caller, ResourceId\r\n| limit 250\r\n| sort by count_ desc\r\n\r\n\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Azure Sentinel Workbooks Administrative Operations",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Caller",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results67",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results67",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureActivity\r\n| where Caller in ({UserPrincipalName})\r\n| where OperationName == \"List Storage Account Keys\"\r\n| where ActivityStatus == \"Succeeded\" \r\n| join kind= inner (\r\n    AzureActivity\r\n    | where OperationName == \"List Storage Account Keys\"\r\n    | where ActivityStatus == \"Succeeded\" \r\n    | project ExpectedIpAddress=CallerIpAddress, Caller \r\n    | evaluate autocluster()\r\n    )\r\n    on Caller \r\n| where Caller in ({UserPrincipalName})\r\n| summarize count() by Caller, ResourceId\r\n| limit 250\r\n| sort by count_ desc\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Azure Storage Key Enumeration",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Caller",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "orange"
                                }
                              },
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results68",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results68",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let opValues = dynamic([\"Microsoft.SecurityInsights/alertRules/write\", \"Microsoft.SecurityInsights/alertRules/delete\"]);\r\n// Azure Sentinel Analytics - Rule Create / Update / Delete\r\nAzureActivity\r\n| where Caller in ({UserPrincipalName})\r\n| where Category == \"Administrative\"\r\n| where OperationNameValue in (opValues)\r\n| where ActivitySubstatusValue in (\"Created\", \"OK\")\r\n| sort by TimeGenerated desc\r\n| where Caller in ({UserPrincipalName})\r\n| summarize count() by Caller\r\n| sort by count_ desc\r\n\r\n\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Azure Sentinel Analytics Rules Administrative Operations",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Caller",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results69",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results69",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureActivity\r\n| where Caller in ({UserPrincipalName})\r\n| where OperationName == \"Create or Update Virtual Machine\" or OperationName == \"Create Deployment\" \r\n| where ActivityStatus == \"Succeeded\" \r\n| project Resource, ResourceGroup, Caller\r\n| evaluate basket()\r\n| where Percent <= 30\r\n| where Caller <> \"\"\r\n| summarize count() by Caller, Resource, ResourceGroup, Percent\r\n| sort by count_ desc\r\n\r\n\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Uncommonly Deployed Resources",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Caller",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Percent",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "orange"
                                }
                              },
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results70",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results70",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureActivity\r\n| where Caller in ({UserPrincipalName})\r\n| where OperationName == \"Create role assignment\"\r\n| where ActivityStatus == \"Succeeded\" \r\n| project Caller, CallerIpAddress\r\n| evaluate basket()\r\n| join kind=leftouter (AzureActivity\r\n    | where OperationName == \"Create role assignment\"\r\n    | where ActivityStatus == \"Succeeded\")\r\n    on Caller, CallerIpAddress\r\n| where Caller in ({UserPrincipalName})\r\n| summarize count() by Caller, ResourceId\r\n| limit 250\r\n| sort by count_ desc\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Granting Permissions to Account",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Caller",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "orange"
                                }
                              },
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results71",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results71",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let opValues = dynamic([\"Microsoft.SecurityInsights/dataConnectors/write\", \"Microsoft.SecurityInsights/dataConnectors/delete\"]);\r\n// Azure Sentinel Data Connectors Update / Delete\r\nAzureActivity\r\n| where Caller in ({UserPrincipalName})\r\n| where Category == \"Administrative\"\r\n| where OperationNameValue in (opValues)\r\n| where ActivitySubstatusValue in (\"Created\", \"OK\")\r\n| sort by TimeGenerated desc\r\n| where Caller in ({UserPrincipalName})\r\n| summarize count() by Caller, ResourceId\r\n| limit 250\r\n| sort by count_ desc\r\n\r\n\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Azure Sentinel Connectors Administrative Operations",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Caller",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results72",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results72",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureActivity\r\n| where Caller in ({UserPrincipalName})\r\n| where OperationName has_any (\"Create\", \"Update\") and OperationName has_any (\"Ip\", \"Security Rule\")\r\n// Choosing Accepted here because it has the Rule Attributes included\r\n| where ActivityStatus == \"Accepted\" \r\n// If there is publicIP info, include it\r\n| extend publicIPAddress_ = tostring(parse_json(tostring(parse_json(tostring(parse_json(Properties).responseBody)).properties)).ipAddress) \r\n| extend publicIPAddressVersion_ = tostring(parse_json(tostring(parse_json(tostring(parse_json(Properties).responseBody)).properties)).publicIPAddressVersion) \r\n| extend publicIPAllocationMethod_ = tostring(parse_json(tostring(parse_json(tostring(parse_json(Properties).responseBody)).properties)).publicIPAllocationMethod) \r\n// Include rule attributes for context\r\n| extend access = tostring(parse_json(tostring(parse_json(tostring(parse_json(Properties).responseBody)).properties)).access) \r\n| extend description = tostring(parse_json(tostring(parse_json(tostring(parse_json(Properties).responseBody)).properties)).description) \r\n| extend destinationPortRange = tostring(parse_json(tostring(parse_json(tostring(parse_json(Properties).responseBody)).properties)).destinationPortRange) \r\n| extend direction = tostring(parse_json(tostring(parse_json(tostring(parse_json(Properties).responseBody)).properties)).direction) \r\n| extend protocol = tostring(parse_json(tostring(parse_json(tostring(parse_json(Properties).responseBody)).properties)).protocol) \r\n| extend sourcePortRange = tostring(parse_json(tostring(parse_json(tostring(parse_json(Properties).responseBody)).properties)).sourcePortRange) \r\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), ResourceIds = makeset(ResourceId)\r\n    by Caller, CallerIpAddress, Resource, ResourceGroup, \r\n    ActivityStatus, ActivitySubstatus, SubscriptionId, access, description, destinationPortRange, direction, protocol, sourcePortRange  \r\n| where Caller in ({UserPrincipalName})\r\n| distinct Caller, Resource, destinationPortRange, direction, protocol, sourcePortRange, StartTime\r\n| sort by StartTime desc\r\n| limit 250\r\n\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Opened Network Port for an Azure Resource ",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Caller",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "orange"
                                }
                              },
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results73",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results73",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureActivity\r\n| where Caller in ({UserPrincipalName})\r\n| where ResourceGroup has \"cloud-shell-storage\"\r\n| summarize count() by Caller, OperationNameValue, ResourceId\r\n| sort by count_ desc\r\n| limit 250 \r\n\r\n\r\n\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Azure Cloud Shell Usage",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Caller",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results74",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results74",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let opValues = dynamic([\"Microsoft.Network/networkSecurityGroups/write\", \"Microsoft.Network/networkSecurityGroups/delete\"]);\r\n// Azure NSG Create / Update / Delete\r\nAzureActivity\r\n| where Caller in ({UserPrincipalName})\r\n| where Category == \"Administrative\"\r\n| where OperationNameValue in (opValues)\r\n| where ActivitySubstatusValue in (\"Created\", \"OK\")\r\n| summarize count() by Caller, OperationNameValue, ResourceId\r\n| sort by count_ desc\r\n| limit 250 \r\n\r\n\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Network Security Group Operations ",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Caller",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "orange"
                                }
                              },
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results75",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results75",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureActivity\r\n| where Caller in ({UserPrincipalName})\r\n| where OperationName == \"Create or Update Virtual Machine\" or OperationName == \"Create Deployment\" \r\n| where ActivityStatus == \"Succeeded\" \r\n| summarize count() by Caller, ResourceId\r\n| sort by count_ desc\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Creation of an Anomalous Number of Resources",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Caller",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "orange"
                                }
                              },
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results76",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results76",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "TAB",
                    "comparison": "isEqualTo",
                    "value": "AA"
                  },
                  "name": "Azure Activity Group"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "This section is bound by the above parameters for Subscription, Workspace, TimeRange, and User. Panels are dynamically displayed meaning numerous queries are executed and only panels returning data are displayed. For more information, see üí°[Modern Risk Pain Points](https://docs.microsoft.com/microsoft-365/compliance/insider-risk-management#modern-risk-pain-points) & üí°[Hunt for Threats with Azure Sentinel](https://docs.microsoft.com/azure/sentinel/hunting)\r\n\r\n| <strong> User Package Queries </strong> | \r\n|:--|\r\n| User Office Activity Over Time |\r\n| User Office Activity Count by Workload |\r\n| User Office Activity Count By Workload |\r\n| User File Activity Actions |\r\n| User File Activity Actions over Time |\r\n| User File Access Activity Details |\r\n| User Most Frequently Accessed Files |\r\n| User Microsoft Teams Activity |\r\n| User Microsoft Teams Activity over Time |\r\n| User Exchange Activity |\r\n| User Exchange Activity over Time |\r\n| User Exchange Activity Details |\r\n| User Externally Accessing Office Workloads |\r\n| User Added Bots to Teams |\r\n| User Administrator Activity Not Observed Previously |\r\n| User SharePointFileOperation via Previously Unseen IPs |\r\n| User SharePointFileOperation via Devices with Previously Unseen User Agents |\r\n| User Non-Owner Mailbox Login Activity |\r\n| User PowerShell or Non-Browser Mailbox Sign-In Activity |\r\n| Multiple Teams Deleted by a Single User|\r\n| User Added to Team and Immediately Uploads File |\r\n| User Executable with Double File Extension and Access Summary |\r\n| User Mail Redirect via Exchange Transport Rules |\r\n| User Files Uploaded to Teams and Access Summary |\r\n| User Windows Reserved Filenames Staged on Office File Services |\r\n|User Added as Owner of Multiple Teams |\r\n| User Exchange AuditLog Disabled |\r\n| User Malicious Inbox Rule: Removing Helpdesk/Security Warning Emails |\r\n| User Office Policy Tampering |",
                          "style": "info"
                        },
                        "conditionalVisibility": {
                          "parameterName": "Help",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "SI OV"
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "7afa304d-b448-4d6c-8c54-69e51a7249a9",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results79",
                              "type": 1,
                              "query": "OfficeActivity\r\n| where UserId in ({UserPrincipalName})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results79",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "2a891328-fdea-48e1-9363-99fc0ac0468c",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results80",
                              "type": 1,
                              "query": "OfficeActivity\r\n| where UserId in ({UserPrincipalName})\r\n| where Operation contains \"file\"\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 604800000
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results80",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "0055a8c6-412d-4862-a000-a9026c29d0d4",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results81",
                              "type": 1,
                              "query": "OfficeActivity\r\n| where UserId in ({UserPrincipalName})\r\n| where OfficeWorkload == \"MicrosoftTeams\"\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results81",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "2dc10ed4-b880-4c42-811b-f361c470bea7",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results82",
                              "type": 1,
                              "query": "OfficeActivity\r\n| where UserId in ({UserPrincipalName})\r\n| where OfficeWorkload == \"Exchange\"\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results82",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "ebc6e154-835c-4dc9-9142-e84e21a723e3",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results83",
                              "type": 1,
                              "query": "OfficeActivity\r\n| where UserId in ({UserPrincipalName})\r\n| where ExternalAccess <> \"True\"\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 604800000
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results83",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "c7050e45-04ed-43d1-9af8-e7ba591349f0",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results84",
                              "type": 1,
                              "query": "OfficeActivity\r\n| where UserId in ({UserPrincipalName})\r\n| where OfficeWorkload =~ \"MicrosoftTeams\"\r\n| where Operation =~ \"BotAddedToTeam\"\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results84",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "0d5b45d1-3217-43e6-affd-56b73e7d3560",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results85",
                              "type": 1,
                              "query": "let starttime = {TimeRange:grain};\r\nlet endtime = 1d;\r\nlet historicalActivity=\r\n    OfficeActivity\r\n    | where TimeGenerated between(ago(starttime)..ago(endtime))\r\n    | where RecordType == \"ExchangeAdmin\" and UserType in (\"Admin\", \"DcAdmin\")\r\n    | summarize historicalCount=count() by UserId;\r\nlet recentActivity = OfficeActivity\r\n   | where UserId in ({UserPrincipalName})\r\n    | where TimeGenerated > ago(endtime)\r\n    | where UserType in (\"Admin\", \"DcAdmin\")\r\n    | summarize recentCount=count() by UserId;\r\nrecentActivity\r\n| join kind = leftanti (\r\n    historicalActivity\r\n    )\r\n    on UserId\r\n| project UserId, recentCount\r\n| order by recentCount asc, UserId\r\n| join kind = rightsemi \r\n    (OfficeActivity \r\n    | where TimeGenerated >= ago(endtime) \r\n    | where RecordType == \"ExchangeAdmin\"\r\n    | where UserType in (\"Admin\", \"DcAdmin\")) \r\n    on UserId\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results85",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "fd74a8c1-4044-49f4-82de-b2653dc51d7c",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results86",
                              "type": 1,
                              "query": "let starttime = {TimeRange:grain};\r\nlet endtime = 1d;\r\nlet historicalActivity=\r\n    OfficeActivity\r\n    | where RecordType == \"SharePointFileOperation\"\r\n    | where Operation in (\"FileDownloaded\", \"FileUploaded\")\r\n    | where TimeGenerated between(ago(starttime)..ago(endtime))\r\n    | summarize historicalCount=count() by ClientIP;\r\nlet recentActivity = OfficeActivity\r\n    | where UserId in ({UserPrincipalName})\r\n    | where RecordType == \"SharePointFileOperation\"\r\n    | where Operation in (\"FileDownloaded\", \"FileUploaded\")\r\n    | where TimeGenerated > ago(endtime);\r\nrecentActivity\r\n| join kind= leftanti (\r\n    historicalActivity \r\n    )\r\n    on ClientIP \r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results86",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "b5149369-531f-4db9-b16d-ae6af2af2ce6",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results87",
                              "type": 1,
                              "query": "let starttime = {TimeRange:grain};\r\nlet endtime = 1d;\r\nlet historicalActivity=\r\n    OfficeActivity\r\n    | where RecordType == \"SharePointFileOperation\"\r\n    | where Operation in (\"FileDownloaded\", \"FileUploaded\")\r\n    | where TimeGenerated between(ago(starttime)..ago(endtime))\r\n    | summarize historicalCount=count() by UserAgent, RecordType;\r\nlet recentActivity = OfficeActivity\r\n    | where UserId in ({UserPrincipalName})\r\n    | where RecordType == \"SharePointFileOperation\"\r\n    | where Operation in (\"FileDownloaded\", \"FileUploaded\")\r\n    | where TimeGenerated > ago(endtime);\r\nrecentActivity\r\n| join kind = leftanti (\r\n    historicalActivity \r\n    )\r\n    on UserAgent, RecordType\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results87",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "64a696b7-19fc-4cd6-a0fb-6b8d943868dc",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results88",
                              "type": 1,
                              "query": "OfficeActivity\r\n| where UserId in ({UserPrincipalName})\r\n| where Operation == \"MailboxLogin\" and Logon_Type != \"Owner\" \r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results88",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "57c00f66-6a47-4179-be44-c07b1f0f7ff1",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results89",
                              "type": 1,
                              "query": "OfficeActivity\r\n| where UserId in ({UserPrincipalName})\r\n| where Operation == \"MailboxLogin\"\r\n| where ClientInfoString == \"Client=Microsoft.Exchange.Powershell; Microsoft WinRM Client\"\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results89",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "a6eb5e71-9e0f-46f7-891c-11ac8b8f03cd",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results90",
                              "type": 1,
                              "query": "// Adjust this value to change how many Teams should be deleted before including\r\nlet max_delete = 3;\r\nlet deleting_users = (\r\n    OfficeActivity\r\n    | where UserId in ({UserPrincipalName})\r\n    | where OfficeWorkload =~ \"MicrosoftTeams\"\r\n    | where Operation =~ \"TeamDeleted\"\r\n    | summarize count() by UserId\r\n    | where count_ > max_delete\r\n    | project UserId);\r\nOfficeActivity\r\n| where OfficeWorkload =~ \"MicrosoftTeams\"\r\n| where Operation =~ \"TeamDeleted\"\r\n| where UserId in (deleting_users)\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results90",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "c9283cec-012f-4e89-917b-4ebfea0d4c9c",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results91",
                              "type": 1,
                              "query": "let threshold = 1m;\r\nOfficeActivity\r\n| where UserId in ({UserPrincipalName})\r\n| where OfficeWorkload =~ \"MicrosoftTeams\"\r\n| where Operation == \"MemberAdded\"\r\n| extend TeamName = iff(isempty(TeamName), Members[0].UPN, TeamName)\r\n| project TimeGenerated, UserId, UploaderID=UserId, TeamName\r\n| join (\r\n    OfficeActivity\r\n    | where RecordType == \"SharePointFileOperation\"\r\n    | where SourceRelativeUrl has \"Microsoft Teams Chat Files\"\r\n    | where Operation == \"FileUploaded\"\r\n    | project UserId, UploadTime=TimeGenerated, UploaderID=UserId, FileLocation=OfficeObjectId, FileName=SourceFileName\r\n    )\r\n    on UploaderID\r\n| where UploadTime > TimeGenerated and UploadTime < TimeGenerated + threshold\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results91",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "045e5099-2b58-4af1-8525-5620752bed66",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results92",
                              "type": 1,
                              "query": "let known_ext = dynamic([\"lnk\", \"log\", \"option\", \"config\", \"manifest\", \"partial\"]);\r\nlet excluded_users = dynamic([\"app@sharepoint\"]);\r\nOfficeActivity\r\n| where UserId in ({UserPrincipalName})\r\n| where RecordType =~ \"SharePointFileOperation\" and isnotempty(SourceFileName)\r\n| where OfficeObjectId has \".exe.\" and SourceFileExtension !in~ (known_ext)\r\n| extend Extension = extract(\"[^.]*.[^.]*$\", 0, OfficeObjectId)\r\n| join kind= leftouter ( \r\n    OfficeActivity\r\n    | where RecordType =~ \"SharePointFileOperation\" and (Operation =~ \"FileDownloaded\" or Operation =~ \"FileAccessed\") \r\n    | where SourceFileExtension !in~ (known_ext)\r\n    )\r\n    on OfficeObjectId \r\n| where UserId1 !in~ (excluded_users)\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results92",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "fb33950d-7f2b-4304-b688-9cb0e103f6dc",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results93",
                              "type": 1,
                              "query": "OfficeActivity\r\n| where UserId in ({UserPrincipalName})\r\n| where OfficeWorkload == \"Exchange\"\r\n| where Operation in~ (\"New-TransportRule\", \"Set-TransportRule\")\r\n| extend p = parse_json(Parameters)\r\n| extend RuleName = case(\r\n    Operation =~ \"Set-TransportRule\", tostring(OfficeObjectId),\r\n    Operation =~ \"New-TransportRule\", tostring(p[1].Value),\r\n    \"Unknown\"\r\n    ) \r\n| mvexpand p\r\n| where (p.Name =~ \"BlindCopyTo\" or p.Name =~ \"RedirectMessageTo\") and isnotempty(p.Value)\r\n| extend RedirectTo = p.Value\r\n| extend ClientIPOnly = case( \r\n    ClientIP has \".\" and ClientIP has \":\", tostring(split(ClientIP, \":\")[0]), \r\n    ClientIP has \".\" and ClientIP has \"-\", tostring(split(ClientIP, \"-\")[0]), \r\n    ClientIP has \"[\", tostring(trim_start(@'[[]', tostring(split(ClientIP, \"]\")[0]))),\r\n    ClientIP\r\n    )  \r\n| extend Port = case(\r\n    ClientIP has \".\" and ClientIP has \":\", (split(ClientIP, \":\")[1]),\r\n    ClientIP has \".\" and ClientIP has \"-\", (split(ClientIP, \"-\")[1]),\r\n    ClientIP has \"[\" and ClientIP has \":\", tostring(split(ClientIP, \"]:\")[1]),\r\n    ClientIP has \"[\" and ClientIP has \"-\", tostring(split(ClientIP, \"]-\")[1]),\r\n    ClientIP\r\n    )\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results93",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "dc33037c-0615-4f66-98b8-35e450068f1e",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results94",
                              "type": 1,
                              "query": "// a threshold can be enabled, see commented line below for PrevSeenCount\r\nlet threshold = 1;\r\n// Reserved FileNames/Extension for Windows\r\nlet Reserved = dynamic(['CON', 'PRN', 'AUX', 'NUL', 'COM1', 'COM2', 'COM3', 'COM4', 'COM5', 'COM6', 'COM7', 'COM8', 'COM9', 'LPT1', 'LPT2', 'LPT3', 'LPT4', 'LPT5', 'LPT6', 'LPT7', 'LPT8', 'LPT9']);\r\nlet starttime = {TimeRange:grain};\r\nlet endtime = 1d;\r\nOfficeActivity\r\n| where UserId in ({UserPrincipalName})\r\n| where TimeGenerated >= ago(endtime)\r\n| where isnotempty(SourceFileExtension)\r\n| where SourceFileName !~ SourceFileExtension\r\n| where SourceFileExtension in~ (Reserved) or SourceFileName in~ (Reserved)\r\n| where UserAgent !has \"Mac OS\" \r\n| project TimeGenerated, OfficeId, OfficeWorkload, RecordType, Operation, UserType, UserKey, UserId, ClientIP, UserAgent, Site_Url, SourceRelativeUrl, SourceFileName, SourceFileExtension \r\n| join kind= leftanti (\r\n    OfficeActivity\r\n    | where TimeGenerated between (ago(starttime)..ago(endtime))\r\n    | where isnotempty(SourceFileExtension)\r\n    | where SourceFileName !~ SourceFileExtension\r\n    | where SourceFileExtension in~ (Reserved) or SourceFileName in~ (Reserved)\r\n    | where UserAgent !has \"Mac OS\" \r\n    | summarize SourceRelativeUrl = make_set(SourceRelativeUrl), UserId = make_set(UserId), SourceFileName = make_set(SourceFileName), PrevSeenCount = count() by SourceFileExtension\r\n    // To exclude previous matches when only above a specific count, change threshold above and uncomment the line below\r\n    //| where PrevSeenCount > threshold\r\n    | mvexpand SourceRelativeUrl, UserId, SourceFileName\r\n    | extend SourceRelativeUrl = tostring(SourceRelativeUrl), UserId = tostring(UserId), SourceFileName = tostring(SourceFileName)\r\n    )\r\n    on SourceFileExtension\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results94",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "3d9de6bf-6bf9-42dd-9ed5-9e03ee5e48af",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results95",
                              "type": 1,
                              "query": "OfficeActivity\r\n| where UserId in ({UserPrincipalName})\r\n| where (Operation =~ \"Set-Mailbox\" and Parameters contains 'ForwardingSmtpAddress') \r\n    or (Operation =~ 'New-InboxRule' and Parameters contains 'ForwardTo')\r\n| extend parsed=parse_json(Parameters)\r\n| extend fwdingDestination_initial = (iif(Operation =~ \"Set-Mailbox\", tostring(parsed[1].Value), tostring(parsed[2].Value)))\r\n| where isnotempty(fwdingDestination_initial)\r\n| extend fwdingDestination = iff(fwdingDestination_initial has \"smtp\", (split(fwdingDestination_initial, \":\")[1]), fwdingDestination_initial)\r\n| parse fwdingDestination with * '@' ForwardedtoDomain \r\n| parse UserId with *'@' UserDomain\r\n| extend subDomain = ((split(strcat(tostring(split(UserDomain, '.')[-2]), '.', tostring(split(UserDomain, '.')[-1])), '.')[0]))\r\n| where ForwardedtoDomain !contains subDomain\r\n| extend Result = iff(ForwardedtoDomain != UserDomain, \"Mailbox rule created to forward to External Domain\", \"Forward rule for Internal domain\")\r\n| extend ClientIPAddress = case(ClientIP has \".\", tostring(split(ClientIP, \":\")[0]), ClientIP has \"[\", tostring(trim_start(@'[[]', tostring(split(ClientIP, \"]\")[0]))), ClientIP)\r\n| extend Port = case(\r\n    ClientIP has \".\", (split(ClientIP, \":\")[1]),\r\n    ClientIP has \"[\", tostring(split(ClientIP, \"]:\")[1]),\r\n    ClientIP\r\n    )\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results95",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "5a4b34c2-c933-4255-a151-6781fc58aa9b",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results96",
                              "type": 1,
                              "query": "OfficeActivity \r\n| where UserId in ({UserPrincipalName})\r\n| where RecordType =~ \"SharePointFileOperation\"\r\n| where Operation =~ \"FileUploaded\" \r\n| where UserId != \"app@sharepoint\"\r\n| where SourceRelativeUrl has \"Microsoft Teams Chat Files\" \r\n| join kind= leftouter ( \r\n    OfficeActivity \r\n    | where RecordType =~ \"SharePointFileOperation\"\r\n    | where Operation =~ \"FileDownloaded\" or Operation =~ \"FileAccessed\" \r\n    | where UserId != \"app@sharepoint\"\r\n    | where SourceRelativeUrl has \"Microsoft Teams Chat Files\" \r\n    )\r\n    on OfficeObjectId \r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results96",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "2ef18052-f3a2-4c9b-8f79-c4805018680d",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results97",
                              "type": 1,
                              "query": "// Reserved FileNames/Extension for Windows\r\nlet Reserved = dynamic(['CON', 'PRN', 'AUX', 'NUL', 'COM1', 'COM2', 'COM3', 'COM4', 'COM5', 'COM6', 'COM7', 'COM8', 'COM9', 'LPT1', 'LPT2', 'LPT3', 'LPT4', 'LPT5', 'LPT6', 'LPT7', 'LPT8', 'LPT9']);\r\nOfficeActivity\r\n| where UserId in ({UserPrincipalName})\r\n| where isnotempty(SourceFileExtension)\r\n| where SourceFileExtension in~ (Reserved) or SourceFileName in~ (Reserved)\r\n| where UserAgent !has \"Mac OS\" \r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results97",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "e3a6793b-d24b-4e69-922a-6bce21138d10",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results98",
                              "type": 1,
                              "query": "// Adjust this value to change how many teams a user is made owner of before detecting\r\nlet max_owner_count = 3;\r\n// Change this value to adjust how larger timeframe the query is run over.\r\nlet high_owner_count = (OfficeActivity\r\n    | where OfficeWorkload =~ \"MicrosoftTeams\"\r\n    | where Operation =~ \"MemberRoleChanged\"\r\n    | extend Member = tostring(parse_json(Members)[0].UPN) \r\n    | extend NewRole = toint(parse_json(Members)[0].Role) \r\n    | where NewRole == 2\r\n    | summarize dcount(TeamName) by Member\r\n    | where dcount_TeamName > max_owner_count\r\n    | project Member);\r\nOfficeActivity\r\n| where UserId in ({UserPrincipalName})\r\n| where OfficeWorkload =~ \"MicrosoftTeams\"\r\n| where Operation =~ \"MemberRoleChanged\"\r\n| extend Member = tostring(parse_json(Members)[0].UPN) \r\n| extend NewRole = toint(parse_json(Members)[0].Role) \r\n| where NewRole == 2\r\n| where Member in (high_owner_count)\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results98",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "982af542-16a2-429f-9414-2de706b1daf8",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results99",
                              "type": 1,
                              "query": "OfficeActivity\r\n| where UserId in ({UserPrincipalName})\r\n| where UserType in~ (\"Admin\",\"DcAdmin\") \r\n// Only admin or global-admin can disable audit logging\r\n| where Operation =~ \"Set-AdminAuditLogConfig\" \r\n| extend AdminAuditLogEnabledValue = tostring(parse_json(tostring(parse_json(tostring(array_slice(parse_json(Parameters),3,3)))[0])).Value)\r\n| where AdminAuditLogEnabledValue =~ \"False\" \r\n| summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), OperationCount = count() by Operation, UserType, UserId, ClientIP, ResultStatus, Parameters, AdminAuditLogEnabledValue\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results99",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "c385b319-e2bb-48de-ac7b-2456aa884b60",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results100",
                              "type": 1,
                              "query": "//Add Keywords for Emails as needed\r\nlet Keywords = dynamic([\"helpdesk\", \" alert\", \" suspicious\", \"fake\", \"malicious\", \"phishing\", \"spam\", \"do not click\", \"do not open\", \"hijacked\", \"Fatal\"]);\r\nOfficeActivity\r\n| where UserId in ({UserPrincipalName})\r\n| where Operation =~ \"New-InboxRule\"\r\n| where Parameters has \"Deleted Items\" or Parameters has \"Junk Email\" \r\n| extend Events=todynamic(Parameters)\r\n| parse Events  with * \"SubjectContainsWords\" SubjectContainsWords '}'*\r\n| parse Events  with * \"BodyContainsWords\" BodyContainsWords '}'*\r\n| parse Events  with * \"SubjectOrBodyContainsWords\" SubjectOrBodyContainsWords '}'*\r\n| where SubjectContainsWords has_any (Keywords)\r\n or BodyContainsWords has_any (Keywords)\r\n or SubjectOrBodyContainsWords has_any (Keywords)\r\n| extend ClientIPAddress = case( ClientIP has \".\", tostring(split(ClientIP,\":\")[0]), ClientIP has \"[\", tostring(trim_start(@'[[]',tostring(split(ClientIP,\"]\")[0]))), ClientIP )\r\n| extend Keyword = iff(isnotempty(SubjectContainsWords), SubjectContainsWords, (iff(isnotempty(BodyContainsWords),BodyContainsWords,SubjectOrBodyContainsWords )))\r\n| extend RuleDetail = case(OfficeObjectId contains '/' , tostring(split(OfficeObjectId, '/')[-1]) , tostring(split(OfficeObjectId, '\\\\')[-1]))\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "50",
                        "name": "Results100",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "776847fb-789e-45e6-a314-7cfed84e4f03",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results101",
                              "type": 1,
                              "query": "let opList = OfficeActivity \r\n| where UserId in ({UserPrincipalName})\r\n| summarize by Operation\r\n//| where Operation startswith \"Remove-\" or Operation startswith \"Disable-\"\r\n| where Operation has_any (\"Remove\", \"Disable\")\r\n| where Operation contains \"AntiPhish\" or Operation contains \"SafeAttachment\" or Operation contains \"SafeLinks\" or Operation contains \"Dlp\" or Operation contains \"Audit\"\r\n| summarize make_set(Operation);\r\nOfficeActivity\r\n// Only admin or global-admin can disable/remove policy\r\n| where RecordType =~ \"ExchangeAdmin\"\r\n| where UserType in~ (\"Admin\",\"DcAdmin\")\r\n// Pass in interesting Operation list\r\n| where Operation in~ (opList)\r\n| extend ClientIPOnly = case( \r\nClientIP has \".\", tostring(split(ClientIP,\":\")[0]), \r\nClientIP has \"[\", tostring(trim_start(@'[[]',tostring(split(ClientIP,\"]\")[0]))),\r\nClientIP\r\n)  \r\n| extend Port = case(\r\nClientIP has \".\", (split(ClientIP,\":\")[1]),\r\nClientIP has \"[\", tostring(split(ClientIP,\"]:\")[1]),\r\nClientIP\r\n)\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "50",
                        "name": "Results101",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "OfficeActivity\r\n| where UserId in ({UserPrincipalName})\r\n| make-series count() default=0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step 1d by OfficeWorkload\r\n| render timechart\r\n\r\n\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Office Activity Over Time",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ]
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "75",
                        "conditionalVisibility": {
                          "parameterName": "Results79",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results79"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "OfficeActivity\r\n| where UserId in ({UserPrincipalName})\r\n| summarize count() by OfficeWorkload\r\n| render piechart\r\n\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Office Activity Count by Workload",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ]
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "25",
                        "conditionalVisibility": {
                          "parameterName": "Results79",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results79b"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "OfficeActivity\r\n| where UserId in ({UserPrincipalName})\r\n| summarize count() by UserId, Operation, OfficeWorkload\r\n| sort by count_ desc\r\n| limit 250\r\n\r\n\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Office Activity Count By Workload",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Operation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "pending",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "OfficeWorkload",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Blank",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ],
                            "filter": true
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results79",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results79c",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "OfficeActivity\r\n| where UserId in ({UserPrincipalName})\r\n| where Operation contains \"file\"\r\n| extend Path = OfficeObjectId\r\n| summarize count() by UserId, Operation\r\n| sort by count_ desc\r\n| limit 250\r\n\r\n\r\n\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User File Activity Actions",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Operation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "uninitialized",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results80",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results80",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "OfficeActivity\r\n| where UserId in ({UserPrincipalName})\r\n| where Operation contains \"file\"\r\n| extend Path = OfficeObjectId\r\n| make-series count() default=0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step 1d by Operation\r\n| render timechart\r\n\r\n\r\n\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User File Activity Actions over Time",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ]
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results80",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results80b",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "OfficeActivity\r\n| where UserId in ({UserPrincipalName})\r\n| where Operation contains \"file\"\r\n| extend Path = OfficeObjectId\r\n| project UserId, UserType, OfficeWorkload, Operation, SourceFileName, SourceFileExtension, Path, TimeGenerated\r\n| sort by TimeGenerated desc\r\n| limit 250\r\n\r\n\r\n\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User File Access Activity Details",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Operation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "uninitialized",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ],
                            "filter": true
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results80",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results80c",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "OfficeActivity\r\n| where UserId in ({UserPrincipalName})\r\n| where Operation contains \"file\"\r\n| summarize count() by UserId, SourceFileName, SourceFileExtension, OfficeObjectId \r\n| sort by count_ desc\r\n| limit 250\r\n\r\n\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Most Frequently Accessed Files",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "SourceFileName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "info",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "OfficeObjectId",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url"
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "Results80",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results80d"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "OfficeActivity\r\n| where UserId in ({UserPrincipalName})\r\n| where OfficeWorkload == \"MicrosoftTeams\"\r\n| summarize count() by UserId, Operation\r\n| sort by count_ desc\r\n| limit 250\r\n\r\n\r\n\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Microsoft Teams Activity",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Operation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "uninitialized",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results81",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results81",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "OfficeActivity\r\n| where UserId in ({UserPrincipalName})\r\n| where OfficeWorkload == \"MicrosoftTeams\"\r\n| make-series count() default=0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step 1d by Operation\r\n| render timechart\r\n\r\n\r\n\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Microsoft Teams Activity over Time",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ]
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results81",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results81b",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "OfficeActivity\r\n| where UserId in ({UserPrincipalName})\r\n| where OfficeWorkload == \"Exchange\"\r\n| summarize count() by UserId, Operation\r\n| sort by count_ desc\r\n| limit 250\r\n\r\n\r\n\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Exchange Activity",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Operation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "uninitialized",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results82",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results82",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "OfficeActivity\r\n| where UserId in ({UserPrincipalName})\r\n| where OfficeWorkload == \"Exchange\"\r\n| make-series count() default=0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step 1d by Operation\r\n| render timechart\r\n\r\n\r\n\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Exchange Activity over Time",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ]
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results82",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results82b",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "OfficeActivity\r\n| where UserId in ({UserPrincipalName})\r\n| where OfficeWorkload == \"Exchange\"\r\n| project UserId, UserType, Logon_Type, Operation, Folders, TimeGenerated\r\n| limit 250\r\n\r\n\r\n\r\n\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Exchange Activity Details",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Operation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "uninitialized",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ],
                            "filter": true,
                            "sortBy": [
                              {
                                "itemKey": "Folders",
                                "sortOrder": 2
                              }
                            ]
                          },
                          "sortBy": [
                            {
                              "itemKey": "Folders",
                              "sortOrder": 2
                            }
                          ],
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results82",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results82c",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "OfficeActivity\r\n| where UserId in ({UserPrincipalName})\r\n| where ExternalAccess <> \"True\"\r\n| summarize count() by UserId\r\n| sort by count_ desc\r\n| limit 250\r\n\r\n\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Externally Accessing Office Workloads",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "Operation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "OfficeWorkload",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results83",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results83",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "OfficeActivity\r\n| where UserId in ({UserPrincipalName})\r\n| where OfficeWorkload =~ \"MicrosoftTeams\"\r\n| where Operation =~ \"BotAddedToTeam\"\r\n| summarize count() by UserId, TimeGenerated\r\n| sort by count_ desc\r\n| limit 250",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Added Bots to Teams",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "Operation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "OfficeWorkload",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results84",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results84",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let starttime = {TimeRange:grain};\r\nlet endtime = 1d;\r\nlet historicalActivity=\r\n    OfficeActivity\r\n    | where TimeGenerated between(ago(starttime)..ago(endtime))\r\n    | where RecordType == \"ExchangeAdmin\" and UserType in (\"Admin\", \"DcAdmin\")\r\n    | summarize historicalCount=count() by UserId;\r\nlet recentActivity = OfficeActivity\r\n   | where UserId in ({UserPrincipalName})\r\n    | where TimeGenerated > ago(endtime)\r\n    | where UserType in (\"Admin\", \"DcAdmin\")\r\n    | summarize recentCount=count() by UserId;\r\nrecentActivity\r\n| join kind = leftanti (\r\n    historicalActivity\r\n    )\r\n    on UserId\r\n| project UserId, recentCount\r\n| order by recentCount asc, UserId\r\n| join kind = rightsemi \r\n    (OfficeActivity \r\n    | where TimeGenerated >= ago(endtime) \r\n    | where RecordType == \"ExchangeAdmin\"\r\n    | where UserType in (\"Admin\", \"DcAdmin\")) \r\n    on UserId\r\n| summarize StartTime = max(TimeGenerated), EndTime = min(TimeGenerated), count() by RecordType, Operation, UserType, UserId, OriginatingServer, ResultStatus\r\n| summarize count() by UserId\r\n| sort by count_ desc",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Administrator Activity Not Observed Previously",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "redBright"
                                }
                              },
                              {
                                "columnMatch": "Operation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "OfficeWorkload",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results85",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results85",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let starttime = {TimeRange:grain};\r\nlet endtime = 1d;\r\nlet historicalActivity=\r\n    OfficeActivity\r\n    | where RecordType == \"SharePointFileOperation\"\r\n    | where Operation in (\"FileDownloaded\", \"FileUploaded\")\r\n    | where TimeGenerated between(ago(starttime)..ago(endtime))\r\n    | summarize historicalCount=count() by ClientIP;\r\nlet recentActivity = OfficeActivity\r\n    | where UserId in ({UserPrincipalName})\r\n    | where RecordType == \"SharePointFileOperation\"\r\n    | where Operation in (\"FileDownloaded\", \"FileUploaded\")\r\n    | where TimeGenerated > ago(endtime);\r\nrecentActivity\r\n| join kind= leftanti (\r\n    historicalActivity \r\n    )\r\n    on ClientIP \r\n| summarize count() by UserId\r\n| sort by count_ desc",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User SharePointFileOperation via Previously Unseen IPs",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "redBright"
                                }
                              },
                              {
                                "columnMatch": "Operation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "OfficeWorkload",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results86",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results86",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let starttime = {TimeRange:grain};\r\nlet endtime = 1d;\r\nlet historicalActivity=\r\n    OfficeActivity\r\n    | where RecordType == \"SharePointFileOperation\"\r\n    | where Operation in (\"FileDownloaded\", \"FileUploaded\")\r\n    | where TimeGenerated between(ago(starttime)..ago(endtime))\r\n    | summarize historicalCount=count() by UserAgent, RecordType;\r\nlet recentActivity = OfficeActivity\r\n    | where UserId in ({UserPrincipalName})\r\n    | where RecordType == \"SharePointFileOperation\"\r\n    | where Operation in (\"FileDownloaded\", \"FileUploaded\")\r\n    | where TimeGenerated > ago(endtime);\r\nrecentActivity\r\n| join kind = leftanti (\r\n    historicalActivity \r\n    )\r\n    on UserAgent, RecordType\r\n| summarize count() by UserId\r\n| sort by count_ desc",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User SharePointFileOperation via Devices with Previously Unseen User Agents",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "redBright"
                                }
                              },
                              {
                                "columnMatch": "Operation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "OfficeWorkload",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results87",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results87",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "OfficeActivity\r\n| where UserId in ({UserPrincipalName})\r\n| where Operation == \"MailboxLogin\" and Logon_Type != \"Owner\" \r\n| summarize count() by UserId\r\n| sort by count_ desc\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Non-Owner Mailbox Login Activity",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "redBright"
                                }
                              },
                              {
                                "columnMatch": "Operation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "OfficeWorkload",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results88",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results88",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "OfficeActivity\r\n| where UserId in ({UserPrincipalName})\r\n| where Operation == \"MailboxLogin\"\r\n| where ClientInfoString == \"Client=Microsoft.Exchange.Powershell; Microsoft WinRM Client\"\r\n| summarize count() by UserId\r\n| sort by count_ desc\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User PowerShell or Non-Browser Mailbox Sign-In Activity",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "redBright"
                                }
                              },
                              {
                                "columnMatch": "Operation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "OfficeWorkload",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results89",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results89",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "// Adjust this value to change how many Teams should be deleted before including\r\nlet max_delete = 3;\r\nlet deleting_users = (\r\n    OfficeActivity\r\n    | where UserId in ({UserPrincipalName})\r\n    | where OfficeWorkload =~ \"MicrosoftTeams\"\r\n    | where Operation =~ \"TeamDeleted\"\r\n    | summarize count() by UserId\r\n    | where count_ > max_delete\r\n    | project UserId);\r\nOfficeActivity\r\n| where OfficeWorkload =~ \"MicrosoftTeams\"\r\n| where Operation =~ \"TeamDeleted\"\r\n| where UserId in (deleting_users)\r\n| summarize count() by UserId\r\n| sort by count_ desc",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Multiple Teams Deleted by a Single User",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "redBright"
                                }
                              },
                              {
                                "columnMatch": "Operation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "OfficeWorkload",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results90",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results90",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let threshold = 1m;\r\nOfficeActivity\r\n| where UserId in ({UserPrincipalName})\r\n| where OfficeWorkload =~ \"MicrosoftTeams\"\r\n| where Operation == \"MemberAdded\"\r\n| extend TeamName = iff(isempty(TeamName), Members[0].UPN, TeamName)\r\n| project TimeGenerated, UserId, UploaderID=UserId, TeamName\r\n| join (\r\n    OfficeActivity\r\n    | where RecordType == \"SharePointFileOperation\"\r\n    | where SourceRelativeUrl has \"Microsoft Teams Chat Files\"\r\n    | where Operation == \"FileUploaded\"\r\n    | project UserId, UploadTime=TimeGenerated, UploaderID=UserId, FileLocation=OfficeObjectId, FileName=SourceFileName\r\n    )\r\n    on UploaderID\r\n| where UploadTime > TimeGenerated and UploadTime < TimeGenerated + threshold\r\n| summarize count() by UserId\r\n| sort by count_ desc",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Added to Team and Immediately Uploads File",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "redBright"
                                }
                              },
                              {
                                "columnMatch": "Operation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "OfficeWorkload",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results91",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results91",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let known_ext = dynamic([\"lnk\", \"log\", \"option\", \"config\", \"manifest\", \"partial\"]);\r\nlet excluded_users = dynamic([\"app@sharepoint\"]);\r\nOfficeActivity\r\n| where UserId in ({UserPrincipalName})\r\n| where RecordType =~ \"SharePointFileOperation\" and isnotempty(SourceFileName)\r\n| where OfficeObjectId has \".exe.\" and SourceFileExtension !in~ (known_ext)\r\n| extend Extension = extract(\"[^.]*.[^.]*$\", 0, OfficeObjectId)\r\n| join kind= leftouter ( \r\n    OfficeActivity\r\n    | where RecordType =~ \"SharePointFileOperation\" and (Operation =~ \"FileDownloaded\" or Operation =~ \"FileAccessed\") \r\n    | where SourceFileExtension !in~ (known_ext)\r\n    )\r\n    on OfficeObjectId \r\n| where UserId1 !in~ (excluded_users)\r\n| extend userBag = pack(UserId1, ClientIP1) \r\n| summarize makeset(UserId1), make_bag(userBag), Start=max(TimeGenerated), End=min(TimeGenerated) by UserId, OfficeObjectId, SourceFileName, Extension \r\n| extend NumberOfUsers = array_length(bag_keys(bag_userBag))\r\n| project UploadTime=Start, Uploader=UserId, FileLocation=OfficeObjectId, FileName=SourceFileName, AccessedBy=bag_userBag, Extension, NumberOfUsers\r\n| extend timestamp = UploadTime, AccountCustomEntity = Uploader",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Executable with Double File Extension and Acces Summary",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "redBright"
                                }
                              },
                              {
                                "columnMatch": "Operation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "OfficeWorkload",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results92",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results92",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "OfficeActivity\r\n| where UserId in ({UserPrincipalName})\r\n| where OfficeWorkload == \"Exchange\"\r\n| where Operation in~ (\"New-TransportRule\", \"Set-TransportRule\")\r\n| extend p = parse_json(Parameters)\r\n| extend RuleName = case(\r\n    Operation =~ \"Set-TransportRule\", tostring(OfficeObjectId),\r\n    Operation =~ \"New-TransportRule\", tostring(p[1].Value),\r\n    \"Unknown\"\r\n    ) \r\n| mvexpand p\r\n| where (p.Name =~ \"BlindCopyTo\" or p.Name =~ \"RedirectMessageTo\") and isnotempty(p.Value)\r\n| extend RedirectTo = p.Value\r\n| extend ClientIPOnly = case( \r\n    ClientIP has \".\" and ClientIP has \":\", tostring(split(ClientIP, \":\")[0]), \r\n    ClientIP has \".\" and ClientIP has \"-\", tostring(split(ClientIP, \"-\")[0]), \r\n    ClientIP has \"[\", tostring(trim_start(@'[[]', tostring(split(ClientIP, \"]\")[0]))),\r\n    ClientIP\r\n    )  \r\n| extend Port = case(\r\n    ClientIP has \".\" and ClientIP has \":\", (split(ClientIP, \":\")[1]),\r\n    ClientIP has \".\" and ClientIP has \"-\", (split(ClientIP, \"-\")[1]),\r\n    ClientIP has \"[\" and ClientIP has \":\", tostring(split(ClientIP, \"]:\")[1]),\r\n    ClientIP has \"[\" and ClientIP has \"-\", tostring(split(ClientIP, \"]-\")[1]),\r\n    ClientIP\r\n    )\r\n| summarize count() by UserId\r\n| sort by count_ desc\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Mail Redirect via Exchange Transport Rules",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "redBright"
                                }
                              },
                              {
                                "columnMatch": "Operation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "OfficeWorkload",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results93",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results93",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "// a threshold can be enabled, see commented line below for PrevSeenCount\r\nlet threshold = 1;\r\n// Reserved FileNames/Extension for Windows\r\nlet Reserved = dynamic(['CON', 'PRN', 'AUX', 'NUL', 'COM1', 'COM2', 'COM3', 'COM4', 'COM5', 'COM6', 'COM7', 'COM8', 'COM9', 'LPT1', 'LPT2', 'LPT3', 'LPT4', 'LPT5', 'LPT6', 'LPT7', 'LPT8', 'LPT9']);\r\nlet starttime = {TimeRange:grain};\r\nlet endtime = 1d;\r\nOfficeActivity\r\n| where UserId in ({UserPrincipalName})\r\n| where TimeGenerated >= ago(endtime)\r\n| where isnotempty(SourceFileExtension)\r\n| where SourceFileName !~ SourceFileExtension\r\n| where SourceFileExtension in~ (Reserved) or SourceFileName in~ (Reserved)\r\n| where UserAgent !has \"Mac OS\" \r\n| project TimeGenerated, OfficeId, OfficeWorkload, RecordType, Operation, UserType, UserKey, UserId, ClientIP, UserAgent, Site_Url, SourceRelativeUrl, SourceFileName, SourceFileExtension \r\n| join kind= leftanti (\r\n    OfficeActivity\r\n    | where TimeGenerated between (ago(starttime)..ago(endtime))\r\n    | where isnotempty(SourceFileExtension)\r\n    | where SourceFileName !~ SourceFileExtension\r\n    | where SourceFileExtension in~ (Reserved) or SourceFileName in~ (Reserved)\r\n    | where UserAgent !has \"Mac OS\" \r\n    | summarize SourceRelativeUrl = make_set(SourceRelativeUrl), UserId = make_set(UserId), SourceFileName = make_set(SourceFileName), PrevSeenCount = count() by SourceFileExtension\r\n    // To exclude previous matches when only above a specific count, change threshold above and uncomment the line below\r\n    //| where PrevSeenCount > threshold\r\n    | mvexpand SourceRelativeUrl, UserId, SourceFileName\r\n    | extend SourceRelativeUrl = tostring(SourceRelativeUrl), UserId = tostring(UserId), SourceFileName = tostring(SourceFileName)\r\n    )\r\n    on SourceFileExtension\r\n| extend SiteUrlUserFolder = tolower(split(Site_Url, '/')[-2])\r\n| extend UserIdUserFolderFormat = tolower(replace('@|\\\\.', '_', UserId))\r\n// identify when UserId is not a match to the specific site url personal folder reference\r\n| extend UserIdDiffThanUserFolder = iff(Site_Url has '/personal/' and SiteUrlUserFolder != UserIdUserFolderFormat, true, false) \r\n| summarize TimeGenerated = make_list(TimeGenerated), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), Operations = make_list(Operation), UserAgents = make_list(UserAgent), \r\n    OfficeIds = make_list(OfficeId), SourceRelativeUrls = make_list(SourceRelativeUrl), FileNames = make_list(SourceFileName)\r\n    by OfficeWorkload, RecordType, UserType, UserKey, UserId, ClientIP, Site_Url, SourceFileExtension, SiteUrlUserFolder, UserIdUserFolderFormat, UserIdDiffThanUserFolder\r\n| summarize count() by UserId\r\n| sort by count_ desc",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Windows Reserved Filenames Staged on Office File Services",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "redBright"
                                }
                              },
                              {
                                "columnMatch": "Operation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "OfficeWorkload",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results94",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results94",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "OfficeActivity\r\n| where UserId in ({UserPrincipalName})\r\n| where (Operation =~ \"Set-Mailbox\" and Parameters contains 'ForwardingSmtpAddress') \r\n    or (Operation =~ 'New-InboxRule' and Parameters contains 'ForwardTo')\r\n| extend parsed=parse_json(Parameters)\r\n| extend fwdingDestination_initial = (iif(Operation =~ \"Set-Mailbox\", tostring(parsed[1].Value), tostring(parsed[2].Value)))\r\n| where isnotempty(fwdingDestination_initial)\r\n| extend fwdingDestination = iff(fwdingDestination_initial has \"smtp\", (split(fwdingDestination_initial, \":\")[1]), fwdingDestination_initial)\r\n| parse fwdingDestination with * '@' ForwardedtoDomain \r\n| parse UserId with *'@' UserDomain\r\n| extend subDomain = ((split(strcat(tostring(split(UserDomain, '.')[-2]), '.', tostring(split(UserDomain, '.')[-1])), '.')[0]))\r\n| where ForwardedtoDomain !contains subDomain\r\n| extend Result = iff(ForwardedtoDomain != UserDomain, \"Mailbox rule created to forward to External Domain\", \"Forward rule for Internal domain\")\r\n| extend ClientIPAddress = case(ClientIP has \".\", tostring(split(ClientIP, \":\")[0]), ClientIP has \"[\", tostring(trim_start(@'[[]', tostring(split(ClientIP, \"]\")[0]))), ClientIP)\r\n| extend Port = case(\r\n    ClientIP has \".\", (split(ClientIP, \":\")[1]),\r\n    ClientIP has \"[\", tostring(split(ClientIP, \"]:\")[1]),\r\n    ClientIP\r\n    )\r\n| summarize count() by UserId, fwdingDestination, TimeGenerated\r\n| sort by TimeGenerated desc\r\n| limit 250",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Email Forwarding",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "fwdingDestination",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "warning",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "orange"
                                }
                              },
                              {
                                "columnMatch": "Operation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "OfficeWorkload",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results95",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results95",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "OfficeActivity \r\n| where UserId in ({UserPrincipalName})\r\n| where RecordType =~ \"SharePointFileOperation\"\r\n| where Operation =~ \"FileUploaded\" \r\n| where UserId != \"app@sharepoint\"\r\n| where SourceRelativeUrl has \"Microsoft Teams Chat Files\" \r\n| join kind= leftouter ( \r\n    OfficeActivity \r\n    | where RecordType =~ \"SharePointFileOperation\"\r\n    | where Operation =~ \"FileDownloaded\" or Operation =~ \"FileAccessed\" \r\n    | where UserId != \"app@sharepoint\"\r\n    | where SourceRelativeUrl has \"Microsoft Teams Chat Files\" \r\n    )\r\n    on OfficeObjectId \r\n| extend userBag = pack(UserId1, ClientIP1) \r\n| summarize makeset(UserId1), make_bag(userBag) by TimeGenerated, UserId, OfficeObjectId, SourceFileName \r\n| extend NumberUsers = array_length(bag_keys(bag_userBag))\r\n| project UserId, FileLocation=OfficeObjectId, FileName=SourceFileName, AccessedBy=bag_userBag, NumberOfUsersAccessed=NumberUsers, TimeGenerated",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Files Uploaded to Teams and Access Summary",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "redBright"
                                }
                              },
                              {
                                "columnMatch": "Operation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "OfficeWorkload",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results96",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results96",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "// Reserved FileNames/Extension for Windows\r\nlet Reserved = dynamic(['CON', 'PRN', 'AUX', 'NUL', 'COM1', 'COM2', 'COM3', 'COM4', 'COM5', 'COM6', 'COM7', 'COM8', 'COM9', 'LPT1', 'LPT2', 'LPT3', 'LPT4', 'LPT5', 'LPT6', 'LPT7', 'LPT8', 'LPT9']);\r\nOfficeActivity\r\n| where UserId in ({UserPrincipalName})\r\n| where isnotempty(SourceFileExtension)\r\n| where SourceFileExtension in~ (Reserved) or SourceFileName in~ (Reserved)\r\n| where UserAgent !has \"Mac OS\" \r\n| extend SiteUrlUserFolder = tolower(split(Site_Url, '/')[-2])\r\n| extend UserIdUserFolderFormat = tolower(replace('@|\\\\.', '_', UserId))\r\n// identify when UserId is not a match to the specific site url personal folder reference\r\n| extend UserIdDiffThanUserFolder = iff(Site_Url has '/personal/' and SiteUrlUserFolder != UserIdUserFolderFormat, true, false) \r\n| summarize TimeGenerated = make_list(TimeGenerated), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), Operations = make_list(Operation), UserAgents = make_list(UserAgent), \r\n    OfficeIds = make_list(OfficeId), SourceRelativeUrls = make_list(SourceRelativeUrl), FileNames = make_list(SourceFileName)\r\n    by OfficeWorkload, RecordType, UserType, UserKey, UserId, ClientIP, Site_Url, SourceFileExtension, SiteUrlUserFolder, UserIdUserFolderFormat, UserIdDiffThanUserFolder\r\n| summarize count() by UserId\r\n| sort by count_ desc",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Windows Reserved Filenames Staged on Office File Services",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "redBright"
                                }
                              },
                              {
                                "columnMatch": "Operation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "OfficeWorkload",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results97",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results97",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "// Adjust this value to change how many teams a user is made owner of before detecting\r\nlet max_owner_count = 3;\r\n// Change this value to adjust how larger timeframe the query is run over.\r\nlet high_owner_count = (OfficeActivity\r\n    | where OfficeWorkload =~ \"MicrosoftTeams\"\r\n    | where Operation =~ \"MemberRoleChanged\"\r\n    | extend Member = tostring(parse_json(Members)[0].UPN) \r\n    | extend NewRole = toint(parse_json(Members)[0].Role) \r\n    | where NewRole == 2\r\n    | summarize dcount(TeamName) by Member\r\n    | where dcount_TeamName > max_owner_count\r\n    | project Member);\r\nOfficeActivity\r\n| where UserId in ({UserPrincipalName})\r\n| where OfficeWorkload =~ \"MicrosoftTeams\"\r\n| where Operation =~ \"MemberRoleChanged\"\r\n| extend Member = tostring(parse_json(Members)[0].UPN) \r\n| extend NewRole = toint(parse_json(Members)[0].Role) \r\n| where NewRole == 2\r\n| where Member in (high_owner_count)\r\n| summarize count() by UserId\r\n| sort by count_ desc",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Added as Owner of Multiple Teams",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "redBright"
                                }
                              },
                              {
                                "columnMatch": "Operation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "OfficeWorkload",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results98",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results98",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "OfficeActivity\r\n| where UserId in ({UserPrincipalName})\r\n| where UserType in~ (\"Admin\",\"DcAdmin\") \r\n// Only admin or global-admin can disable audit logging\r\n| where Operation =~ \"Set-AdminAuditLogConfig\" \r\n| extend AdminAuditLogEnabledValue = tostring(parse_json(tostring(parse_json(tostring(array_slice(parse_json(Parameters),3,3)))[0])).Value)\r\n| where AdminAuditLogEnabledValue =~ \"False\" \r\n| summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), OperationCount = count() by Operation, UserType, UserId, ClientIP, ResultStatus, Parameters, AdminAuditLogEnabledValue\r\n| summarize count() by UserId\r\n| sort by count_ desc",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Exchange AuditLog Disabled",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "redBright"
                                }
                              },
                              {
                                "columnMatch": "Operation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "OfficeWorkload",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results99",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results99",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "//Add Keywords for Emails as needed\r\nlet Keywords = dynamic([\"helpdesk\", \" alert\", \" suspicious\", \"fake\", \"malicious\", \"phishing\", \"spam\", \"do not click\", \"do not open\", \"hijacked\", \"Fatal\"]);\r\nOfficeActivity\r\n| where UserId in ({UserPrincipalName})\r\n| where Operation =~ \"New-InboxRule\"\r\n| where Parameters has \"Deleted Items\" or Parameters has \"Junk Email\" \r\n| extend Events=todynamic(Parameters)\r\n| parse Events  with * \"SubjectContainsWords\" SubjectContainsWords '}'*\r\n| parse Events  with * \"BodyContainsWords\" BodyContainsWords '}'*\r\n| parse Events  with * \"SubjectOrBodyContainsWords\" SubjectOrBodyContainsWords '}'*\r\n| where SubjectContainsWords has_any (Keywords)\r\n or BodyContainsWords has_any (Keywords)\r\n or SubjectOrBodyContainsWords has_any (Keywords)\r\n| extend ClientIPAddress = case( ClientIP has \".\", tostring(split(ClientIP,\":\")[0]), ClientIP has \"[\", tostring(trim_start(@'[[]',tostring(split(ClientIP,\"]\")[0]))), ClientIP )\r\n| extend Keyword = iff(isnotempty(SubjectContainsWords), SubjectContainsWords, (iff(isnotempty(BodyContainsWords),BodyContainsWords,SubjectOrBodyContainsWords )))\r\n| extend RuleDetail = case(OfficeObjectId contains '/' , tostring(split(OfficeObjectId, '/')[-1]) , tostring(split(OfficeObjectId, '\\\\')[-1]))\r\n| summarize count() by UserId\r\n| sort by count_ desc",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Malicious Inbox Rule: Removing Helpdesk/Security Warning Emails",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "redBright"
                                }
                              },
                              {
                                "columnMatch": "Operation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "OfficeWorkload",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results100",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results100",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let opList = OfficeActivity \r\n| where UserId in ({UserPrincipalName})\r\n| summarize by Operation\r\n//| where Operation startswith \"Remove-\" or Operation startswith \"Disable-\"\r\n| where Operation has_any (\"Remove\", \"Disable\")\r\n| where Operation contains \"AntiPhish\" or Operation contains \"SafeAttachment\" or Operation contains \"SafeLinks\" or Operation contains \"Dlp\" or Operation contains \"Audit\"\r\n| summarize make_set(Operation);\r\nOfficeActivity\r\n// Only admin or global-admin can disable/remove policy\r\n| where RecordType =~ \"ExchangeAdmin\"\r\n| where UserType in~ (\"Admin\",\"DcAdmin\")\r\n// Pass in interesting Operation list\r\n| where Operation in~ (opList)\r\n| extend ClientIPOnly = case( \r\nClientIP has \".\", tostring(split(ClientIP,\":\")[0]), \r\nClientIP has \"[\", tostring(trim_start(@'[[]',tostring(split(ClientIP,\"]\")[0]))),\r\nClientIP\r\n)  \r\n| extend Port = case(\r\nClientIP has \".\", (split(ClientIP,\":\")[1]),\r\nClientIP has \"[\", tostring(split(ClientIP,\"]:\")[1]),\r\nClientIP\r\n)\r\n| summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), OperationCount = count() by Operation, UserType, UserId, ClientIP = ClientIPOnly, Port, ResultStatus, Parameters\r\n| summarize count() by UserId\r\n| sort by count_ desc",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Office Policy Tampering",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "redBright"
                                }
                              },
                              {
                                "columnMatch": "Operation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "OfficeWorkload",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results101",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results101",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "TAB",
                    "comparison": "isEqualTo",
                    "value": "OA"
                  },
                  "name": "Office Activity Group"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "This section is bound by the above parameters for Subscription, Workspace, TimeRange, and User. Panels are dynamically displayed meaning numerous queries are executed and only panels returning data are displayed. For more information, see üí°[Modern Risk Pain Points](https://docs.microsoft.com/microsoft-365/compliance/insider-risk-management#modern-risk-pain-points) & üí°[Hunt for Threats with Azure Sentinel](https://docs.microsoft.com/azure/sentinel/hunting)\r\n\r\n| <strong> User Package Queries </strong> | \r\n|:--|\r\n| User Audit Logs by Operations |\r\n| User Most Failed Operations |\r\n| User Most Successful Operations |\r\n| User Changing Passwords Across Multiple Cloud Accounts |\r\n| User Searching for Secrets & Passwords |\r\n| User Inactive or New Account Sign-Ins |\r\n| Multiple Password Reset by User |\r\n| Rare Audit Activity Initiated by User |\r\n| User Consent to Application Discovery |\r\n| User Granted Access and Grants Others Access |\r\n| Rare Domains Observed in User Cloud Logs |\r\n| User Granted Access and Creates Resources |\r\n| User Modified Domain Federation Trust Settings |",
                          "style": "info"
                        },
                        "conditionalVisibility": {
                          "parameterName": "Help",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "SI OV"
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "7afa304d-b448-4d6c-8c54-69e51a7249a9",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results102",
                              "type": 1,
                              "query": "AuditLogs\r\n| extend UserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results102",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "658caef7-b6e6-4d04-92be-b7ff5cc8910e",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results103",
                              "type": 1,
                              "query": "let action = dynamic([\"change \", \"changed \", \"reset \"]);\r\nlet pWord = dynamic([\"password \", \"credentials \"]);\r\n(union isfuzzy=true\r\n    (SecurityEvent\r\n    | where EventID in (4723, 4724)\r\n    | summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), ResultDescriptions = makeset(Activity), ActionCount = count() by Resource = Computer, OperationName = strcat(\"TargetAccount: \", TargetUserName), UserId = Account, Type\r\n    ),\r\n    (AuditLogs\r\n    | where OperationName has_any (pWord) and OperationName has_any (action)\r\n    | extend InitiatedBy = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName) \r\n    | extend TargetUserPrincipalName = tostring(TargetResources[0].userPrincipalName) \r\n    | where ResultDescription != \"None\" \r\n    | summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), ResultDescriptions = makeset(ResultDescription), CorrelationIds = makeset(CorrelationId), ActionCount = count() by OperationName = strcat(Category, \" - \", OperationName, \" - \", Result), Resource, UserId = TargetUserPrincipalName, Type\r\n    | extend ResultDescriptions = tostring(ResultDescriptions)\r\n    ),\r\n    (OfficeActivity\r\n    | where (ExtendedProperties has_any (pWord) or ModifiedProperties has_any (pWord)) and (ExtendedProperties has_any (action) or ModifiedProperties has_any (action))\r\n    | extend ResultDescriptions = case(\r\n        OfficeWorkload =~ \"AzureActiveDirectory\", tostring(ExtendedProperties),\r\n        OfficeWorkload has_any (\"Exchange\", \"OneDrive\"), OfficeObjectId,\r\n        RecordType) \r\n    | summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), ResultDescriptions = makeset(ResultDescriptions), ActionCount = count() by Resource = OfficeWorkload, OperationName = strcat(Operation, \" - \", ResultStatus), IPAddress = ClientIP, UserId, Type\r\n    ),\r\n    (Syslog\r\n    | where SyslogMessage has_any (pWord) and SyslogMessage has_any (action)\r\n    | summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), ResultDescriptions = makeset(SyslogMessage), ActionCount = count() by Resource = HostName, OperationName = Facility, IPAddress = HostIP, ProcessName, Type\r\n    ),\r\n    (SigninLogs\r\n    | where OperationName =~ \"Sign-in activity\" and ResultType has_any (\"50125\", \"50133\")\r\n    | summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), ResultDescriptions = makeset(ResultDescription), CorrelationIds = makeset(CorrelationId), ActionCount = count() by Resource, OperationName = strcat(OperationName, \" - \", ResultType), IPAddress, UserId = UserPrincipalName, Type\r\n    )\r\n)\r\n| extend timestamp = StartTimeUtc, AccountCustomEntity = UserId, IPCustomEntity = IPAddress\r\n| where AccountCustomEntity in ({UserPrincipalName})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results103",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "e3a0cfd9-ab9d-479d-b355-f3db4d09b084",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results104",
                              "type": 1,
                              "query": "// Extend this list with items to search for\r\nlet keywords = dynamic([\"password\", \"pwd\", \"creds\", \"credentials\", \"secret\"]);\r\n// To exclude key phrases or tables to exclude add to these lists\r\nlet table_exclusions = dynamic([\"AuditLogs\", \"SigninLogs\", \"LAQueryLogs\", \"SecurityEvent\"]);\r\nlet keyword_exclusion = dynamic([\"reset user password\", \"change user password\"]);\r\nLAQueryLogs\r\n| where RequestClientApp != 'Sentinel-General'\r\n| extend querytext_lower = tolower(QueryText)\r\n| where querytext_lower has_any(keywords)\r\n| project TimeGenerated, AADEmail, QueryText, RequestClientApp, RequestTarget, ResponseCode, ResponseRowCount, ResponseDurationMs, CorrelationId\r\n| extend timestamp = TimeGenerated, AccountCustomEntity = AADEmail\r\n| join kind=leftanti (LAQueryLogs\r\n    | where RequestClientApp != 'Sentinel-General'\r\n    | extend querytext_lower = tolower(QueryText)\r\n    | where QueryText has_any(table_exclusions) or querytext_lower has_any(keyword_exclusion))\r\n    on CorrelationId\r\n | where AccountCustomEntity in ({UserPrincipalName})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results104",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "4d0cfde6-5b30-4824-97bb-37487f260b0b",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results105",
                              "type": 1,
                              "query": "//Inactive accounts that sign in - first-time logins for accounts created in last 7 days are filtered out\r\nlet starttime = {TimeRange:grain};\r\nlet midtime = 7d;\r\nlet endtime = 1d;\r\nSigninLogs\r\n| where TimeGenerated >= ago(endtime)\r\n// successful sign-in\r\n| where ResultType == 0\r\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), loginCountToday=count() by UserPrincipalName, Identity\r\n| join kind=leftanti (\r\n    SigninLogs\r\n    // historical successful sign-in\r\n    | where TimeGenerated < ago(endtime)\r\n    | where TimeGenerated >= ago(starttime)\r\n    | where ResultType == 0\r\n    | summarize by UserPrincipalName, Identity\r\n    )\r\n    on UserPrincipalName \r\n| join kind= leftanti (\r\n    // filter out newly created user accounts\r\n    AuditLogs\r\n    | where TimeGenerated >= ago(midtime)\r\n    | where OperationName == \"Add user\" \r\n    // Normalize to lower case in order to match against equivalent UPN in Signin logs\r\n    | extend NewUserPrincipalName = tolower(extractjson(\"$.userPrincipalName\", tostring(TargetResources[0]), typeof(string)))\r\n    )\r\n    on $left.UserPrincipalName == $right.NewUserPrincipalName \r\n| extend timestamp = StartTime, AccountCustomEntity = UserPrincipalName\r\n| where AccountCustomEntity in ({UserPrincipalName})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results105",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "e6f952e3-6516-4ea5-b53b-fdf6b6869c81",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results106",
                              "type": 1,
                              "query": "let PerUserThreshold = 5;\r\nlet TotalThreshold = 100;\r\nlet action = dynamic([\"change\", \"changed\", \"reset\"]);\r\nlet pWord = dynamic([\"password\", \"credentials\"]);\r\nlet PasswordResetMultiDataSource =\r\n    (union isfuzzy=true\r\n        (//Password reset events\r\n        //4723: An attempt was made to change an account's password\r\n        //4724: An attempt was made to reset an accounts password\r\n        SecurityEvent\r\n        | where EventID in (\"4723\", \"4724\")\r\n        | project TimeGenerated, Computer, AccountType, Account, Type),\r\n        (//Azure Active Directory Password reset events\r\n        AuditLogs\r\n        | where OperationName has_any (pWord) and OperationName has_any (action)\r\n        | extend AccountType = tostring(TargetResources[0].type), Account = tostring(TargetResources[0].userPrincipalName), \r\n            TargetResourceName = tolower(tostring(TargetResources[0].displayName))\r\n        | project TimeGenerated, AccountType, Account, Computer = TargetResourceName, Type),\r\n        (//OfficeActive ActiveDirectory Password reset events\r\n        OfficeActivity\r\n        | where OfficeWorkload == \"AzureActiveDirectory\" \r\n        | where (ExtendedProperties has_any (pWord) or ModifiedProperties has_any (pWord)) and (ExtendedProperties has_any (action) or ModifiedProperties has_any (action))\r\n        | extend AccountType = UserType, Account = OfficeObjectId \r\n        | project TimeGenerated, AccountType, Account, Type, Computer = \"\"),\r\n        (// Unix syslog password reset events\r\n        Syslog\r\n        | where Facility in (\"auth\", \"authpriv\")\r\n        | where SyslogMessage has_any (pWord) and SyslogMessage has_any (action)\r\n        | extend AccountType = iif(SyslogMessage contains \"root\", \"Root\", \"Non-Root\")\r\n        | parse SyslogMessage with * \"password changed for\" Account\r\n        | project TimeGenerated, AccountType, Account, Computer = HostName, Type),\r\n        (SigninLogs\r\n        | where OperationName =~ \"Sign-in activity\" and ResultType has_any (\"50125\", \"50133\")\r\n        | project TimeGenerated, AccountType = AppDisplayName, Computer = IPAddress, Account = UserPrincipalName, Type\r\n        )\r\n    );\r\nlet pwrmd = PasswordResetMultiDataSource\r\n    | project TimeGenerated, Computer, AccountType, Account, Type;\r\n(union isfuzzy=true  \r\n    (pwrmd\r\n    | summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), Computer = makeset(Computer), AccountType = makeset(AccountType), Total=count() by Account, Type\r\n    | where Total > PerUserThreshold\r\n    | extend ResetPivot = \"PerUserReset\"),  \r\n    (pwrmd\r\n    | summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), Computer = makeset(Computer), Account = tostring(makeset(Account)), AccountType = makeset(AccountType), Total=count() by Type\r\n    | where Total > TotalThreshold\r\n    | extend ResetPivot = \"TotalUserReset\")\r\n)\r\n| extend timestamp = StartTimeUtc, AccountCustomEntity = Account, HostCustomEntity = tostring(Computer)\r\n| where AccountCustomEntity in ({UserPrincipalName})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results106",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "4f1e1636-66f4-42ab-ba63-f0046df90e09",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results107",
                              "type": 1,
                              "query": "let current = 1d;\r\nlet auditLookback = {TimeRange:grain};\r\nlet propertyIgnoreList = dynamic([\"TargetId.UserType\", \"StsRefreshTokensValidFrom\", \"LastDirSyncTime\", \"DeviceOSVersion\", \"CloudDeviceOSVersion\", \"DeviceObjectVersion\"]);\r\nlet AuditTrail = AuditLogs\r\n    | where TimeGenerated >= ago(auditLookback) and TimeGenerated < ago(current)\r\n    | where isnotempty(tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName))\r\n    | extend InitiatedByUser = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n    | extend InitiatedByIPAddress = tostring(parse_json(tostring(InitiatedBy.user)).ipAddress)\r\n    | extend ModProps = TargetResources.[0].modifiedProperties\r\n    | extend TargetUserPrincipalName = tolower(tostring(TargetResources.[0].userPrincipalName))\r\n    | extend TargetResourceName = tolower(tostring(TargetResources.[0].displayName))\r\n    | mv-expand ModProps\r\n    | extend PropertyName = tostring(ModProps.displayName), newValue = tostring(parse_json(tostring(ModProps.newValue))[0])\r\n    | where PropertyName !in~ (propertyIgnoreList) and (PropertyName !~ \"Action Client Name\" and newValue !~ \"DirectorySync\") and (PropertyName !~ \"Included Updated Properties\" and newValue !~ \"LastDirSyncTime\")\r\n    | summarize count() by OperationName, InitiatedByUser, InitiatedByIPAddress, TargetUserPrincipalName, PropertyName, TargetResourceName;\r\nlet AccountMods = AuditLogs \r\n    | where TimeGenerated >= ago(current)\r\n    | where isnotempty(tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName))\r\n    | extend InitiatedByUser = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n    | extend InitiatedByIPAddress = tostring(parse_json(tostring(InitiatedBy.user)).ipAddress)\r\n    | extend ModProps = TargetResources.[0].modifiedProperties\r\n    | extend TargetUserPrincipalName = tolower(tostring(TargetResources.[0].userPrincipalName))\r\n    | extend TargetResourceName = tolower(tostring(TargetResources.[0].displayName))\r\n    | mv-expand ModProps\r\n    | extend PropertyName = tostring(ModProps.displayName), newValue = tostring(parse_json(tostring(ModProps.newValue))[0])\r\n    | where PropertyName !in~ (propertyIgnoreList) and (PropertyName !~ \"Action Client Name\" and newValue !~ \"DirectorySync\") and (PropertyName !~ \"Included Updated Properties\" and newValue !~ \"LastDirSyncTime\")\r\n    | extend ModifiedProps = pack(\"PropertyName\", PropertyName, \"newValue\", newValue, \"Id\", Id, \"CorrelationId\", CorrelationId) \r\n    | summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), Activity = make_bag(ModifiedProps) by Type, InitiatedByUser, InitiatedByIPAddress, TargetUserPrincipalName, Category, OperationName, PropertyName, TargetResourceName;\r\nlet RareAudits = AccountMods\r\n    | join kind= leftanti (\r\n        AuditTrail \r\n        )\r\n        on OperationName, InitiatedByUser, InitiatedByIPAddress;//, TargetUserPrincipalName, PropertyName; //uncomment if you want to see Rare Property changes to a given TargetUserPrincipalName.\r\nRareAudits \r\n| summarize StartTime = min(StartTimeUtc), EndTime = max(EndTimeUtc), make_set(Activity), make_set(PropertyName) by Type, InitiatedByUser, InitiatedByIPAddress, OperationName, TargetUserPrincipalName, TargetResourceName\r\n| extend timestamp = StartTime, AccountCustomEntity = InitiatedByUser, HostCustomEntity = iff(set_PropertyName has_any ('DeviceOSType', 'CloudDeviceOSType'), TargetResourceName, ''), IPCustomEntity = InitiatedByIPAddress\r\n| where AccountCustomEntity in ({UserPrincipalName})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results107",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "75c81ac6-d658-48ee-85b0-8bce3559128a",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results108",
                              "type": 1,
                              "query": "let auditLookback = {TimeRange:grain};\r\n// Setting threshold to 3 as a default, change as needed.  Any operation that has been initiated by a user or app more than 3 times in the past 30 days will be exluded\r\nlet threshold = 3;\r\n// Helper function to extract relevant fields from AuditLog events\r\nlet auditLogEvents = view (startTimeSpan: timespan) {\r\n    AuditLogs\r\n    | where TimeGenerated >= ago(auditLookback)\r\n    | extend ModProps = TargetResources.[0].modifiedProperties\r\n    | extend IpAddress = iff(isnotempty(tostring(parse_json(tostring(InitiatedBy.user)).ipAddress)), \r\n        tostring(parse_json(tostring(InitiatedBy.user)).ipAddress), tostring(parse_json(tostring(InitiatedBy.app)).ipAddress))\r\n    | extend InitiatedBy = iff(isnotempty(tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)), \r\n        tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName), tostring(parse_json(tostring(InitiatedBy.app)).displayName))\r\n    | extend TargetResourceName = tolower(tostring(TargetResources.[0].displayName))\r\n    | mvexpand ModProps\r\n    | extend PropertyName = tostring(ModProps.displayName), newValue = replace('\\\"', \"\", tostring(ModProps.newValue));\r\n};\r\n// Get just the InitiatedBy and CorrleationId so we can look at associated audit activity\r\n// 2 other operations that can be part of malicious activity in this situation are \r\n// \"Add OAuth2PermissionGrant\" and \"Add service principal\", replace the below if you are interested in those as starting points for OperationName\r\nlet HistoricalConsent = auditLogEvents(auditLookback)  \r\n    | where OperationName == \"Consent to application\"\r\n    | summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), OperationCount = count() \r\n        by Type, InitiatedBy, IpAddress, TargetResourceName, Category, OperationName, PropertyName, newValue, CorrelationId, Id\r\n// Remove comment below to only include operations initiated by a user or app that is above the threshold for the last 30 days\r\n//| where OperationCount > threshold\r\n;\r\nlet Correlate = HistoricalConsent \r\n    | summarize by InitiatedBy, CorrelationId;\r\n// 2 other operations that can be part of malicious activity in this situation are \r\n// \"Add OAuth2PermissionGrant\" and \"Add service principal\", replace the below if you changed the starting OperationName above\r\nlet allOtherEvents = auditLogEvents(auditLookback) \r\n    | where OperationName != \"Consent to application\";\r\n// Gather associated activity based on audit activity for \"Consent to application\" and InitiatedBy and CorrleationId\r\nlet CorrelatedEvents = Correlate \r\n    | join allOtherEvents on InitiatedBy, CorrelationId\r\n    | summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated) \r\n        by Type, InitiatedBy, IpAddress, TargetResourceName, Category, OperationName, PropertyName, newValue, CorrelationId, Id\r\n;\r\n// Union the results\r\nlet Results = union isfuzzy=true HistoricalConsent, CorrelatedEvents;\r\n// newValues that are simple semi-colon separated, make those dynamic for easy viewing and Aggregate into the PropertyUpdate set based on CorrelationId and Id(DirectoryId)\r\nResults\r\n| extend newValue = split(newValue, \";\")\r\n| extend PropertyUpdate = pack(PropertyName, newValue, \"Id\", Id)\r\n// Extract scope requested\r\n| extend perms = tostring(parse_json(tostring(PropertyUpdate.[\"ConsentAction.Permissions\"]))[0])\r\n| extend scope = extract('Scope:\\\\s*([^,\\\\]]*)', 1, perms)\r\n// Filter out some common openid, and low privilege request scopes - uncomment line below to filter out where no scope is requested\r\n//| where isnotempty(scope)\r\n| where scope !contains 'openid' and scope !in ('user_impersonation', 'User.Read')\r\n| summarize StartTime = min(StartTimeUtc), EndTime = max(EndTimeUtc), PropertyUpdateSet = make_bag(PropertyUpdate), make_set(scope)\r\n    by InitiatedBy, IpAddress, TargetResourceName, OperationName, CorrelationId\r\n| extend timestamp = StartTime, AccountCustomEntity = InitiatedBy, IPCustomEntity = IpAddress\r\n| where AccountCustomEntity in ({UserPrincipalName})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results108",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "d415a546-9cf6-444b-b60c-d3bfb5b04cd5",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results109",
                              "type": 1,
                              "query": "let auditLookback = {TimeRange:grain};\r\nlet opName = dynamic([\"Add user\", \"Invite external user\"]);\r\n// Helper function to extract relevant fields from AuditLog events\r\nlet auditLogEvents = view (startTimeSpan: timespan, operation: dynamic) {\r\n    AuditLogs\r\n    | where TimeGenerated >= ago(auditLookback)\r\n    | where OperationName in~ (operation)\r\n    | extend ModProps = iff(TargetResources.[0].modifiedProperties != \"[]\", TargetResources.[0].modifiedProperties, todynamic(\"NoValues\"))\r\n    | extend IpAddress = iff(isnotempty(tostring(parse_json(tostring(InitiatedBy.user)).ipAddress)), \r\n        tostring(parse_json(tostring(InitiatedBy.user)).ipAddress), tostring(parse_json(tostring(InitiatedBy.app)).ipAddress))\r\n    | extend InitiatedByFull = iff(isnotempty(tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)), \r\n        tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName), tostring(parse_json(tostring(InitiatedBy.app)).displayName))\r\n    | extend InitiatedBy = replace(\"_\", \"@\", tostring(split(InitiatedByFull, \"#\")[0]))\r\n    | extend TargetUserPrincipalName = tostring(TargetResources[0].userPrincipalName)\r\n    | extend TargetUserName = replace(\"_\", \"@\", tostring(split(TargetUserPrincipalName, \"#\")[0]))\r\n    | extend TargetResourceName = case(\r\n        isempty(tostring(TargetResources.[0].displayName)), TargetUserPrincipalName,\r\n        isnotempty(tostring(TargetResources.[0].displayName)) and tostring(TargetResources.[0].displayName) startswith \"upn:\", tolower(tostring(TargetResources.[0].displayName)),\r\n        tolower(tostring(TargetResources.[0].displayName))\r\n        )\r\n    | extend TargetUserName = replace(\"_\", \"@\", tostring(split(TargetUserPrincipalName, \"#\")[0]))\r\n    | extend TargetUserName = iff(isempty(TargetUserName), tostring(split(split(TargetResourceName, \",\")[0], \" \")[1]), TargetUserName) \r\n    | mvexpand ModProps\r\n    | extend PropertyName = tostring(ModProps.displayName), newValue = replace('\\\"', '', tostring(ModProps.newValue));\r\n};\r\n// Assigning time for First TargetUserName that was added\r\nlet FirstAdd = auditLogEvents(auditLookback, opName)  \r\n    | project FirstAddTimeUtc = TimeGenerated, Type, FirstInitiatedBy = InitiatedBy, IpAddress, FirstTargetUserName = TargetUserName, FirstTargetResourceName = TargetResourceName, \r\n        FirstOperationName = OperationName, FirstPropertyName = PropertyName, FirstnewValue = newValue, FirstCorrelationId = CorrelationId, FirstId = Id;\r\n// Assigning time for second TargetUserName that was added, which will allow us to see if a first TargetUserName added in is the Initiated by on the second in the later join\r\nlet SecondAdd = auditLogEvents(auditLookback, opName)  \r\n    | project SecondAddTimeUtc = TimeGenerated, Type, SecondInitiatedBy = InitiatedBy, IpAddress, SecondTargetUserName = TargetUserName, SecondTargetResourceName = TargetResourceName, \r\n        SecondOperationName = OperationName, SecondPropertyName = PropertyName, SecondnewValue = newValue, SecondCorrelationId = CorrelationId, SecondId = Id;\r\n//  Joining the FirstAdd with SecondAdd where the FirstAdd TargetUserName value matches the SecondAdd InitiatedBy.  This shows the new user adding a user.\r\nlet NewUserAddsUser = FirstAdd\r\n    | join SecondAdd on $left.FirstTargetUserName == $right.SecondInitiatedBy\r\n    // we only want items where the FirstAddTimeUtc is before the SecondAddTimeUtc\r\n    | where FirstAddTimeUtc < SecondAddTimeUtc\r\n;\r\n// Build out some of the properties for context\r\nNewUserAddsUser\r\n| extend FirstnewValue = split(FirstnewValue, \";\"), SecondnewValue = split(SecondnewValue, \";\")\r\n| extend PropertyUpdate = pack(FirstPropertyName, FirstnewValue, SecondPropertyName, SecondnewValue, \"FirstCorrelationId\", FirstCorrelationId, \"FirstId\", FirstId, \"SecondCorrelationId\", SecondCorrelationId, \"SecondId\", SecondId)\r\n| summarize PropertyUpdateSet = make_bag(PropertyUpdate)\r\n    by FirstAddTimeUtc, FirstInitiatedBy, FirstTargetUserName, SecondAddTimeUtc, SecondInitiatedBy, SecondTargetUserName, \r\n    IpAddress, FirstTargetResourceName, SecondTargetResourceName, FirstOperationName, SecondOperationName\r\n| extend timestamp = FirstAddTimeUtc, AccountCustomEntity = FirstInitiatedBy, HostCustomEntity = FirstTargetResourceName, IPCustomEntity = IpAddress\r\n| where AccountCustomEntity in ({UserPrincipalName})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results109",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "380e403d-faec-48d8-83ec-23342a1e072b",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results110",
                              "type": 1,
                              "query": "// Provide customLimit value with default above domainLimit value so it will not block unless changed\r\nlet customLimit = 11;\r\nlet domainLimit = 10;\r\nlet domainLookback = union isfuzzy=true\r\n        (AuditLogs\r\n        | extend UserPrincipalName = tolower(tostring(TargetResources.[0].userPrincipalName))\r\n        // parse out AuditLog values for various locations where UPN could be\r\n        | extend UserPrincipalName = iff(isnotempty(UserPrincipalName),\r\n            UserPrincipalName, \r\n            iif((tostring(InitiatedBy.user.userPrincipalName) == 'unknown'), \r\n            extract(\"Email: ([a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\\\.[a-zA-Z0-9-.]+)\", 1, tostring(parse_json(TargetResources)[0].displayName)), \r\n            InitiatedBy.user.userPrincipalName))\r\n        | where UserPrincipalName has \"@\" or UserPrincipalName startswith \"NT AUTHORITY\"\r\n        | extend RareDomain = toupper(tostring(split(UserPrincipalName, \"@\")[-1]))\r\n        | where isnotempty(RareDomain) \r\n        | summarize RareDomainCount = count() by Type, RareDomain\r\n        | where RareDomainCount <= domainLimit\r\n        | extend AccountCustomEntity = UserPrincipalName\r\n        // remove comment from below if you would like to have a lower limit for RareDomainCount specific to AuditLog\r\n        //| where RareDomainCount <= customLimit\r\n        ),\r\n        (OfficeActivity\r\n        | extend UserPrincipalName = tolower(UserId)\r\n        | where UserPrincipalName has \"@\" or UserPrincipalName startswith \"NT AUTHORITY\"\r\n        | extend RareDomain = toupper(tostring(split(UserPrincipalName, \"@\")[-1]))\r\n        | summarize RareDomainCount = count() by Type, RareDomain\r\n        | where RareDomainCount <= domainLimit\r\n        | extend AccountCustomEntity = UserPrincipalName\r\n        // remove comment from below if you would like to have a lower limit for RareDomainCount specific to OfficeActivity\r\n        //| where RareDomainCount <= customLimit\r\n        ),\r\n        (SigninLogs\r\n        | where UserPrincipalName has \"@\" or UserPrincipalName startswith \"NT AUTHORITY\"\r\n        | extend RareDomain = toupper(tostring(split(UserPrincipalName, \"@\")[-1]))\r\n        | summarize RareDomainCount = count() by Type, RareDomain\r\n        | where RareDomainCount <= domainLimit\r\n        // remove comment from below if you would like to have a lower limit for RareDomainCount specific to SigninLogs\r\n        //| where RareDomainCount <= customLimit\r\n        );\r\nlet AuditLogsRef = domainLookback\r\n    | join (\r\n        AuditLogs\r\n        | extend UserPrincipalName = tolower(tostring(TargetResources.[0].userPrincipalName))\r\n        | extend UserPrincipalName = iff(isempty(UserPrincipalName), tostring(InitiatedBy.user.userPrincipalName), UserPrincipalName)\r\n        | extend RareDomain = toupper(tostring(split(UserPrincipalName, \"@\")[-1]))\r\n        | where isnotempty(RareDomain) \r\n        | summarize UPNRefCount = count() by TimeGenerated, Type, RareDomain, UserPrincipalName, OperationName, Category, Result\r\n        | extend AccountCustomEntity = UserPrincipalName\r\n        )\r\n        on Type, RareDomain;\r\nlet OfficeActivityRef = domainLookback\r\n    | join (\r\n        OfficeActivity\r\n        | extend UserPrincipalName = tolower(UserId)\r\n        | where UserPrincipalName has \"@\" or UserPrincipalName startswith \"NT AUTHORITY\"\r\n        | extend RareDomain = toupper(tostring(split(UserPrincipalName, \"@\")[-1]))\r\n        | summarize UPNRefCount = count() by TimeGenerated, Type, RareDomain, UserPrincipalName, OperationName = Operation, Category = OfficeWorkload, Result = ResultStatus\r\n        | extend AccountCustomEntity = UserPrincipalName\r\n        )\r\n        on Type, RareDomain;\r\nlet SigninLogsRef = domainLookback\r\n    | join (\r\n        SigninLogs\r\n        | extend UserPrincipalName = tolower(UserId)\r\n        | where UserPrincipalName has \"@\" or UserPrincipalName startswith \"NT AUTHORITY\"\r\n        | extend RareDomain = toupper(tostring(split(UserPrincipalName, \"@\")[-1]))\r\n        | summarize UPNRefCount = count() by TimeGenerated, Type, RareDomain, UserPrincipalName, OperationName, Category = AppDisplayName, Result = ResultType\r\n        | extend AccountCustomEntity = UserPrincipalName\r\n        )\r\n        on Type, RareDomain;\r\nlet Results = union isfuzzy=true\r\n        AuditLogsRef, OfficeActivityRef, SigninLogsRef;\r\nResults\r\n| project TimeGenerated, Type, RareDomain, UserPrincipalName, OperationName, Category, Result, UPNRefCount \r\n| order by TimeGenerated asc \r\n| extend timestamp = TimeGenerated, AccountCustomEntity = UserPrincipalName\r\n| where AccountCustomEntity in ({UserPrincipalName})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results110",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "d14ed542-4843-4c2d-8309-55440ff2a0a7",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results111",
                              "type": 1,
                              "query": "let auditLookback = {TimeRange:grain};\r\nlet opName = dynamic([\"Add user\", \"Invite external user\"]);\r\n// Helper function to extract relevant fields from AuditLog events\r\nlet auditLogEvents = view (startTimeSpan: timespan, operation: dynamic) {\r\n    AuditLogs\r\n    | where TimeGenerated >= ago(auditLookback)\r\n    | where OperationName in~ (operation)\r\n    | extend UserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\r\n    | where UserPrincipalName in ({UserPrincipalName})\r\n    | extend ModProps = iff(TargetResources.[0].modifiedProperties != \"[]\", TargetResources.[0].modifiedProperties, todynamic(\"NoValues\"))\r\n    | extend IpAddress = iff(isnotempty(tostring(parse_json(tostring(InitiatedBy.user)).ipAddress)), \r\n        tostring(parse_json(tostring(InitiatedBy.user)).ipAddress), tostring(parse_json(tostring(InitiatedBy.app)).ipAddress))\r\n    | extend InitiatedByFull = iff(isnotempty(tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)), \r\n        tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName), tostring(parse_json(tostring(InitiatedBy.app)).displayName))\r\n    | extend InitiatedBy = replace(\"_\", \"@\", tostring(split(InitiatedByFull, \"#\")[0]))\r\n    | extend TargetUserPrincipalName = tostring(TargetResources[0].userPrincipalName)\r\n    | extend TargetUserName = replace(\"_\", \"@\", tostring(split(TargetUserPrincipalName, \"#\")[0]))\r\n    | extend TargetResourceName = case(\r\n        isempty(tostring(TargetResources.[0].displayName)), TargetUserPrincipalName,\r\n        isnotempty(tostring(TargetResources.[0].displayName)) and tostring(TargetResources.[0].displayName) startswith \"upn:\", tolower(tostring(TargetResources.[0].displayName)),\r\n        tolower(tostring(TargetResources.[0].displayName))\r\n        )\r\n    | extend TargetUserName = replace(\"_\", \"@\", tostring(split(TargetUserPrincipalName, \"#\")[0]))\r\n    | extend TargetUserName = iff(isempty(TargetUserName), tostring(split(split(TargetResourceName, \",\")[0], \" \")[1]), TargetUserName) \r\n    | mvexpand ModProps\r\n    | extend PropertyName = tostring(ModProps.displayName), newValue = replace(\"\\\"\", \"\", tostring(ModProps.newValue));\r\n};\r\nlet UserAdd = auditLogEvents(auditLookback, opName) \r\n    | project Action = \"User Added\", TimeGenerated, Type, InitiatedBy_Caller = InitiatedBy, IpAddress, TargetUserName = tolower(TargetUserName), OperationName, PropertyName_ResourceId = PropertyName, Value = newValue;\r\n// Get the simple list of creatd users so we can use later to get just the associated resource creation events\r\nlet SimpleUserList = UserAdd\r\n    | project TimeGenerated, TargetUserName;\r\nlet ResourceCreation = AzureActivity\r\n    | where TimeGenerated >= ago(auditLookback)\r\n    // We look for any Operation that created and then succeeded where ActivityStatus has a value so that we can provide context\r\n    | where OperationName has \"Create\"\r\n    | where ActivityStatus has \"Succeeded\"\r\n    | project Action = \"Resource Created\", ResourceCreationTimeGenerated = TimeGenerated, Type, InitiatedBy_Caller = tolower(Caller), IpAddress = CallerIpAddress, OperationName, Value = OperationNameValue, PropertyName_ResourceId = ResourceId;\r\n// Get just the Resources added by the new user\r\nlet ResourceMatch = SimpleUserList\r\n    | join kind= innerunique (\r\n        ResourceCreation\r\n        )\r\n        on $left.TargetUserName == $right.InitiatedBy_Caller\r\n    // where the resource creation is after (greater than) the user addition\r\n    | where TimeGenerated < ResourceCreationTimeGenerated\r\n    | project-away TimeGenerated \r\n    | project-rename TimeGenerated = ResourceCreationTimeGenerated\r\n;\r\nlet SimpleResourceMatch = ResourceMatch\r\n    | project InitiatedBy_Caller;\r\n// Get only resource add, remove, change by the new user\r\nlet UserAddWithResource = SimpleResourceMatch\r\n    | join kind= rightsemi (\r\n        UserAdd \r\n        )\r\n        on $left.InitiatedBy_Caller == $right.TargetUserName;\r\n// union the user addition events and resource addition events and provide common column names, additionally pack the value, property and resource info to reduce result set.\r\nUserAddWithResource \r\n| union isfuzzy=true ResourceMatch\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results111",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "d0f5e554-de83-438a-9c4a-be05649f8d1f",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results112",
                              "type": 1,
                              "isRequired": true,
                              "query": "(union isfuzzy=true\r\n(\r\nAuditLogs\r\n| extend UserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\r\n| where OperationName =~ \"Set federation settings on domain\"\r\n//| where Result =~ \"success\"   // commenting out, as it may be interesting to capture failed attempts\r\n| mv-expand TargetResources\r\n| extend modifiedProperties = parse_json(TargetResources).modifiedProperties\r\n| mv-expand modifiedProperties\r\n| extend targetDisplayName = tostring(parse_json(modifiedProperties).displayName)\r\n| mv-expand AdditionalDetails\r\n),\r\n(\r\nAuditLogs\r\n| where OperationName =~ \"Set domain authentication\"\r\n//| where Result =~ \"success\"   // commenting out, as it may be interesting to capture failed attempts\r\n| mv-expand TargetResources\r\n| extend modifiedProperties = parse_json(TargetResources).modifiedProperties\r\n| mv-expand modifiedProperties\r\n| extend targetDisplayName = tostring(parse_json(modifiedProperties).displayName), NewDomainValue=tostring(parse_json(modifiedProperties).newValue)\r\n| where NewDomainValue has \"Federated\"\r\n))\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "50",
                        "name": "Results112",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AuditLogs\r\n| extend UserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| summarize count() by OperationName\r\n| render piechart\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Audit Logs by Operations",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Operation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "OfficeWorkload",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ]
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results102",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results102",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AuditLogs\r\n| extend UserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| summarize Runs = count(), Success = countif(Result == 'success'), Fails = countif(Result != 'success') by OperationName // Summarize the total, successful and failed operations by name\r\n| extend SuccessRate = (Success * 100 / Runs) // Calculate the percentage of succesful operations against the total\r\n| project OperationName, Runs, Fails, SuccessRate\r\n| sort by Fails desc\r\n| limit 250\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Most Failed Operations",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "OperationName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "uninitialized",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Runs",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "SuccessRate",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "green"
                                }
                              },
                              {
                                "columnMatch": "Fails",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "red"
                                }
                              },
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "OfficeWorkload",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ],
                            "filter": true
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results102",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results102b",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AuditLogs\r\n| extend UserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| summarize Runs = count(), Success = countif(Result == 'success'), Fails = countif(Result != 'success') by OperationName // Summarize the total, successful and failed operations by name\r\n| extend SuccessRate = (Success * 100 / Runs) // Calculate the percentage of succesful operations against the total\r\n| project OperationName, Runs, SuccessRate, Fails\r\n| sort by SuccessRate desc\r\n| limit 250\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Most Successful Operations",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "OperationName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "uninitialized",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Runs",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "SuccessRate",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "green"
                                }
                              },
                              {
                                "columnMatch": "Fails",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "red"
                                }
                              },
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "OfficeWorkload",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ],
                            "filter": true,
                            "sortBy": [
                              {
                                "itemKey": "$gen_heatmap_SuccessRate_2",
                                "sortOrder": 2
                              }
                            ]
                          },
                          "sortBy": [
                            {
                              "itemKey": "$gen_heatmap_SuccessRate_2",
                              "sortOrder": 2
                            }
                          ]
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results102",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results102c",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let action = dynamic([\"change \", \"changed \", \"reset \"]);\r\nlet pWord = dynamic([\"password \", \"credentials \"]);\r\n(union isfuzzy=true\r\n    (SecurityEvent\r\n    | where EventID in (4723, 4724)\r\n    | summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), ResultDescriptions = makeset(Activity), ActionCount = count() by Resource = Computer, OperationName = strcat(\"TargetAccount: \", TargetUserName), UserId = Account, Type\r\n    ),\r\n    (AuditLogs\r\n    | where OperationName has_any (pWord) and OperationName has_any (action)\r\n    | extend InitiatedBy = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName) \r\n    | extend TargetUserPrincipalName = tostring(TargetResources[0].userPrincipalName) \r\n    | where ResultDescription != \"None\" \r\n    | summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), ResultDescriptions = makeset(ResultDescription), CorrelationIds = makeset(CorrelationId), ActionCount = count() by OperationName = strcat(Category, \" - \", OperationName, \" - \", Result), Resource, UserId = TargetUserPrincipalName, Type\r\n    | extend ResultDescriptions = tostring(ResultDescriptions)\r\n    ),\r\n    (OfficeActivity\r\n    | where (ExtendedProperties has_any (pWord) or ModifiedProperties has_any (pWord)) and (ExtendedProperties has_any (action) or ModifiedProperties has_any (action))\r\n    | extend ResultDescriptions = case(\r\n        OfficeWorkload =~ \"AzureActiveDirectory\", tostring(ExtendedProperties),\r\n        OfficeWorkload has_any (\"Exchange\", \"OneDrive\"), OfficeObjectId,\r\n        RecordType) \r\n    | summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), ResultDescriptions = makeset(ResultDescriptions), ActionCount = count() by Resource = OfficeWorkload, OperationName = strcat(Operation, \" - \", ResultStatus), IPAddress = ClientIP, UserId, Type\r\n    ),\r\n    (Syslog\r\n    | where SyslogMessage has_any (pWord) and SyslogMessage has_any (action)\r\n    | summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), ResultDescriptions = makeset(SyslogMessage), ActionCount = count() by Resource = HostName, OperationName = Facility, IPAddress = HostIP, ProcessName, Type\r\n    ),\r\n    (SigninLogs\r\n    | where OperationName =~ \"Sign-in activity\" and ResultType has_any (\"50125\", \"50133\")\r\n    | summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), ResultDescriptions = makeset(ResultDescription), CorrelationIds = makeset(CorrelationId), ActionCount = count() by Resource, OperationName = strcat(OperationName, \" - \", ResultType), IPAddress, UserId = UserPrincipalName, Type\r\n    )\r\n)\r\n| extend timestamp = StartTimeUtc, AccountCustomEntity = UserId, IPCustomEntity = IPAddress\r\n| where AccountCustomEntity in ({UserPrincipalName})\r\n| summarize count() by AccountCustomEntity\r\n| sort by count_ desc",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Changing Passwords Across Multiple Cloud Accounts",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "AccountCustomEntity",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "orange"
                                }
                              },
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Operation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "OfficeWorkload",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results103",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results103",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "// Extend this list with items to search for\r\nlet keywords = dynamic([\"password\", \"pwd\", \"creds\", \"credentials\", \"secret\"]);\r\n// To exclude key phrases or tables to exclude add to these lists\r\nlet table_exclusions = dynamic([\"AuditLogs\", \"SigninLogs\", \"LAQueryLogs\", \"SecurityEvent\"]);\r\nlet keyword_exclusion = dynamic([\"reset user password\", \"change user password\"]);\r\nLAQueryLogs\r\n| where RequestClientApp != 'Sentinel-General'\r\n| extend querytext_lower = tolower(QueryText)\r\n| where querytext_lower has_any(keywords)\r\n| project TimeGenerated, AADEmail, QueryText, RequestClientApp, RequestTarget, ResponseCode, ResponseRowCount, ResponseDurationMs, CorrelationId\r\n| extend timestamp = TimeGenerated, AccountCustomEntity = AADEmail\r\n| join kind=leftanti (LAQueryLogs\r\n    | where RequestClientApp != 'Sentinel-General'\r\n    | extend querytext_lower = tolower(QueryText)\r\n    | where QueryText has_any(table_exclusions) or querytext_lower has_any(keyword_exclusion))\r\n    on CorrelationId\r\n | where AccountCustomEntity in ({UserPrincipalName})\r\n| summarize count() by AccountCustomEntity\r\n| sort by count_ desc   ",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Searching for Secrets & Passwords",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "AccountCustomEntity",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "orange"
                                }
                              },
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Operation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "OfficeWorkload",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results104",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results104",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "//Inactive accounts that sign in - first-time logins for accounts created in last 7 days are filtered out\r\nlet starttime = {TimeRange:grain};\r\nlet midtime = 7d;\r\nlet endtime = 1d;\r\nSigninLogs\r\n| where TimeGenerated >= ago(endtime)\r\n// successful sign-in\r\n| where ResultType == 0\r\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), loginCountToday=count() by UserPrincipalName, Identity\r\n| join kind=leftanti (\r\n    SigninLogs\r\n    // historical successful sign-in\r\n    | where TimeGenerated < ago(endtime)\r\n    | where TimeGenerated >= ago(starttime)\r\n    | where ResultType == 0\r\n    | summarize by UserPrincipalName, Identity\r\n    )\r\n    on UserPrincipalName \r\n| join kind= leftanti (\r\n    // filter out newly created user accounts\r\n    AuditLogs\r\n    | where TimeGenerated >= ago(midtime)\r\n    | where OperationName == \"Add user\" \r\n    // Normalize to lower case in order to match against equivalent UPN in Signin logs\r\n    | extend NewUserPrincipalName = tolower(extractjson(\"$.userPrincipalName\", tostring(TargetResources[0]), typeof(string)))\r\n    )\r\n    on $left.UserPrincipalName == $right.NewUserPrincipalName \r\n| extend timestamp = StartTime, AccountCustomEntity = UserPrincipalName\r\n| where AccountCustomEntity in ({UserPrincipalName})\r\n| summarize count() by AccountCustomEntity\r\n| sort by count_ desc\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Inactive or New Account Sign-Ins",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "AccountCustomEntity",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "orange"
                                }
                              },
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Operation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "OfficeWorkload",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results105",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results105",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let PerUserThreshold = 5;\r\nlet TotalThreshold = 100;\r\nlet action = dynamic([\"change\", \"changed\", \"reset\"]);\r\nlet pWord = dynamic([\"password\", \"credentials\"]);\r\nlet PasswordResetMultiDataSource =\r\n    (union isfuzzy=true\r\n        (//Password reset events\r\n        //4723: An attempt was made to change an account's password\r\n        //4724: An attempt was made to reset an accounts password\r\n        SecurityEvent\r\n        | where EventID in (\"4723\", \"4724\")\r\n        | project TimeGenerated, Computer, AccountType, Account, Type),\r\n        (//Azure Active Directory Password reset events\r\n        AuditLogs\r\n        | where OperationName has_any (pWord) and OperationName has_any (action)\r\n        | extend AccountType = tostring(TargetResources[0].type), Account = tostring(TargetResources[0].userPrincipalName), \r\n            TargetResourceName = tolower(tostring(TargetResources[0].displayName))\r\n        | project TimeGenerated, AccountType, Account, Computer = TargetResourceName, Type),\r\n        (//OfficeActive ActiveDirectory Password reset events\r\n        OfficeActivity\r\n        | where OfficeWorkload == \"AzureActiveDirectory\" \r\n        | where (ExtendedProperties has_any (pWord) or ModifiedProperties has_any (pWord)) and (ExtendedProperties has_any (action) or ModifiedProperties has_any (action))\r\n        | extend AccountType = UserType, Account = OfficeObjectId \r\n        | project TimeGenerated, AccountType, Account, Type, Computer = \"\"),\r\n        (// Unix syslog password reset events\r\n        Syslog\r\n        | where Facility in (\"auth\", \"authpriv\")\r\n        | where SyslogMessage has_any (pWord) and SyslogMessage has_any (action)\r\n        | extend AccountType = iif(SyslogMessage contains \"root\", \"Root\", \"Non-Root\")\r\n        | parse SyslogMessage with * \"password changed for\" Account\r\n        | project TimeGenerated, AccountType, Account, Computer = HostName, Type),\r\n        (SigninLogs\r\n        | where OperationName =~ \"Sign-in activity\" and ResultType has_any (\"50125\", \"50133\")\r\n        | project TimeGenerated, AccountType = AppDisplayName, Computer = IPAddress, Account = UserPrincipalName, Type\r\n        )\r\n    );\r\nlet pwrmd = PasswordResetMultiDataSource\r\n    | project TimeGenerated, Computer, AccountType, Account, Type;\r\n(union isfuzzy=true  \r\n    (pwrmd\r\n    | summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), Computer = makeset(Computer), AccountType = makeset(AccountType), Total=count() by Account, Type\r\n    | where Total > PerUserThreshold\r\n    | extend ResetPivot = \"PerUserReset\"),  \r\n    (pwrmd\r\n    | summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), Computer = makeset(Computer), Account = tostring(makeset(Account)), AccountType = makeset(AccountType), Total=count() by Type\r\n    | where Total > TotalThreshold\r\n    | extend ResetPivot = \"TotalUserReset\")\r\n)\r\n| extend timestamp = StartTimeUtc, AccountCustomEntity = Account, HostCustomEntity = tostring(Computer)\r\n| where AccountCustomEntity in ({UserPrincipalName})\r\n| summarize count() by AccountCustomEntity\r\n| sort by count_ desc",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Multiple Password Reset by User",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "AccountCustomEntity",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Operation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "OfficeWorkload",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results106",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results106",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let current = 1d;\r\nlet auditLookback = {TimeRange:grain};\r\nlet propertyIgnoreList = dynamic([\"TargetId.UserType\", \"StsRefreshTokensValidFrom\", \"LastDirSyncTime\", \"DeviceOSVersion\", \"CloudDeviceOSVersion\", \"DeviceObjectVersion\"]);\r\nlet AuditTrail = AuditLogs\r\n    | where TimeGenerated >= ago(auditLookback) and TimeGenerated < ago(current)\r\n    | where isnotempty(tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName))\r\n    | extend InitiatedByUser = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n    | extend InitiatedByIPAddress = tostring(parse_json(tostring(InitiatedBy.user)).ipAddress)\r\n    | extend ModProps = TargetResources.[0].modifiedProperties\r\n    | extend TargetUserPrincipalName = tolower(tostring(TargetResources.[0].userPrincipalName))\r\n    | extend TargetResourceName = tolower(tostring(TargetResources.[0].displayName))\r\n    | mv-expand ModProps\r\n    | extend PropertyName = tostring(ModProps.displayName), newValue = tostring(parse_json(tostring(ModProps.newValue))[0])\r\n    | where PropertyName !in~ (propertyIgnoreList) and (PropertyName !~ \"Action Client Name\" and newValue !~ \"DirectorySync\") and (PropertyName !~ \"Included Updated Properties\" and newValue !~ \"LastDirSyncTime\")\r\n    | summarize count() by OperationName, InitiatedByUser, InitiatedByIPAddress, TargetUserPrincipalName, PropertyName, TargetResourceName;\r\nlet AccountMods = AuditLogs \r\n    | where TimeGenerated >= ago(current)\r\n    | where isnotempty(tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName))\r\n    | extend InitiatedByUser = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n    | extend InitiatedByIPAddress = tostring(parse_json(tostring(InitiatedBy.user)).ipAddress)\r\n    | extend ModProps = TargetResources.[0].modifiedProperties\r\n    | extend TargetUserPrincipalName = tolower(tostring(TargetResources.[0].userPrincipalName))\r\n    | extend TargetResourceName = tolower(tostring(TargetResources.[0].displayName))\r\n    | mv-expand ModProps\r\n    | extend PropertyName = tostring(ModProps.displayName), newValue = tostring(parse_json(tostring(ModProps.newValue))[0])\r\n    | where PropertyName !in~ (propertyIgnoreList) and (PropertyName !~ \"Action Client Name\" and newValue !~ \"DirectorySync\") and (PropertyName !~ \"Included Updated Properties\" and newValue !~ \"LastDirSyncTime\")\r\n    | extend ModifiedProps = pack(\"PropertyName\", PropertyName, \"newValue\", newValue, \"Id\", Id, \"CorrelationId\", CorrelationId) \r\n    | summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), Activity = make_bag(ModifiedProps) by Type, InitiatedByUser, InitiatedByIPAddress, TargetUserPrincipalName, Category, OperationName, PropertyName, TargetResourceName;\r\nlet RareAudits = AccountMods\r\n    | join kind= leftanti (\r\n        AuditTrail \r\n        )\r\n        on OperationName, InitiatedByUser, InitiatedByIPAddress;//, TargetUserPrincipalName, PropertyName; //uncomment if you want to see Rare Property changes to a given TargetUserPrincipalName.\r\nRareAudits \r\n| summarize StartTime = min(StartTimeUtc), EndTime = max(EndTimeUtc), make_set(Activity), make_set(PropertyName) by Type, InitiatedByUser, InitiatedByIPAddress, OperationName, TargetUserPrincipalName, TargetResourceName\r\n| extend timestamp = StartTime, AccountCustomEntity = InitiatedByUser, HostCustomEntity = iff(set_PropertyName has_any ('DeviceOSType', 'CloudDeviceOSType'), TargetResourceName, ''), IPCustomEntity = InitiatedByIPAddress\r\n| where AccountCustomEntity in ({UserPrincipalName})\r\n| distinct AccountCustomEntity, OperationName, StartTime\r\n| sort by StartTime desc\r\n| limit 250",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Rare Audit Activity Initiated by User",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "AccountCustomEntity",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Operation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "pending",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "OfficeWorkload",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ],
                            "filter": true
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results107",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results107",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let auditLookback = {TimeRange:grain};\r\n// Setting threshold to 3 as a default, change as needed.  Any operation that has been initiated by a user or app more than 3 times in the past 30 days will be exluded\r\nlet threshold = 3;\r\n// Helper function to extract relevant fields from AuditLog events\r\nlet auditLogEvents = view (startTimeSpan: timespan) {\r\n    AuditLogs\r\n    | where TimeGenerated >= ago(auditLookback)\r\n    | extend ModProps = TargetResources.[0].modifiedProperties\r\n    | extend IpAddress = iff(isnotempty(tostring(parse_json(tostring(InitiatedBy.user)).ipAddress)), \r\n        tostring(parse_json(tostring(InitiatedBy.user)).ipAddress), tostring(parse_json(tostring(InitiatedBy.app)).ipAddress))\r\n    | extend InitiatedBy = iff(isnotempty(tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)), \r\n        tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName), tostring(parse_json(tostring(InitiatedBy.app)).displayName))\r\n    | extend TargetResourceName = tolower(tostring(TargetResources.[0].displayName))\r\n    | mvexpand ModProps\r\n    | extend PropertyName = tostring(ModProps.displayName), newValue = replace('\\\"', \"\", tostring(ModProps.newValue));\r\n};\r\n// Get just the InitiatedBy and CorrleationId so we can look at associated audit activity\r\n// 2 other operations that can be part of malicious activity in this situation are \r\n// \"Add OAuth2PermissionGrant\" and \"Add service principal\", replace the below if you are interested in those as starting points for OperationName\r\nlet HistoricalConsent = auditLogEvents(auditLookback)  \r\n    | where OperationName == \"Consent to application\"\r\n    | summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), OperationCount = count() \r\n        by Type, InitiatedBy, IpAddress, TargetResourceName, Category, OperationName, PropertyName, newValue, CorrelationId, Id\r\n// Remove comment below to only include operations initiated by a user or app that is above the threshold for the last 30 days\r\n//| where OperationCount > threshold\r\n;\r\nlet Correlate = HistoricalConsent \r\n    | summarize by InitiatedBy, CorrelationId;\r\n// 2 other operations that can be part of malicious activity in this situation are \r\n// \"Add OAuth2PermissionGrant\" and \"Add service principal\", replace the below if you changed the starting OperationName above\r\nlet allOtherEvents = auditLogEvents(auditLookback) \r\n    | where OperationName != \"Consent to application\";\r\n// Gather associated activity based on audit activity for \"Consent to application\" and InitiatedBy and CorrleationId\r\nlet CorrelatedEvents = Correlate \r\n    | join allOtherEvents on InitiatedBy, CorrelationId\r\n    | summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated) \r\n        by Type, InitiatedBy, IpAddress, TargetResourceName, Category, OperationName, PropertyName, newValue, CorrelationId, Id\r\n;\r\n// Union the results\r\nlet Results = union isfuzzy=true HistoricalConsent, CorrelatedEvents;\r\n// newValues that are simple semi-colon separated, make those dynamic for easy viewing and Aggregate into the PropertyUpdate set based on CorrelationId and Id(DirectoryId)\r\nResults\r\n| extend newValue = split(newValue, \";\")\r\n| extend PropertyUpdate = pack(PropertyName, newValue, \"Id\", Id)\r\n// Extract scope requested\r\n| extend perms = tostring(parse_json(tostring(PropertyUpdate.[\"ConsentAction.Permissions\"]))[0])\r\n| extend scope = extract('Scope:\\\\s*([^,\\\\]]*)', 1, perms)\r\n// Filter out some common openid, and low privilege request scopes - uncomment line below to filter out where no scope is requested\r\n//| where isnotempty(scope)\r\n| where scope !contains 'openid' and scope !in ('user_impersonation', 'User.Read')\r\n| summarize StartTime = min(StartTimeUtc), EndTime = max(EndTimeUtc), PropertyUpdateSet = make_bag(PropertyUpdate), make_set(scope)\r\n    by InitiatedBy, IpAddress, TargetResourceName, OperationName, CorrelationId\r\n| extend timestamp = StartTime, AccountCustomEntity = InitiatedBy, IPCustomEntity = IpAddress\r\n| where AccountCustomEntity in ({UserPrincipalName})\r\n| summarize count() by AccountCustomEntity\r\n| sort by count_ desc",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Consent to Application Discovery",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Operation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "OfficeWorkload",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ]
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results108",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results108",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let auditLookback = {TimeRange:grain};\r\nlet opName = dynamic([\"Add user\", \"Invite external user\"]);\r\n// Helper function to extract relevant fields from AuditLog events\r\nlet auditLogEvents = view (startTimeSpan: timespan, operation: dynamic) {\r\n    AuditLogs\r\n    | where TimeGenerated >= ago(auditLookback)\r\n    | where OperationName in~ (operation)\r\n    | extend ModProps = iff(TargetResources.[0].modifiedProperties != \"[]\", TargetResources.[0].modifiedProperties, todynamic(\"NoValues\"))\r\n    | extend IpAddress = iff(isnotempty(tostring(parse_json(tostring(InitiatedBy.user)).ipAddress)), \r\n        tostring(parse_json(tostring(InitiatedBy.user)).ipAddress), tostring(parse_json(tostring(InitiatedBy.app)).ipAddress))\r\n    | extend InitiatedByFull = iff(isnotempty(tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)), \r\n        tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName), tostring(parse_json(tostring(InitiatedBy.app)).displayName))\r\n    | extend InitiatedBy = replace(\"_\", \"@\", tostring(split(InitiatedByFull, \"#\")[0]))\r\n    | extend TargetUserPrincipalName = tostring(TargetResources[0].userPrincipalName)\r\n    | extend TargetUserName = replace(\"_\", \"@\", tostring(split(TargetUserPrincipalName, \"#\")[0]))\r\n    | extend TargetResourceName = case(\r\n        isempty(tostring(TargetResources.[0].displayName)), TargetUserPrincipalName,\r\n        isnotempty(tostring(TargetResources.[0].displayName)) and tostring(TargetResources.[0].displayName) startswith \"upn:\", tolower(tostring(TargetResources.[0].displayName)),\r\n        tolower(tostring(TargetResources.[0].displayName))\r\n        )\r\n    | extend TargetUserName = replace(\"_\", \"@\", tostring(split(TargetUserPrincipalName, \"#\")[0]))\r\n    | extend TargetUserName = iff(isempty(TargetUserName), tostring(split(split(TargetResourceName, \",\")[0], \" \")[1]), TargetUserName) \r\n    | mvexpand ModProps\r\n    | extend PropertyName = tostring(ModProps.displayName), newValue = replace('\\\"', '', tostring(ModProps.newValue));\r\n};\r\n// Assigning time for First TargetUserName that was added\r\nlet FirstAdd = auditLogEvents(auditLookback, opName)  \r\n    | project FirstAddTimeUtc = TimeGenerated, Type, FirstInitiatedBy = InitiatedBy, IpAddress, FirstTargetUserName = TargetUserName, FirstTargetResourceName = TargetResourceName, \r\n        FirstOperationName = OperationName, FirstPropertyName = PropertyName, FirstnewValue = newValue, FirstCorrelationId = CorrelationId, FirstId = Id;\r\n// Assigning time for second TargetUserName that was added, which will allow us to see if a first TargetUserName added in is the Initiated by on the second in the later join\r\nlet SecondAdd = auditLogEvents(auditLookback, opName)  \r\n    | project SecondAddTimeUtc = TimeGenerated, Type, SecondInitiatedBy = InitiatedBy, IpAddress, SecondTargetUserName = TargetUserName, SecondTargetResourceName = TargetResourceName, \r\n        SecondOperationName = OperationName, SecondPropertyName = PropertyName, SecondnewValue = newValue, SecondCorrelationId = CorrelationId, SecondId = Id;\r\n//  Joining the FirstAdd with SecondAdd where the FirstAdd TargetUserName value matches the SecondAdd InitiatedBy.  This shows the new user adding a user.\r\nlet NewUserAddsUser = FirstAdd\r\n    | join SecondAdd on $left.FirstTargetUserName == $right.SecondInitiatedBy\r\n    // we only want items where the FirstAddTimeUtc is before the SecondAddTimeUtc\r\n    | where FirstAddTimeUtc < SecondAddTimeUtc\r\n;\r\n// Build out some of the properties for context\r\nNewUserAddsUser\r\n| extend FirstnewValue = split(FirstnewValue, \";\"), SecondnewValue = split(SecondnewValue, \";\")\r\n| extend PropertyUpdate = pack(FirstPropertyName, FirstnewValue, SecondPropertyName, SecondnewValue, \"FirstCorrelationId\", FirstCorrelationId, \"FirstId\", FirstId, \"SecondCorrelationId\", SecondCorrelationId, \"SecondId\", SecondId)\r\n| summarize PropertyUpdateSet = make_bag(PropertyUpdate)\r\n    by FirstAddTimeUtc, FirstInitiatedBy, FirstTargetUserName, SecondAddTimeUtc, SecondInitiatedBy, SecondTargetUserName, \r\n    IpAddress, FirstTargetResourceName, SecondTargetResourceName, FirstOperationName, SecondOperationName\r\n| extend timestamp = FirstAddTimeUtc, AccountCustomEntity = FirstInitiatedBy, HostCustomEntity = FirstTargetResourceName, IPCustomEntity = IpAddress\r\n| where AccountCustomEntity in ({UserPrincipalName})\r\n| summarize count() by AccountCustomEntity\r\n| sort by count_ desc",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Granted Access and Grants Others Access",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Operation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "OfficeWorkload",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ]
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results109",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results109",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "// Provide customLimit value with default above domainLimit value so it will not block unless changed\r\nlet customLimit = 11;\r\nlet domainLimit = 10;\r\nlet domainLookback = union isfuzzy=true\r\n        (AuditLogs\r\n        | extend UserPrincipalName = tolower(tostring(TargetResources.[0].userPrincipalName))\r\n        // parse out AuditLog values for various locations where UPN could be\r\n        | extend UserPrincipalName = iff(isnotempty(UserPrincipalName),\r\n            UserPrincipalName, \r\n            iif((tostring(InitiatedBy.user.userPrincipalName) == 'unknown'), \r\n            extract(\"Email: ([a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\\\.[a-zA-Z0-9-.]+)\", 1, tostring(parse_json(TargetResources)[0].displayName)), \r\n            InitiatedBy.user.userPrincipalName))\r\n        | where UserPrincipalName has \"@\" or UserPrincipalName startswith \"NT AUTHORITY\"\r\n        | extend RareDomain = toupper(tostring(split(UserPrincipalName, \"@\")[-1]))\r\n        | where isnotempty(RareDomain) \r\n        | summarize RareDomainCount = count() by Type, RareDomain\r\n        | where RareDomainCount <= domainLimit\r\n        | extend AccountCustomEntity = UserPrincipalName\r\n        // remove comment from below if you would like to have a lower limit for RareDomainCount specific to AuditLog\r\n        //| where RareDomainCount <= customLimit\r\n        ),\r\n        (OfficeActivity\r\n        | extend UserPrincipalName = tolower(UserId)\r\n        | where UserPrincipalName has \"@\" or UserPrincipalName startswith \"NT AUTHORITY\"\r\n        | extend RareDomain = toupper(tostring(split(UserPrincipalName, \"@\")[-1]))\r\n        | summarize RareDomainCount = count() by Type, RareDomain\r\n        | where RareDomainCount <= domainLimit\r\n        | extend AccountCustomEntity = UserPrincipalName\r\n        // remove comment from below if you would like to have a lower limit for RareDomainCount specific to OfficeActivity\r\n        //| where RareDomainCount <= customLimit\r\n        ),\r\n        (SigninLogs\r\n        | where UserPrincipalName has \"@\" or UserPrincipalName startswith \"NT AUTHORITY\"\r\n        | extend RareDomain = toupper(tostring(split(UserPrincipalName, \"@\")[-1]))\r\n        | summarize RareDomainCount = count() by Type, RareDomain\r\n        | where RareDomainCount <= domainLimit\r\n        // remove comment from below if you would like to have a lower limit for RareDomainCount specific to SigninLogs\r\n        //| where RareDomainCount <= customLimit\r\n        );\r\nlet AuditLogsRef = domainLookback\r\n    | join (\r\n        AuditLogs\r\n        | extend UserPrincipalName = tolower(tostring(TargetResources.[0].userPrincipalName))\r\n        | extend UserPrincipalName = iff(isempty(UserPrincipalName), tostring(InitiatedBy.user.userPrincipalName), UserPrincipalName)\r\n        | extend RareDomain = toupper(tostring(split(UserPrincipalName, \"@\")[-1]))\r\n        | where isnotempty(RareDomain) \r\n        | summarize UPNRefCount = count() by TimeGenerated, Type, RareDomain, UserPrincipalName, OperationName, Category, Result\r\n        | extend AccountCustomEntity = UserPrincipalName\r\n        )\r\n        on Type, RareDomain;\r\nlet OfficeActivityRef = domainLookback\r\n    | join (\r\n        OfficeActivity\r\n        | extend UserPrincipalName = tolower(UserId)\r\n        | where UserPrincipalName has \"@\" or UserPrincipalName startswith \"NT AUTHORITY\"\r\n        | extend RareDomain = toupper(tostring(split(UserPrincipalName, \"@\")[-1]))\r\n        | summarize UPNRefCount = count() by TimeGenerated, Type, RareDomain, UserPrincipalName, OperationName = Operation, Category = OfficeWorkload, Result = ResultStatus\r\n        | extend AccountCustomEntity = UserPrincipalName\r\n        )\r\n        on Type, RareDomain;\r\nlet SigninLogsRef = domainLookback\r\n    | join (\r\n        SigninLogs\r\n        | extend UserPrincipalName = tolower(UserId)\r\n        | where UserPrincipalName has \"@\" or UserPrincipalName startswith \"NT AUTHORITY\"\r\n        | extend RareDomain = toupper(tostring(split(UserPrincipalName, \"@\")[-1]))\r\n        | summarize UPNRefCount = count() by TimeGenerated, Type, RareDomain, UserPrincipalName, OperationName, Category = AppDisplayName, Result = ResultType\r\n        | extend AccountCustomEntity = UserPrincipalName\r\n        )\r\n        on Type, RareDomain;\r\nlet Results = union isfuzzy=true\r\n        AuditLogsRef, OfficeActivityRef, SigninLogsRef;\r\nResults\r\n| project TimeGenerated, Type, RareDomain, UserPrincipalName, OperationName, Category, Result, UPNRefCount \r\n| order by TimeGenerated asc \r\n| extend timestamp = TimeGenerated, AccountCustomEntity = UserPrincipalName\r\n| where AccountCustomEntity in ({UserPrincipalName})\r\n| summarize count() by AccountCustomEntity\r\n| sort by count_ desc",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Rare Domains Observed in User Cloud Logs",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Operation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "OfficeWorkload",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ]
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results110",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results110",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let auditLookback = {TimeRange:grain};\r\nlet opName = dynamic([\"Add user\", \"Invite external user\"]);\r\n// Helper function to extract relevant fields from AuditLog events\r\nlet auditLogEvents = view (startTimeSpan: timespan, operation: dynamic) {\r\n    AuditLogs\r\n    | where TimeGenerated >= ago(auditLookback)\r\n    | where OperationName in~ (operation)\r\n    | extend UserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\r\n    | where UserPrincipalName in ({UserPrincipalName})\r\n    | extend ModProps = iff(TargetResources.[0].modifiedProperties != \"[]\", TargetResources.[0].modifiedProperties, todynamic(\"NoValues\"))\r\n    | extend IpAddress = iff(isnotempty(tostring(parse_json(tostring(InitiatedBy.user)).ipAddress)), \r\n        tostring(parse_json(tostring(InitiatedBy.user)).ipAddress), tostring(parse_json(tostring(InitiatedBy.app)).ipAddress))\r\n    | extend InitiatedByFull = iff(isnotempty(tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)), \r\n        tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName), tostring(parse_json(tostring(InitiatedBy.app)).displayName))\r\n    | extend InitiatedBy = replace(\"_\", \"@\", tostring(split(InitiatedByFull, \"#\")[0]))\r\n    | extend TargetUserPrincipalName = tostring(TargetResources[0].userPrincipalName)\r\n    | extend TargetUserName = replace(\"_\", \"@\", tostring(split(TargetUserPrincipalName, \"#\")[0]))\r\n    | extend TargetResourceName = case(\r\n        isempty(tostring(TargetResources.[0].displayName)), TargetUserPrincipalName,\r\n        isnotempty(tostring(TargetResources.[0].displayName)) and tostring(TargetResources.[0].displayName) startswith \"upn:\", tolower(tostring(TargetResources.[0].displayName)),\r\n        tolower(tostring(TargetResources.[0].displayName))\r\n        )\r\n    | extend TargetUserName = replace(\"_\", \"@\", tostring(split(TargetUserPrincipalName, \"#\")[0]))\r\n    | extend TargetUserName = iff(isempty(TargetUserName), tostring(split(split(TargetResourceName, \",\")[0], \" \")[1]), TargetUserName) \r\n    | mvexpand ModProps\r\n    | extend PropertyName = tostring(ModProps.displayName), newValue = replace(\"\\\"\", \"\", tostring(ModProps.newValue));\r\n};\r\nlet UserAdd = auditLogEvents(auditLookback, opName) \r\n    | project Action = \"User Added\", TimeGenerated, Type, InitiatedBy_Caller = InitiatedBy, IpAddress, TargetUserName = tolower(TargetUserName), OperationName, PropertyName_ResourceId = PropertyName, Value = newValue;\r\n// Get the simple list of creatd users so we can use later to get just the associated resource creation events\r\nlet SimpleUserList = UserAdd\r\n    | project TimeGenerated, TargetUserName;\r\nlet ResourceCreation = AzureActivity\r\n    | where TimeGenerated >= ago(auditLookback)\r\n    // We look for any Operation that created and then succeeded where ActivityStatus has a value so that we can provide context\r\n    | where OperationName has \"Create\"\r\n    | where ActivityStatus has \"Succeeded\"\r\n    | project Action = \"Resource Created\", ResourceCreationTimeGenerated = TimeGenerated, Type, InitiatedBy_Caller = tolower(Caller), IpAddress = CallerIpAddress, OperationName, Value = OperationNameValue, PropertyName_ResourceId = ResourceId;\r\n// Get just the Resources added by the new user\r\nlet ResourceMatch = SimpleUserList\r\n    | join kind= innerunique (\r\n        ResourceCreation\r\n        )\r\n        on $left.TargetUserName == $right.InitiatedBy_Caller\r\n    // where the resource creation is after (greater than) the user addition\r\n    | where TimeGenerated < ResourceCreationTimeGenerated\r\n    | project-away TimeGenerated \r\n    | project-rename TimeGenerated = ResourceCreationTimeGenerated\r\n;\r\nlet SimpleResourceMatch = ResourceMatch\r\n    | project InitiatedBy_Caller;\r\n// Get only resource add, remove, change by the new user\r\nlet UserAddWithResource = SimpleResourceMatch\r\n    | join kind= rightsemi (\r\n        UserAdd \r\n        )\r\n        on $left.InitiatedBy_Caller == $right.TargetUserName;\r\n// union the user addition events and resource addition events and provide common column names, additionally pack the value, property and resource info to reduce result set.\r\nUserAddWithResource \r\n| union isfuzzy=true ResourceMatch\r\n| extend PropertySet = pack(\"Value\", Value, \"PropertyName_ResourceId\", PropertyName_ResourceId) \r\n| summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), makeset(PropertySet)  by Action, Type, TargetUserName, InitiatedBy_Caller, IpAddress, OperationName\r\n| order by StartTimeUtc asc \r\n| extend timestamp = StartTimeUtc, AccountCustomEntity = TargetUserName, IPCustomEntity = IpAddress\r\n| summarize count() by AccountCustomEntity\r\n| sort by count_ desc",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Granted Access and Creates Resources",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Operation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "OfficeWorkload",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ]
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results111",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results111",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "(union isfuzzy=true\r\n(\r\nAuditLogs\r\n| extend UserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\r\n| where OperationName =~ \"Set federation settings on domain\"\r\n//| where Result =~ \"success\"   // commenting out, as it may be interesting to capture failed attempts\r\n| mv-expand TargetResources\r\n| extend modifiedProperties = parse_json(TargetResources).modifiedProperties\r\n| mv-expand modifiedProperties\r\n| extend targetDisplayName = tostring(parse_json(modifiedProperties).displayName)\r\n| mv-expand AdditionalDetails\r\n),\r\n(\r\nAuditLogs\r\n| where OperationName =~ \"Set domain authentication\"\r\n//| where Result =~ \"success\"   // commenting out, as it may be interesting to capture failed attempts\r\n| mv-expand TargetResources\r\n| extend modifiedProperties = parse_json(TargetResources).modifiedProperties\r\n| mv-expand modifiedProperties\r\n| extend targetDisplayName = tostring(parse_json(modifiedProperties).displayName), NewDomainValue=tostring(parse_json(modifiedProperties).newValue)\r\n| where NewDomainValue has \"Federated\"\r\n))\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| summarize count() by UserPrincipalName\r\n| sort by count_ desc",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Modified Domain Federation Trust Settings",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserId",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Operation",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "OfficeWorkload",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ]
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results112",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results112",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "TAB",
                    "comparison": "isEqualTo",
                    "value": "AL"
                  },
                  "name": "Audit Logs Group"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "This section is bound by the above parameters for Subscription, Workspace, TimeRange, and User. Panels are dynamically displayed meaning numerous queries are executed and only panels returning data are displayed. For more information, see üí°[Modern Risk Pain Points](https://docs.microsoft.com/microsoft-365/compliance/insider-risk-management#modern-risk-pain-points) & üí°[Hunt for Threats with Azure Sentinel](https://docs.microsoft.com/azure/sentinel/hunting)\r\n\r\n| <strong> User Package Queries </strong> | \r\n|:--|\r\n| User Security Alerts over Time|\r\n| User Security Alerts by MITRE ATT&CK Tactics |\r\n| User MITRE ATT&CK Tactics Proportions |\r\n| User MITRE ATT&CK Tactics over Time |\r\n| User Security Alerts Count by Detecting Product Name |\r\n| User Security Alerts: Go-To > |\r\n| User Security Incidents: Go to >|\r\n| User Detected Techniques |\r\n| User Security Incidents |\r\n| User Security Incident Details |\r\n| User Security Incidents by Severity |\r\n| User Security Incidents over Time |",
                          "style": "info"
                        },
                        "conditionalVisibility": {
                          "parameterName": "Help",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "SI OV"
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "7afa304d-b448-4d6c-8c54-69e51a7249a9",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results113",
                              "type": 1,
                              "query": "SecurityIncident\r\n    | summarize hint.strategy = shuffle arg_max(LastModifiedTime, *) by IncidentNumber\r\n    | where Status == \"New\" or Status == \"Active\"\r\n    | mv-expand AlertIds\r\n    | extend AlertId = tostring(AlertIds)\r\n    | join kind= innerunique ( \r\n        SecurityAlert \r\n        )\r\n        on $left.AlertId == $right.SystemAlertId\r\n    | summarize hint.strategy = shuffle arg_max(TimeGenerated, *), NumberOfUpdates = count() by SystemAlertId\r\n    | mv-expand todynamic(Entities)\r\n    | where Entities[\"Type\"] =~ \"account\"\r\n    | extend Name = tostring(tolower(Entities[\"Name\"])), NTDomain = tostring(Entities[\"NTDomain\"]), UPNSuffix = tostring(Entities[\"UPNSuffix\"]), AadUserId = tostring(Entities[\"AadUserId\"]), AadTenantId = tostring(Entities[\"AadTenantId\"]), \r\n        Sid = tostring(Entities[\"Sid\"]), IsDomainJoined = tobool(Entities[\"IsDomainJoined\"]), Host = tostring(Entities[\"Host\"])\r\n    | extend UPN = iff(Name != \"\" and UPNSuffix != \"\", strcat(Name, \"@\", UPNSuffix), \"\")\r\n| extend Href_ = tostring(parse_json(ExtendedLinks)[0].Href)\r\n| where UPN <> \"\"\r\n| project UPN, AlertName, Severity, ProductName, Tactics, Sid, Href_, TimeGenerated\r\n| where UPN in ({UserPrincipalName})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "50",
                        "name": "Results113",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "9b6b6d2b-a6d9-46c6-882d-722c0c9d455f",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results114",
                              "type": 1,
                              "query": "SecurityIncident\r\n    | summarize hint.strategy = shuffle arg_max(LastModifiedTime, *) by IncidentNumber\r\n    | mv-expand AlertIds\r\n    | extend AlertId = tostring(AlertIds)\r\n    | join kind= innerunique ( \r\n        SecurityAlert \r\n        )\r\n        on $left.AlertId == $right.SystemAlertId\r\n    | summarize hint.strategy = shuffle arg_max(TimeGenerated, *), NumberOfUpdates = count() by SystemAlertId\r\n    | mv-expand todynamic(Entities)\r\n    | where Entities[\"Type\"] =~ \"account\"\r\n    | extend Name = tostring(tolower(Entities[\"Name\"])), NTDomain = tostring(Entities[\"NTDomain\"]), UPNSuffix = tostring(Entities[\"UPNSuffix\"]), AadUserId = tostring(Entities[\"AadUserId\"]), AadTenantId = tostring(Entities[\"AadTenantId\"]), \r\n        Sid = tostring(Entities[\"Sid\"]), IsDomainJoined = tobool(Entities[\"IsDomainJoined\"]), Host = tostring(Entities[\"Host\"])\r\n    | extend UPN = iff(Name != \"\" and UPNSuffix != \"\", strcat(Name, \"@\", UPNSuffix), \"\")\r\n| extend Href_ = tostring(parse_json(ExtendedLinks)[0].Href)\r\n| where UPN <> \"\"\r\n| where UPN in ({UserPrincipalName})\r\n| distinct UPN, AlertName, Severity, ProductName, AlertLink, TimeGenerated\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "5",
                        "name": "Results114",
                        "styleSettings": {
                          "maxWidth": "5"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "61bbb62e-3324-4484-ad32-511868f2acdb",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results153",
                              "type": 1,
                              "query": "SecurityIncident\r\n    | summarize hint.strategy = shuffle arg_max(LastModifiedTime, *) by IncidentNumber\r\n    | where Status == \"New\" or Status == \"Active\"\r\n    | mv-expand AlertIds\r\n    | extend AlertId = tostring(AlertIds)\r\n    | join kind= innerunique ( \r\n        SecurityAlert \r\n        )\r\n        on $left.AlertId == $right.SystemAlertId\r\n    | summarize hint.strategy = shuffle arg_max(TimeGenerated, *), NumberOfUpdates = count() by SystemAlertId\r\n    | mv-expand todynamic(Entities)\r\n    | where Entities[\"Type\"] =~ \"account\"\r\n    | extend Name = tostring(tolower(Entities[\"Name\"])), NTDomain = tostring(Entities[\"NTDomain\"]), UPNSuffix = tostring(Entities[\"UPNSuffix\"]), AadUserId = tostring(Entities[\"AadUserId\"]), AadTenantId = tostring(Entities[\"AadTenantId\"]), \r\n        Sid = tostring(Entities[\"Sid\"]), IsDomainJoined = tobool(Entities[\"IsDomainJoined\"]), Host = tostring(Entities[\"Host\"])\r\n    | extend UPN = iff(Name != \"\" and UPNSuffix != \"\", strcat(Name, \"@\", UPNSuffix), \"\")\r\n| extend Href_ = tostring(parse_json(ExtendedLinks)[0].Href)\r\n| where UPN <> \"\"\r\n| where UPN in ({UserPrincipalName})\r\n| extend Workspace = tostring(parse_json(tostring(parse_json(ExtendedProperties).[\"Data Sources\"]))[0])\r\n| extend IncidentURL = strcat(\"https://portal.azure.com/#asset/Microsoft_Azure_Security_Insights/Incident/subscriptions/\",WorkspaceSubscriptionId,\"/resourceGroups/\",WorkspaceResourceGroup,\"/providers/Microsoft.OperationalInsights/workspaces/\",Workspace,\"/providers/Microsoft.SecurityInsights/Incidents/\",IncidentName)\r\n| where IncidentURL !contains \"//resourceGroups\"\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "45",
                        "name": "Results153",
                        "styleSettings": {
                          "maxWidth": "45"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SecurityIncident\r\n    | summarize hint.strategy = shuffle arg_max(LastModifiedTime, *) by IncidentNumber\r\n    | mv-expand AlertIds\r\n    | extend AlertId = tostring(AlertIds)\r\n    | join kind= innerunique ( \r\n        SecurityAlert \r\n        )\r\n        on $left.AlertId == $right.SystemAlertId\r\n    | summarize hint.strategy = shuffle arg_max(TimeGenerated, *), NumberOfUpdates = count() by SystemAlertId\r\n    | mv-expand todynamic(Entities)\r\n    | where Entities[\"Type\"] =~ \"account\"\r\n    | extend Name = tostring(tolower(Entities[\"Name\"])), NTDomain = tostring(Entities[\"NTDomain\"]), UPNSuffix = tostring(Entities[\"UPNSuffix\"]), AadUserId = tostring(Entities[\"AadUserId\"]), AadTenantId = tostring(Entities[\"AadTenantId\"]), \r\n        Sid = tostring(Entities[\"Sid\"]), IsDomainJoined = tobool(Entities[\"IsDomainJoined\"]), Host = tostring(Entities[\"Host\"])\r\n    | extend UPN = iff(Name != \"\" and UPNSuffix != \"\", strcat(Name, \"@\", UPNSuffix), \"\")\r\n| extend Href_ = tostring(parse_json(ExtendedLinks)[0].Href)\r\n| where UPN <> \"\"\r\n| project UPN, AlertName, Severity, ProductName, Tactics, Sid, Href_, TimeGenerated\r\n| where UPN in ({UserPrincipalName})\r\n| project UPN, AlertName, Severity, ProductName, TimeGenerated\r\n| make-series count() default=0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step 1d by AlertName\r\n| render timechart\r\n\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Security Alerts by Time",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ]
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "Results113",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results113"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SecurityIncident\r\n    | summarize hint.strategy = shuffle arg_max(LastModifiedTime, *) by IncidentNumber\r\n    | mv-expand AlertIds\r\n    | extend AlertId = tostring(AlertIds)\r\n    | join kind= innerunique ( \r\n        SecurityAlert \r\n        )\r\n        on $left.AlertId == $right.SystemAlertId\r\n    | summarize hint.strategy = shuffle arg_max(TimeGenerated, *), NumberOfUpdates = count() by SystemAlertId\r\n    | mv-expand todynamic(Entities)\r\n    | where Entities[\"Type\"] =~ \"account\"\r\n    | extend Name = tostring(tolower(Entities[\"Name\"])), NTDomain = tostring(Entities[\"NTDomain\"]), UPNSuffix = tostring(Entities[\"UPNSuffix\"]), AadUserId = tostring(Entities[\"AadUserId\"]), AadTenantId = tostring(Entities[\"AadTenantId\"]), \r\n        Sid = tostring(Entities[\"Sid\"]), IsDomainJoined = tobool(Entities[\"IsDomainJoined\"]), Host = tostring(Entities[\"Host\"])\r\n    | extend UPN = iff(Name != \"\" and UPNSuffix != \"\", strcat(Name, \"@\", UPNSuffix), \"\")\r\n| extend Href_ = tostring(parse_json(ExtendedLinks)[0].Href)\r\n| where UPN <> \"\"\r\n| project UPN, AlertName, Severity, ProductName, Tactics, Sid, Href_, TimeGenerated\r\n| where UPN in ({UserPrincipalName})\r\n| summarize count() by Tactics\r\n| sort by count_ desc\r\n\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Security Alerts by MITRE ATT&CK Tactics",
                          "timeContext": {
                            "durationMs": 604800000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "visualization": "tiles",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ],
                            "filter": true
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "Tactics",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "count_",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "yellowOrangeRed"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results113",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results113b",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SecurityIncident\r\n    | summarize hint.strategy = shuffle arg_max(LastModifiedTime, *) by IncidentNumber\r\n    | mv-expand AlertIds\r\n    | extend AlertId = tostring(AlertIds)\r\n    | join kind= innerunique ( \r\n        SecurityAlert \r\n        )\r\n        on $left.AlertId == $right.SystemAlertId\r\n    | summarize hint.strategy = shuffle arg_max(TimeGenerated, *), NumberOfUpdates = count() by SystemAlertId\r\n    | mv-expand todynamic(Entities)\r\n    | where Entities[\"Type\"] =~ \"account\"\r\n    | extend Name = tostring(tolower(Entities[\"Name\"])), NTDomain = tostring(Entities[\"NTDomain\"]), UPNSuffix = tostring(Entities[\"UPNSuffix\"]), AadUserId = tostring(Entities[\"AadUserId\"]), AadTenantId = tostring(Entities[\"AadTenantId\"]), \r\n        Sid = tostring(Entities[\"Sid\"]), IsDomainJoined = tobool(Entities[\"IsDomainJoined\"]), Host = tostring(Entities[\"Host\"])\r\n    | extend UPN = iff(Name != \"\" and UPNSuffix != \"\", strcat(Name, \"@\", UPNSuffix), \"\")\r\n| extend Href_ = tostring(parse_json(ExtendedLinks)[0].Href)\r\n| where UPN <> \"\"\r\n| project UPN, AlertName, Severity, ProductName, Tactics, Sid, Href_, TimeGenerated\r\n| where UPN in ({UserPrincipalName})\r\n| summarize count() by Tactics\r\n| render piechart\r\n\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User MITRE ATT&CK Tactics Proportions",
                          "timeContext": {
                            "durationMs": 604800000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ]
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "Tactics",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "count_",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "yellowOrangeRed"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results113",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results113c",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SecurityIncident\r\n    | summarize hint.strategy = shuffle arg_max(LastModifiedTime, *) by IncidentNumber\r\n    | where Status == \"New\" or Status == \"Active\"\r\n    | mv-expand AlertIds\r\n    | extend AlertId = tostring(AlertIds)\r\n    | join kind= innerunique ( \r\n        SecurityAlert \r\n        )\r\n        on $left.AlertId == $right.SystemAlertId\r\n    | summarize hint.strategy = shuffle arg_max(TimeGenerated, *), NumberOfUpdates = count() by SystemAlertId\r\n    | mv-expand todynamic(Entities)\r\n    | where Entities[\"Type\"] =~ \"account\"\r\n    | extend Name = tostring(tolower(Entities[\"Name\"])), NTDomain = tostring(Entities[\"NTDomain\"]), UPNSuffix = tostring(Entities[\"UPNSuffix\"]), AadUserId = tostring(Entities[\"AadUserId\"]), AadTenantId = tostring(Entities[\"AadTenantId\"]), \r\n        Sid = tostring(Entities[\"Sid\"]), IsDomainJoined = tobool(Entities[\"IsDomainJoined\"]), Host = tostring(Entities[\"Host\"])\r\n    | extend UPN = iff(Name != \"\" and UPNSuffix != \"\", strcat(Name, \"@\", UPNSuffix), \"\")\r\n| extend Href_ = tostring(parse_json(ExtendedLinks)[0].Href)\r\n| where UPN <> \"\"\r\n| project UPN, AlertName, Severity, ProductName, Tactics, Sid, Href_, TimeGenerated\r\n| where UPN in ({UserPrincipalName})\r\n| make-series count() default=0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step 1d by Tactics\r\n| render timechart\r\n\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User MITRE ATT&CK Tactics over Time",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ]
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "Tactics",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "count_",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "yellowOrangeRed"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results113",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results113d",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SecurityIncident\r\n    | summarize hint.strategy = shuffle arg_max(LastModifiedTime, *) by IncidentNumber\r\n    | where Status == \"New\" or Status == \"Active\"\r\n    | mv-expand AlertIds\r\n    | extend AlertId = tostring(AlertIds)\r\n    | join kind= innerunique ( \r\n        SecurityAlert \r\n        )\r\n        on $left.AlertId == $right.SystemAlertId\r\n    | summarize hint.strategy = shuffle arg_max(TimeGenerated, *), NumberOfUpdates = count() by SystemAlertId\r\n    | mv-expand todynamic(Entities)\r\n    | where Entities[\"Type\"] =~ \"account\"\r\n    | extend Name = tostring(tolower(Entities[\"Name\"])), NTDomain = tostring(Entities[\"NTDomain\"]), UPNSuffix = tostring(Entities[\"UPNSuffix\"]), AadUserId = tostring(Entities[\"AadUserId\"]), AadTenantId = tostring(Entities[\"AadTenantId\"]), \r\n        Sid = tostring(Entities[\"Sid\"]), IsDomainJoined = tobool(Entities[\"IsDomainJoined\"]), Host = tostring(Entities[\"Host\"])\r\n    | extend UPN = iff(Name != \"\" and UPNSuffix != \"\", strcat(Name, \"@\", UPNSuffix), \"\")\r\n| extend Href_ = tostring(parse_json(ExtendedLinks)[0].Href)\r\n| where UPN <> \"\"\r\n| project UPN, AlertName, Severity, ProductName, Tactics, Sid, Href_, TimeGenerated\r\n| where UPN in ({UserPrincipalName})\r\n| summarize count() by ProductName\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Security Alerts Count by Detecting Product Name",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "ProductName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "uninitialized",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true,
                            "sortBy": [
                              {
                                "itemKey": "$gen_heatmap_count__1",
                                "sortOrder": 2
                              }
                            ]
                          },
                          "sortBy": [
                            {
                              "itemKey": "$gen_heatmap_count__1",
                              "sortOrder": 2
                            }
                          ],
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results113",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results113e",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SecurityIncident\r\n    | summarize hint.strategy = shuffle arg_max(LastModifiedTime, *) by IncidentNumber\r\n    | mv-expand AlertIds\r\n    | extend AlertId = tostring(AlertIds)\r\n    | join kind= innerunique ( \r\n        SecurityAlert \r\n        )\r\n        on $left.AlertId == $right.SystemAlertId\r\n    | summarize hint.strategy = shuffle arg_max(TimeGenerated, *), NumberOfUpdates = count() by SystemAlertId\r\n    | mv-expand todynamic(Entities)\r\n    | where Entities[\"Type\"] =~ \"account\"\r\n    | extend Name = tostring(tolower(Entities[\"Name\"])), NTDomain = tostring(Entities[\"NTDomain\"]), UPNSuffix = tostring(Entities[\"UPNSuffix\"]), AadUserId = tostring(Entities[\"AadUserId\"]), AadTenantId = tostring(Entities[\"AadTenantId\"]), \r\n        Sid = tostring(Entities[\"Sid\"]), IsDomainJoined = tobool(Entities[\"IsDomainJoined\"]), Host = tostring(Entities[\"Host\"])\r\n    | extend UPN = iff(Name != \"\" and UPNSuffix != \"\", strcat(Name, \"@\", UPNSuffix), \"\")\r\n| extend Href_ = tostring(parse_json(ExtendedLinks)[0].Href)\r\n| where UPN <> \"\"\r\n| where UPN in ({UserPrincipalName})\r\n| distinct UPN, AlertName, Severity, ProductName, AlertLink, TimeGenerated\r\n| sort by TimeGenerated desc\r\n| limit 250\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Security Alerts: Go-To >",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UPN",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "AlertName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "3",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Severity",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "High",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Medium",
                                      "representation": "orange",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Low",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "ProductName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "uninitialized",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "AlertLink",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Alert >"
                                }
                              },
                              {
                                "columnMatch": "IncidentUrl",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Incident >"
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "Results113",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results113f"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SecurityIncident\r\n    | summarize hint.strategy = shuffle arg_max(LastModifiedTime, *) by IncidentNumber\r\n    | mv-expand AlertIds\r\n    | extend AlertId = tostring(AlertIds)\r\n    | join kind= innerunique ( \r\n        SecurityAlert \r\n        )\r\n        on $left.AlertId == $right.SystemAlertId\r\n    | summarize hint.strategy = shuffle arg_max(TimeGenerated, *), NumberOfUpdates = count() by SystemAlertId\r\n    | mv-expand todynamic(Entities)\r\n    | where Entities[\"Type\"] =~ \"account\"\r\n    | extend Name = tostring(tolower(Entities[\"Name\"])), NTDomain = tostring(Entities[\"NTDomain\"]), UPNSuffix = tostring(Entities[\"UPNSuffix\"]), AadUserId = tostring(Entities[\"AadUserId\"]), AadTenantId = tostring(Entities[\"AadTenantId\"]), \r\n        Sid = tostring(Entities[\"Sid\"]), IsDomainJoined = tobool(Entities[\"IsDomainJoined\"]), Host = tostring(Entities[\"Host\"])\r\n    | extend UPN = iff(Name != \"\" and UPNSuffix != \"\", strcat(Name, \"@\", UPNSuffix), \"\")\r\n| extend Href_ = tostring(parse_json(ExtendedLinks)[0].Href)\r\n| where UPN <> \"\"\r\n| where UPN in ({UserPrincipalName})\r\n| extend Workspace = tostring(parse_json(tostring(parse_json(ExtendedProperties).[\"Data Sources\"]))[0])\r\n| extend IncidentURL = strcat(\"https://portal.azure.com/#asset/Microsoft_Azure_Security_Insights/Incident/subscriptions/\",WorkspaceSubscriptionId,\"/resourceGroups/\",WorkspaceResourceGroup,\"/providers/Microsoft.OperationalInsights/workspaces/\",Workspace,\"/providers/Microsoft.SecurityInsights/Incidents/\",IncidentName)\r\n| where IncidentURL !contains \"//resourceGroups\"\r\n| distinct UPN, IncidentNumber, Title, Severity, ProductName, IncidentURL, TimeGenerated\r\n| sort by TimeGenerated desc\r\n| limit 250\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Security Incidents: Go-To >",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UPN",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Title",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "error",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Severity",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "High",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Medium",
                                      "representation": "orange",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Low",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "ProductName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "uninitialized",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "IncidentURL",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Incident >"
                                }
                              },
                              {
                                "columnMatch": "AlertName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "3",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "AlertLink",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": ""
                                }
                              },
                              {
                                "columnMatch": "IncidentUrl",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "Url",
                                  "linkLabel": "Go to Incident >"
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true,
                            "sortBy": [
                              {
                                "itemKey": "IncidentNumber",
                                "sortOrder": 2
                              }
                            ]
                          },
                          "sortBy": [
                            {
                              "itemKey": "IncidentNumber",
                              "sortOrder": 2
                            }
                          ],
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "Results153",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results153"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SecurityIncident\r\n    | summarize hint.strategy = shuffle arg_max(LastModifiedTime, *) by IncidentNumber\r\n    | mv-expand AlertIds\r\n    | extend AlertId = tostring(AlertIds)\r\n    | join kind= innerunique ( \r\n        SecurityAlert \r\n        )\r\n        on $left.AlertId == $right.SystemAlertId\r\n    | summarize hint.strategy = shuffle arg_max(TimeGenerated, *), NumberOfUpdates = count() by SystemAlertId\r\n    | mv-expand todynamic(Entities)\r\n    | where Entities[\"Type\"] =~ \"account\"\r\n    | extend Name = tostring(tolower(Entities[\"Name\"])), NTDomain = tostring(Entities[\"NTDomain\"]), UPNSuffix = tostring(Entities[\"UPNSuffix\"]), AadUserId = tostring(Entities[\"AadUserId\"]), AadTenantId = tostring(Entities[\"AadTenantId\"]), \r\n        Sid = tostring(Entities[\"Sid\"]), IsDomainJoined = tobool(Entities[\"IsDomainJoined\"]), Host = tostring(Entities[\"Host\"])\r\n    | extend UPN = iff(Name != \"\" and UPNSuffix != \"\", strcat(Name, \"@\", UPNSuffix), \"\")\r\n| extend Href_ = tostring(parse_json(ExtendedLinks)[0].Href)\r\n| where UPN <> \"\"\r\n| project UPN, AlertName, Severity, ProductName, Tactics, Sid, Href_, TimeGenerated\r\n| where UPN in ({UserPrincipalName})\r\n| summarize count() by UPN, Severity, AlertName, ProductName\r\n| sort by count_ desc\r\n| limit 250\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Detected Techniques",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UPN",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Severity",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "High",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Medium",
                                      "representation": "orange",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Low",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "AlertName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "3",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "ProductName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "uninitialized",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "yellowOrangeRed"
                                }
                              },
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "sortBy": [],
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "SigninStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results113",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results113h",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SecurityIncident\r\n    | summarize hint.strategy = shuffle arg_max(LastModifiedTime, *) by IncidentNumber\r\n    | mv-expand AlertIds\r\n    | extend AlertId = tostring(AlertIds)\r\n    | join kind= innerunique ( \r\n        SecurityAlert \r\n        )\r\n        on $left.AlertId == $right.SystemAlertId\r\n    | summarize hint.strategy = shuffle arg_max(TimeGenerated, *), NumberOfUpdates = count() by SystemAlertId\r\n    | mv-expand todynamic(Entities)\r\n    | where Entities[\"Type\"] =~ \"account\"\r\n    | extend Name = tostring(tolower(Entities[\"Name\"])), NTDomain = tostring(Entities[\"NTDomain\"]), UPNSuffix = tostring(Entities[\"UPNSuffix\"]), AadUserId = tostring(Entities[\"AadUserId\"]), AadTenantId = tostring(Entities[\"AadTenantId\"]), \r\n        Sid = tostring(Entities[\"Sid\"]), IsDomainJoined = tobool(Entities[\"IsDomainJoined\"]), Host = tostring(Entities[\"Host\"])\r\n    | extend UPN = iff(Name != \"\" and UPNSuffix != \"\", strcat(Name, \"@\", UPNSuffix), \"\")\r\n| extend Href_ = tostring(parse_json(ExtendedLinks)[0].Href)\r\n| where UPN <> \"\"\r\n| where UPN in ({UserPrincipalName})\r\n| make-series count() default=0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step 1d by Title\r\n| render timechart\r\n\r\n\r\n\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Security Incidents over Time",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Severity",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "High",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Medium",
                                      "representation": "orange",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Low",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "redBright"
                                }
                              },
                              {
                                "columnMatch": "city_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "state_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blueDark",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "UserPrincipalName",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "count_",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "redBright"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "Trend",
                              "formatter": 9,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            "showBorder": false
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results114",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results114e",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "TAB",
                    "comparison": "isEqualTo",
                    "value": "SA"
                  },
                  "name": "Security Alerts Group"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "This section is bound by the above parameters for Subscription, Workspace, TimeRange, and User. Panels are dynamically displayed meaning numerous queries are executed and only panels returning data are displayed. For more information, see üí°[Modern Risk Pain Points](https://docs.microsoft.com/microsoft-365/compliance/insider-risk-management#modern-risk-pain-points) & üí°[Hunt for Threats with Azure Sentinel](https://docs.microsoft.com/azure/sentinel/hunting)\r\n\r\n| <strong> User Package Queries </strong> | \r\n|:--|\r\n| User Entity Behavior Analytics Alerts |\r\n| User Account Blast Radius |\r\n| User IP Addresses |\r\n| User Internet Service Providers |\r\n| User IP Addresses by Location |\r\n| User Anomalous Sign-in Activity |\r\n| Actions Uncommonly Performed By User |\r\n| First Time User Connected Via ISP |\r\n| User ISP Uncommonly Used Among Peers |\r\n| User Uncommonly High Volume Of Actions |\r\n| User Anomalous Password Reset |\r\n| User Anomalous Failed Logon |\r\n| User Anomalous Geo Location Logon |\r\n| User Anomalous AAD Account Manipulation |\r\n| User Anomalous AAD Account Creation |\r\n| User Anomalous Role Assignment |",
                          "style": "info"
                        },
                        "conditionalVisibility": {
                          "parameterName": "Help",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "SI OV"
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "7afa304d-b448-4d6c-8c54-69e51a7249a9",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results115",
                              "type": 1,
                              "query": "let AnomalousSigninActivity = BehaviorAnalytics\r\n    | where ActionType == \"Sign-in\"\r\n    | where (UsersInsights.NewAccount == True or UsersInsights.DormantAccount == True) and (\r\n        ActivityInsights.FirstTimeUserAccessedResource == True and ActivityInsights.ResourceUncommonlyAccessedAmongPeers == True\r\n        or ActivityInsights.FirstTimeUserUsedApp == True and ActivityInsights.AppUncommonlyUsedAmongPeers == False)\r\n    | join (\r\n        SigninLogs | where Status.errorCode == 0 or Status.errorCode == 0 and RiskDetail != \"none\"\r\n        )\r\n        on $left.SourceRecordId == $right._ItemId\r\n    | extend UserPrincipalName = iff(UserPrincipalName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserPrincipalName),\r\n        UserName = iff(UserName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserName)\r\n    | extend AnomalyName = \"Anomalous Successful Logon\",\r\n        Tactic = \"Persistence\",\r\n        Technique = \"Valid Accounts\",\r\n        SubTechnique = \"\",\r\n        Description = \"Successful Sign-in with one or more of the following indications: sign by new or recently dormant accounts and sign in with resource for the first time (while none of their peers did) or to an app for the first time (while none of their peers did) or performed by a user with Risk indicaiton from AAD\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"Evidence\"]=ActivityInsights, ResourceDisplayName, AppDisplayName, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority; \r\nlet critical = dynamic(['9b895d92-2cd3-44c7-9d02-a6ac2d5ea5c3', 'c4e39bd9-1100-46d3-8c65-fb160da0071f', '158c047a-c907-4556-b7ef-446551a6b5f7', '62e90394-69f5-4237-9190-012177145e10', 'd29b2b05-8046-44ba-8758-1e26182fcf32', '729827e3-9c14-49f7-bb1b-9608f156bbb8', '966707d0-3269-4727-9be2-8c3a10f19b9d', '194ae4cb-b126-40b2-bd5b-6091b380977d', 'fe930be7-5e62-47db-91af-98c3a49a38b1']);\r\nlet high = dynamic(['cf1c38e5-3621-4004-a7cb-879624dced7c', '7495fdc4-34c4-4d15-a289-98788ce399fd', 'aaf43236-0c0d-4d5f-883a-6955382ac081', '3edaf663-341e-4475-9f94-5c398ef6c070', '7698a772-787b-4ac8-901f-60d6b08affd2', 'b1be1c3e-b65d-4f19-8427-f6fa0d97feb9', '9f06204d-73c1-4d4c-880a-6edb90606fd8', '29232cdf-9323-42fd-ade2-1d097af3e4de', 'be2f45a1-457d-42af-a067-6ec1fa63bc45', '7be44c8a-adaf-4e2a-84d6-ab2649e08a13', 'e8611ab8-c189-46e8-94e1-60213ab1f814']);//witdstomstl\r\nlet AnomalousRoleAssignment = AuditLogs\r\n    | where TimeGenerated > ago(28d)\r\n    | where OperationName == \"Add member to role\"\r\n    | mv-expand TargetResources\r\n    | extend RoleId = tostring(TargetResources.modifiedProperties[0].newValue)\r\n    | where isnotempty(RoleId) and RoleId in (critical, high)\r\n    | extend RoleName = tostring(TargetResources.modifiedProperties[1].newValue)\r\n    | where isnotempty(RoleName)\r\n    | extend TargetId = tostring(TargetResources.id)\r\n    | extend Target = tostring(TargetResources.userPrincipalName)\r\n    | join kind=inner (\r\n        BehaviorAnalytics\r\n        | where ActionType == \"Add member to role\"\r\n        | where UsersInsights.BlasrRadius == \"High\" or ActivityInsights.FirstTimeUserPerformedAction == true\r\n        )\r\n        on $left._ItemId == $right.SourceRecordId\r\n    | extend AnomalyName = \"Anomalous Role Assignemt\",\r\n        Tactic = \"Persistence\",\r\n        Technique = \"Account Manipulation\",\r\n        SubTechnique = \"\",\r\n        Description = \"Adversaries may manipulate accounts to maintain access to victim systems. These actions include adding new accounts to high privilleged groups. Dragonfly 2.0, for example, added newly created accounts to the administrators group to maintain elevated access.  The query below generates an output of all high Blast Radius users performing Add member to priveleged role, or ones that add users for the first time.\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"TargetUser\"]=Target, RoleName, [\"Evidence\"]=ActivityInsights, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority; let LogOns=materialize(\r\n    BehaviorAnalytics\r\n    | where ActivityType == \"LogOn\");\r\nlet AnomalousResourceAccess = LogOns\r\n    | where ActionType == \"ResourceAccess\"\r\n    | where ActivityInsights.FirstTimeUserLoggedOnToDevice == true\r\n    | extend AnomalyName = \"Anomalous Resource Access\",\r\n        Tactic = \"Lateral Movement\",\r\n        Technique = \"\",\r\n        SubTechnique = \"\",\r\n        Description = \"Adversary may be trying to move through the environment. APT29 and APT32, for example, has used PtH & PtT techniques to lateral move around the network. The query below generates an output of all users performing an resource access (4624:3) to devices for the first time.\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"Evidence\"]=ActivityInsights, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority; \r\nlet AnomalousRDPActivity = LogOns\r\n    | where ActionType == \"RemoteInteractiveLogon\"\r\n    | where ActivityInsights.FirstTimeUserLoggedOnToDevice == true\r\n    | extend AnomalyName = \"Anomalous RDP Activity\",\r\n        Tactic = \"Lateral Movement\",\r\n        Technique = \"\",\r\n        SubTechnique = \"\",\r\n        Description = \"Adversaries may use Valid Accounts to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user. FIN10, for example, has used RDP to move laterally to systems in the victim environment. The query below generates an output of all users performing a remote interactive logon (4624:10) to a device for the first time.\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"Evidence\"]=ActivityInsights, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority; \r\nlet AnomalousLogintoDevices = LogOns\r\n    | where ActionType == \"InteractiveLogon\"\r\n    | where ActivityInsights.FirstTimeUserLoggedOnToDevice == true\r\n    | where UsersInsights.DormantAccount == true or DevicesInsights.LocalAdmin == true\r\n    | extend AnomalyName = \"Anomalous Login To Devices\",\r\n        Tactic = \"Privilege Escalation\",\r\n        Technique = \"Valid Accounts\",\r\n        SubTechnique = \"\",\r\n        Description = \"Adversaries may steal the credentials of a specific user or service account using Credential Access techniques or capture credentials earlier in their reconnaissance process through social engineering for means of gaining Initial Access. APT33, for example, has used valid accounts for initial access and privilege escalation. The query below generates an output of all administator users performing an interactive logon (4624:2) to a device for the first time.\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"Evidence\"]=ActivityInsights, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority; \r\nlet AnomalousPasswordReset = BehaviorAnalytics\r\n    | where ActionType == \"Reset user password\"\r\n    | where ActivityInsights.FirstTimeUserPerformedAction == \"True\"\r\n    | join (\r\n        AuditLogs\r\n        | where OperationName == \"Reset user password\"\r\n        )\r\n        on $left.SourceRecordId == $right._ItemId\r\n    | mv-expand TargetResources\r\n    | extend Target =  iff(tostring(TargetResources.userPrincipalName) contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(TargetResources.userPrincipalName, \"#\")[0])), TargetResources.userPrincipalName), tostring(TargetResources.userPrincipalName)\r\n    | extend UserPrincipalName = iff(UserPrincipalName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserPrincipalName),\r\n        UserName = iff(UserName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserName)\r\n    | extend AnomalyName = \"Anomalous Password Reset\",\r\n        Tactic = \"Impact\",\r\n        Technique = \"Account Access Removal\",\r\n        SubTechnique = \"\",\r\n        Description = \"Adversaries may interrupt availability of system and network resources by inhibiting access to accounts utilized by legitimate users. Accounts may be deleted, locked, or manipulated (ex: changed credentials) to remove access to accounts. LockerGoga, for example, has been observed changing account passwords and logging off current users. The query below generates an output of all users performing Reset user password for the first time.\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"TargetUser\"]=Target, [\"Evidence\"]=ActivityInsights, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority\r\n    | sort by TimeGenerated desc;\r\nlet AnomalousGeoLocationLogon = BehaviorAnalytics\r\n    | where ActionType == \"Sign-in\"\r\n    | where ActivityInsights.FirstTimeUserConnectedFromCountry == True and (ActivityInsights.FirstTimeConnectionFromCountryObservedInTenant == True or ActivityInsights.CountryUncommonlyConnectedFromAmongPeers == True)\r\n    | join (\r\n        SigninLogs\r\n        )\r\n        on $left.SourceRecordId == $right._ItemId\r\n    | extend UserPrincipalName = iff(UserPrincipalName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserPrincipalName),\r\n        UserName = iff(UserName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserName)\r\n    | extend AnomalyName = \"Anomalous Successful Logon\",\r\n        Tactic = \"Initial Access\",\r\n        Technique = \"Valid Accounts\",\r\n        SubTechnique = \"\",\r\n        Description = \"Adversaries may steal the credentials of a specific user or service account using Credential Access techniques or capture credentials earlier in their reconnaissance process through social engineering for means of gaining Initial Access. APT33, for example, has used valid accounts for initial access. The query below generates an output of successful Sign-in performed by a user from a new geo location he has never connected from before, and none of his peers as well.\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"Evidence\"]=ActivityInsights, ResourceDisplayName, AppDisplayName, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority; \r\nlet AnomalousFailedLogon = BehaviorAnalytics\r\n    | where ActivityType == \"LogOn\"\r\n    | where UsersInsights.BlastRadius == \"High\"\r\n    | join (\r\n        SigninLogs  \r\n        | where Status.errorCode == 50126\r\n        )\r\n        on $left.SourceRecordId == $right._ItemId\r\n    | extend UserPrincipalName = iff(UserPrincipalName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserPrincipalName),\r\n        UserName = iff(UserName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserName)\r\n    | extend AnomalyName = \"Anomalous Failed Logon\",\r\n        Tactic = \"Credential Access\",\r\n        Technique = \"Brute Force\",\r\n        SubTechnique = \"Password Guessing\",\r\n        Description = \"Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Emotet, for example, has been observed using a hard coded list of passwords to brute force user accounts. The query below generates an output of all users with 'High' BlastRadius that perform failed Sign-in:Invalid username or password.\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"Evidence\"]=ActivityInsights, ResourceDisplayName, AppDisplayName, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority; \r\nlet AnomalousAADAccountManipulation = AuditLogs\r\n    | where OperationName == \"Update user\"\r\n    | mv-expand AdditionalDetails\r\n    | where AdditionalDetails.key == \"UserPrincipalName\"\r\n    | mv-expand TargetResources\r\n    | extend RoleId = tostring(TargetResources.modifiedProperties[0].newValue)\r\n    | where isnotempty(RoleId) and RoleId in (critical, high)\r\n    | extend RoleName = tostring(TargetResources.modifiedProperties[1].newValue)\r\n    | where isnotempty(RoleName)\r\n    | extend TargetId = tostring(TargetResources.id)\r\n    | extend Target =  iff(tostring(TargetResources.userPrincipalName) contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(TargetResources.userPrincipalName, \"#\")[0])), TargetResources.userPrincipalName), tostring(TargetResources.userPrincipalName)\r\n    | join kind=inner ( \r\n        BehaviorAnalytics\r\n        | where ActionType == \"Update user\"\r\n        | where UsersInsights.BlasrRadius == \"High\" or ActivityInsights.FirstTimeUserPerformedAction == true\r\n        )\r\n        on $left._ItemId == $right.SourceRecordId\r\n    | extend UserPrincipalName = iff(UserPrincipalName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserPrincipalName),\r\n        UserName = iff(UserName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserName) \r\n    | extend AnomalyName = \"Anomalous Account Manipulation\",\r\n        Tactic = \"Persistence\",\r\n        Technique = \"Account Manipulation\",\r\n        SubTechnique = \"\",\r\n        Description = \"Adversaries may manipulate accounts to maintain access to victim systems. These actions include adding new accounts to high privilleged groups. Dragonfly 2.0, for example, added newly created accounts to the administrators group to maintain elevated access. The query below generates an output of all high Blast Radius users performing 'Update user' (name change) to priveleged role, or ones that changed users for the first time.\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"TargetUser\"]=Target, RoleName, [\"Evidence\"]=ActivityInsights, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority; let AnomalousAADAccountCreation = BehaviorAnalytics\r\n    | where ActionType == \"Add user\"\r\n    | where ActivityInsights.FirstTimeUserPerformedAction == True or ActivityInsights.FirstTimeActionPerformedInTenant == True or ActivityInsights.ActionUncommonlyPerformedAmongPeers == true\r\n    | join(\r\n        AuditLogs\r\n        | where OperationName == \"Add user\"\r\n        )\r\n        on $left.SourceRecordId == $right._ItemId\r\n    | mv-expand TargetResources\r\n    | extend Target =  iff(tostring(TargetResources.userPrincipalName) contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(TargetResources.userPrincipalName, \"#\")[0])), TargetResources.userPrincipalName), tostring(TargetResources.userPrincipalName)\r\n    | extend DisplayName = tostring(UsersInsights.AccountDisplayName),\r\n        UserPrincipalName = iff(UserPrincipalName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserPrincipalName),\r\n        UserName = iff(UserName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserName)\r\n    | extend AnomalyName = \"Anomalous Account Creation\",\r\n        Tactic = \"Persistence\",\r\n        Technique = \"Create Account\",\r\n        SubTechnique = \"Cloud Account\",\r\n        Description = \"Adversaries may create a cloud account to maintain access to victim systems. With a sufficient level of access, such accounts may be used to establish secondary credentialed access that does not require persistent remote access tools to be deployed on the system. The query below generates an output of all the users performing user creation for the first time and the target users that were created.\"\t\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"TargetUser\"]=Target, [\"Evidence\"]=ActivityInsights, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority\r\n    | sort by TimeGenerated desc;\r\nlet AnomalyTable = union kind=outer AnomalousSigninActivity, AnomalousRoleAssignment, AnomalousResourceAccess, AnomalousRDPActivity, AnomalousPasswordReset, AnomalousLogintoDevices, AnomalousGeoLocationLogon, AnomalousAADAccountManipulation, AnomalousAADAccountCreation, AnomalousFailedLogon;\r\nlet TopUsersByAnomalies = AnomalyTable\r\n    | summarize hint.strategy = shuffle AnomalyCount=count() by UserName, UserPrincipalName, tostring(UsersInsights.OnPremSid), tostring(UsersInsights.AccountObjectId)\r\n    | project Name=tolower(UserName), UPN=tolower(UserPrincipalName), AadUserId=UsersInsights_AccountObjectId, Sid=UsersInsights_OnPremSid, AnomalyCount\r\n    | sort by AnomalyCount desc;\r\nlet TopUsersByIncidents = SecurityIncident\r\n    | summarize hint.strategy = shuffle arg_max(LastModifiedTime, *) by IncidentNumber\r\n    | where Status == \"New\" or Status == \"Active\"\r\n    | mv-expand AlertIds\r\n    | extend AlertId = tostring(AlertIds)\r\n    | join kind= innerunique ( \r\n        SecurityAlert \r\n        )\r\n        on $left.AlertId == $right.SystemAlertId\r\n    | summarize hint.strategy = shuffle arg_max(TimeGenerated, *), NumberOfUpdates = count() by SystemAlertId\r\n    | mv-expand todynamic(Entities)\r\n    | where Entities[\"Type\"] =~ \"account\"\r\n    | extend Name = tostring(tolower(Entities[\"Name\"])), NTDomain = tostring(Entities[\"NTDomain\"]), UPNSuffix = tostring(Entities[\"UPNSuffix\"]), AadUserId = tostring(Entities[\"AadUserId\"]), AadTenantId = tostring(Entities[\"AadTenantId\"]), \r\n        Sid = tostring(Entities[\"Sid\"]), IsDomainJoined = tobool(Entities[\"IsDomainJoined\"]), Host = tostring(Entities[\"Host\"])\r\n    | extend UPN = iff(Name != \"\" and UPNSuffix != \"\", strcat(Name, \"@\", UPNSuffix), \"\")\r\n    | union TopUsersByAnomalies\r\n    | extend \r\n        AadPivot = iff(isempty(AadUserId), iff(isempty(Sid), Name, Sid), AadUserId),\r\n        SidPivot = iff(isempty(Sid), iff(isempty(AadUserId), Name, AadUserId), Sid),\r\n        UPNExists = iff(isempty(UPN), false, true),\r\n        NameExists = iff(isempty(Name), false, true),\r\n        SidExists = iff(isempty(Sid), false, true),\r\n        AADExists = iff(isempty(AadUserId), false, true)\r\n    | summarize hint.strategy = shuffle IncidentCount=dcount(IncidentNumber, 4), AlertCount=dcountif(AlertId, isnotempty(AlertId), 4), AnomalyCount=sum(AnomalyCount), any(Title, Severity, Status, StartTime, IncidentNumber, IncidentUrl, Owner), UPNAnchor=anyif(UPN, UPNExists == true), NameAnchor=anyif(Name, NameExists == true), AadAnchor=anyif(AadUserId, AADExists == true), SidAnchor=anyif(Sid, SidExists == true), any(SidPivot) by AadPivot\r\n    | summarize hint.strategy = shuffle IncidentCount=sum(IncidentCount), AlertCount=sum(AlertCount), AnomalyCount=sum(AnomalyCount), UPNAnchor=anyif(UPNAnchor, isempty(UPNAnchor) == false), NameAnchor=anyif(NameAnchor, isempty(NameAnchor) == false), AadAnchor=anyif(AadAnchor, isempty(AadAnchor) == false), SidAnchor=anyif(SidAnchor, isempty(SidAnchor) == false), any(any_Title, any_Severity, any_StartTime, any_IncidentNumber, any_IncidentUrl) by any_SidPivot\r\n    | summarize hint.strategy = shuffle IncidentCount=sum(IncidentCount), AlertCount=sum(AlertCount), AnomalyCount=sum(AnomalyCount), UPNAnchor=anyif(UPNAnchor, isempty(UPNAnchor) == false), AadAnchor=anyif(AadAnchor, isempty(AadAnchor) == false), SidAnchor=anyif(SidAnchor, isempty(SidAnchor) == false), any(any_any_Title, any_any_Severity, any_any_StartTime, any_any_IncidentNumber, any_any_IncidentUrl) by NameAnchor\r\n    | project [\"UserName\"]=NameAnchor, IncidentCount, AlertCount, AnomalyCount, [\"AadUserId\"]=AadAnchor, [\"OnPremSid\"]=SidAnchor, [\"UserPrincipalName\"]=UPNAnchor;\r\nTopUsersByIncidents\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results115",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "3b2e768e-33c5-4c1c-8d35-5b2860f4da7a",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results116",
                              "type": 1,
                              "query": "BehaviorAnalytics\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| extend ActionUncommonlyPerformedByUser_ = tostring(ActivityInsights.ActionUncommonlyPerformedByUser)\r\n| extend FirstTimeUserConnectedViaISP_ = tostring(ActivityInsights.FirstTimeUserConnectedViaISP)\r\n| extend ISPUncommonlyUsedAmongPeers_ = tostring(ActivityInsights.ISPUncommonlyUsedAmongPeers)\r\n| extend UncommonHighVolumeOfActions_ = tostring(ActivityInsights.UncommonHighVolumeOfActions)\r\n| extend BlastRadius_ = tostring(UsersInsights.BlastRadius)\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results116",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "63acc8db-7bde-4aae-a356-9527f705d65e",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results117",
                              "type": 1,
                              "query": "BehaviorAnalytics\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| where SourceIPAddress <> \"\"\r\n| extend ISP_ = tostring(DevicesInsights.ISP)\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results117",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "9b1b3553-c10a-408f-bf54-d953a5d3eb08",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results118",
                              "type": 1,
                              "query": "BehaviorAnalytics\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| where SourceIPAddress <> \"\"\r\n| extend ISP_ = tostring(DevicesInsights.ISP)\r\n| where ISP_ <> \"\"\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results118",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "9f5d5a26-49c4-4b61-8197-fa7debba49d3",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results119",
                              "type": 1,
                              "query": "BehaviorAnalytics\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| where SourceIPAddress <> \"\"\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results119",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "53afa8cf-2073-4d04-a435-2331f2518fa0",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results125",
                              "type": 1,
                              "query": "BehaviorAnalytics\r\n| where ActionType == \"Reset user password\"\r\n| where ActivityInsights has \"True\"\r\n| join (\r\n    AuditLogs\r\n    )\r\n    on $left.SourceRecordId == $right._ItemId\r\n| mv-expand TargetResources\r\n| extend Target =  iff(tostring(TargetResources.userPrincipalName) has \"#EXT#\", replace(\"_\", \"@\", tostring(split(TargetResources.userPrincipalName, \"#\")[0])), TargetResources.userPrincipalName), tostring(TargetResources.userPrincipalName)\r\n| extend UserPrincipalName = iff(UserPrincipalName has \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserPrincipalName),\r\n    UserName = iff(UserName has \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserName)\r\n| sort by TimeGenerated desc\r\n| project TimeGenerated, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"TargetUser\"]=Target, ActivityInsights, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results125",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "6ca8f834-b246-4d7e-9b6d-1b1551e8b04f",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results126",
                              "type": 1,
                              "query": "BehaviorAnalytics\r\n| where ActivityType == \"LogOn\"\r\n| where UsersInsights.BlastRadius == \"High\"\r\n| join (\r\nSigninLogs  | where Status.errorCode == 50126\r\n) on $left.SourceRecordId == $right._ItemId\r\n| extend UserPrincipalName = iff(UserPrincipalName contains \"#EXT#\",replace(\"_\",\"@\",tostring(split(UserPrincipalName, \"#\")[0])),UserPrincipalName),\r\nUserName = iff(UserName contains \"#EXT#\",replace(\"_\",\"@\",tostring(split(UserPrincipalName, \"#\")[0])),UserName)\r\n| project TimeGenerated, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType,[\"Evidence\"]=ActivityInsights, ResourceDisplayName,AppDisplayName ,SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results126",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "ce41b4e0-2d91-4819-b593-7075fe13356a",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results127",
                              "type": 1,
                              "query": "BehaviorAnalytics\r\n| where ActionType == \"Sign-in\"\r\n| where ActivityInsights.FirstTimeConnectionFromCountryObservedInTenant == True and ActivityInsights.CountryUncommonlyConnectedFromAmongPeers == True\r\n    | join (\r\nSigninLogs\r\n) on $left.SourceRecordId == $right._ItemId\r\n| extend UserPrincipalName = iff(UserPrincipalName contains \"#EXT#\",replace(\"_\",\"@\",tostring(split(UserPrincipalName, \"#\")[0])),UserPrincipalName),\r\nUserName = iff(UserName contains \"#EXT#\",replace(\"_\",\"@\",tostring(split(UserPrincipalName, \"#\")[0])),UserName)\r\n| project TimeGenerated, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType,[\"Evidence\"]=ActivityInsights, ResourceDisplayName,AppDisplayName ,SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results127",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "a9b97462-f182-41b8-af27-3012ddd39e7e",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results128",
                              "type": 1,
                              "query": "//Critical Roles: can impersonate  any user or app, can update passwords for users or service principals (if the role can let a user update passwords for privileged users, if an attacker compromises this user then attacker can update passwords for privileged users hence gaining more privileges so users with this role are equally critical)\r\n//High Roles: Administrators that can manage all aspects or permissions of important products but can't update credentials and impersonate another user/app\r\nlet critical = dynamic(['9b895d92-2cd3-44c7-9d02-a6ac2d5ea5c3','c4e39bd9-1100-46d3-8c65-fb160da0071f','158c047a-c907-4556-b7ef-446551a6b5f7','62e90394-69f5-4237-9190-012177145e10','d29b2b05-8046-44ba-8758-1e26182fcf32','729827e3-9c14-49f7-bb1b-9608f156bbb8','966707d0-3269-4727-9be2-8c3a10f19b9d','194ae4cb-b126-40b2-bd5b-6091b380977d','fe930be7-5e62-47db-91af-98c3a49a38b1']);\r\nlet high = dynamic(['cf1c38e5-3621-4004-a7cb-879624dced7c','7495fdc4-34c4-4d15-a289-98788ce399fd','aaf43236-0c0d-4d5f-883a-6955382ac081','3edaf663-341e-4475-9f94-5c398ef6c070','7698a772-787b-4ac8-901f-60d6b08affd2','b1be1c3e-b65d-4f19-8427-f6fa0d97feb9','9f06204d-73c1-4d4c-880a-6edb90606fd8','29232cdf-9323-42fd-ade2-1d097af3e4de','be2f45a1-457d-42af-a067-6ec1fa63bc45','7be44c8a-adaf-4e2a-84d6-ab2649e08a13','e8611ab8-c189-46e8-94e1-60213ab1f814']);\r\nAuditLogs\r\n| where OperationName == \"Update user\"\r\n| mv-expand AdditionalDetails\r\n| mv-expand TargetResources\r\n| where AdditionalDetails.key == \"UserPrincipalName\"\r\n| mv-expand TargetResources\r\n| extend RoleId = tostring(TargetResources.modifiedProperties[0].newValue)\r\n| extend RoleName = tostring(TargetResources.modifiedProperties[1].newValue)\r\n| where RoleId in (critical,high)\r\n| where isnotempty(RoleId) or isnotempty(RoleName)\r\n| extend TargetId = tostring(TargetResources.id)\r\n| extend Target =  iff(tostring(TargetResources.userPrincipalName) has \"#EXT#\",replace(\"_\",\"@\",tostring(split(TargetResources.userPrincipalName, \"#\")[0])),TargetResources.userPrincipalName),tostring(TargetResources.userPrincipalName)\r\n| join kind=inner ( BehaviorAnalytics\r\n) on $left._ItemId == $right.SourceRecordId\r\n| where UsersInsights.BlastRadius == \"High\" or ActivityInsights has \"True\"\r\n|  extend UserPrincipalName = iff(UserPrincipalName has \"#EXT#\",replace(\"_\",\"@\",tostring(split(UserPrincipalName, \"#\")[0])),UserPrincipalName),\r\nUserName = iff(UserName has \"#EXT#\",replace(\"_\",\"@\",tostring(split(UserPrincipalName, \"#\")[0])),UserName) \r\n| project TimeGenerated, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"TargetUser\"]=Target,RoleName,ActivityInsights ,SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results128",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "03aec6b5-05a4-4225-a3a8-a52d6f792b71",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results129",
                              "type": 1,
                              "query": "//Critical Roles: can impersonate  any user or app, can update passwords for users or service principals (if the role can let a user update passwords for privileged users, if an attacker compromises this user then attacker can update passwords for privileged users hence gaining more privileges so users with this role are equally critical)\r\n//High Roles: Administrators that can manage all aspects or permissions of important products but can't update credentials and impersonate another user/app\r\nlet critical = dynamic(['9b895d92-2cd3-44c7-9d02-a6ac2d5ea5c3','c4e39bd9-1100-46d3-8c65-fb160da0071f','158c047a-c907-4556-b7ef-446551a6b5f7','62e90394-69f5-4237-9190-012177145e10','d29b2b05-8046-44ba-8758-1e26182fcf32','729827e3-9c14-49f7-bb1b-9608f156bbb8','966707d0-3269-4727-9be2-8c3a10f19b9d','194ae4cb-b126-40b2-bd5b-6091b380977d','fe930be7-5e62-47db-91af-98c3a49a38b1']);\r\nlet high = dynamic(['cf1c38e5-3621-4004-a7cb-879624dced7c','7495fdc4-34c4-4d15-a289-98788ce399fd','aaf43236-0c0d-4d5f-883a-6955382ac081','3edaf663-341e-4475-9f94-5c398ef6c070','7698a772-787b-4ac8-901f-60d6b08affd2','b1be1c3e-b65d-4f19-8427-f6fa0d97feb9','9f06204d-73c1-4d4c-880a-6edb90606fd8','29232cdf-9323-42fd-ade2-1d097af3e4de','be2f45a1-457d-42af-a067-6ec1fa63bc45','7be44c8a-adaf-4e2a-84d6-ab2649e08a13','e8611ab8-c189-46e8-94e1-60213ab1f814']);\r\nAuditLogs\r\n| where OperationName == \"Update user\"\r\n| mv-expand AdditionalDetails\r\n| mv-expand TargetResources\r\n| where AdditionalDetails.key == \"UserPrincipalName\"\r\n| mv-expand TargetResources\r\n| extend RoleId = tostring(TargetResources.modifiedProperties[0].newValue)\r\n| extend RoleName = tostring(TargetResources.modifiedProperties[1].newValue)\r\n| where RoleId in (critical,high)\r\n| where isnotempty(RoleId) or isnotempty(RoleName)\r\n| extend TargetId = tostring(TargetResources.id)\r\n| extend Target =  iff(tostring(TargetResources.userPrincipalName) has \"#EXT#\",replace(\"_\",\"@\",tostring(split(TargetResources.userPrincipalName, \"#\")[0])),TargetResources.userPrincipalName),tostring(TargetResources.userPrincipalName)\r\n| join kind=inner ( BehaviorAnalytics\r\n) on $left._ItemId == $right.SourceRecordId\r\n| where UsersInsights.BlastRadius == \"High\" or ActivityInsights has \"True\"\r\n|  extend UserPrincipalName = iff(UserPrincipalName has \"#EXT#\",replace(\"_\",\"@\",tostring(split(UserPrincipalName, \"#\")[0])),UserPrincipalName),\r\nUserName = iff(UserName has \"#EXT#\",replace(\"_\",\"@\",tostring(split(UserPrincipalName, \"#\")[0])),UserName) \r\n| project TimeGenerated, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"TargetUser\"]=Target,RoleName,ActivityInsights ,SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results129",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "0b730519-a486-4d2b-825e-694e0053724e",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results130",
                              "type": 1,
                              "query": "let critical = dynamic(['9b895d92-2cd3-44c7-9d02-a6ac2d5ea5c3','c4e39bd9-1100-46d3-8c65-fb160da0071f','158c047a-c907-4556-b7ef-446551a6b5f7','62e90394-69f5-4237-9190-012177145e10','d29b2b05-8046-44ba-8758-1e26182fcf32','729827e3-9c14-49f7-bb1b-9608f156bbb8','966707d0-3269-4727-9be2-8c3a10f19b9d','194ae4cb-b126-40b2-bd5b-6091b380977d','fe930be7-5e62-47db-91af-98c3a49a38b1']);\r\nlet high = dynamic(['cf1c38e5-3621-4004-a7cb-879624dced7c','7495fdc4-34c4-4d15-a289-98788ce399fd','aaf43236-0c0d-4d5f-883a-6955382ac081','3edaf663-341e-4475-9f94-5c398ef6c070','7698a772-787b-4ac8-901f-60d6b08affd2','b1be1c3e-b65d-4f19-8427-f6fa0d97feb9','9f06204d-73c1-4d4c-880a-6edb90606fd8','29232cdf-9323-42fd-ade2-1d097af3e4de','be2f45a1-457d-42af-a067-6ec1fa63bc45','7be44c8a-adaf-4e2a-84d6-ab2649e08a13','e8611ab8-c189-46e8-94e1-60213ab1f814']);\r\nAuditLogs\r\n| where OperationName == \"Add member to role\"\r\n| mv-expand TargetResources\r\n| extend RoleId = tostring(TargetResources.modifiedProperties[0].newValue)\r\n| extend RoleName = tostring(TargetResources.modifiedProperties[1].newValue)\r\n| where RoleId in (critical,high)\r\n| extend TargetId = tostring(TargetResources.id)\r\n| extend Target = tostring(TargetResources.userPrincipalName)\r\n| where isnotempty(RoleId) or isnotempty(RoleName)\r\n| join kind=inner ( BehaviorAnalytics\r\n) on $left._ItemId == $right.SourceRecordId\r\n| where UsersInsights.BlasrRadius == \"High\" or ActivityInsights has \"True\"\r\n| project TimeGenerated, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"TargetUser\"]=Target,RoleName,ActivityInsights ,SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "50",
                        "name": "Results130",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let AnomalousSigninActivity = BehaviorAnalytics\r\n    | where ActionType == \"Sign-in\"\r\n    | where (UsersInsights.NewAccount == True or UsersInsights.DormantAccount == True) and (\r\n        ActivityInsights.FirstTimeUserAccessedResource == True and ActivityInsights.ResourceUncommonlyAccessedAmongPeers == True\r\n        or ActivityInsights.FirstTimeUserUsedApp == True and ActivityInsights.AppUncommonlyUsedAmongPeers == False)\r\n    | join (\r\n        SigninLogs | where Status.errorCode == 0 or Status.errorCode == 0 and RiskDetail != \"none\"\r\n        )\r\n        on $left.SourceRecordId == $right._ItemId\r\n    | extend UserPrincipalName = iff(UserPrincipalName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserPrincipalName),\r\n        UserName = iff(UserName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserName)\r\n    | extend AnomalyName = \"Anomalous Successful Logon\",\r\n        Tactic = \"Persistence\",\r\n        Technique = \"Valid Accounts\",\r\n        SubTechnique = \"\",\r\n        Description = \"Successful Sign-in with one or more of the following indications: sign by new or recently dormant accounts and sign in with resource for the first time (while none of their peers did) or to an app for the first time (while none of their peers did) or performed by a user with Risk indicaiton from AAD\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"Evidence\"]=ActivityInsights, ResourceDisplayName, AppDisplayName, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority; \r\nlet critical = dynamic(['9b895d92-2cd3-44c7-9d02-a6ac2d5ea5c3', 'c4e39bd9-1100-46d3-8c65-fb160da0071f', '158c047a-c907-4556-b7ef-446551a6b5f7', '62e90394-69f5-4237-9190-012177145e10', 'd29b2b05-8046-44ba-8758-1e26182fcf32', '729827e3-9c14-49f7-bb1b-9608f156bbb8', '966707d0-3269-4727-9be2-8c3a10f19b9d', '194ae4cb-b126-40b2-bd5b-6091b380977d', 'fe930be7-5e62-47db-91af-98c3a49a38b1']);\r\nlet high = dynamic(['cf1c38e5-3621-4004-a7cb-879624dced7c', '7495fdc4-34c4-4d15-a289-98788ce399fd', 'aaf43236-0c0d-4d5f-883a-6955382ac081', '3edaf663-341e-4475-9f94-5c398ef6c070', '7698a772-787b-4ac8-901f-60d6b08affd2', 'b1be1c3e-b65d-4f19-8427-f6fa0d97feb9', '9f06204d-73c1-4d4c-880a-6edb90606fd8', '29232cdf-9323-42fd-ade2-1d097af3e4de', 'be2f45a1-457d-42af-a067-6ec1fa63bc45', '7be44c8a-adaf-4e2a-84d6-ab2649e08a13', 'e8611ab8-c189-46e8-94e1-60213ab1f814']);//witdstomstl\r\nlet AnomalousRoleAssignment = AuditLogs\r\n    | where TimeGenerated > ago(28d)\r\n    | where OperationName == \"Add member to role\"\r\n    | mv-expand TargetResources\r\n    | extend RoleId = tostring(TargetResources.modifiedProperties[0].newValue)\r\n    | where isnotempty(RoleId) and RoleId in (critical, high)\r\n    | extend RoleName = tostring(TargetResources.modifiedProperties[1].newValue)\r\n    | where isnotempty(RoleName)\r\n    | extend TargetId = tostring(TargetResources.id)\r\n    | extend Target = tostring(TargetResources.userPrincipalName)\r\n    | join kind=inner (\r\n        BehaviorAnalytics\r\n        | where ActionType == \"Add member to role\"\r\n        | where UsersInsights.BlasrRadius == \"High\" or ActivityInsights.FirstTimeUserPerformedAction == true\r\n        )\r\n        on $left._ItemId == $right.SourceRecordId\r\n    | extend AnomalyName = \"Anomalous Role Assignemt\",\r\n        Tactic = \"Persistence\",\r\n        Technique = \"Account Manipulation\",\r\n        SubTechnique = \"\",\r\n        Description = \"Adversaries may manipulate accounts to maintain access to victim systems. These actions include adding new accounts to high privilleged groups. Dragonfly 2.0, for example, added newly created accounts to the administrators group to maintain elevated access.  The query below generates an output of all high Blast Radius users performing Add member to priveleged role, or ones that add users for the first time.\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"TargetUser\"]=Target, RoleName, [\"Evidence\"]=ActivityInsights, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority; let LogOns=materialize(\r\n    BehaviorAnalytics\r\n    | where ActivityType == \"LogOn\");\r\nlet AnomalousResourceAccess = LogOns\r\n    | where ActionType == \"ResourceAccess\"\r\n    | where ActivityInsights.FirstTimeUserLoggedOnToDevice == true\r\n    | extend AnomalyName = \"Anomalous Resource Access\",\r\n        Tactic = \"Lateral Movement\",\r\n        Technique = \"\",\r\n        SubTechnique = \"\",\r\n        Description = \"Adversary may be trying to move through the environment. APT29 and APT32, for example, has used PtH & PtT techniques to lateral move around the network. The query below generates an output of all users performing an resource access (4624:3) to devices for the first time.\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"Evidence\"]=ActivityInsights, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority; \r\nlet AnomalousRDPActivity = LogOns\r\n    | where ActionType == \"RemoteInteractiveLogon\"\r\n    | where ActivityInsights.FirstTimeUserLoggedOnToDevice == true\r\n    | extend AnomalyName = \"Anomalous RDP Activity\",\r\n        Tactic = \"Lateral Movement\",\r\n        Technique = \"\",\r\n        SubTechnique = \"\",\r\n        Description = \"Adversaries may use Valid Accounts to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user. FIN10, for example, has used RDP to move laterally to systems in the victim environment. The query below generates an output of all users performing a remote interactive logon (4624:10) to a device for the first time.\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"Evidence\"]=ActivityInsights, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority; \r\nlet AnomalousLogintoDevices = LogOns\r\n    | where ActionType == \"InteractiveLogon\"\r\n    | where ActivityInsights.FirstTimeUserLoggedOnToDevice == true\r\n    | where UsersInsights.DormantAccount == true or DevicesInsights.LocalAdmin == true\r\n    | extend AnomalyName = \"Anomalous Login To Devices\",\r\n        Tactic = \"Privilege Escalation\",\r\n        Technique = \"Valid Accounts\",\r\n        SubTechnique = \"\",\r\n        Description = \"Adversaries may steal the credentials of a specific user or service account using Credential Access techniques or capture credentials earlier in their reconnaissance process through social engineering for means of gaining Initial Access. APT33, for example, has used valid accounts for initial access and privilege escalation. The query below generates an output of all administator users performing an interactive logon (4624:2) to a device for the first time.\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"Evidence\"]=ActivityInsights, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority; \r\nlet AnomalousPasswordReset = BehaviorAnalytics\r\n    | where ActionType == \"Reset user password\"\r\n    | where ActivityInsights.FirstTimeUserPerformedAction == \"True\"\r\n    | join (\r\n        AuditLogs\r\n        | where OperationName == \"Reset user password\"\r\n        )\r\n        on $left.SourceRecordId == $right._ItemId\r\n    | mv-expand TargetResources\r\n    | extend Target =  iff(tostring(TargetResources.userPrincipalName) contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(TargetResources.userPrincipalName, \"#\")[0])), TargetResources.userPrincipalName), tostring(TargetResources.userPrincipalName)\r\n    | extend UserPrincipalName = iff(UserPrincipalName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserPrincipalName),\r\n        UserName = iff(UserName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserName)\r\n    | extend AnomalyName = \"Anomalous Password Reset\",\r\n        Tactic = \"Impact\",\r\n        Technique = \"Account Access Removal\",\r\n        SubTechnique = \"\",\r\n        Description = \"Adversaries may interrupt availability of system and network resources by inhibiting access to accounts utilized by legitimate users. Accounts may be deleted, locked, or manipulated (ex: changed credentials) to remove access to accounts. LockerGoga, for example, has been observed changing account passwords and logging off current users. The query below generates an output of all users performing Reset user password for the first time.\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"TargetUser\"]=Target, [\"Evidence\"]=ActivityInsights, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority\r\n    | sort by TimeGenerated desc;\r\nlet AnomalousGeoLocationLogon = BehaviorAnalytics\r\n    | where ActionType == \"Sign-in\"\r\n    | where ActivityInsights.FirstTimeUserConnectedFromCountry == True and (ActivityInsights.FirstTimeConnectionFromCountryObservedInTenant == True or ActivityInsights.CountryUncommonlyConnectedFromAmongPeers == True)\r\n    | join (\r\n        SigninLogs\r\n        )\r\n        on $left.SourceRecordId == $right._ItemId\r\n    | extend UserPrincipalName = iff(UserPrincipalName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserPrincipalName),\r\n        UserName = iff(UserName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserName)\r\n    | extend AnomalyName = \"Anomalous Successful Logon\",\r\n        Tactic = \"Initial Access\",\r\n        Technique = \"Valid Accounts\",\r\n        SubTechnique = \"\",\r\n        Description = \"Adversaries may steal the credentials of a specific user or service account using Credential Access techniques or capture credentials earlier in their reconnaissance process through social engineering for means of gaining Initial Access. APT33, for example, has used valid accounts for initial access. The query below generates an output of successful Sign-in performed by a user from a new geo location he has never connected from before, and none of his peers as well.\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"Evidence\"]=ActivityInsights, ResourceDisplayName, AppDisplayName, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority; \r\nlet AnomalousFailedLogon = BehaviorAnalytics\r\n    | where ActivityType == \"LogOn\"\r\n    | where UsersInsights.BlastRadius == \"High\"\r\n    | join (\r\n        SigninLogs  \r\n        | where Status.errorCode == 50126\r\n        )\r\n        on $left.SourceRecordId == $right._ItemId\r\n    | extend UserPrincipalName = iff(UserPrincipalName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserPrincipalName),\r\n        UserName = iff(UserName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserName)\r\n    | extend AnomalyName = \"Anomalous Failed Logon\",\r\n        Tactic = \"Credential Access\",\r\n        Technique = \"Brute Force\",\r\n        SubTechnique = \"Password Guessing\",\r\n        Description = \"Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Emotet, for example, has been observed using a hard coded list of passwords to brute force user accounts. The query below generates an output of all users with 'High' BlastRadius that perform failed Sign-in:Invalid username or password.\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"Evidence\"]=ActivityInsights, ResourceDisplayName, AppDisplayName, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority; \r\nlet AnomalousAADAccountManipulation = AuditLogs\r\n    | where OperationName == \"Update user\"\r\n    | mv-expand AdditionalDetails\r\n    | where AdditionalDetails.key == \"UserPrincipalName\"\r\n    | mv-expand TargetResources\r\n    | extend RoleId = tostring(TargetResources.modifiedProperties[0].newValue)\r\n    | where isnotempty(RoleId) and RoleId in (critical, high)\r\n    | extend RoleName = tostring(TargetResources.modifiedProperties[1].newValue)\r\n    | where isnotempty(RoleName)\r\n    | extend TargetId = tostring(TargetResources.id)\r\n    | extend Target =  iff(tostring(TargetResources.userPrincipalName) contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(TargetResources.userPrincipalName, \"#\")[0])), TargetResources.userPrincipalName), tostring(TargetResources.userPrincipalName)\r\n    | join kind=inner ( \r\n        BehaviorAnalytics\r\n        | where ActionType == \"Update user\"\r\n        | where UsersInsights.BlasrRadius == \"High\" or ActivityInsights.FirstTimeUserPerformedAction == true\r\n        )\r\n        on $left._ItemId == $right.SourceRecordId\r\n    | extend UserPrincipalName = iff(UserPrincipalName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserPrincipalName),\r\n        UserName = iff(UserName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserName) \r\n    | extend AnomalyName = \"Anomalous Account Manipulation\",\r\n        Tactic = \"Persistence\",\r\n        Technique = \"Account Manipulation\",\r\n        SubTechnique = \"\",\r\n        Description = \"Adversaries may manipulate accounts to maintain access to victim systems. These actions include adding new accounts to high privilleged groups. Dragonfly 2.0, for example, added newly created accounts to the administrators group to maintain elevated access. The query below generates an output of all high Blast Radius users performing 'Update user' (name change) to priveleged role, or ones that changed users for the first time.\"\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"TargetUser\"]=Target, RoleName, [\"Evidence\"]=ActivityInsights, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority; let AnomalousAADAccountCreation = BehaviorAnalytics\r\n    | where ActionType == \"Add user\"\r\n    | where ActivityInsights.FirstTimeUserPerformedAction == True or ActivityInsights.FirstTimeActionPerformedInTenant == True or ActivityInsights.ActionUncommonlyPerformedAmongPeers == true\r\n    | join(\r\n        AuditLogs\r\n        | where OperationName == \"Add user\"\r\n        )\r\n        on $left.SourceRecordId == $right._ItemId\r\n    | mv-expand TargetResources\r\n    | extend Target =  iff(tostring(TargetResources.userPrincipalName) contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(TargetResources.userPrincipalName, \"#\")[0])), TargetResources.userPrincipalName), tostring(TargetResources.userPrincipalName)\r\n    | extend DisplayName = tostring(UsersInsights.AccountDisplayName),\r\n        UserPrincipalName = iff(UserPrincipalName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserPrincipalName),\r\n        UserName = iff(UserName contains \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserName)\r\n    | extend AnomalyName = \"Anomalous Account Creation\",\r\n        Tactic = \"Persistence\",\r\n        Technique = \"Create Account\",\r\n        SubTechnique = \"Cloud Account\",\r\n        Description = \"Adversaries may create a cloud account to maintain access to victim systems. With a sufficient level of access, such accounts may be used to establish secondary credentialed access that does not require persistent remote access tools to be deployed on the system. The query below generates an output of all the users performing user creation for the first time and the target users that were created.\"\t\r\n    | project TimeGenerated, AnomalyName, Tactic, Technique, SubTechnique, Description, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"TargetUser\"]=Target, [\"Evidence\"]=ActivityInsights, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights, [\"Anomaly Score\"]=InvestigationPriority\r\n    | sort by TimeGenerated desc;\r\nlet AnomalyTable = union kind=outer AnomalousSigninActivity, AnomalousRoleAssignment, AnomalousResourceAccess, AnomalousRDPActivity, AnomalousPasswordReset, AnomalousLogintoDevices, AnomalousGeoLocationLogon, AnomalousAADAccountManipulation, AnomalousAADAccountCreation, AnomalousFailedLogon;\r\nlet TopUsersByAnomalies = AnomalyTable\r\n    | summarize hint.strategy = shuffle AnomalyCount=count() by UserName, UserPrincipalName, tostring(UsersInsights.OnPremSid), tostring(UsersInsights.AccountObjectId)\r\n    | project Name=tolower(UserName), UPN=tolower(UserPrincipalName), AadUserId=UsersInsights_AccountObjectId, Sid=UsersInsights_OnPremSid, AnomalyCount\r\n    | sort by AnomalyCount desc;\r\nlet TopUsersByIncidents = SecurityIncident\r\n    | summarize hint.strategy = shuffle arg_max(LastModifiedTime, *) by IncidentNumber\r\n    | where Status == \"New\" or Status == \"Active\"\r\n    | mv-expand AlertIds\r\n    | extend AlertId = tostring(AlertIds)\r\n    | join kind= innerunique ( \r\n        SecurityAlert \r\n        )\r\n        on $left.AlertId == $right.SystemAlertId\r\n    | summarize hint.strategy = shuffle arg_max(TimeGenerated, *), NumberOfUpdates = count() by SystemAlertId\r\n    | mv-expand todynamic(Entities)\r\n    | where Entities[\"Type\"] =~ \"account\"\r\n    | extend Name = tostring(tolower(Entities[\"Name\"])), NTDomain = tostring(Entities[\"NTDomain\"]), UPNSuffix = tostring(Entities[\"UPNSuffix\"]), AadUserId = tostring(Entities[\"AadUserId\"]), AadTenantId = tostring(Entities[\"AadTenantId\"]), \r\n        Sid = tostring(Entities[\"Sid\"]), IsDomainJoined = tobool(Entities[\"IsDomainJoined\"]), Host = tostring(Entities[\"Host\"])\r\n    | extend UPN = iff(Name != \"\" and UPNSuffix != \"\", strcat(Name, \"@\", UPNSuffix), \"\")\r\n    | union TopUsersByAnomalies\r\n    | extend \r\n        AadPivot = iff(isempty(AadUserId), iff(isempty(Sid), Name, Sid), AadUserId),\r\n        SidPivot = iff(isempty(Sid), iff(isempty(AadUserId), Name, AadUserId), Sid),\r\n        UPNExists = iff(isempty(UPN), false, true),\r\n        NameExists = iff(isempty(Name), false, true),\r\n        SidExists = iff(isempty(Sid), false, true),\r\n        AADExists = iff(isempty(AadUserId), false, true)\r\n    | summarize hint.strategy = shuffle IncidentCount=dcount(IncidentNumber, 4), AlertCount=dcountif(AlertId, isnotempty(AlertId), 4), AnomalyCount=sum(AnomalyCount), any(Title, Severity, Status, StartTime, IncidentNumber, IncidentUrl, Owner), UPNAnchor=anyif(UPN, UPNExists == true), NameAnchor=anyif(Name, NameExists == true), AadAnchor=anyif(AadUserId, AADExists == true), SidAnchor=anyif(Sid, SidExists == true), any(SidPivot) by AadPivot\r\n    | summarize hint.strategy = shuffle IncidentCount=sum(IncidentCount), AlertCount=sum(AlertCount), AnomalyCount=sum(AnomalyCount), UPNAnchor=anyif(UPNAnchor, isempty(UPNAnchor) == false), NameAnchor=anyif(NameAnchor, isempty(NameAnchor) == false), AadAnchor=anyif(AadAnchor, isempty(AadAnchor) == false), SidAnchor=anyif(SidAnchor, isempty(SidAnchor) == false), any(any_Title, any_Severity, any_StartTime, any_IncidentNumber, any_IncidentUrl) by any_SidPivot\r\n    | summarize hint.strategy = shuffle IncidentCount=sum(IncidentCount), AlertCount=sum(AlertCount), AnomalyCount=sum(AnomalyCount), UPNAnchor=anyif(UPNAnchor, isempty(UPNAnchor) == false), AadAnchor=anyif(AadAnchor, isempty(AadAnchor) == false), SidAnchor=anyif(SidAnchor, isempty(SidAnchor) == false), any(any_any_Title, any_any_Severity, any_any_StartTime, any_any_IncidentNumber, any_any_IncidentUrl) by NameAnchor\r\n    | project [\"UserName\"]=NameAnchor, IncidentCount, AlertCount, AnomalyCount, [\"AadUserId\"]=AadAnchor, [\"OnPremSid\"]=SidAnchor, [\"UserPrincipalName\"]=UPNAnchor;\r\nTopUsersByIncidents\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| project UserPrincipalName, IncidentCount, AlertCount, AnomalyCount\r\n| sort by IncidentCount desc\r\n| limit 250\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Entity Behavior Analytics Alerts",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "IncidentCount",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "redBright"
                                }
                              },
                              {
                                "columnMatch": "AlertCount",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "orange"
                                }
                              },
                              {
                                "columnMatch": "AnomalyCount",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "yellow"
                                }
                              }
                            ],
                            "filter": true,
                            "sortBy": [
                              {
                                "itemKey": "$gen_heatmap_IncidentCount_1",
                                "sortOrder": 2
                              }
                            ]
                          },
                          "sortBy": [
                            {
                              "itemKey": "$gen_heatmap_IncidentCount_1",
                              "sortOrder": 2
                            }
                          ]
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results115",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results115",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "BehaviorAnalytics\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| extend ActionUncommonlyPerformedByUser_ = tostring(ActivityInsights.ActionUncommonlyPerformedByUser)\r\n| extend FirstTimeUserConnectedViaISP_ = tostring(ActivityInsights.FirstTimeUserConnectedViaISP)\r\n| extend ISPUncommonlyUsedAmongPeers_ = tostring(ActivityInsights.ISPUncommonlyUsedAmongPeers)\r\n| extend UncommonHighVolumeOfActions_ = tostring(ActivityInsights.UncommonHighVolumeOfActions)\r\n| extend BlastRadius_ = tostring(UsersInsights.BlastRadius)\r\n| summarize count() by UserPrincipalName, BlastRadius_\r\n| project UserPrincipalName, BlastRadius_\r\n| sort by BlastRadius_ desc\r\n| limit 250\r\n\r\n\r\n\r\n\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Account Blast Radius",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "BlastRadius_",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "High",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Medium",
                                      "representation": "orange",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Low",
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true,
                            "sortBy": [
                              {
                                "itemKey": "$gen_thresholds_BlastRadius__1",
                                "sortOrder": 2
                              }
                            ]
                          },
                          "sortBy": [
                            {
                              "itemKey": "$gen_thresholds_BlastRadius__1",
                              "sortOrder": 2
                            }
                          ],
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results116",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results116",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "BehaviorAnalytics\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| where SourceIPAddress <> \"\"\r\n| extend ISP_ = tostring(DevicesInsights.ISP)\r\n| summarize count() by UserPrincipalName, SourceIPAddress, ISP_, SourceIPLocation, EventSource\r\n| sort by count_ desc\r\n| limit 250\r\n\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User IP Address, ISP, Location",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "IPAddress",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "uninitialized",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ],
                            "filter": true
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "Results117",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results117"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "BehaviorAnalytics\r\n| where ActionType == \"Reset user password\"\r\n| where ActivityInsights has \"True\"\r\n| join (\r\n    AuditLogs\r\n    )\r\n    on $left.SourceRecordId == $right._ItemId\r\n| mv-expand TargetResources\r\n| extend Target =  iff(tostring(TargetResources.userPrincipalName) has \"#EXT#\", replace(\"_\", \"@\", tostring(split(TargetResources.userPrincipalName, \"#\")[0])), TargetResources.userPrincipalName), tostring(TargetResources.userPrincipalName)\r\n| extend UserPrincipalName = iff(UserPrincipalName has \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserPrincipalName),\r\n    UserName = iff(UserName has \"#EXT#\", replace(\"_\", \"@\", tostring(split(UserPrincipalName, \"#\")[0])), UserName)\r\n| sort by TimeGenerated desc\r\n| project TimeGenerated, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"TargetUser\"]=Target, ActivityInsights, SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| summarize count() by UserPrincipalName\r\n| sort by count_ desc",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Anomalous Password Reset",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Person",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "IPAddress",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "uninitialized",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "filter": true
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results125",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results125",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "BehaviorAnalytics\r\n| where ActivityType == \"LogOn\"\r\n| where UsersInsights.BlastRadius == \"High\"\r\n| join (\r\nSigninLogs  | where Status.errorCode == 50126\r\n) on $left.SourceRecordId == $right._ItemId\r\n| extend UserPrincipalName = iff(UserPrincipalName contains \"#EXT#\",replace(\"_\",\"@\",tostring(split(UserPrincipalName, \"#\")[0])),UserPrincipalName),\r\nUserName = iff(UserName contains \"#EXT#\",replace(\"_\",\"@\",tostring(split(UserPrincipalName, \"#\")[0])),UserName)\r\n| project TimeGenerated, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType,[\"Evidence\"]=ActivityInsights, ResourceDisplayName,AppDisplayName ,SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| summarize count() by UserPrincipalName\r\n| sort by count_ desc",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Anomalous Failed Logon",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "IPAddress",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "uninitialized",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ]
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results126",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results126",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "BehaviorAnalytics\r\n| where ActionType == \"Sign-in\"\r\n| where ActivityInsights.FirstTimeConnectionFromCountryObservedInTenant == True and ActivityInsights.CountryUncommonlyConnectedFromAmongPeers == True\r\n    | join (\r\nSigninLogs\r\n) on $left.SourceRecordId == $right._ItemId\r\n| extend UserPrincipalName = iff(UserPrincipalName contains \"#EXT#\",replace(\"_\",\"@\",tostring(split(UserPrincipalName, \"#\")[0])),UserPrincipalName),\r\nUserName = iff(UserName contains \"#EXT#\",replace(\"_\",\"@\",tostring(split(UserPrincipalName, \"#\")[0])),UserName)\r\n| project TimeGenerated, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType,[\"Evidence\"]=ActivityInsights, ResourceDisplayName,AppDisplayName ,SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| summarize count() by UserPrincipalName\r\n| sort by count_ desc",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Anomalous Geo Location Logon",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "IPAddress",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "uninitialized",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ]
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results127",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results127",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "//Critical Roles: can impersonate  any user or app, can update passwords for users or service principals (if the role can let a user update passwords for privileged users, if an attacker compromises this user then attacker can update passwords for privileged users hence gaining more privileges so users with this role are equally critical)\r\n//High Roles: Administrators that can manage all aspects or permissions of important products but can't update credentials and impersonate another user/app\r\nlet critical = dynamic(['9b895d92-2cd3-44c7-9d02-a6ac2d5ea5c3','c4e39bd9-1100-46d3-8c65-fb160da0071f','158c047a-c907-4556-b7ef-446551a6b5f7','62e90394-69f5-4237-9190-012177145e10','d29b2b05-8046-44ba-8758-1e26182fcf32','729827e3-9c14-49f7-bb1b-9608f156bbb8','966707d0-3269-4727-9be2-8c3a10f19b9d','194ae4cb-b126-40b2-bd5b-6091b380977d','fe930be7-5e62-47db-91af-98c3a49a38b1']);\r\nlet high = dynamic(['cf1c38e5-3621-4004-a7cb-879624dced7c','7495fdc4-34c4-4d15-a289-98788ce399fd','aaf43236-0c0d-4d5f-883a-6955382ac081','3edaf663-341e-4475-9f94-5c398ef6c070','7698a772-787b-4ac8-901f-60d6b08affd2','b1be1c3e-b65d-4f19-8427-f6fa0d97feb9','9f06204d-73c1-4d4c-880a-6edb90606fd8','29232cdf-9323-42fd-ade2-1d097af3e4de','be2f45a1-457d-42af-a067-6ec1fa63bc45','7be44c8a-adaf-4e2a-84d6-ab2649e08a13','e8611ab8-c189-46e8-94e1-60213ab1f814']);\r\nAuditLogs\r\n| where OperationName == \"Update user\"\r\n| mv-expand AdditionalDetails\r\n| mv-expand TargetResources\r\n| where AdditionalDetails.key == \"UserPrincipalName\"\r\n| mv-expand TargetResources\r\n| extend RoleId = tostring(TargetResources.modifiedProperties[0].newValue)\r\n| extend RoleName = tostring(TargetResources.modifiedProperties[1].newValue)\r\n| where RoleId in (critical,high)\r\n| where isnotempty(RoleId) or isnotempty(RoleName)\r\n| extend TargetId = tostring(TargetResources.id)\r\n| extend Target =  iff(tostring(TargetResources.userPrincipalName) has \"#EXT#\",replace(\"_\",\"@\",tostring(split(TargetResources.userPrincipalName, \"#\")[0])),TargetResources.userPrincipalName),tostring(TargetResources.userPrincipalName)\r\n| join kind=inner ( BehaviorAnalytics\r\n) on $left._ItemId == $right.SourceRecordId\r\n| where UsersInsights.BlastRadius == \"High\" or ActivityInsights has \"True\"\r\n|  extend UserPrincipalName = iff(UserPrincipalName has \"#EXT#\",replace(\"_\",\"@\",tostring(split(UserPrincipalName, \"#\")[0])),UserPrincipalName),\r\nUserName = iff(UserName has \"#EXT#\",replace(\"_\",\"@\",tostring(split(UserPrincipalName, \"#\")[0])),UserName) \r\n| project TimeGenerated, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"TargetUser\"]=Target,RoleName,ActivityInsights ,SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| summarize count() by UserPrincipalName\r\n| sort by count_ desc",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Anomalous AAD Account Manipulation",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "IPAddress",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "uninitialized",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ]
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results128",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results128",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "//Critical Roles: can impersonate  any user or app, can update passwords for users or service principals (if the role can let a user update passwords for privileged users, if an attacker compromises this user then attacker can update passwords for privileged users hence gaining more privileges so users with this role are equally critical)\r\n//High Roles: Administrators that can manage all aspects or permissions of important products but can't update credentials and impersonate another user/app\r\nlet critical = dynamic(['9b895d92-2cd3-44c7-9d02-a6ac2d5ea5c3','c4e39bd9-1100-46d3-8c65-fb160da0071f','158c047a-c907-4556-b7ef-446551a6b5f7','62e90394-69f5-4237-9190-012177145e10','d29b2b05-8046-44ba-8758-1e26182fcf32','729827e3-9c14-49f7-bb1b-9608f156bbb8','966707d0-3269-4727-9be2-8c3a10f19b9d','194ae4cb-b126-40b2-bd5b-6091b380977d','fe930be7-5e62-47db-91af-98c3a49a38b1']);\r\nlet high = dynamic(['cf1c38e5-3621-4004-a7cb-879624dced7c','7495fdc4-34c4-4d15-a289-98788ce399fd','aaf43236-0c0d-4d5f-883a-6955382ac081','3edaf663-341e-4475-9f94-5c398ef6c070','7698a772-787b-4ac8-901f-60d6b08affd2','b1be1c3e-b65d-4f19-8427-f6fa0d97feb9','9f06204d-73c1-4d4c-880a-6edb90606fd8','29232cdf-9323-42fd-ade2-1d097af3e4de','be2f45a1-457d-42af-a067-6ec1fa63bc45','7be44c8a-adaf-4e2a-84d6-ab2649e08a13','e8611ab8-c189-46e8-94e1-60213ab1f814']);\r\nAuditLogs\r\n| where OperationName == \"Update user\"\r\n| mv-expand AdditionalDetails\r\n| mv-expand TargetResources\r\n| where AdditionalDetails.key == \"UserPrincipalName\"\r\n| mv-expand TargetResources\r\n| extend RoleId = tostring(TargetResources.modifiedProperties[0].newValue)\r\n| extend RoleName = tostring(TargetResources.modifiedProperties[1].newValue)\r\n| where RoleId in (critical,high)\r\n| where isnotempty(RoleId) or isnotempty(RoleName)\r\n| extend TargetId = tostring(TargetResources.id)\r\n| extend Target =  iff(tostring(TargetResources.userPrincipalName) has \"#EXT#\",replace(\"_\",\"@\",tostring(split(TargetResources.userPrincipalName, \"#\")[0])),TargetResources.userPrincipalName),tostring(TargetResources.userPrincipalName)\r\n| join kind=inner ( BehaviorAnalytics\r\n) on $left._ItemId == $right.SourceRecordId\r\n| where UsersInsights.BlastRadius == \"High\" or ActivityInsights has \"True\"\r\n|  extend UserPrincipalName = iff(UserPrincipalName has \"#EXT#\",replace(\"_\",\"@\",tostring(split(UserPrincipalName, \"#\")[0])),UserPrincipalName),\r\nUserName = iff(UserName has \"#EXT#\",replace(\"_\",\"@\",tostring(split(UserPrincipalName, \"#\")[0])),UserName) \r\n| project TimeGenerated, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"TargetUser\"]=Target,RoleName,ActivityInsights ,SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| summarize count() by UserPrincipalName\r\n| sort by count_ desc",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Anomalous AAD Account Creation",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "IPAddress",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "uninitialized",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ]
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results129",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results129",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let critical = dynamic(['9b895d92-2cd3-44c7-9d02-a6ac2d5ea5c3','c4e39bd9-1100-46d3-8c65-fb160da0071f','158c047a-c907-4556-b7ef-446551a6b5f7','62e90394-69f5-4237-9190-012177145e10','d29b2b05-8046-44ba-8758-1e26182fcf32','729827e3-9c14-49f7-bb1b-9608f156bbb8','966707d0-3269-4727-9be2-8c3a10f19b9d','194ae4cb-b126-40b2-bd5b-6091b380977d','fe930be7-5e62-47db-91af-98c3a49a38b1']);\r\nlet high = dynamic(['cf1c38e5-3621-4004-a7cb-879624dced7c','7495fdc4-34c4-4d15-a289-98788ce399fd','aaf43236-0c0d-4d5f-883a-6955382ac081','3edaf663-341e-4475-9f94-5c398ef6c070','7698a772-787b-4ac8-901f-60d6b08affd2','b1be1c3e-b65d-4f19-8427-f6fa0d97feb9','9f06204d-73c1-4d4c-880a-6edb90606fd8','29232cdf-9323-42fd-ade2-1d097af3e4de','be2f45a1-457d-42af-a067-6ec1fa63bc45','7be44c8a-adaf-4e2a-84d6-ab2649e08a13','e8611ab8-c189-46e8-94e1-60213ab1f814']);\r\nAuditLogs\r\n| where OperationName == \"Add member to role\"\r\n| mv-expand TargetResources\r\n| extend RoleId = tostring(TargetResources.modifiedProperties[0].newValue)\r\n| extend RoleName = tostring(TargetResources.modifiedProperties[1].newValue)\r\n| where RoleId in (critical,high)\r\n| extend TargetId = tostring(TargetResources.id)\r\n| extend Target = tostring(TargetResources.userPrincipalName)\r\n| where isnotempty(RoleId) or isnotempty(RoleName)\r\n| join kind=inner ( BehaviorAnalytics\r\n) on $left._ItemId == $right.SourceRecordId\r\n| where UsersInsights.BlasrRadius == \"High\" or ActivityInsights has \"True\"\r\n| project TimeGenerated, UserName, UserPrincipalName, UsersInsights, ActivityType, ActionType, [\"TargetUser\"]=Target,RoleName,ActivityInsights ,SourceIPAddress, SourceIPLocation, SourceDevice, DevicesInsights\r\n| where UserPrincipalName in ({UserPrincipalName})\r\n| summarize count() by UserPrincipalName\r\n| sort by count_ desc",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Anomalous Role Assignment",
                          "timeContext": {
                            "durationMs": 5184000000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showRefreshButton": true,
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "UserPrincipalName",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "IPAddress",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "uninitialized",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ]
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results130",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results130",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "TAB",
                    "comparison": "isEqualTo",
                    "value": "BL"
                  },
                  "name": "Behavior Logs Group"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "This section is bound by the above parameters for Subscription, Workspace, TimeRange, and User. Panels are dynamically displayed meaning numerous queries are executed and only panels returning data are displayed. For more information, see üí°[Modern Risk Pain Points](https://docs.microsoft.com/microsoft-365/compliance/insider-risk-management#modern-risk-pain-points) & üí°[Hunt for Threats with Azure Sentinel](https://docs.microsoft.com/azure/sentinel/hunting)\r\n\r\n| <strong> User Package Queries </strong> | \r\n|:--|\r\n| User Query Review |\r\n| User Log Analytics Query Logs |\r\n| User Query Data Volume Anomalies |\r\n| User Multiple Failed Queries |\r\n| User Multiple Large Queries |\r\n",
                          "style": "info"
                        },
                        "conditionalVisibility": {
                          "parameterName": "Help",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "SI OV"
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "7afa304d-b448-4d6c-8c54-69e51a7249a9",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results140",
                              "type": 1,
                              "query": "LAQueryLogs\r\n| where AADEmail in ({UserPrincipalName})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results140",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "f7512a90-bfac-4655-87a9-693c0dd1a96e",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results141",
                              "type": 1,
                              "query": "let lookback = {TimeRange:grain};\r\nlet threshold = 0;\r\nLAQueryLogs\r\n| make-series rows = sum(ResponseRowCount) on TimeGenerated in range(startofday(ago(lookback)), now(), 1h)\r\n| extend (anomalies, score, baseline) = series_decompose_anomalies(rows,3, -1, 'linefit')\r\n| mv-expand anomalies to typeof(int), score to typeof(double), TimeGenerated to typeof(datetime)\r\n| where anomalies > threshold\r\n| sort by score desc\r\n| join kind=rightsemi (\r\nLAQueryLogs\r\n| summarize make_set(QueryText) by AADEmail, RequestTarget, TimeGenerated = bin(TimeGenerated, 1h))\r\non TimeGenerated\r\n| project TimeGenerated, AADEmail, RequestTarget, set_QueryText\r\n| where AADEmail in ({UserPrincipalName})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results141",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "b14b7da1-9438-403b-ab3f-f437b84b3121",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results142",
                              "type": 1,
                              "query": "let lookback = {TimeRange:grain};\r\nlet timeframe = 1h;\r\nlet threshold = 3;\r\nLAQueryLogs\r\n| where TimeGenerated > ago(lookback)\r\n| where ResponseCode != 200\r\n| summarize count() by AADEmail, bin(TimeGenerated, timeframe)\r\n| where count_ > threshold\r\n| join kind=rightsemi (\r\nLAQueryLogs\r\n| where TimeGenerated > ago(lookback)\r\n| summarize make_set(QueryText) by AADEmail, bin(TimeGenerated, timeframe))\r\non AADEmail, TimeGenerated\r\n| where AADEmail in ({UserPrincipalName})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "0",
                        "name": "Results142",
                        "styleSettings": {
                          "maxWidth": "0"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "969178cb-490d-442b-ae0d-b62a5dc0b66d",
                              "version": "KqlParameterItem/1.0",
                              "name": "Results143",
                              "type": 1,
                              "query": "let UI_apps = dynamic(['ASI_Portal','AzureMonitorLogsConnector','AppAnalytics']);\r\nlet threshold = 3;\r\nLAQueryLogs\r\n| where (ResponseRowCount == 5000 and RequestClientApp in(UI_apps)) or (ResponseRowCount > 5000 and RequestClientApp !in(UI_apps))\r\n| summarize count() by AADEmail\r\n| where count_ > threshold\r\n| join kind=rightsemi (\r\nLAQueryLogs\r\n| where (ResponseRowCount == 5000 and RequestClientApp in(UI_apps)) or (ResponseRowCount > 5000 and RequestClientApp !in(UI_apps)))\r\non AADEmail\r\n| where AADEmail in ({UserPrincipalName})\r\n| limit 1\r\n| summarize count()\r\n| extend Results = iff(count_ ==0, \"No\", \"Yes\")\r\n| project Results",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "TimeRange",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "doNotRunWhenHidden": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "85",
                        "name": "Results143",
                        "styleSettings": {
                          "maxWidth": "85"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "LAQueryLogs\r\n| where AADEmail in ({UserPrincipalName})\r\n| project TimeGenerated, AADEmail, QueryText, ResponseDurationMs, StatsCPUTimeMs, StatsDataProcessedKB\r\n| order by TimeGenerated desc\r\n| limit 250",
                          "size": 1,
                          "showAnalytics": true,
                          "title": "User Query Review",
                          "timeContext": {
                            "durationMs": 604800000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "AADEmail",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "QueryText",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "CellDetails",
                                  "linkIsContextBlade": true
                                }
                              },
                              {
                                "columnMatch": "ResponseDurationMs",
                                "formatter": 3,
                                "formatOptions": {
                                  "palette": "greenRed"
                                }
                              },
                              {
                                "columnMatch": "StatsCPUTimeMs",
                                "formatter": 3,
                                "formatOptions": {
                                  "palette": "greenRed"
                                }
                              },
                              {
                                "columnMatch": "StatsDataProcessedKB",
                                "formatter": 3,
                                "formatOptions": {
                                  "palette": "greenRed"
                                }
                              }
                            ],
                            "filter": true
                          },
                          "sortBy": [],
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results140",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results140",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "LAQueryLogs\r\n| where AADEmail in ({UserPrincipalName})\r\n| summarize count() by AADEmail, QueryText\r\n| sort by count_ desc\r\n| limit 250\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Log Analytics Query Logs",
                          "timeContext": {
                            "durationMs": 604800000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "AADEmail",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "QueryText",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "down",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ],
                            "filter": true
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results140",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results140b",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let lookback = {TimeRange:grain};\r\nlet threshold = 0;\r\nLAQueryLogs\r\n| make-series rows = sum(ResponseRowCount) on TimeGenerated in range(startofday(ago(lookback)), now(), 1h)\r\n| extend (anomalies, score, baseline) = series_decompose_anomalies(rows,3, -1, 'linefit')\r\n| mv-expand anomalies to typeof(int), score to typeof(double), TimeGenerated to typeof(datetime)\r\n| where anomalies > threshold\r\n| sort by score desc\r\n| join kind=rightsemi (\r\nLAQueryLogs\r\n| summarize make_set(QueryText) by AADEmail, RequestTarget, TimeGenerated = bin(TimeGenerated, 1h))\r\non TimeGenerated\r\n| project TimeGenerated, AADEmail, RequestTarget, set_QueryText\r\n| where AADEmail in ({UserPrincipalName})\r\n| summarize count() by AADEmail\r\n| sort by count_ desc",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Query Data Volume Anomalies",
                          "timeContext": {
                            "durationMs": 604800000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "AADEmail",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "QueryText",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "down",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ],
                            "filter": true
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results141",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results141",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let lookback = {TimeRange:grain};\r\nlet timeframe = 1h;\r\nlet threshold = 3;\r\nLAQueryLogs\r\n| where TimeGenerated > ago(lookback)\r\n| where ResponseCode != 200\r\n| summarize count() by AADEmail, bin(TimeGenerated, timeframe)\r\n| where count_ > threshold\r\n| join kind=rightsemi (\r\nLAQueryLogs\r\n| where TimeGenerated > ago(lookback)\r\n| summarize make_set(QueryText) by AADEmail, bin(TimeGenerated, timeframe))\r\non AADEmail, TimeGenerated\r\n| where AADEmail in ({UserPrincipalName})\r\n| summarize count() by AADEmail\r\n| sort by count_ desc",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Multiple Failed Queries",
                          "timeContext": {
                            "durationMs": 604800000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "AADEmail",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "QueryText",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "down",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ],
                            "filter": true
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results142",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results142",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let UI_apps = dynamic(['ASI_Portal','AzureMonitorLogsConnector','AppAnalytics']);\r\nlet threshold = 3;\r\nLAQueryLogs\r\n| where (ResponseRowCount == 5000 and RequestClientApp in(UI_apps)) or (ResponseRowCount > 5000 and RequestClientApp !in(UI_apps))\r\n| summarize count() by AADEmail\r\n| where count_ > threshold\r\n| join kind=rightsemi (\r\nLAQueryLogs\r\n| where (ResponseRowCount == 5000 and RequestClientApp in(UI_apps)) or (ResponseRowCount > 5000 and RequestClientApp !in(UI_apps)))\r\non AADEmail\r\n| where AADEmail in ({UserPrincipalName})\r\n| summarize count() by AADEmail\r\n| sort by count_ desc",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "User Multiple Large Queries",
                          "timeContext": {
                            "durationMs": 604800000
                          },
                          "timeContextFromParameter": "TimeRange",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "AADEmail",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "resource",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "QueryText",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "down",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "count_",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ],
                            "filter": true
                          },
                          "mapSettings": {
                            "locInfo": "CountryRegion",
                            "locInfoColumn": "Location",
                            "latitude": "SourceIPLocation",
                            "longitude": "SourceIPLocation",
                            "sizeSettings": "Location",
                            "sizeAggregation": "Count",
                            "legendMetric": "Location",
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "Location",
                              "colorAggregation": "Count",
                              "type": "thresholds",
                              "thresholdsGrid": [
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "blueDark"
                                }
                              ]
                            }
                          }
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "Results143",
                          "comparison": "isEqualTo",
                          "value": "Yes"
                        },
                        "name": "Results143",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "TAB",
                    "comparison": "isEqualTo",
                    "value": "LQ"
                  },
                  "name": "User Log Queries Group"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "TAB",
              "comparison": "isEqualTo",
              "value": "UP"
            },
            "name": "User Package"
          }
        ]
      },
      "name": "IRM"
    }
  ],
  "fromTemplateId": "sentinel-InsiderRiskManagement",
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}