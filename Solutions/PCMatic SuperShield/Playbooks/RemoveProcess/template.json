{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "logicAppName": {
      "type": "string",
      "defaultValue": "RemoveProcess",
      "metadata": {
        "description": "Name of the Logic App."
      }
    },
    "logicAppLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "allowedValues": [
        "[resourceGroup().location]",
        "asia",
        "asiapacific",
        "australia",
        "australiacentral",
        "australiacentral2",
        "australiaeast",
        "australiasoutheast",
        "brazil",
        "brazilsouth",
        "brazilsoutheast",
        "canada",
        "canadacentral",
        "canadaeast",
        "centralindia",
        "centralus",
        "centraluseuap",
        "centralusstage",
        "chinaeast",
        "chinanorth",
        "eastasia",
        "eastasiastage",
        "eastus",
        "eastus2",
        "eastus2euap",
        "eastus2stage",
        "eastusstage",
        "europe",
        "francecentral",
        "francesouth",
        "germanycentral",
        "germanynorth",
        "germanynortheast",
        "germanywestcentral",
        "global",
        "india",
        "japan",
        "japaneast",
        "japanwest",
        "jioindiawest",
        "koreacentral",
        "koreasouth",
        "northcentralus",
        "northcentralusstage",
        "northeurope",
        "norwayeast",
        "norwaywest",
        "southafricanorth",
        "southafricawest",
        "southcentralus",
        "southcentralusstage",
        "southeastasia",
        "southeastasiastage",
        "southindia",
        "switzerland",
        "switzerlandnorth",
        "switzerlandwest",
        "uaecentral",
        "uaenorth",
        "uk",
        "uksouth",
        "ukwest",
        "unitedstates",
        "usdodeast",
        "usdodwest",
        "usgovarizona",
        "usgoviowa",
        "usgovtexas",
        "usgovvirginia",
        "usseceast",
        "ussecwest",
        "west",
        "westcentralus",
        "westeurope",
        "westindia",
        "westus",
        "westus2",
        "westus2stage",
        "westus3",
        "westusstage"
      ],
      "metadata": {
        "description": "Location of the Logic App."
      }
    },
    "Auth-URI": {
      "type": "string",
      "defaultValue": "https://ss-api-v1.pcpitstop.com/api/v1/login/auth"
    },
    "Post_to_API-URI": {
      "type": "string",
      "defaultValue": "https://ss-api-insider.pcpitstop.com/api/v1/@{variables('processFor')}/@{variables('levelId')}lists/@{variables('osPlatform')}/@{variables('blockAllow')}/@{variables('processBy')}"
    },
    "pcmatic_Tag": {
      "type": "string",
      "defaultValue": "block_process"
    },
    "azuresentinel-1_name": {
      "type": "string",
      "defaultValue": "azuresentinel-1"
    },
    "azuresentinel-1_displayName": {
      "type": "string",
      "defaultValue": "john.farley@t1dt3.onmicrosoft.com"
    },
    "azuresentinel-1_token:clientId": {
      "type": "string",
      "defaultValue": null,
      "metadata": {
        "description": "Client (or Application) ID of the Azure Active Directory application."
      }
    },
    "azuresentinel-1_token:clientSecret": {
      "type": "securestring",
      "defaultValue": null,
      "metadata": {
        "description": "Client secret of the Azure Active Directory application."
      }
    },
    "azuresentinel-1_token:TenantId": {
      "type": "string",
      "defaultValue": "[subscription().tenantId]",
      "metadata": {
        "description": "The tenant ID of for the Azure Active Directory application."
      }
    },
    "azuresentinel-1_token:resourceUri": {
      "type": "string",
      "defaultValue": null,
      "metadata": {
        "description": "The resource you are requesting authorization to use."
      }
    },
    "azuresentinel-1_token:grantType": {
      "type": "string",
      "defaultValue": "code",
      "allowedValues": [
        "code",
        "client_credentials"
      ],
      "metadata": {
        "description": "Grant type"
      }
    },
    "keyvault-5_name": {
      "type": "string",
      "defaultValue": "keyvault-5"
    },
    "keyvault-5_displayName": {
      "type": "string",
      "defaultValue": "john.farley@t1dt3.onmicrosoft.com"
    },
    "keyvault-5_vaultName": {
      "type": "string",
      "defaultValue": "ApiKeyVaultTest",
      "metadata": {
        "description": "Name of the vault"
      }
    },
    "keyvault-5_token:clientId": {
      "type": "string",
      "defaultValue": null,
      "metadata": {
        "description": "Client (or Application) ID of the Azure Active Directory application."
      }
    },
    "keyvault-5_token:clientSecret": {
      "type": "securestring",
      "defaultValue": null,
      "metadata": {
        "description": "Client secret of the Azure Active Directory application."
      }
    },
    "keyvault-5_token:TenantId": {
      "type": "string",
      "defaultValue": "[subscription().tenantId]",
      "metadata": {
        "description": "The tenant ID for the Azure Active Directory application."
      }
    },
    "keyvault-5_token:resourceUri": {
      "type": "string",
      "defaultValue": null,
      "metadata": {
        "description": "The resource you are requesting authorization to use, for instance https://vault.azure.net"
      }
    },
    "keyvault-5_token:grantType": {
      "type": "string",
      "defaultValue": "code",
      "allowedValues": [
        "code",
        "client_credentials"
      ],
      "metadata": {
        "description": "Grant type"
      }
    }
  },
  "variables": {},
  "resources": [
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2019-05-01",
      "name": "[parameters('logicAppName')]",
      "location": "[parameters('logicAppLocation')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('azuresentinel-1_name'))]",
        "[resourceId('Microsoft.Web/connections', parameters('keyvault-5_name'))]"
      ],
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "Microsoft_Sentinel_incident": {
              "type": "ApiConnectionWebhook",
              "inputs": {
                "body": {
                  "callback_url": "@{listCallbackUrl()}"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel_1']['connectionId']"
                  }
                },
                "path": "/incident-creation"
              }
            }
          },
          "actions": {
            "API_User": {
              "runAfter": {},
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['keyvault']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/secrets/@{encodeURIComponent('apiUser32')}/value"
              }
            },
            "Add_comment_to_incident_(V3)": {
              "runAfter": {
                "Post_to_API": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "body": {
                  "incidentArmId": "@triggerBody()?['object']?['id']",
                  "message": "<p>Process removed from black/whitelists.</p>"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel_1']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/Incidents/Comment"
              }
            },
            "Auth": {
              "runAfter": {
                "API_User": [
                  "Succeeded"
                ]
              },
              "type": "Http",
              "inputs": {
                "body": "@json(body('API_User')?['value'])",
                "method": "POST",
                "uri": "[parameters('Auth-URI')]"
              }
            },
            "Check_Tag_Data": {
              "actions": {
                "Terminate": {
                  "runAfter": {},
                  "type": "Terminate",
                  "inputs": {
                    "runError": {
                      "code": "500",
                      "message": "Block/Allow variables not set"
                    },
                    "runStatus": "Failed"
                  }
                }
              },
              "runAfter": {
                "Parse_Tags": [
                  "Succeeded"
                ]
              },
              "expression": {
                "or": [
                  {
                    "equals": [
                      "@variables('blockAllow')",
                      ""
                    ]
                  },
                  {
                    "equals": [
                      "@variables('processFor')",
                      ""
                    ]
                  },
                  {
                    "equals": [
                      "@variables('processBy')",
                      ""
                    ]
                  }
                ]
              },
              "type": "If"
            },
            "Custom_details": {
              "runAfter": {
                "Parse_custom_details": [
                  "Succeeded"
                ]
              },
              "type": "Select",
              "inputs": {
                "from": "@body('Parse_custom_details')",
                "select": {
                  "accountID": "@json(item()?['details'])?['accountID']?[0]",
                  "cmdLineArgs": "@json(item()?['details'])?['cmdLineArgs']?[0]",
                  "companyGroupID": "@json(item()?['details'])?['groupID']?[0]",
                  "companyGroupName": "@json(item()?['details'])?['groupName']?[0]",
                  "companyID": "@json(item()?['details'])?['companyID']?[0]",
                  "companyName": "@json(item()?['details'])?['companyName']?[0]",
                  "deviceExternalID": "@json(item()?['details'])?['deviceExternalID']?[0]",
                  "isScript": "@json(item()?['details'])?['isScript']?[0]",
                  "isUnknown": "@json(item()?['details'])?['isUnknown']?[0]",
                  "md5": "@json(item()?['details'])?['md5']?[0]",
                  "osPlatform": "@json(item()?['details'])?['osPlatform']?[0]",
                  "parentPath": "@json(item()?['details'])?['parentPath']?[0]",
                  "product": "@json(item()?['details'])?['product']?[0]",
                  "userDecided": "@json(item()?['details'])?['userDecided']?[0]"
                }
              }
            },
            "Foreach_entitiesArr": {
              "foreach": "@variables('entitiesArr')",
              "actions": {
                "set_clArgs": {
                  "actions": {
                    "Set_variable_7": {
                      "runAfter": {},
                      "type": "SetVariable",
                      "inputs": {
                        "name": "clArgs",
                        "value": "@{items('Foreach_entitiesArr')?['properties']?['commandLine']}"
                      }
                    }
                  },
                  "runAfter": {
                    "set_path": [
                      "Succeeded"
                    ]
                  },
                  "expression": {
                    "and": [
                      {
                        "not": {
                          "equals": [
                            "@items('Foreach_entitiesArr')?['properties']?['commandLine']",
                            null
                          ]
                        }
                      }
                    ]
                  },
                  "type": "If"
                },
                "set_deviceName": {
                  "actions": {
                    "Set_variable_2": {
                      "runAfter": {},
                      "type": "SetVariable",
                      "inputs": {
                        "name": "deviceName",
                        "value": "@{items('Foreach_entitiesArr')?['properties']?['hostName']}"
                      }
                    }
                  },
                  "runAfter": {
                    "set_ipAddress": [
                      "Succeeded"
                    ]
                  },
                  "expression": {
                    "and": [
                      {
                        "not": {
                          "equals": [
                            "@items('Foreach_entitiesArr')?['properties']?['hostName']",
                            null
                          ]
                        }
                      }
                    ]
                  },
                  "type": "If"
                },
                "set_displayText_to_fileName_if_displayText_is_still_empty": {
                  "actions": {
                    "Set_variable_10": {
                      "runAfter": {},
                      "type": "SetVariable",
                      "inputs": {
                        "name": "displayText",
                        "value": "@{items('Foreach_entitiesArr')?['properties']?['fileName']}"
                      }
                    }
                  },
                  "runAfter": {
                    "set_hash_for_mac-linux": [
                      "Succeeded"
                    ]
                  },
                  "expression": {
                    "and": [
                      {
                        "equals": [
                          "@variables('displayText')",
                          ""
                        ]
                      },
                      {
                        "equals": [
                          "@items('Foreach_entitiesArr')?['kind']",
                          "File"
                        ]
                      }
                    ]
                  },
                  "type": "If"
                },
                "set_hash_for_mac-linux": {
                  "actions": {
                    "Set_hash": {
                      "runAfter": {},
                      "type": "SetVariable",
                      "inputs": {
                        "name": "hash",
                        "value": "@{items('Foreach_entitiesArr')?['properties']?['hashValue']}"
                      }
                    }
                  },
                  "runAfter": {
                    "set_clArgs": [
                      "Succeeded"
                    ]
                  },
                  "expression": {
                    "and": [
                      {
                        "equals": [
                          "@items('Foreach_entitiesArr')?['kind']",
                          "FileHash"
                        ]
                      },
                      {
                        "not": {
                          "equals": [
                            "@items('Foreach_entitiesArr')?['properties']?['hashValue']",
                            ""
                          ]
                        }
                      },
                      {
                        "not": {
                          "equals": [
                            "@variables('osPlatform')",
                            "win"
                          ]
                        }
                      }
                    ]
                  },
                  "type": "If"
                },
                "set_ipAddress": {
                  "actions": {
                    "Set_variable": {
                      "runAfter": {},
                      "type": "SetVariable",
                      "inputs": {
                        "name": "ipAddress",
                        "value": "@{items('Foreach_entitiesArr')?['properties']?['address']}"
                      }
                    }
                  },
                  "runAfter": {},
                  "expression": {
                    "and": [
                      {
                        "not": {
                          "equals": [
                            "@items('Foreach_entitiesArr')?['status_code']",
                            null
                          ]
                        }
                      }
                    ]
                  },
                  "type": "If"
                },
                "set_path": {
                  "actions": {
                    "Set_variable_6": {
                      "runAfter": {},
                      "type": "SetVariable",
                      "inputs": {
                        "name": "path",
                        "value": "@{items('Foreach_entitiesArr')?['properties']?['directory']}"
                      }
                    }
                  },
                  "runAfter": {
                    "set_deviceName": [
                      "Succeeded"
                    ]
                  },
                  "expression": {
                    "and": [
                      {
                        "not": {
                          "equals": [
                            "@items('Foreach_entitiesArr')?['properties']?['fileName']",
                            null
                          ]
                        }
                      }
                    ]
                  },
                  "type": "If"
                }
              },
              "runAfter": {
                "set_displayText": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "Parse_Incident_Body": {
              "runAfter": {
                "Check_Tag_Data": [
                  "Succeeded"
                ]
              },
              "type": "ParseJson",
              "inputs": {
                "content": "@triggerBody()",
                "schema": {
                  "properties": {
                    "eventUniqueId": {
                      "type": "string"
                    },
                    "object": {
                      "properties": {
                        "etag": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "properties": {
                          "properties": {
                            "additionalData": {
                              "properties": {
                                "alertProductNames": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "alertsCount": {
                                  "type": "integer"
                                },
                                "bookmarksCount": {
                                  "type": "integer"
                                },
                                "commentsCount": {
                                  "type": "integer"
                                },
                                "tactics": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "techniques": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "alerts": {
                              "items": {
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "kind": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "properties": {
                                    "properties": {
                                      "additionalData": {
                                        "properties": {
                                          "Alert generation status": {
                                            "type": "string"
                                          },
                                          "Analytic Rule Ids": {
                                            "type": "string"
                                          },
                                          "Analytic Rule Name": {
                                            "type": "string"
                                          },
                                          "Correlation Id": {
                                            "type": "string"
                                          },
                                          "Custom Details": {
                                            "type": "string"
                                          },
                                          "Data Sources": {
                                            "type": "string"
                                          },
                                          "Event Grouping": {
                                            "type": "string"
                                          },
                                          "OriginalQuery": {
                                            "type": "string"
                                          },
                                          "ProcessedBySentinel": {
                                            "type": "string"
                                          },
                                          "Query": {
                                            "type": "string"
                                          },
                                          "Query End Time UTC": {
                                            "type": "string"
                                          },
                                          "Query Period": {
                                            "type": "string"
                                          },
                                          "Query Start Time UTC": {
                                            "type": "string"
                                          },
                                          "Search Query Results Overall Count": {
                                            "type": "string"
                                          },
                                          "Trigger Operator": {
                                            "type": "string"
                                          },
                                          "Trigger Threshold": {
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "alertDisplayName": {
                                        "type": "string"
                                      },
                                      "alertType": {
                                        "type": "string"
                                      },
                                      "confidenceLevel": {
                                        "type": "string"
                                      },
                                      "endTimeUtc": {
                                        "type": "string"
                                      },
                                      "friendlyName": {
                                        "type": "string"
                                      },
                                      "processingEndTime": {
                                        "type": "string"
                                      },
                                      "productComponentName": {
                                        "type": "string"
                                      },
                                      "productName": {
                                        "type": "string"
                                      },
                                      "providerAlertId": {
                                        "type": "string"
                                      },
                                      "resourceIdentifiers": {
                                        "items": {
                                          "properties": {
                                            "type": {
                                              "type": "string"
                                            },
                                            "workspaceId": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "workspaceId"
                                          ],
                                          "type": "object"
                                        },
                                        "type": "array"
                                      },
                                      "severity": {
                                        "type": "string"
                                      },
                                      "startTimeUtc": {
                                        "type": "string"
                                      },
                                      "status": {
                                        "type": "string"
                                      },
                                      "systemAlertId": {
                                        "type": "string"
                                      },
                                      "tactics": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "timeGenerated": {
                                        "type": "string"
                                      },
                                      "vendorName": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name",
                                  "type",
                                  "kind",
                                  "properties"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "bookmarks": {
                              "type": "array"
                            },
                            "comments": {
                              "type": "array"
                            },
                            "createdTimeUtc": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "firstActivityTimeUtc": {
                              "type": "string"
                            },
                            "incidentNumber": {
                              "type": "integer"
                            },
                            "incidentUrl": {
                              "type": "string"
                            },
                            "labels": {
                              "type": "array"
                            },
                            "lastActivityTimeUtc": {
                              "type": "string"
                            },
                            "lastModifiedTimeUtc": {
                              "type": "string"
                            },
                            "owner": {
                              "properties": {
                                "assignedTo": {},
                                "email": {},
                                "objectId": {},
                                "userPrincipalName": {}
                              },
                              "type": "object"
                            },
                            "providerIncidentId": {
                              "type": "string"
                            },
                            "providerName": {
                              "type": "string"
                            },
                            "relatedAnalyticRuleIds": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "relatedEntities": {
                              "items": {
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "kind": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "properties": {
                                    "properties": {
                                      "address": {
                                        "type": "string"
                                      },
                                      "friendlyName": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name",
                                  "type",
                                  "kind",
                                  "properties"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "severity": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "objectEventType": {
                      "type": "string"
                    },
                    "objectSchemaType": {
                      "type": "string"
                    },
                    "workspaceId": {
                      "type": "string"
                    },
                    "workspaceInfo": {
                      "properties": {
                        "ResourceGroupName": {
                          "type": "string"
                        },
                        "SubscriptionId": {
                          "type": "string"
                        },
                        "WorkspaceName": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "Parse_JWT": {
              "runAfter": {
                "Auth": [
                  "Succeeded"
                ]
              },
              "type": "ParseJson",
              "inputs": {
                "content": "@body('Auth')",
                "schema": {
                  "properties": {
                    "accountId": {
                      "type": "integer"
                    },
                    "account_id": {
                      "type": "integer"
                    },
                    "accounts": {
                      "type": "array"
                    },
                    "jwtToken": {
                      "type": "string"
                    },
                    "jwt_token": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "Parse_Tags": {
              "foreach": "@triggerBody()?['object']?['properties']?['labels']",
              "actions": {
                "Parse_JSON_2": {
                  "runAfter": {},
                  "type": "ParseJson",
                  "inputs": {
                    "content": "@items('Parse_Tags')",
                    "schema": {
                      "properties": {
                        "labelName": {
                          "type": "string"
                        },
                        "labelType": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  }
                },
                "Set_blockAllow": {
                  "actions": {
                    "Set_variable_3": {
                      "runAfter": {},
                      "type": "SetVariable",
                      "inputs": {
                        "name": "blockAllow",
                        "value": "@body('Parse_JSON_2')?['labelName']"
                      }
                    }
                  },
                  "runAfter": {
                    "Parse_JSON_2": [
                      "Succeeded"
                    ]
                  },
                  "expression": {
                    "or": [
                      {
                        "equals": [
                          "@body('Parse_JSON_2')?['labelName']",
                          "block"
                        ]
                      },
                      {
                        "equals": [
                          "@body('Parse_JSON_2')?['labelName']",
                          "allow"
                        ]
                      }
                    ]
                  },
                  "type": "If"
                },
                "Set_processBy": {
                  "actions": {
                    "Set_variable_4": {
                      "runAfter": {},
                      "type": "SetVariable",
                      "inputs": {
                        "name": "processBy",
                        "value": "@body('Parse_JSON_2')?['labelName']"
                      }
                    }
                  },
                  "runAfter": {
                    "Set_blockAllow": [
                      "Succeeded"
                    ]
                  },
                  "expression": {
                    "or": [
                      {
                        "equals": [
                          "@body('Parse_JSON_2')?['labelName']",
                          "hash"
                        ]
                      },
                      {
                        "equals": [
                          "@body('Parse_JSON_2')?['labelName']",
                          "path"
                        ]
                      },
                      {
                        "equals": [
                          "@body('Parse_JSON_2')?['labelName']",
                          "sign"
                        ]
                      },
                      {
                        "equals": [
                          "@body('Parse_JSON_2')?['labelName']",
                          "script"
                        ]
                      }
                    ]
                  },
                  "type": "If"
                },
                "Set_processFor": {
                  "actions": {
                    "Set_variable_5": {
                      "runAfter": {},
                      "type": "SetVariable",
                      "inputs": {
                        "name": "processFor",
                        "value": "@body('Parse_JSON_2')?['labelName']"
                      }
                    }
                  },
                  "runAfter": {
                    "Set_processBy": [
                      "Succeeded"
                    ]
                  },
                  "expression": {
                    "or": [
                      {
                        "equals": [
                          "@body('Parse_JSON_2')?['labelName']",
                          "account"
                        ]
                      },
                      {
                        "equals": [
                          "@body('Parse_JSON_2')?['labelName']",
                          "company"
                        ]
                      },
                      {
                        "equals": [
                          "@body('Parse_JSON_2')?['labelName']",
                          "group"
                        ]
                      },
                      {
                        "equals": [
                          "@body('Parse_JSON_2')?['labelName']",
                          "device"
                        ]
                      }
                    ]
                  },
                  "type": "If"
                }
              },
              "runAfter": {
                "processFor": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "Parse_custom_details": {
              "runAfter": {
                "Parse_Incident_Body": [
                  "Succeeded"
                ]
              },
              "type": "Select",
              "inputs": {
                "from": "@body('Parse_Incident_Body')?['object']?['properties']?['alerts']",
                "select": {
                  "details": "@item()?['properties']?['additionalData']?['Custom Details']"
                }
              }
            },
            "Post_to_API": {
              "runAfter": {
                "Set_up_request_body": [
                  "Succeeded"
                ]
              },
              "type": "Http",
              "inputs": {
                "body": "@{outputs('Compose_2')}@{outputs('Compose')}@{outputs('Compose_3')}",
                "headers": {
                  "Authorization": "Bearer @{variables('jwtToken')}",
                  "Content-Type": "application/json"
                },
                "method": "DELETE",
                "retryPolicy": {
                  "type": "none"
                },
                "uri": "[parameters('Post_to_API-URI')]"
              }
            },
            "Set_levelId": {
              "runAfter": {
                "cmdLineArgs": [
                  "Succeeded"
                ]
              },
              "cases": {
                "Case": {
                  "case": "account",
                  "actions": {}
                },
                "Case_2": {
                  "case": "company",
                  "actions": {
                    "Set_company_ID": {
                      "runAfter": {},
                      "type": "SetVariable",
                      "inputs": {
                        "name": "levelId",
                        "value": "@{concat(body('Custom_details')?[0]?['companyID'],'/')}"
                      }
                    }
                  }
                },
                "Case_3": {
                  "case": "group",
                  "actions": {
                    "Set_company_group_ID": {
                      "runAfter": {},
                      "type": "SetVariable",
                      "inputs": {
                        "name": "levelId",
                        "value": "@{concat(body('Custom_details')?[0]?['companyGroupID'],'/')}"
                      }
                    }
                  }
                }
              },
              "default": {
                "actions": {
                  "Set_variable_8": {
                    "runAfter": {},
                    "type": "SetVariable",
                    "inputs": {
                      "name": "levelId",
                      "value": "@{concat(body('Custom_details')?[0]?['deviceExternalID'],'/')}"
                    }
                  }
                }
              },
              "expression": "@variables('processFor')",
              "type": "Switch"
            },
            "Set_osPlatform": {
              "actions": {
                "Set_variable_9": {
                  "runAfter": {},
                  "type": "SetVariable",
                  "inputs": {
                    "name": "osPlatform",
                    "value": "win"
                  }
                }
              },
              "runAfter": {
                "osPlatform": [
                  "Succeeded"
                ]
              },
              "expression": {
                "and": [
                  {
                    "equals": [
                      "@variables('osPlatform')",
                      "Windows"
                    ]
                  }
                ]
              },
              "type": "If"
            },
            "Set_up_request_body": {
              "runAfter": {
                "Foreach_entitiesArr": [
                  "Succeeded"
                ]
              },
              "cases": {
                "Case": {
                  "case": "path",
                  "actions": {
                    "Compose_2": {
                      "runAfter": {},
                      "type": "Compose",
                      "inputs": {
                        "description": "@variables('displayText')",
                        "integration": "sentinel",
                        "path": "@variables('path')"
                      }
                    }
                  }
                },
                "Case_2": {
                  "case": "script",
                  "actions": {
                    "Compose": {
                      "runAfter": {},
                      "type": "Compose",
                      "inputs": {
                        "clArgs": "@variables('clArgs')",
                        "description": "@variables('displayText')",
                        "integration": "sentinel"
                      }
                    }
                  }
                }
              },
              "default": {
                "actions": {
                  "Compose_3": {
                    "runAfter": {},
                    "type": "Compose",
                    "inputs": {
                      "description": "@variables('displayText')",
                      "hash": "@variables('hash')",
                      "integration": "sentinel"
                    }
                  }
                }
              },
              "expression": "@variables('processBy')",
              "type": "Switch"
            },
            "accountId": {
              "runAfter": {
                "jwtToken": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "accountId",
                    "type": "integer",
                    "value": "@body('Parse_JWT')?['account_id']"
                  }
                ]
              }
            },
            "blockAllow": {
              "runAfter": {
                "accountId": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "blockAllow",
                    "type": "string"
                  }
                ]
              }
            },
            "clArgs": {
              "runAfter": {
                "path": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "clArgs",
                    "type": "string"
                  }
                ]
              }
            },
            "cmdLineArgs": {
              "runAfter": {
                "levelId": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "cmdLineArgs",
                    "type": "string",
                    "value": "@{body('Custom_details')?[0]?['cmdLineArgs']}"
                  }
                ]
              }
            },
            "deviceName": {
              "runAfter": {
                "ipAddress": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "deviceName",
                    "type": "string"
                  }
                ]
              }
            },
            "displayText": {
              "runAfter": {
                "Set_osPlatform": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "displayText",
                    "type": "string"
                  }
                ]
              }
            },
            "entitiesArr": {
              "runAfter": {
                "clArgs": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "entitiesArr",
                    "type": "array",
                    "value": "@body('Parse_Incident_Body')?['object']?['properties']?['relatedEntities']"
                  }
                ]
              }
            },
            "hash": {
              "runAfter": {
                "displayText": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "hash",
                    "type": "string",
                    "value": "@{body('Custom_details')?[0]?['md5']}"
                  }
                ]
              }
            },
            "ipAddress": {
              "runAfter": {
                "Set_levelId": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "ipAddress",
                    "type": "string"
                  }
                ]
              }
            },
            "jwtToken": {
              "runAfter": {
                "Parse_JWT": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "jwtToken",
                    "type": "string",
                    "value": "@body('Parse_JWT')?['jwt_token']"
                  }
                ]
              }
            },
            "levelId": {
              "runAfter": {
                "hash": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "levelId",
                    "type": "string"
                  }
                ]
              }
            },
            "osPlatform": {
              "runAfter": {
                "Custom_details": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "osPlatform",
                    "type": "string",
                    "value": "@{body('Custom_details')?[0]?['osPlatform']}"
                  }
                ]
              }
            },
            "path": {
              "runAfter": {
                "deviceName": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "path",
                    "type": "string"
                  }
                ]
              }
            },
            "processBy": {
              "runAfter": {
                "blockAllow": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "processBy",
                    "type": "string"
                  }
                ]
              }
            },
            "processFor": {
              "runAfter": {
                "processBy": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "processFor",
                    "type": "string"
                  }
                ]
              }
            },
            "set_displayText": {
              "actions": {
                "set_displayText_to_processName": {
                  "runAfter": {},
                  "type": "SetVariable",
                  "inputs": {
                    "name": "displayText",
                    "value": "@{body('Custom_details')?[0]?['processName']}"
                  }
                }
              },
              "runAfter": {
                "entitiesArr": [
                  "Succeeded"
                ]
              },
              "else": {
                "actions": {
                  "set_displayText_to_product": {
                    "runAfter": {},
                    "type": "SetVariable",
                    "inputs": {
                      "name": "displayText",
                      "value": "@{body('Custom_details')?[0]?['product']}"
                    }
                  }
                }
              },
              "expression": {
                "and": [
                  {
                    "equals": [
                      "@body('Custom_details')?[0]?['product']",
                      null
                    ]
                  }
                ]
              },
              "type": "If"
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "azuresentinel_1": {
                "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/azuresentinel')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('azuresentinel-1_name'))]",
                "connectionName": "[parameters('azuresentinel-1_name')]"
              },
              "keyvault": {
                "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/keyvault')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('keyvault-5_name'))]",
                "connectionName": "[parameters('keyvault-5_name')]"
              }
            }
          }
        }
      },
      "tags": {
        "pcmatic": "[parameters('pcmatic_Tag')]"
      },
      "identity": {
        "type": "SystemAssigned"
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "location": "[parameters('logicAppLocation')]",
      "name": "[parameters('keyvault-5_name')]",
      "properties": {
        "api": {
          "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/keyvault')]"
        },
        "displayName": "[parameters('keyvault-5_displayName')]",
        "parameterValues": {
          "vaultName": "[parameters('keyvault-5_vaultName')]",
          "token:clientId": "[parameters('keyvault-5_token:clientId')]",
          "token:clientSecret": "[parameters('keyvault-5_token:clientSecret')]",
          "token:TenantId": "[parameters('keyvault-5_token:TenantId')]",
          "token:resourceUri": "[parameters('keyvault-5_token:resourceUri')]",
          "token:grantType": "[parameters('keyvault-5_token:grantType')]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "location": "[parameters('logicAppLocation')]",
      "name": "[parameters('azuresentinel-1_name')]",
      "properties": {
        "api": {
          "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/azuresentinel')]"
        },
        "displayName": "[parameters('azuresentinel-1_displayName')]",
        "parameterValues": {
          "token:clientId": "[parameters('azuresentinel-1_token:clientId')]",
          "token:clientSecret": "[parameters('azuresentinel-1_token:clientSecret')]",
          "token:TenantId": "[parameters('azuresentinel-1_token:TenantId')]",
          "token:resourceUri": "[parameters('azuresentinel-1_token:resourceUri')]",
          "token:grantType": "[parameters('azuresentinel-1_token:grantType')]"
        }
      }
    }
  ],
  "outputs": {}
}
