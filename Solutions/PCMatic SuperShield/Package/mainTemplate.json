{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "John Farley - john@pcmatic.com",
    "comments": "Solution template for PCMatic SuperShield"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    },
    "analytic1-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic2-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic3-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "playbook1-PlaybookName": {
      "defaultValue": "BlockAllowProcess",
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Resource name for the logic app playbook.  No spaces are allowed"
      }
    },
    "playbook2-PlaybookName": {
      "defaultValue": "RemoveProcess",
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Resource name for the logic app playbook.  No spaces are allowed"
      }
    },
    "formattedTimeNow": {
      "type": "string",
      "defaultValue": "[utcNow('g')]",
      "metadata": {
        "description": "Appended to workbook displayNames to make them unique"
      }
    },
    "workbook1-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the workbook"
      }
    }
  },
  "variables": {
    "solutionId": "pcmatic.pcmatic-supershield",
    "_solutionId": "[variables('solutionId')]",
    "email": "john@pcmatic.com",
    "_email": "[variables('email')]",
    "workspace-dependency": "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspace'))]",
    "parserVersion1": "1.0.0",
    "parserContentId1": "SuperShieldActivity-Parser",
    "_parserContentId1": "[variables('parserContentId1')]",
    "analyticRuleVersion1": "1.0.0",
    "analyticRulecontentId1": "43c6318d-fa5e-49da-8b7a-a5a7c138de28",
    "_analyticRulecontentId1": "[variables('analyticRulecontentId1')]",
    "analyticRuleVersion2": "1.0.0",
    "analyticRulecontentId2": "81cbf6ad-e86d-4976-8746-6f0d1877bb04",
    "_analyticRulecontentId2": "[variables('analyticRulecontentId2')]",
    "analyticRuleVersion3": "1.0.0",
    "analyticRulecontentId3": "e56233c1-f8f5-482c-a342-d24c9cd6ccf0",
    "_analyticRulecontentId3": "[variables('analyticRulecontentId3')]",
    "BlockAllowProcess": "BlockAllowProcess",
    "_BlockAllowProcess": "[variables('BlockAllowProcess')]",
    "playbook1-MicrosoftSentinelConnectionName": "[concat('MicrosoftSentinel-', parameters('playbook1-PlaybookName'))]",
    "playbook1-KeyvaultConnectionName": "[concat('Keyvault-', parameters('playbook1-PlaybookName'))]",
    "RemoveProcess": "RemoveProcess",
    "_RemoveProcess": "[variables('RemoveProcess')]",
    "playbook2-MicrosoftSentinelConnectionName": "[concat('MicrosoftSentinel-', parameters('playbook2-PlaybookName'))]",
    "playbook2-KeyvaultConnectionName": "[concat('Keyvault-', parameters('playbook2-PlaybookName'))]",
    "workbook-source": "[concat(resourceGroup().id, '/providers/Microsoft.OperationalInsights/workspaces/',parameters('workspace'))]",
    "_workbook-source": "[variables('workbook-source')]",
    "PCMaticIncidentOverviewWorkbook": "PCMaticIncidentOverviewWorkbook",
    "_PCMaticIncidentOverviewWorkbook": "[variables('PCMaticIncidentOverviewWorkbook')]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic1-id'))]",
      "apiVersion": "2022-04-01-preview",
      "kind": "NRT",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Processes that are known to be bad and blocked by SuperShield",
        "displayName": "Known Bad Process (NRT)",
        "enabled": false,
        "query": "SuperShieldActivity\n| where Severity == 0\n| where IsUnknown == 0 or IsUnknown == \"false\"\n| where TimeGenerated > ago(5m)\n",
        "severity": "High",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "tactics": [
          "Execution"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "columnName": "DeviceAddress",
                "identifier": "Address"
              }
            ],
            "entityType": "IP"
          },
          {
            "fieldMappings": [
              {
                "columnName": "Host",
                "identifier": "HostName"
              }
            ],
            "entityType": "Host"
          },
          {
            "fieldMappings": [
              {
                "columnName": "FileHash",
                "identifier": "Value"
              },
              {
                "columnName": "FileHashType",
                "identifier": "Algorithm"
              }
            ],
            "entityType": "FileHash"
          },
          {
            "fieldMappings": [
              {
                "columnName": "FilePath",
                "identifier": "Directory"
              },
              {
                "columnName": "FileName",
                "identifier": "Name"
              }
            ],
            "entityType": "File"
          },
          {
            "fieldMappings": [
              {
                "columnName": "CmdLineArgs",
                "identifier": "CommandLine"
              }
            ],
            "entityType": "Process"
          }
        ],
        "eventGroupingSettings": {
          "aggregationKind": "AlertPerResult"
        },
        "customDetails": {
          "osPlatform": "OSPlatform",
          "groupName": "GroupName",
          "md5": "MD5",
          "account": "AccountID",
          "product": "Product",
          "company": "CompanyID",
          "deviceExternal": "DeviceExternalID",
          "companyName": "CompanyName",
          "group": "GroupID",
          "processName": "ProcessName"
        },
        "alertDetailsOverride": {
          "alertDisplayNameFormat": "{{Product}}{{ProcessName}} {{FileName}}"
        },
        "incidentConfiguration": {
          "groupingConfiguration": {
            "groupByEntities": [
              "FileHash"
            ],
            "lookbackDuration": "PT30M",
            "reopenClosedIncident": false,
            "enabled": true,
            "matchingMethod": "Selected"
          },
          "createIncident": true
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic2-id'))]",
      "apiVersion": "2022-04-01-preview",
      "kind": "NRT",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Processes not recognized and blocked by SuperShield",
        "displayName": "Unknown Process (NRT)",
        "enabled": false,
        "query": "SuperShieldActivity\n| where Severity == 0\n| where IsUnknown == 1 or IsUnknown == \"true\"\n| where TimeGenerated > ago(5m)\n",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "tactics": [
          "Execution"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "columnName": "DeviceAddress",
                "identifier": "Address"
              }
            ],
            "entityType": "IP"
          },
          {
            "fieldMappings": [
              {
                "columnName": "Host",
                "identifier": "HostName"
              }
            ],
            "entityType": "Host"
          },
          {
            "fieldMappings": [
              {
                "columnName": "FileHash",
                "identifier": "Value"
              },
              {
                "columnName": "FileHashType",
                "identifier": "Algorithm"
              }
            ],
            "entityType": "FileHash"
          },
          {
            "fieldMappings": [
              {
                "columnName": "FilePath",
                "identifier": "Directory"
              },
              {
                "columnName": "FileName",
                "identifier": "Name"
              }
            ],
            "entityType": "File"
          },
          {
            "fieldMappings": [
              {
                "columnName": "CmdLineArgs",
                "identifier": "CommandLine"
              }
            ],
            "entityType": "Process"
          }
        ],
        "eventGroupingSettings": {
          "aggregationKind": "AlertPerResult"
        },
        "customDetails": {
          "osPlatform": "OSPlatform",
          "groupName": "GroupName",
          "md5": "MD5",
          "account": "AccountID",
          "product": "Product",
          "company": "CompanyID",
          "deviceExternal": "DeviceExternalID",
          "companyName": "CompanyName",
          "group": "GroupID",
          "processName": "ProcessName"
        },
        "alertDetailsOverride": {
          "alertDisplayNameFormat": "{{Product}}{{ProcessName}} {{FileName}}"
        },
        "incidentConfiguration": {
          "groupingConfiguration": {
            "groupByEntities": [
              "FileHash"
            ],
            "lookbackDuration": "PT30M",
            "reopenClosedIncident": false,
            "enabled": true,
            "matchingMethod": "Selected"
          },
          "createIncident": true
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic3-id'))]",
      "apiVersion": "2022-04-01-preview",
      "kind": "NRT",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Processes that are known to be good and allowed by SuperShield",
        "displayName": "Allowed Process (NRT)",
        "enabled": false,
        "query": "SuperShieldActivity\n| where Severity > 0\n| where TimeGenerated > ago(5m)\n",
        "severity": "Low",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "tactics": [
          "Execution"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "columnName": "DeviceAddress",
                "identifier": "Address"
              }
            ],
            "entityType": "IP"
          },
          {
            "fieldMappings": [
              {
                "columnName": "Host",
                "identifier": "HostName"
              }
            ],
            "entityType": "Host"
          },
          {
            "fieldMappings": [
              {
                "columnName": "FileHash",
                "identifier": "Value"
              },
              {
                "columnName": "FileHashType",
                "identifier": "Algorithm"
              }
            ],
            "entityType": "FileHash"
          },
          {
            "fieldMappings": [
              {
                "columnName": "FilePath",
                "identifier": "Directory"
              },
              {
                "columnName": "FileName",
                "identifier": "Name"
              }
            ],
            "entityType": "File"
          },
          {
            "fieldMappings": [
              {
                "columnName": "CmdLineArgs",
                "identifier": "CommandLine"
              }
            ],
            "entityType": "Process"
          }
        ],
        "eventGroupingSettings": {
          "aggregationKind": "AlertPerResult"
        },
        "customDetails": {
          "osPlatform": "OSPlatform",
          "groupName": "GroupName",
          "md5": "MD5",
          "account": "AccountID",
          "product": "Product",
          "company": "CompanyID",
          "deviceExternal": "DeviceExternalID",
          "companyName": "CompanyName",
          "group": "GroupID",
          "processName": "ProcessName"
        },
        "alertDetailsOverride": {
          "alertDisplayNameFormat": "{{Product}}{{ProcessName}} {{FileName}}"
        },
        "incidentConfiguration": {
          "groupingConfiguration": {
            "groupByEntities": [
              "FileHash"
            ],
            "lookbackDuration": "PT5H",
            "reopenClosedIncident": false,
            "enabled": true,
            "matchingMethod": "Selected"
          },
          "createIncident": true
        }
      }
    },
    {
      "properties": {
        "provisioningState": "Succeeded",
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.@{variables('azureManagementUrl')}/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "type": "Object"
            }
          },
          "triggers": {
            "Microsoft_Sentinel_incident": {
              "type": "ApiConnectionWebhook",
              "inputs": {
                "body": {
                  "callback_url": "@{listCallbackUrl()}"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "path": "/incident-creation"
              }
            }
          },
          "actions": {
            "Add_comment_to_incident_(V3)_2": {
              "runAfter": {
                "Post_to_API": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "body": {
                  "incidentArmId": "@triggerBody()?['object']?['id']",
                  "message": "<p>@{variables('blockAllow')}ed for @{variables('processFor')} by @{variables('processBy')} on @{variables('osPlatform')}.&nbsp;</p>"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/Incidents/Comment"
              }
            },
            "Auth": {
              "runAfter": {
                "apiCred": [
                  "Succeeded"
                ]
              },
              "type": "Http",
              "inputs": {
                "body": "@json(concat('{\"username\":\"',variables('apiCred')?[0],'\",\"password\":\"',variables('apiCred')?[1],'\"}'))",
                "method": "POST",
                "uri": "https://ss-api-v1.pcpitstop.com/api/v1/login/auth"
              }
            },
            "Check_Tag_Data": {
              "actions": {
                "Terminate": {
                  "type": "Terminate",
                  "inputs": {
                    "runError": {
                      "code": "500",
                      "message": "Block/Allow variables not set"
                    },
                    "runStatus": "Failed"
                  }
                }
              },
              "runAfter": {
                "Parse_Tags": [
                  "Succeeded"
                ]
              },
              "expression": {
                "or": [
                  {
                    "equals": [
                      "@variables('blockAllow')",
                      "1"
                    ]
                  },
                  {
                    "equals": [
                      "@variables('processFor')",
                      "1"
                    ]
                  },
                  {
                    "equals": [
                      "@variables('processBy')",
                      "1"
                    ]
                  }
                ]
              },
              "type": "If"
            },
            "Custom_details": {
              "runAfter": {
                "Parse_custom_details": [
                  "Succeeded"
                ]
              },
              "type": "Select",
              "inputs": {
                "from": "@body('Parse_custom_details')",
                "select": {
                  "account": "@json(item()?['details'])?['account']?[0]",
                  "cmdLineArgs": "@json(item()?['details'])?['cmdLineArgs']?[0]",
                  "company": "@json(item()?['details'])?['company']?[0]",
                  "companyGroup": "@json(item()?['details'])?['group']?[0]",
                  "companyGroupName": "@json(item()?['details'])?['groupName']?[0]",
                  "companyName": "@json(item()?['details'])?['companyName']?[0]",
                  "deviceExternal": "@json(item()?['details'])?['deviceExternal']?[0]",
                  "isScript": "@json(item()?['details'])?['isScript']?[0]",
                  "isUnknown": "@json(item()?['details'])?['isUnknown']?[0]",
                  "md5": "@json(item()?['details'])?['md5']?[0]",
                  "osPlatform": "@json(item()?['details'])?['osPlatform']?[0]",
                  "parentPath": "@json(item()?['details'])?['parentPath']?[0]",
                  "product": "@json(item()?['details'])?['product']?[0]",
                  "userDecided": "@json(item()?['details'])?['userDecided']?[0]"
                }
              }
            },
            "Foreach_entitiesArr": {
              "foreach": "@variables('entitiesArr')",
              "actions": {
                "set_clArgs": {
                  "actions": {
                    "Set_variable_7": {
                      "type": "SetVariable",
                      "inputs": {
                        "name": "clArgs",
                        "value": "@{items('Foreach_entitiesArr')?['properties']?['commandLine']}"
                      }
                    }
                  },
                  "runAfter": {
                    "set_path": [
                      "Succeeded"
                    ]
                  },
                  "expression": {
                    "and": [
                      {
                        "not": {
                          "equals": [
                            "@items('Foreach_entitiesArr')?['properties']?['commandLine']",
                            null
                          ]
                        }
                      }
                    ]
                  },
                  "type": "If"
                },
                "set_deviceName": {
                  "actions": {
                    "Set_variable_2": {
                      "type": "SetVariable",
                      "inputs": {
                        "name": "deviceName",
                        "value": "@{items('Foreach_entitiesArr')?['properties']?['hostName']}"
                      }
                    }
                  },
                  "runAfter": {
                    "set_ipAddress": [
                      "Succeeded"
                    ]
                  },
                  "expression": {
                    "and": [
                      {
                        "not": {
                          "equals": [
                            "@items('Foreach_entitiesArr')?['properties']?['hostName']",
                            null
                          ]
                        }
                      }
                    ]
                  },
                  "type": "If"
                },
                "set_displayText_to_fileName_if_displayText_is_still_empty": {
                  "actions": {
                    "Set_variable_10": {
                      "type": "SetVariable",
                      "inputs": {
                        "name": "displayText",
                        "value": "@{items('Foreach_entitiesArr')?['properties']?['fileName']}"
                      }
                    }
                  },
                  "runAfter": {
                    "set_hash_for_mac-linux": [
                      "Succeeded"
                    ]
                  },
                  "expression": {
                    "and": [
                      {
                        "equals": [
                          "@variables('displayText')",
                          "1"
                        ]
                      },
                      {
                        "equals": [
                          "@items('Foreach_entitiesArr')?['kind']",
                          "File"
                        ]
                      }
                    ]
                  },
                  "type": "If"
                },
                "set_hash_for_mac-linux": {
                  "actions": {
                    "Set_hash": {
                      "type": "SetVariable",
                      "inputs": {
                        "name": "hash",
                        "value": "@{items('Foreach_entitiesArr')?['properties']?['hashValue']}"
                      }
                    }
                  },
                  "runAfter": {
                    "set_clArgs": [
                      "Succeeded"
                    ]
                  },
                  "expression": {
                    "and": [
                      {
                        "equals": [
                          "@items('Foreach_entitiesArr')?['kind']",
                          "FileHash"
                        ]
                      },
                      {
                        "not": {
                          "equals": [
                            "@items('Foreach_entitiesArr')?['properties']?['hashValue']",
                            "1"
                          ]
                        }
                      },
                      {
                        "not": {
                          "equals": [
                            "@variables('osPlatform')",
                            "win"
                          ]
                        }
                      }
                    ]
                  },
                  "type": "If"
                },
                "set_ipAddress": {
                  "actions": {
                    "Set_variable": {
                      "type": "SetVariable",
                      "inputs": {
                        "name": "ipAddress",
                        "value": "@{items('Foreach_entitiesArr')?['properties']?['address']}"
                      }
                    }
                  },
                  "expression": {
                    "and": [
                      {
                        "not": {
                          "equals": [
                            "@items('Foreach_entitiesArr')?['status_code']",
                            null
                          ]
                        }
                      }
                    ]
                  },
                  "type": "If"
                },
                "set_path": {
                  "actions": {
                    "Set_variable_6": {
                      "type": "SetVariable",
                      "inputs": {
                        "name": "path",
                        "value": "@{items('Foreach_entitiesArr')?['properties']?['directory']}"
                      }
                    }
                  },
                  "runAfter": {
                    "set_deviceName": [
                      "Succeeded"
                    ]
                  },
                  "expression": {
                    "and": [
                      {
                        "not": {
                          "equals": [
                            "@items('Foreach_entitiesArr')?['properties']?['fileName']",
                            null
                          ]
                        }
                      }
                    ]
                  },
                  "type": "If"
                }
              },
              "runAfter": {
                "set_displayText": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "Get_secret": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['keyvault_3']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/secrets/@{encodeURIComponent('apiUser32')}/value"
              }
            },
            "Parse_Credentials": {
              "runAfter": {
                "Get_secret": [
                  "Succeeded"
                ]
              },
              "type": "Compose",
              "inputs": "@body('Get_secret')"
            },
            "Parse_Incident_Body": {
              "runAfter": {
                "Check_Tag_Data": [
                  "Succeeded"
                ]
              },
              "type": "ParseJson",
              "inputs": {
                "content": "@triggerBody()",
                "schema": {
                  "properties": {
                    "eventUniqueId": {
                      "type": "string"
                    },
                    "object": {
                      "properties": {
                        "etag": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "properties": {
                          "properties": {
                            "additionalData": {
                              "properties": {
                                "alertProductNames": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "alertsCount": {
                                  "type": "integer"
                                },
                                "bookmarksCount": {
                                  "type": "integer"
                                },
                                "commentsCount": {
                                  "type": "integer"
                                },
                                "tactics": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "techniques": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "alerts": {
                              "items": {
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "kind": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "properties": {
                                    "properties": {
                                      "additionalData": {
                                        "properties": {
                                          "Alert generation status": {
                                            "type": "string"
                                          },
                                          "Analytic Rule Ids": {
                                            "type": "string"
                                          },
                                          "Analytic Rule Name": {
                                            "type": "string"
                                          },
                                          "Correlation Id": {
                                            "type": "string"
                                          },
                                          "Custom Details": {
                                            "type": "string"
                                          },
                                          "Data Sources": {
                                            "type": "string"
                                          },
                                          "Event Grouping": {
                                            "type": "string"
                                          },
                                          "OriginalQuery": {
                                            "type": "string"
                                          },
                                          "ProcessedBySentinel": {
                                            "type": "string"
                                          },
                                          "Query": {
                                            "type": "string"
                                          },
                                          "Query End Time UTC": {
                                            "type": "string"
                                          },
                                          "Query Period": {
                                            "type": "string"
                                          },
                                          "Query Start Time UTC": {
                                            "type": "string"
                                          },
                                          "Search Query Results Overall Count": {
                                            "type": "string"
                                          },
                                          "Trigger Operator": {
                                            "type": "string"
                                          },
                                          "Trigger Threshold": {
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "alertDisplayName": {
                                        "type": "string"
                                      },
                                      "alertType": {
                                        "type": "string"
                                      },
                                      "confidenceLevel": {
                                        "type": "string"
                                      },
                                      "endTimeUtc": {
                                        "type": "string"
                                      },
                                      "friendlyName": {
                                        "type": "string"
                                      },
                                      "processingEndTime": {
                                        "type": "string"
                                      },
                                      "productComponentName": {
                                        "type": "string"
                                      },
                                      "productName": {
                                        "type": "string"
                                      },
                                      "providerAlertId": {
                                        "type": "string"
                                      },
                                      "resourceIdentifiers": {
                                        "items": {
                                          "properties": {
                                            "type": {
                                              "type": "string"
                                            },
                                            "workspaceId": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "workspaceId"
                                          ],
                                          "type": "object"
                                        },
                                        "type": "array"
                                      },
                                      "severity": {
                                        "type": "string"
                                      },
                                      "startTimeUtc": {
                                        "type": "string"
                                      },
                                      "status": {
                                        "type": "string"
                                      },
                                      "systemAlertId": {
                                        "type": "string"
                                      },
                                      "tactics": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "timeGenerated": {
                                        "type": "string"
                                      },
                                      "vendorName": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name",
                                  "type",
                                  "kind",
                                  "properties"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "bookmarks": {
                              "type": "array"
                            },
                            "comments": {
                              "type": "array"
                            },
                            "createdTimeUtc": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "firstActivityTimeUtc": {
                              "type": "string"
                            },
                            "incidentNumber": {
                              "type": "integer"
                            },
                            "incidentUrl": {
                              "type": "string"
                            },
                            "labels": {
                              "type": "array"
                            },
                            "lastActivityTimeUtc": {
                              "type": "string"
                            },
                            "lastModifiedTimeUtc": {
                              "type": "string"
                            },
                            "providerIncidentId": {
                              "type": "string"
                            },
                            "providerName": {
                              "type": "string"
                            },
                            "relatedAnalyticRuleIds": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "relatedEntities": {
                              "items": {
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "kind": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "properties": {
                                    "properties": {
                                      "address": {
                                        "type": "string"
                                      },
                                      "friendlyName": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name",
                                  "type",
                                  "kind",
                                  "properties"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "severity": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "objectEventType": {
                      "type": "string"
                    },
                    "objectSchemaType": {
                      "type": "string"
                    },
                    "workspaceId": {
                      "type": "string"
                    },
                    "workspaceInfo": {
                      "properties": {
                        "ResourceGroupName": {
                          "type": "string"
                        },
                        "SubscriptionId": {
                          "type": "string"
                        },
                        "WorkspaceName": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "Parse_JWT": {
              "runAfter": {
                "Auth": [
                  "Succeeded"
                ]
              },
              "type": "ParseJson",
              "inputs": {
                "content": "@body('Auth')",
                "schema": {
                  "properties": {
                    "accountId": {
                      "type": "integer"
                    },
                    "account_id": {
                      "type": "integer"
                    },
                    "accounts": {
                      "type": "array"
                    },
                    "jwtToken": {
                      "type": "string"
                    },
                    "jwt_token": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "Parse_Tags": {
              "foreach": "@triggerBody()?['object']?['properties']?['labels']",
              "actions": {
                "Parse_JSON_2": {
                  "type": "ParseJson",
                  "inputs": {
                    "content": "@items('Parse_Tags')",
                    "schema": {
                      "properties": {
                        "labelName": {
                          "type": "string"
                        },
                        "labelType": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  }
                },
                "Set_blockAllow": {
                  "actions": {
                    "Set_variable_3": {
                      "type": "SetVariable",
                      "inputs": {
                        "name": "blockAllow",
                        "value": "@body('Parse_JSON_2')?['labelName']"
                      }
                    }
                  },
                  "runAfter": {
                    "Parse_JSON_2": [
                      "Succeeded"
                    ]
                  },
                  "expression": {
                    "or": [
                      {
                        "equals": [
                          "@body('Parse_JSON_2')?['labelName']",
                          "block"
                        ]
                      },
                      {
                        "equals": [
                          "@body('Parse_JSON_2')?['labelName']",
                          "allow"
                        ]
                      }
                    ]
                  },
                  "type": "If"
                },
                "Set_groupId": {
                  "actions": {
                    "Set_variable_11": {
                      "type": "SetVariable",
                      "inputs": {
                        "name": "groupId",
                        "value": "@int(body('Parse_JSON_2')?['labelName'])"
                      }
                    }
                  },
                  "runAfter": {
                    "Set_processFor": [
                      "Succeeded"
                    ]
                  },
                  "expression": {
                    "and": [
                      {
                        "equals": [
                          "@isInt(body('Parse_JSON_2')?['labelName'])",
                          true
                        ]
                      },
                      {
                        "greater": [
                          "@int(body('Parse_JSON_2')?['labelName'])",
                          0
                        ]
                      }
                    ]
                  },
                  "type": "If"
                },
                "Set_processBy": {
                  "actions": {
                    "Set_variable_4": {
                      "type": "SetVariable",
                      "inputs": {
                        "name": "processBy",
                        "value": "@body('Parse_JSON_2')?['labelName']"
                      }
                    }
                  },
                  "runAfter": {
                    "Set_blockAllow": [
                      "Succeeded"
                    ]
                  },
                  "expression": {
                    "or": [
                      {
                        "equals": [
                          "@body('Parse_JSON_2')?['labelName']",
                          "hash"
                        ]
                      },
                      {
                        "equals": [
                          "@body('Parse_JSON_2')?['labelName']",
                          "path"
                        ]
                      },
                      {
                        "equals": [
                          "@body('Parse_JSON_2')?['labelName']",
                          "sign"
                        ]
                      },
                      {
                        "equals": [
                          "@body('Parse_JSON_2')?['labelName']",
                          "script"
                        ]
                      }
                    ]
                  },
                  "type": "If"
                },
                "Set_processFor": {
                  "actions": {
                    "Set_variable_5": {
                      "type": "SetVariable",
                      "inputs": {
                        "name": "processFor",
                        "value": "@body('Parse_JSON_2')?['labelName']"
                      }
                    }
                  },
                  "runAfter": {
                    "Set_processBy": [
                      "Succeeded"
                    ]
                  },
                  "expression": {
                    "or": [
                      {
                        "equals": [
                          "@body('Parse_JSON_2')?['labelName']",
                          "account"
                        ]
                      },
                      {
                        "equals": [
                          "@body('Parse_JSON_2')?['labelName']",
                          "company"
                        ]
                      },
                      {
                        "equals": [
                          "@body('Parse_JSON_2')?['labelName']",
                          "group"
                        ]
                      },
                      {
                        "equals": [
                          "@body('Parse_JSON_2')?['labelName']",
                          "device"
                        ]
                      }
                    ]
                  },
                  "type": "If"
                }
              },
              "runAfter": {
                "groupId": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "Parse_custom_details": {
              "runAfter": {
                "Parse_Incident_Body": [
                  "Succeeded"
                ]
              },
              "type": "Select",
              "inputs": {
                "from": "@body('Parse_Incident_Body')?['object']?['properties']?['alerts']",
                "select": {
                  "details": "@item()?['properties']?['additionalData']?['Custom Details']"
                }
              }
            },
            "Post_to_API": {
              "runAfter": {
                "Set_up_request_body": [
                  "Succeeded"
                ]
              },
              "type": "Http",
              "inputs": {
                "body": "@{outputs('Compose_2')}@{outputs('Compose')}@{outputs('Compose_3')}",
                "headers": {
                  "Authorization": "Bearer @{variables('jwtToken')}",
                  "Content-Type": "application/json"
                },
                "method": "POST",
                "retryPolicy": {
                  "type": "none"
                },
                "uri": "https://ss-api-v1.pcpitstop.com/api/v1/@{variables('processFor')}/@{variables('levelId')}lists/@{variables('osPlatform')}/@{variables('blockAllow')}/@{variables('processBy')}"
              },
              "runtimeConfiguration": {
                "secureData": {
                  "properties": [
                    "inputs",
                    "outputs"
                  ]
                }
              }
            },
            "Set_levelId": {
              "runAfter": {
                "cmdLineArgs": [
                  "Succeeded"
                ]
              },
              "cases": {
                "Case": {
                  "case": "account"
                },
                "Case_2": {
                  "case": "company",
                  "actions": {
                    "Set_company_ID": {
                      "type": "SetVariable",
                      "inputs": {
                        "name": "levelId",
                        "value": "@{concat(body('Custom_details')?[0]?['companyID'],'/')}"
                      }
                    }
                  }
                },
                "Case_3": {
                  "case": "group",
                  "actions": {
                    "Set_company_group_ID": {
                      "type": "SetVariable",
                      "inputs": {
                        "name": "levelId",
                        "value": "@{concat(variables('groupId'),'/')}"
                      }
                    }
                  }
                }
              },
              "default": {
                "actions": {
                  "Set_variable_8": {
                    "type": "SetVariable",
                    "inputs": {
                      "name": "levelId",
                      "value": "@{concat(body('Custom_details')?[0]?['deviceExternal'],'/')}"
                    }
                  }
                }
              },
              "expression": "@variables('processFor')",
              "type": "Switch"
            },
            "Set_osPlatform": {
              "actions": {
                "Set_variable_9": {
                  "type": "SetVariable",
                  "inputs": {
                    "name": "osPlatform",
                    "value": "win"
                  }
                }
              },
              "runAfter": {
                "osPlatform": [
                  "Succeeded"
                ]
              },
              "expression": {
                "and": [
                  {
                    "equals": [
                      "@variables('osPlatform')",
                      "Windows"
                    ]
                  }
                ]
              },
              "type": "If"
            },
            "Set_up_request_body": {
              "runAfter": {
                "Foreach_entitiesArr": [
                  "Succeeded"
                ]
              },
              "cases": {
                "Case": {
                  "case": "path",
                  "actions": {
                    "Compose_2": {
                      "type": "Compose",
                      "inputs": {
                        "description": "@variables('displayText')",
                        "integration": "sentinel",
                        "path": "@variables('path')"
                      }
                    }
                  }
                },
                "Case_2": {
                  "case": "script",
                  "actions": {
                    "Compose": {
                      "type": "Compose",
                      "inputs": {
                        "clArgs": "@variables('clArgs')",
                        "description": "@variables('displayText')",
                        "integration": "sentinel"
                      }
                    }
                  }
                }
              },
              "default": {
                "actions": {
                  "Compose_3": {
                    "type": "Compose",
                    "inputs": {
                      "description": "@variables('displayText')",
                      "hash": "@variables('hash')",
                      "integration": "sentinel"
                    }
                  }
                }
              },
              "expression": "@variables('processBy')",
              "type": "Switch"
            },
            "accountId": {
              "runAfter": {
                "jwtToken": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "accountId",
                    "type": "integer",
                    "value": "@body('Parse_JWT')?['account_id']"
                  }
                ]
              }
            },
            "apiCred": {
              "runAfter": {
                "Parse_Credentials": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "apiCred",
                    "type": "array",
                    "value": "@split(outputs('Parse_Credentials'), ':')"
                  }
                ]
              }
            },
            "blockAllow": {
              "runAfter": {
                "accountId": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "blockAllow",
                    "type": "string"
                  }
                ]
              }
            },
            "clArgs": {
              "runAfter": {
                "path": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "clArgs",
                    "type": "string"
                  }
                ]
              }
            },
            "cmdLineArgs": {
              "runAfter": {
                "levelId": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "cmdLineArgs",
                    "type": "string",
                    "value": "@{body('Custom_details')?[0]?['cmdLineArgs']}"
                  }
                ]
              }
            },
            "deviceName": {
              "runAfter": {
                "ipAddress": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "deviceName",
                    "type": "string"
                  }
                ]
              }
            },
            "displayText": {
              "runAfter": {
                "Set_osPlatform": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "displayText",
                    "type": "string"
                  }
                ]
              }
            },
            "entitiesArr": {
              "runAfter": {
                "clArgs": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "entitiesArr",
                    "type": "array",
                    "value": "@body('Parse_Incident_Body')?['object']?['properties']?['relatedEntities']"
                  }
                ]
              }
            },
            "groupId": {
              "runAfter": {
                "processFor": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "groupId",
                    "type": "integer"
                  }
                ]
              }
            },
            "hash": {
              "runAfter": {
                "displayText": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "hash",
                    "type": "string",
                    "value": "@{body('Custom_details')?[0]?['md5']}"
                  }
                ]
              }
            },
            "ipAddress": {
              "runAfter": {
                "Set_levelId": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "ipAddress",
                    "type": "string"
                  }
                ]
              }
            },
            "jwtToken": {
              "runAfter": {
                "Parse_JWT": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "jwtToken",
                    "type": "string",
                    "value": "@body('Parse_JWT')?['jwt_token']"
                  }
                ]
              }
            },
            "levelId": {
              "runAfter": {
                "hash": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "levelId",
                    "type": "string"
                  }
                ]
              }
            },
            "osPlatform": {
              "runAfter": {
                "Custom_details": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "osPlatform",
                    "type": "string",
                    "value": "@{body('Custom_details')?[0]?['osPlatform']}"
                  }
                ]
              }
            },
            "path": {
              "runAfter": {
                "deviceName": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "path",
                    "type": "string"
                  }
                ]
              }
            },
            "processBy": {
              "runAfter": {
                "blockAllow": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "processBy",
                    "type": "string"
                  }
                ]
              }
            },
            "processFor": {
              "runAfter": {
                "processBy": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "processFor",
                    "type": "string"
                  }
                ]
              }
            },
            "set_displayText": {
              "actions": {
                "set_displayText_to_processName": {
                  "type": "SetVariable",
                  "inputs": {
                    "name": "displayText",
                    "value": "@{body('Custom_details')?[0]?['processName']}"
                  }
                }
              },
              "runAfter": {
                "entitiesArr": [
                  "Succeeded"
                ]
              },
              "else": {
                "actions": {
                  "set_displayText_to_product": {
                    "type": "SetVariable",
                    "inputs": {
                      "name": "displayText",
                      "value": "@{body('Custom_details')?[0]?['product']}"
                    }
                  }
                }
              },
              "expression": {
                "and": [
                  {
                    "equals": [
                      "@body('Custom_details')?[0]?['product']",
                      null
                    ]
                  }
                ]
              },
              "type": "If"
            }
          }
        },
        "parameters": {
          "$connections": {
            "value": {
              "azuresentinel": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "connectionName": "[variables('MicrosoftSentinelConnectionName')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
                "connectionProperties": {
                  "authentication": {
                    "type": "ManagedServiceIdentity"
                  }
                }
              },
              "keyvault_3": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]",
                "connectionName": "[variables('KeyvaultConnectionName')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Keyvault')]"
              }
            }
          }
        }
      },
      "name": "[parameters('PlaybookName')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[variables('workspace-location-inline')]",
      "tags": {
        "hidden-SentinelTemplateName": "BlockAllowProcess",
        "hidden-SentinelTemplateVersion": "1.0"
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "apiVersion": "2017-07-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
        "[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('MicrosoftSentinelConnectionName')]",
      "location": "[variables('workspace-location-inline')]",
      "kind": "V1",
      "properties": {
        "displayName": "[variables('MicrosoftSentinelConnectionName')]",
        "parameterValueType": "Alternative",
        "api": {
          "id": "[variables('_connection-2')]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('KeyvaultConnectionName')]",
      "location": "[variables('workspace-location-inline')]",
      "kind": "V1",
      "properties": {
        "displayName": "[variables('KeyvaultConnectionName')]",
        "api": {
          "id": "[variables('_connection-3')]"
        }
      }
    },
    {
      "properties": {
        "provisioningState": "Succeeded",
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.@{variables('azureManagementUrl')}/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "type": "Object"
            }
          },
          "triggers": {
            "Microsoft_Sentinel_incident": {
              "type": "ApiConnectionWebhook",
              "inputs": {
                "body": {
                  "callback_url": "@{listCallbackUrl()}"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "path": "/incident-creation"
              }
            }
          },
          "actions": {
            "Add_comment_to_incident_(V3)_2": {
              "runAfter": {
                "Post_to_API": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "body": {
                  "incidentArmId": "@triggerBody()?['object']?['id']",
                  "message": "<p>@{variables('blockAllow')}ed for @{variables('processFor')} by @{variables('processBy')} on @{variables('osPlatform')}.&nbsp;</p>"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/Incidents/Comment"
              }
            },
            "Auth": {
              "runAfter": {
                "apiCred": [
                  "Succeeded"
                ]
              },
              "type": "Http",
              "inputs": {
                "body": "@json(concat('{\"username\":\"',variables('apiCred')?[0],'\",\"password\":\"',variables('apiCred')?[1],'\"}'))",
                "method": "POST",
                "uri": "https://ss-api-v1.pcpitstop.com/api/v1/login/auth"
              }
            },
            "Check_Tag_Data": {
              "actions": {
                "Terminate": {
                  "type": "Terminate",
                  "inputs": {
                    "runError": {
                      "code": "500",
                      "message": "Block/Allow variables not set"
                    },
                    "runStatus": "Failed"
                  }
                }
              },
              "runAfter": {
                "Parse_Tags": [
                  "Succeeded"
                ]
              },
              "expression": {
                "or": [
                  {
                    "equals": [
                      "@variables('blockAllow')",
                      "1"
                    ]
                  },
                  {
                    "equals": [
                      "@variables('processFor')",
                      "1"
                    ]
                  },
                  {
                    "equals": [
                      "@variables('processBy')",
                      "1"
                    ]
                  }
                ]
              },
              "type": "If"
            },
            "Custom_details": {
              "runAfter": {
                "Parse_custom_details": [
                  "Succeeded"
                ]
              },
              "type": "Select",
              "inputs": {
                "from": "@body('Parse_custom_details')",
                "select": {
                  "account": "@json(item()?['details'])?['account']?[0]",
                  "cmdLineArgs": "@json(item()?['details'])?['cmdLineArgs']?[0]",
                  "company": "@json(item()?['details'])?['company']?[0]",
                  "companyGroup": "@json(item()?['details'])?['group']?[0]",
                  "companyGroupName": "@json(item()?['details'])?['groupName']?[0]",
                  "companyName": "@json(item()?['details'])?['companyName']?[0]",
                  "deviceExternal": "@json(item()?['details'])?['deviceExternal']?[0]",
                  "isScript": "@json(item()?['details'])?['isScript']?[0]",
                  "isUnknown": "@json(item()?['details'])?['isUnknown']?[0]",
                  "md5": "@json(item()?['details'])?['md5']?[0]",
                  "osPlatform": "@json(item()?['details'])?['osPlatform']?[0]",
                  "parentPath": "@json(item()?['details'])?['parentPath']?[0]",
                  "product": "@json(item()?['details'])?['product']?[0]",
                  "userDecided": "@json(item()?['details'])?['userDecided']?[0]"
                }
              }
            },
            "Foreach_entitiesArr": {
              "foreach": "@variables('entitiesArr')",
              "actions": {
                "set_clArgs": {
                  "actions": {
                    "Set_variable_7": {
                      "type": "SetVariable",
                      "inputs": {
                        "name": "clArgs",
                        "value": "@{items('Foreach_entitiesArr')?['properties']?['commandLine']}"
                      }
                    }
                  },
                  "runAfter": {
                    "set_path": [
                      "Succeeded"
                    ]
                  },
                  "expression": {
                    "and": [
                      {
                        "not": {
                          "equals": [
                            "@items('Foreach_entitiesArr')?['properties']?['commandLine']",
                            null
                          ]
                        }
                      }
                    ]
                  },
                  "type": "If"
                },
                "set_deviceName": {
                  "actions": {
                    "Set_variable_2": {
                      "type": "SetVariable",
                      "inputs": {
                        "name": "deviceName",
                        "value": "@{items('Foreach_entitiesArr')?['properties']?['hostName']}"
                      }
                    }
                  },
                  "runAfter": {
                    "set_ipAddress": [
                      "Succeeded"
                    ]
                  },
                  "expression": {
                    "and": [
                      {
                        "not": {
                          "equals": [
                            "@items('Foreach_entitiesArr')?['properties']?['hostName']",
                            null
                          ]
                        }
                      }
                    ]
                  },
                  "type": "If"
                },
                "set_displayText_to_fileName_if_displayText_is_still_empty": {
                  "actions": {
                    "Set_variable_10": {
                      "type": "SetVariable",
                      "inputs": {
                        "name": "displayText",
                        "value": "@{items('Foreach_entitiesArr')?['properties']?['fileName']}"
                      }
                    }
                  },
                  "runAfter": {
                    "set_hash_for_mac-linux": [
                      "Succeeded"
                    ]
                  },
                  "expression": {
                    "and": [
                      {
                        "equals": [
                          "@variables('displayText')",
                          "1"
                        ]
                      },
                      {
                        "equals": [
                          "@items('Foreach_entitiesArr')?['kind']",
                          "File"
                        ]
                      }
                    ]
                  },
                  "type": "If"
                },
                "set_hash_for_mac-linux": {
                  "actions": {
                    "Set_hash": {
                      "type": "SetVariable",
                      "inputs": {
                        "name": "hash",
                        "value": "@{items('Foreach_entitiesArr')?['properties']?['hashValue']}"
                      }
                    }
                  },
                  "runAfter": {
                    "set_clArgs": [
                      "Succeeded"
                    ]
                  },
                  "expression": {
                    "and": [
                      {
                        "equals": [
                          "@items('Foreach_entitiesArr')?['kind']",
                          "FileHash"
                        ]
                      },
                      {
                        "not": {
                          "equals": [
                            "@items('Foreach_entitiesArr')?['properties']?['hashValue']",
                            "1"
                          ]
                        }
                      },
                      {
                        "not": {
                          "equals": [
                            "@variables('osPlatform')",
                            "win"
                          ]
                        }
                      }
                    ]
                  },
                  "type": "If"
                },
                "set_ipAddress": {
                  "actions": {
                    "Set_variable": {
                      "type": "SetVariable",
                      "inputs": {
                        "name": "ipAddress",
                        "value": "@{items('Foreach_entitiesArr')?['properties']?['address']}"
                      }
                    }
                  },
                  "expression": {
                    "and": [
                      {
                        "not": {
                          "equals": [
                            "@items('Foreach_entitiesArr')?['status_code']",
                            null
                          ]
                        }
                      }
                    ]
                  },
                  "type": "If"
                },
                "set_path": {
                  "actions": {
                    "Set_variable_6": {
                      "type": "SetVariable",
                      "inputs": {
                        "name": "path",
                        "value": "@{items('Foreach_entitiesArr')?['properties']?['directory']}"
                      }
                    }
                  },
                  "runAfter": {
                    "set_deviceName": [
                      "Succeeded"
                    ]
                  },
                  "expression": {
                    "and": [
                      {
                        "not": {
                          "equals": [
                            "@items('Foreach_entitiesArr')?['properties']?['fileName']",
                            null
                          ]
                        }
                      }
                    ]
                  },
                  "type": "If"
                }
              },
              "runAfter": {
                "set_displayText": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "Get_secret": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['keyvault_3']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/secrets/@{encodeURIComponent('apiUser32')}/value"
              }
            },
            "Parse_Credentials": {
              "runAfter": {
                "Get_secret": [
                  "Succeeded"
                ]
              },
              "type": "Compose",
              "inputs": "@body('Get_secret')"
            },
            "Parse_Incident_Body": {
              "runAfter": {
                "Check_Tag_Data": [
                  "Succeeded"
                ]
              },
              "type": "ParseJson",
              "inputs": {
                "content": "@triggerBody()",
                "schema": {
                  "properties": {
                    "eventUniqueId": {
                      "type": "string"
                    },
                    "object": {
                      "properties": {
                        "etag": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "properties": {
                          "properties": {
                            "additionalData": {
                              "properties": {
                                "alertProductNames": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "alertsCount": {
                                  "type": "integer"
                                },
                                "bookmarksCount": {
                                  "type": "integer"
                                },
                                "commentsCount": {
                                  "type": "integer"
                                },
                                "tactics": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "techniques": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "alerts": {
                              "items": {
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "kind": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "properties": {
                                    "properties": {
                                      "additionalData": {
                                        "properties": {
                                          "Alert generation status": {
                                            "type": "string"
                                          },
                                          "Analytic Rule Ids": {
                                            "type": "string"
                                          },
                                          "Analytic Rule Name": {
                                            "type": "string"
                                          },
                                          "Correlation Id": {
                                            "type": "string"
                                          },
                                          "Custom Details": {
                                            "type": "string"
                                          },
                                          "Data Sources": {
                                            "type": "string"
                                          },
                                          "Event Grouping": {
                                            "type": "string"
                                          },
                                          "OriginalQuery": {
                                            "type": "string"
                                          },
                                          "ProcessedBySentinel": {
                                            "type": "string"
                                          },
                                          "Query": {
                                            "type": "string"
                                          },
                                          "Query End Time UTC": {
                                            "type": "string"
                                          },
                                          "Query Period": {
                                            "type": "string"
                                          },
                                          "Query Start Time UTC": {
                                            "type": "string"
                                          },
                                          "Search Query Results Overall Count": {
                                            "type": "string"
                                          },
                                          "Trigger Operator": {
                                            "type": "string"
                                          },
                                          "Trigger Threshold": {
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "alertDisplayName": {
                                        "type": "string"
                                      },
                                      "alertType": {
                                        "type": "string"
                                      },
                                      "confidenceLevel": {
                                        "type": "string"
                                      },
                                      "endTimeUtc": {
                                        "type": "string"
                                      },
                                      "friendlyName": {
                                        "type": "string"
                                      },
                                      "processingEndTime": {
                                        "type": "string"
                                      },
                                      "productComponentName": {
                                        "type": "string"
                                      },
                                      "productName": {
                                        "type": "string"
                                      },
                                      "providerAlertId": {
                                        "type": "string"
                                      },
                                      "resourceIdentifiers": {
                                        "items": {
                                          "properties": {
                                            "type": {
                                              "type": "string"
                                            },
                                            "workspaceId": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "workspaceId"
                                          ],
                                          "type": "object"
                                        },
                                        "type": "array"
                                      },
                                      "severity": {
                                        "type": "string"
                                      },
                                      "startTimeUtc": {
                                        "type": "string"
                                      },
                                      "status": {
                                        "type": "string"
                                      },
                                      "systemAlertId": {
                                        "type": "string"
                                      },
                                      "tactics": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "timeGenerated": {
                                        "type": "string"
                                      },
                                      "vendorName": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name",
                                  "type",
                                  "kind",
                                  "properties"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "bookmarks": {
                              "type": "array"
                            },
                            "comments": {
                              "type": "array"
                            },
                            "createdTimeUtc": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "firstActivityTimeUtc": {
                              "type": "string"
                            },
                            "incidentNumber": {
                              "type": "integer"
                            },
                            "incidentUrl": {
                              "type": "string"
                            },
                            "labels": {
                              "type": "array"
                            },
                            "lastActivityTimeUtc": {
                              "type": "string"
                            },
                            "lastModifiedTimeUtc": {
                              "type": "string"
                            },
                            "providerIncidentId": {
                              "type": "string"
                            },
                            "providerName": {
                              "type": "string"
                            },
                            "relatedAnalyticRuleIds": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "relatedEntities": {
                              "items": {
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "kind": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "properties": {
                                    "properties": {
                                      "address": {
                                        "type": "string"
                                      },
                                      "friendlyName": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name",
                                  "type",
                                  "kind",
                                  "properties"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "severity": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "objectEventType": {
                      "type": "string"
                    },
                    "objectSchemaType": {
                      "type": "string"
                    },
                    "workspaceId": {
                      "type": "string"
                    },
                    "workspaceInfo": {
                      "properties": {
                        "ResourceGroupName": {
                          "type": "string"
                        },
                        "SubscriptionId": {
                          "type": "string"
                        },
                        "WorkspaceName": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "Parse_JWT": {
              "runAfter": {
                "Auth": [
                  "Succeeded"
                ]
              },
              "type": "ParseJson",
              "inputs": {
                "content": "@body('Auth')",
                "schema": {
                  "properties": {
                    "accountId": {
                      "type": "integer"
                    },
                    "account_id": {
                      "type": "integer"
                    },
                    "accounts": {
                      "type": "array"
                    },
                    "jwtToken": {
                      "type": "string"
                    },
                    "jwt_token": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "Parse_Tags": {
              "foreach": "@triggerBody()?['object']?['properties']?['labels']",
              "actions": {
                "Parse_JSON_2": {
                  "type": "ParseJson",
                  "inputs": {
                    "content": "@items('Parse_Tags')",
                    "schema": {
                      "properties": {
                        "labelName": {
                          "type": "string"
                        },
                        "labelType": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  }
                },
                "Set_blockAllow": {
                  "actions": {
                    "Set_variable_3": {
                      "type": "SetVariable",
                      "inputs": {
                        "name": "blockAllow",
                        "value": "@body('Parse_JSON_2')?['labelName']"
                      }
                    }
                  },
                  "runAfter": {
                    "Parse_JSON_2": [
                      "Succeeded"
                    ]
                  },
                  "expression": {
                    "or": [
                      {
                        "equals": [
                          "@body('Parse_JSON_2')?['labelName']",
                          "block"
                        ]
                      },
                      {
                        "equals": [
                          "@body('Parse_JSON_2')?['labelName']",
                          "allow"
                        ]
                      }
                    ]
                  },
                  "type": "If"
                },
                "Set_groupId": {
                  "actions": {
                    "Set_variable_11": {
                      "type": "SetVariable",
                      "inputs": {
                        "name": "groupId",
                        "value": "@int(body('Parse_JSON_2')?['labelName'])"
                      }
                    }
                  },
                  "runAfter": {
                    "Set_processFor": [
                      "Succeeded"
                    ]
                  },
                  "expression": {
                    "and": [
                      {
                        "equals": [
                          "@isInt(body('Parse_JSON_2')?['labelName'])",
                          true
                        ]
                      },
                      {
                        "greater": [
                          "@int(body('Parse_JSON_2')?['labelName'])",
                          0
                        ]
                      }
                    ]
                  },
                  "type": "If"
                },
                "Set_processBy": {
                  "actions": {
                    "Set_variable_4": {
                      "type": "SetVariable",
                      "inputs": {
                        "name": "processBy",
                        "value": "@body('Parse_JSON_2')?['labelName']"
                      }
                    }
                  },
                  "runAfter": {
                    "Set_blockAllow": [
                      "Succeeded"
                    ]
                  },
                  "expression": {
                    "or": [
                      {
                        "equals": [
                          "@body('Parse_JSON_2')?['labelName']",
                          "hash"
                        ]
                      },
                      {
                        "equals": [
                          "@body('Parse_JSON_2')?['labelName']",
                          "path"
                        ]
                      },
                      {
                        "equals": [
                          "@body('Parse_JSON_2')?['labelName']",
                          "sign"
                        ]
                      },
                      {
                        "equals": [
                          "@body('Parse_JSON_2')?['labelName']",
                          "script"
                        ]
                      }
                    ]
                  },
                  "type": "If"
                },
                "Set_processFor": {
                  "actions": {
                    "Set_variable_5": {
                      "type": "SetVariable",
                      "inputs": {
                        "name": "processFor",
                        "value": "@body('Parse_JSON_2')?['labelName']"
                      }
                    }
                  },
                  "runAfter": {
                    "Set_processBy": [
                      "Succeeded"
                    ]
                  },
                  "expression": {
                    "or": [
                      {
                        "equals": [
                          "@body('Parse_JSON_2')?['labelName']",
                          "account"
                        ]
                      },
                      {
                        "equals": [
                          "@body('Parse_JSON_2')?['labelName']",
                          "company"
                        ]
                      },
                      {
                        "equals": [
                          "@body('Parse_JSON_2')?['labelName']",
                          "group"
                        ]
                      },
                      {
                        "equals": [
                          "@body('Parse_JSON_2')?['labelName']",
                          "device"
                        ]
                      }
                    ]
                  },
                  "type": "If"
                }
              },
              "runAfter": {
                "groupId": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "Parse_custom_details": {
              "runAfter": {
                "Parse_Incident_Body": [
                  "Succeeded"
                ]
              },
              "type": "Select",
              "inputs": {
                "from": "@body('Parse_Incident_Body')?['object']?['properties']?['alerts']",
                "select": {
                  "details": "@item()?['properties']?['additionalData']?['Custom Details']"
                }
              }
            },
            "Post_to_API": {
              "runAfter": {
                "Set_up_request_body": [
                  "Succeeded"
                ]
              },
              "type": "Http",
              "inputs": {
                "body": "@{outputs('Compose_2')}@{outputs('Compose')}@{outputs('Compose_3')}",
                "headers": {
                  "Authorization": "Bearer @{variables('jwtToken')}",
                  "Content-Type": "application/json"
                },
                "method": "DELETE",
                "retryPolicy": {
                  "type": "none"
                },
                "uri": "https://ss-api-v1.pcpitstop.com/api/v1/@{variables('processFor')}/@{variables('levelId')}lists/@{variables('osPlatform')}/@{variables('blockAllow')}/@{variables('processBy')}"
              },
              "runtimeConfiguration": {
                "secureData": {
                  "properties": [
                    "inputs",
                    "outputs"
                  ]
                }
              }
            },
            "Set_levelId": {
              "runAfter": {
                "cmdLineArgs": [
                  "Succeeded"
                ]
              },
              "cases": {
                "Case": {
                  "case": "account"
                },
                "Case_2": {
                  "case": "company",
                  "actions": {
                    "Set_company_ID": {
                      "type": "SetVariable",
                      "inputs": {
                        "name": "levelId",
                        "value": "@{concat(body('Custom_details')?[0]?['companyID'],'/')}"
                      }
                    }
                  }
                },
                "Case_3": {
                  "case": "group",
                  "actions": {
                    "Set_company_group_ID": {
                      "type": "SetVariable",
                      "inputs": {
                        "name": "levelId",
                        "value": "@{concat(variables('groupId'),'/')}"
                      }
                    }
                  }
                }
              },
              "default": {
                "actions": {
                  "Set_variable_8": {
                    "type": "SetVariable",
                    "inputs": {
                      "name": "levelId",
                      "value": "@{concat(body('Custom_details')?[0]?['deviceExternal'],'/')}"
                    }
                  }
                }
              },
              "expression": "@variables('processFor')",
              "type": "Switch"
            },
            "Set_osPlatform": {
              "actions": {
                "Set_variable_9": {
                  "type": "SetVariable",
                  "inputs": {
                    "name": "osPlatform",
                    "value": "win"
                  }
                }
              },
              "runAfter": {
                "osPlatform": [
                  "Succeeded"
                ]
              },
              "expression": {
                "and": [
                  {
                    "equals": [
                      "@variables('osPlatform')",
                      "Windows"
                    ]
                  }
                ]
              },
              "type": "If"
            },
            "Set_up_request_body": {
              "runAfter": {
                "Foreach_entitiesArr": [
                  "Succeeded"
                ]
              },
              "cases": {
                "Case": {
                  "case": "path",
                  "actions": {
                    "Compose_2": {
                      "type": "Compose",
                      "inputs": {
                        "description": "@variables('displayText')",
                        "integration": "sentinel",
                        "path": "@variables('path')"
                      }
                    }
                  }
                },
                "Case_2": {
                  "case": "script",
                  "actions": {
                    "Compose": {
                      "type": "Compose",
                      "inputs": {
                        "clArgs": "@variables('clArgs')",
                        "description": "@variables('displayText')",
                        "integration": "sentinel"
                      }
                    }
                  }
                }
              },
              "default": {
                "actions": {
                  "Compose_3": {
                    "type": "Compose",
                    "inputs": {
                      "description": "@variables('displayText')",
                      "hash": "@variables('hash')",
                      "integration": "sentinel"
                    }
                  }
                }
              },
              "expression": "@variables('processBy')",
              "type": "Switch"
            },
            "accountId": {
              "runAfter": {
                "jwtToken": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "accountId",
                    "type": "integer",
                    "value": "@body('Parse_JWT')?['account_id']"
                  }
                ]
              }
            },
            "apiCred": {
              "runAfter": {
                "Parse_Credentials": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "apiCred",
                    "type": "array",
                    "value": "@split(outputs('Parse_Credentials'), ':')"
                  }
                ]
              }
            },
            "blockAllow": {
              "runAfter": {
                "accountId": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "blockAllow",
                    "type": "string"
                  }
                ]
              }
            },
            "clArgs": {
              "runAfter": {
                "path": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "clArgs",
                    "type": "string"
                  }
                ]
              }
            },
            "cmdLineArgs": {
              "runAfter": {
                "levelId": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "cmdLineArgs",
                    "type": "string",
                    "value": "@{body('Custom_details')?[0]?['cmdLineArgs']}"
                  }
                ]
              }
            },
            "deviceName": {
              "runAfter": {
                "ipAddress": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "deviceName",
                    "type": "string"
                  }
                ]
              }
            },
            "displayText": {
              "runAfter": {
                "Set_osPlatform": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "displayText",
                    "type": "string"
                  }
                ]
              }
            },
            "entitiesArr": {
              "runAfter": {
                "clArgs": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "entitiesArr",
                    "type": "array",
                    "value": "@body('Parse_Incident_Body')?['object']?['properties']?['relatedEntities']"
                  }
                ]
              }
            },
            "groupId": {
              "runAfter": {
                "processFor": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "groupId",
                    "type": "integer"
                  }
                ]
              }
            },
            "hash": {
              "runAfter": {
                "displayText": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "hash",
                    "type": "string",
                    "value": "@{body('Custom_details')?[0]?['md5']}"
                  }
                ]
              }
            },
            "ipAddress": {
              "runAfter": {
                "Set_levelId": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "ipAddress",
                    "type": "string"
                  }
                ]
              }
            },
            "jwtToken": {
              "runAfter": {
                "Parse_JWT": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "jwtToken",
                    "type": "string",
                    "value": "@body('Parse_JWT')?['jwt_token']"
                  }
                ]
              }
            },
            "levelId": {
              "runAfter": {
                "hash": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "levelId",
                    "type": "string"
                  }
                ]
              }
            },
            "osPlatform": {
              "runAfter": {
                "Custom_details": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "osPlatform",
                    "type": "string",
                    "value": "@{body('Custom_details')?[0]?['osPlatform']}"
                  }
                ]
              }
            },
            "path": {
              "runAfter": {
                "deviceName": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "path",
                    "type": "string"
                  }
                ]
              }
            },
            "processBy": {
              "runAfter": {
                "blockAllow": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "processBy",
                    "type": "string"
                  }
                ]
              }
            },
            "processFor": {
              "runAfter": {
                "processBy": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "processFor",
                    "type": "string"
                  }
                ]
              }
            },
            "set_displayText": {
              "actions": {
                "set_displayText_to_processName": {
                  "type": "SetVariable",
                  "inputs": {
                    "name": "displayText",
                    "value": "@{body('Custom_details')?[0]?['processName']}"
                  }
                }
              },
              "runAfter": {
                "entitiesArr": [
                  "Succeeded"
                ]
              },
              "else": {
                "actions": {
                  "set_displayText_to_product": {
                    "type": "SetVariable",
                    "inputs": {
                      "name": "displayText",
                      "value": "@{body('Custom_details')?[0]?['product']}"
                    }
                  }
                }
              },
              "expression": {
                "and": [
                  {
                    "equals": [
                      "@body('Custom_details')?[0]?['product']",
                      null
                    ]
                  }
                ]
              },
              "type": "If"
            }
          }
        },
        "parameters": {
          "$connections": {
            "value": {
              "azuresentinel": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "connectionName": "[variables('MicrosoftSentinelConnectionName')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
                "connectionProperties": {
                  "authentication": {
                    "type": "ManagedServiceIdentity"
                  }
                }
              },
              "keyvault_3": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]",
                "connectionName": "[variables('KeyvaultConnectionName')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Keyvault')]"
              }
            }
          }
        }
      },
      "name": "[parameters('PlaybookName')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[variables('workspace-location-inline')]",
      "tags": {
        "hidden-SentinelTemplateName": "RemoveProcess",
        "hidden-SentinelTemplateVersion": "1.0"
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "apiVersion": "2017-07-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
        "[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('MicrosoftSentinelConnectionName')]",
      "location": "[variables('workspace-location-inline')]",
      "kind": "V1",
      "properties": {
        "displayName": "[variables('MicrosoftSentinelConnectionName')]",
        "parameterValueType": "Alternative",
        "api": {
          "id": "[variables('_connection-2')]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('KeyvaultConnectionName')]",
      "location": "[variables('workspace-location-inline')]",
      "kind": "V1",
      "properties": {
        "displayName": "[variables('KeyvaultConnectionName')]",
        "api": {
          "id": "[variables('_connection-3')]"
        }
      }
    },
    {
      "type": "Microsoft.Insights/workbooks",
      "name": "[parameters('workbook1-id')]",
      "location": "[parameters('workspace-location')]",
      "kind": "shared",
      "apiVersion": "2021-08-01",
      "metadata": {},
      "properties": {
        "displayName": "[parameters('workbook1-name')]",
        "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\"# PC Matic SuperShield Incident Overview\"},\"name\":\"Headline\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"9a199167-2dde-49dd-8f01-23e9d1fa8151\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"InternalWSs\",\"type\":1,\"isRequired\":true,\"query\":\"SecurityIncident\\r\\n| take 1\\r\\n| parse IncidentUrl with * \\\"/workspaces/\\\" Workspace \\\"/\\\" *\\r\\n| project Workspace\",\"isHiddenWhenLocked\":true,\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"7806fefd-432f-4828-9756-8c0be5c08d07\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"InternalSub\",\"type\":1,\"isRequired\":true,\"query\":\"SecurityIncident\\r\\n| take 1\\r\\n| parse IncidentUrl with * \\\"/subscriptions/\\\" subscriptions \\\"/\\\" *\\r\\n| project subscriptions\",\"isHiddenWhenLocked\":true,\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"55d3ab63-6e1f-4d02-8d9e-2225526689c7\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Subscription\",\"type\":6,\"isRequired\":true,\"query\":\"summarize by subscriptionId\\r\\n| project subscriptionId, Subscription=strcat(\\\"/subscriptions/\\\", subscriptionId)\\r\\n| extend selected = iff(subscriptionId =~ '{InternalSub}', true, false)\\r\\n\",\"isHiddenWhenLocked\":true,\"typeSettings\":{\"showDefault\":false},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":1,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"95a45501-31b5-4ea2-bcb3-eb208e0080e2\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Workspace\",\"type\":5,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"//resources | where type =~ 'Microsoft.operationsmanagement/solutions' | where name contains //'SecurityInsights' | project id //= tostring(properties.workspaceResourceId)\\r\\n\\r\\nwhere type =~ 'microsoft.operationalinsights/workspaces'\\r\\n| project value =id, label = name, selected = iff(name =~ '{InternalWSs}', true, false)\\r\\n\\r\\n\\r\\n\",\"crossComponentResources\":[\"value::all\"],\"isHiddenWhenLocked\":true,\"typeSettings\":{\"showDefault\":false},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\"},{\"id\":\"3a87d4f7-42cc-4c62-b543-6b5d9ab8cf27\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Severity\",\"type\":2,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"SecurityIncident\\r\\n| summarize Count = count(IncidentNumber) by Severity\\r\\n| project Value = Severity, Label = strcat(Severity, \\\": \\\", Count)\",\"isHiddenWhenLocked\":true,\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"*\",\"showDefault\":false},\"timeContextFromParameter\":\"TimeRange\",\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"81085d3a-5aca-488e-b7c6-ecf1167e59f7\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Tactics\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"SecurityIncident\\r\\n| extend Tactics = todynamic(AdditionalData.tactics)\\r\\n| mv-expand Tactics to typeof(string)\\r\\n| summarize Count=count(IncidentNumber) by Tactics\\r\\n| project Value = Tactics, Label = strcat(Tactics, \\\": \\\", Count)\",\"isHiddenWhenLocked\":true,\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"*\",\"showDefault\":false},\"timeContext\":{\"durationMs\":172800000},\"timeContextFromParameter\":\"TimeRange\",\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"0f9efb0d-ac34-41d0-8a19-165840eb2a71\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Owner\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"SecurityIncident\\r\\n| extend owner = tostring(Owner.assignedTo) \\r\\n| summarize Count=count(IncidentNumber) by Owner= case(owner==\\\"\\\", \\\"Unassigned\\\",owner)\\r\\n| project Value = Owner, Label = strcat(Owner, \\\": \\\", Count)\",\"isHiddenWhenLocked\":true,\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"*\",\"showDefault\":false},\"timeContext\":{\"durationMs\":172800000},\"timeContextFromParameter\":\"TimeRange\",\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"cf86113b-59ad-4fc9-aeb7-9b44e230641e\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Product\",\"label\":\"Product Name\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"SecurityIncident\\r\\n| extend Product = tostring(parse_json(tostring(AdditionalData.alertProductNames))[0]) \\r\\n| summarize Count=count(IncidentNumber) by Product\\r\\n| project Value = Product, Label = strcat(Product, \\\": \\\", Count)\\r\\n\",\"isHiddenWhenLocked\":true,\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"*\",\"showDefault\":false},\"timeContext\":{\"durationMs\":172800000},\"timeContextFromParameter\":\"TimeRange\",\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"1fea48e7-99b2-4664-8eb6-bd35fc4efaf0\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"resourceGroup\",\"type\":1,\"query\":\"resources\\r\\n| where type =~ 'microsoft.operationalinsights/workspaces'\\r\\n| where id == \\\"{Workspace:lable}\\\"\\r\\n| project resourceGroup\",\"crossComponentResources\":[\"{Subscription}\"],\"isHiddenWhenLocked\":true,\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\"},{\"id\":\"2908f26a-6238-43ed-9aa0-546c9041d918\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Help\",\"label\":\"Show Help\",\"type\":10,\"isRequired\":true,\"isHiddenWhenLocked\":true,\"typeSettings\":{\"showDefault\":false},\"jsonData\":\"[{ \\\"value\\\": \\\"Yes\\\", \\\"label\\\": \\\"Yes\\\"},\\r\\n {\\\"value\\\": \\\"No\\\", \\\"label\\\": \\\"No\\\", \\\"selected\\\":true }]\",\"timeContextFromParameter\":\"TimeRange\"}],\"style\":\"above\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"0\",\"name\":\"parameters - 6\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"e7c5c0b0-afab-4bbb-83e7-f2077fba8e4b\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"label\":\"Incident Creation Time\",\"type\":4,\"description\":\"This field is required by Sentinel. It is typically set automatically. If you experience any errors, please try setting this field manually.\",\"isRequired\":true,\"typeSettings\":{\"selectableValues\":[{\"durationMs\":172800000},{\"durationMs\":604800000}]},\"value\":{\"durationMs\":604800000}},{\"id\":\"9aec751b-07bd-43ba-80b9-f711887dce45\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"IncidentNumber\",\"label\":\"Incident Number\",\"type\":1,\"description\":\"This field is required by Sentinel. It is typically set automatically. If you experience any errors, please try setting this field manually.\",\"isRequired\":true,\"timeContext\":{\"durationMs\":172800000},\"timeContextFromParameter\":\"TimeRange\",\"value\":\"39\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"50\",\"name\":\"parameters - 6 - Copy\",\"styleSettings\":{\"margin\":\"0px\"}},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"crossComponentResources\":[\"{Workspace}\"],\"parameters\":[{\"id\":\"f978edb2-9886-4bff-8e12-8280800321c3\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"IncidentID\",\"label\":\"Incident Name\",\"type\":1,\"query\":\"SecurityIncident\\r\\n| where IncidentNumber == {IncidentNumber}\\r\\n| take 1\\r\\n| project IncidentName\",\"crossComponentResources\":[\"{Workspace}\"],\"isHiddenWhenLocked\":true,\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"3b8e6cdd-4578-49cb-a515-1f9dec104fd7\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"RuleId\",\"label\":\"Rule Id\",\"type\":1,\"query\":\"SecurityIncident\\r\\n| where IncidentNumber == {IncidentNumber}\\r\\n| summarize arg_max(TimeGenerated, RelatedAnalyticRuleIds) by IncidentNumber\\r\\n| project RelatedAnalyticRuleIds\",\"crossComponentResources\":[\"{Workspace}\"],\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"version\":\"KqlParameterItem/1.0\",\"name\":\"IncidentTitle\",\"label\":\"Incident Title\",\"type\":1,\"query\":\"SecurityIncident\\r\\n| where IncidentNumber == {IncidentNumber}\\r\\n| take 1\\r\\n| project Title\",\"crossComponentResources\":[\"{Workspace}\"],\"isHiddenWhenLocked\":true,\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"id\":\"e10553bb-8879-4dd6-aec0-f02a888e29fa\"},{\"version\":\"KqlParameterItem/1.0\",\"name\":\"IncidentSeverity\",\"label\":\"Incident Severity\",\"type\":1,\"query\":\"SecurityIncident\\r\\n| where IncidentNumber == {IncidentNumber}\\r\\n| take 1\\r\\n| project Severity\",\"crossComponentResources\":[\"{Workspace}\"],\"isHiddenWhenLocked\":true,\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"id\":\"2cc5c22f-ed2e-4428-bfdd-324d0b9ed3f4\"},{\"id\":\"3913e4bd-1ddf-4321-8b43-029bf62db314\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"IncidentStatus\",\"type\":1,\"isRequired\":true,\"query\":\"SecurityIncident\\r\\n| where IncidentNumber == {IncidentNumber}\\r\\n| order by LastModifiedTime desc\\r\\n| take 1\\r\\n| project Status\\r\\n\",\"crossComponentResources\":[\"{Workspace}\"],\"isHiddenWhenLocked\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"conditionalVisibility\":{\"parameterName\":\"IncidentNumber\",\"comparison\":\"isEqualTo\",\"value\":\"e\"},\"customWidth\":\"50\",\"name\":\"Invisible parameters\"},{\"type\":1,\"content\":{\"json\":\"# Block/Allow Process\"},\"name\":\"Headline - Copy\",\"styleSettings\":{\"margin\":\"0px\"}},{\"type\":1,\"content\":{\"json\":\"Set these fields to block or allow a process by file hash, file path, digital signature, or script for a single device, or the entire account, company, or group. Click the \\\"Save Settings\\\" button, and confirm the action. Once you receive notification that the process succeeded, click the \\\"(Block/Allow) Process\\\" button, and confirm the action. This will trigger a Logic App. If the Logic App fails, you will receive an email detailing the issue.\"},\"conditionalVisibility\":{\"parameterName\":\"IncidentStatus\",\"comparison\":\"isNotEqualTo\",\"value\":\"Active\"},\"customWidth\":\"50\",\"name\":\"text - 16 - Copy\"},{\"type\":1,\"content\":{\"json\":\"This process is already on a black or whitelist. To remove it, please click the button below.\"},\"conditionalVisibility\":{\"parameterName\":\"IncidentStatus\",\"comparison\":\"isEqualTo\",\"value\":\"Active\"},\"customWidth\":\"50\",\"name\":\"text - 16 - Copy - Copy\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"8a0f8caf-3f1f-424b-8e30-82b1bc40803f\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"blockAllow\",\"label\":\"Block/Allow\",\"type\":2,\"description\":\"Allow or block this process\",\"isRequired\":true,\"value\":\"allow\",\"typeSettings\":{\"showDefault\":false},\"jsonData\":\"[\\r\\n    {\\r\\n        \\\"value\\\":\\\"allow\\\",\\r\\n        \\\"label\\\":\\\"Allow\\\"\\r\\n    },\\r\\n    {\\r\\n        \\\"value\\\":\\\"block\\\",\\r\\n        \\\"label\\\":\\\"Block\\\"\\r\\n    }\\r\\n]\",\"timeContext\":{\"durationMs\":86400000}},{\"id\":\"eb8c3ff4-2a41-4f44-ae4e-43c4c5dc2bbe\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"processBy\",\"label\":\"By\",\"type\":2,\"description\":\"MD5 Hash, File Path, Digital Signature or Script\",\"isRequired\":true,\"typeSettings\":{\"showDefault\":false},\"jsonData\":\"[\\r\\n    {\\r\\n        \\\"value\\\":\\\"hash\\\",\\r\\n        \\\"label\\\":\\\"Hash\\\"\\r\\n    },\\r\\n    {\\r\\n        \\\"value\\\":\\\"path\\\",\\r\\n        \\\"label\\\":\\\"File Path\\\"\\r\\n    },\\r\\n    {\\r\\n        \\\"value\\\":\\\"sign\\\",\\r\\n        \\\"label\\\":\\\"Digital Signature\\\"\\r\\n    },\\r\\n    {\\r\\n        \\\"value\\\":\\\"script\\\",\\r\\n        \\\"label\\\":\\\"Script\\\"\\r\\n    }\\r\\n]\",\"timeContext\":{\"durationMs\":86400000},\"value\":\"hash\"},{\"id\":\"a96fe87d-1e7e-449e-9bb5-43f060cca8d6\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"processFor\",\"label\":\"For\",\"type\":2,\"description\":\"Account, Company, Group or Device\",\"isRequired\":true,\"value\":\"group\",\"typeSettings\":{\"showDefault\":false},\"jsonData\":\"[\\r\\n    {\\r\\n        \\\"value\\\":\\\"account\\\",\\r\\n        \\\"label\\\":\\\"Entire Account\\\"\\r\\n    },\\r\\n    {\\r\\n        \\\"value\\\":\\\"company\\\",\\r\\n        \\\"label\\\":\\\"Company\\\"\\r\\n    },\\r\\n    {\\r\\n        \\\"value\\\":\\\"group\\\",\\r\\n        \\\"label\\\":\\\"Group\\\"\\r\\n    },\\r\\n    {\\r\\n        \\\"value\\\":\\\"device\\\",\\r\\n        \\\"label\\\":\\\"Device\\\"\\r\\n    }\\r\\n]\",\"timeContext\":{\"durationMs\":86400000}}],\"style\":\"above\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"conditionalVisibility\":{\"parameterName\":\"IncidentStatus\",\"comparison\":\"isNotEqualTo\",\"value\":\"Active\"},\"name\":\"parameters - 16\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"846ce932-6103-4de8-b419-88f161cb31e0\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"groupId\",\"label\":\"Group Name\",\"type\":2,\"query\":\"SuperShieldActivity\\r\\n|distinct GroupID,GroupName\",\"timeContext\":{\"durationMs\":86400000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"value\":\"15554\"}],\"style\":\"above\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"conditionalVisibilities\":[{\"parameterName\":\"processFor\",\"comparison\":\"isEqualTo\",\"value\":\"group\"},{\"parameterName\":\"IncidentStatus\",\"comparison\":\"isNotEqualTo\",\"value\":\"Active\"}],\"name\":\"parameters - 19\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"7ca087da-32c8-43b9-a7f5-4f2babe94e5e\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TenantId\",\"label\":\"Tenant ID\",\"type\":1,\"description\":\"Security check\",\"isRequired\":true,\"timeContext\":{\"durationMs\":86400000},\"value\":\"06980532-a990-4ad1-8a8c-f227a94234c6\"}],\"style\":\"above\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"conditionalVisibility\":{\"parameterName\":\"IncidentStatus\",\"comparison\":\"isNotEqualTo\",\"value\":\"Active\"},\"name\":\"parameters - 18\"},{\"type\":11,\"content\":{\"version\":\"LinkItem/1.0\",\"style\":\"list\",\"links\":[{\"id\":\"1534e7c8-d02b-45c4-a28d-eb17c666133a\",\"linkTarget\":\"ArmAction\",\"linkLabel\":\"Save Settings\",\"style\":\"primary\",\"linkIsContextBlade\":true,\"armActionContext\":{\"path\":\"/subscriptions/{InternalSub}/resourceGroups/{resourceGroup}/providers/Microsoft.OperationalInsights/workspaces/{InternalWSs}/providers/Microsoft.SecurityInsights/incidents/{IncidentID}?api-version=2022-07-01-preview\",\"body\":\"{\\r\\n  \\\"properties\\\": {\\r\\n    \\\"title\\\": \\\"{IncidentTitle}\\\",\\r\\n    \\\"severity\\\": \\\"{IncidentSeverity}\\\",\\r\\n    \\\"status\\\": \\\"Active\\\",\\r\\n    \\\"labels\\\": [\\r\\n      {\\r\\n        \\\"labelname\\\":\\\"{blockAllow}\\\",\\r\\n        \\\"labelType\\\": \\\"User\\\"\\r\\n      },\\r\\n      {\\r\\n        \\\"labelname\\\":\\\"{processBy}\\\",\\r\\n        \\\"labelType\\\": \\\"User\\\"\\r\\n      },\\r\\n      {\\r\\n        \\\"labelname\\\":\\\"{processFor}\\\",\\r\\n        \\\"labelType\\\": \\\"User\\\"\\r\\n      },\\r\\n      {\\r\\n        \\\"labelname\\\":\\\"{groupId}\\\",\\r\\n        \\\"labelType\\\": \\\"User\\\"\\r\\n      }\\r\\n    ]\\r\\n  }\\r\\n}\",\"responseType\":\"text\",\"httpMethod\":\"PUT\",\"title\":\"Save Settings\",\"description\":\"# Save these settings?\\n## This will update the incident with these block/allow settings.\",\"actionName\":\"Save Settings\",\"runLabel\":\"Save Settings\"}}]},\"conditionalVisibility\":{\"parameterName\":\"IncidentStatus\",\"comparison\":\"isNotEqualTo\",\"value\":\"Active\"},\"name\":\"links - 20\"},{\"type\":11,\"content\":{\"version\":\"LinkItem/1.0\",\"style\":\"list\",\"links\":[{\"id\":\"185caf2d-f986-4d10-a608-4f87b80d1446\",\"linkTarget\":\"ArmAction\",\"linkLabel\":\"{blockAllow:label} Process\",\"style\":\"primary\",\"linkIsContextBlade\":true,\"armActionContext\":{\"path\":\"/subscriptions/{InternalSub}/resourceGroups/{resourceGroup}/providers/Microsoft.OperationalInsights/workspaces/{InternalWSs}/providers/Microsoft.SecurityInsights/incidents/{IncidentID}/runPlaybook?api-version=2021-10-01-preview\",\"body\":\"{\\r\\n\\r\\n\\\"LogicAppsResourceId\\\":\\\"/subscriptions/{InternalSub}/resourceGroups/{resourceGroup}/providers/Microsoft.Logic/workflows/BlockAllowProcess\\\",\\r\\n\\r\\n \\\"TenantId\\\":\\\"{TenantId}\\\"\\r\\n\\r\\n}\",\"httpMethod\":\"POST\",\"title\":\"{blockAllow:label} Process\",\"description\":\"# {blockAllow:label} this process?\\n## The data will update your local SuperShield whitelist or blacklist.\",\"actionName\":\"Block/Allow Process\",\"runLabel\":\"{blockAllow:label} Process\"}}]},\"conditionalVisibility\":{\"parameterName\":\"IncidentStatus\",\"comparison\":\"isNotEqualTo\",\"value\":\"Active\"},\"name\":\"links - 17\"},{\"type\":11,\"content\":{\"version\":\"LinkItem/1.0\",\"style\":\"list\",\"links\":[{\"id\":\"94011cfe-8c90-4f20-b8dc-e352b02a0ceb\",\"linkTarget\":\"ArmAction\",\"linkLabel\":\"Remove from Black/Whitelist\",\"style\":\"primary\",\"linkIsContextBlade\":true,\"armActionContext\":{\"path\":\"/subscriptions/{InternalSub}/resourceGroups/{resourceGroup}/providers/Microsoft.OperationalInsights/workspaces/{InternalWSs}/providers/Microsoft.SecurityInsights/incidents/{IncidentID}/runPlaybook?api-version=2021-10-01-preview\",\"body\":\"{\\r\\n\\r\\n\\\"LogicAppsResourceId\\\":\\\"/subscriptions/{InternalSub}/resourceGroups/{resourceGroup}/providers/Microsoft.Logic/workflows/RemoveProcess\\\",\\r\\n\\r\\n \\\"TenantId\\\":\\\"{TenantId}\\\"\\r\\n\\r\\n}\",\"httpMethod\":\"POST\",\"title\":\"Remove Process\",\"description\":\"# Remove this process from the black/whitelist?\\n## The data will update your local SuperShield whitelist or blacklist.\",\"actionName\":\"Remove Process\",\"runLabel\":\"Remove Process\"}}]},\"conditionalVisibility\":{\"parameterName\":\"IncidentStatus\",\"comparison\":\"isEqualTo\",\"value\":\"Active\"},\"name\":\"links - 17 - Copy\"},{\"type\":1,\"content\":{\"json\":\"## Incident Entities\"},\"name\":\"text - 2 - Copy - Copy - Copy - Copy - Copy\",\"styleSettings\":{\"margin\":\"50px 0px 0px 0px\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"{\\\"version\\\":\\\"ARMEndpoint/1.0\\\",\\\"data\\\":\\\"null\\\",\\\"headers\\\":[],\\\"method\\\":\\\"POST\\\",\\\"path\\\":\\\"/subscriptions/{Subscription:id}/resourceGroups/{resourceGroup}/providers/Microsoft.OperationalInsights/workspaces/{Workspace:name}/providers/Microsoft.SecurityInsights/incidents/{IncidentID}/entities\\\",\\\"urlParams\\\":[{\\\"key\\\":\\\"api-version\\\",\\\"value\\\":\\\"2021-04-01\\\"}],\\\"batchDisabled\\\":false,\\\"transformers\\\":[{\\\"type\\\":\\\"jsonpath\\\",\\\"settings\\\":{\\\"tablePath\\\":\\\"$.metaData\\\"}}]}\",\"size\":2,\"noDataMessage\":\"No entities were found\",\"noDataMessageStyle\":4,\"queryType\":12,\"visualization\":\"piechart\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"entityKind\",\"formatter\":12,\"formatOptions\":{\"palette\":\"blue\"}},\"leftContent\":{\"columnMatch\":\"count\",\"formatter\":1,\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\"}}},\"showBorder\":false,\"sortCriteriaField\":\"Order\",\"sortOrderField\":1,\"size\":\"auto\"}},\"customWidth\":\"30\",\"name\":\"Entities\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"{\\\"version\\\":\\\"ARMEndpoint/1.0\\\",\\\"data\\\":\\\"null\\\",\\\"headers\\\":[],\\\"method\\\":\\\"POST\\\",\\\"path\\\":\\\"/subscriptions/{Subscription:id}/resourceGroups/{resourceGroup}/providers/Microsoft.OperationalInsights/workspaces/{Workspace:name}/providers/Microsoft.SecurityInsights/incidents/{IncidentID}/entities\\\",\\\"urlParams\\\":[{\\\"key\\\":\\\"api-version\\\",\\\"value\\\":\\\"2021-04-01\\\"}],\\\"batchDisabled\\\":false,\\\"transformers\\\":[{\\\"type\\\":\\\"jsonpath\\\",\\\"settings\\\":{\\\"tablePath\\\":\\\"$.entities\\\",\\\"columns\\\":[{\\\"path\\\":\\\"$.kind\\\",\\\"columnid\\\":\\\"Kind\\\"},{\\\"path\\\":\\\"$.properties.friendlyName\\\",\\\"columnid\\\":\\\"Name\\\"}]}}]}\",\"size\":2,\"noDataMessage\":\"No entities were found\",\"noDataMessageStyle\":4,\"queryType\":12,\"visualization\":\"table\",\"gridSettings\":{\"hierarchySettings\":{\"treeType\":1,\"groupBy\":[\"Kind\"],\"expandTopLevel\":true}},\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"kind\",\"formatter\":1,\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\"}}},\"subtitleContent\":{\"columnMatch\":\"properties\",\"formatter\":1},\"showBorder\":false,\"sortCriteriaField\":\"kind\",\"sortOrderField\":1,\"size\":\"auto\"}},\"customWidth\":\"70\",\"name\":\"Entities List\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"## Recent activities\"},\"name\":\"text - 2 - Copy - Copy - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"SecurityIncident\\n| where Severity in ({Severity}) or '{Severity:label}' ==  \\\"All\\\"\\n| extend Tactics = todynamic(AdditionalData.tactics)\\n| where Tactics in ({Tactics}) or '{Tactics:label}' ==  \\\"All\\\"\\n| extend Owner = todynamic(Owner.assignedTo) \\n| where Owner in ({Owner}) or '{Owner:label}' ==  \\\"All\\\"\\n| extend Product = todynamic((parse_json(tostring(AdditionalData.alertProductNames))[0])) \\n| where Product in ({Product}) or '{Product:label}' ==  \\\"All\\\"\\n| where IncidentNumber == '{IncidentNumber}' or '{IncidentNumber}' ==  ''\\n| order by LastModifiedTime \\n| project LastModifiedTime,IncidentNumber, Title, Product, IncidentUrl, ModifiedBy,Status, Severity, Owner\\n| take 250\\n\\n\\n\",\"size\":1,\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"IncidentUrl\",\"formatter\":7,\"formatOptions\":{\"linkTarget\":\"Url\",\"linkLabel\":\"Go to incident >\"}}],\"labelSettings\":[{\"columnId\":\"LastModifiedTime\",\"label\":\"Last Modified Time\"},{\"columnId\":\"IncidentNumber\",\"label\":\"Incident Number\"},{\"columnId\":\"IncidentUrl\",\"label\":\"Link to incident\"},{\"columnId\":\"ModifiedBy\",\"label\":\"Modified By\"}]},\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"Column1\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"IncidentNumber\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}}},\"name\":\"query - 2 - Copy - Copy - Copy - Copy\"}]},\"name\":\"Incidents tactic over time\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"## Incident's Comments\"},\"name\":\"text - 2 - Copy - Copy - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"SecurityIncident\\n| where IncidentNumber == '{IncidentNumber}' or '{IncidentNumber}' ==  ''\\n| summarize arg_max(TimeGenerated,Status, Severity, Owner, AdditionalData, IncidentUrl, Comments) by IncidentNumber\\n| where Severity in ({Severity}) or '{Severity:label}' ==  \\\"All\\\"\\n| extend Tactics = todynamic(AdditionalData.tactics)\\n| where Tactics in ({Tactics}) or '{Tactics:label}' ==  \\\"All\\\"\\n| extend Owner = todynamic(Owner.assignedTo) \\n| where Owner in ({Owner}) or '{Owner:label}' ==  \\\"All\\\"\\n| extend Product = todynamic((parse_json(tostring(AdditionalData.alertProductNames))[0])) \\n| where Product in ({Product}) or '{Product:label}' ==  \\\"All\\\"\\n| mv-expand Comments to typeof(string)\\n| extend Message = extract('message\\\":\\\"(.*?)\\\"',1,tostring(Comments)), Author = extract('name\\\":\\\"(.*?)\\\"',1,tostring(Comments)), CreatedTimeUTC = extract('createdTimeUtc\\\":\\\"(.*?)\\\"',1,tostring(Comments))\\n| project CreatedTimeUTC, Author, Message, IncidentNumber, Owner\\n| take 250\\n\\n\\n\",\"size\":1,\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"IncidentUrl\",\"formatter\":7,\"formatOptions\":{\"linkTarget\":\"Url\",\"linkLabel\":\"Go to incident >\"}}],\"sortBy\":[{\"itemKey\":\"IncidentNumber\",\"sortOrder\":2}]},\"sortBy\":[{\"itemKey\":\"IncidentNumber\",\"sortOrder\":2}],\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"Column1\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"IncidentNumber\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}}},\"name\":\"query - 2 - Copy - Copy - Copy - Copy\"}]},\"name\":\"Incidents tactic over time - Copy\"}],\"fromTemplateId\":\"sentinel-PCMaticSuperShieldWorkbook\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
        "version": "1.0",
        "sourceId": "[variables('_workbook-source')]",
        "category": "sentinel"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "1.0.0",
        "kind": "Solution",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "PCMatic SuperShield",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "John Farley",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft.Azure.Sentinel.Metadata.Api.Models.Preview_2022_01_01.SupportTier",
          "email": "support@pcmatic.com",
          "tier": "Partner",
          "link": "https://www.pcmatic.com/support/#/business-support-form"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId1')]",
              "version": "[variables('parserVersion1')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId1')]",
              "version": "[variables('analyticRuleVersion1')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId2')]",
              "version": "[variables('analyticRuleVersion2')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId3')]",
              "version": "[variables('analyticRuleVersion3')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_BlockAllowProcess')]",
              "version": "[variables('playbookVersion1')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_RemoveProcess')]",
              "version": "[variables('playbookVersion2')]"
            },
            {
              "kind": "Workbook",
              "contentId": "[variables('_PCMaticIncidentOverviewWorkbook')]",
              "version": "[variables('workbookVersion1')]"
            }
          ]
        },
        "firstPublishDate": "2022-12-02",
        "lastPublishDate": "2022-12-02",
        "providers": [
          "PC Matic"
        ],
        "categories": {
          "domains": [
            "Security - Vulnerability Management"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
