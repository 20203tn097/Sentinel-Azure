{
   "$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
   "contentVersion":"1.0.0.0",
   "metadata":{
      "title":"Get System Info - Palo Alto PAN-OS XML API",
      "description":"This playbook gets a threat PCAP from the Panorama machine for a particular threat. ",
      "mainSteps":[
         "1. For each incident, check if the alert is a Palo Alto incident.",
         "2. If it is, extract the firewall device name.",
         "3. Make a call to the device, and get the system info.",
         "4. Update the Sentinel Incident with the system info."
      ],
      "prerequisites":[
         "1. Palo Alto PAN-OS custom connector needs to be deployed prior to the deployment of this playbook, in the same resource group and region.",
         "2. Generate an API key.[Refer this link on how to generate the API Key](https://paloaltolactest.trafficmanager.net/restapi-doc/#tag/key-generation)"
      ],
      "prerequisitesDeployTemplateFile":"../../PaloAltoCustomConnector/azuredeploy.json",
      "lastUpdateTime":"2021-07-28T00:00:00.000Z",
      "entities":[
         "Ip"
      ],
      "tags":[
         "Remediation",
         "Response from teams"
      ],
      "support":{
         "tier":"community"
      },
      "author":{
         "name":"Smitha Sundareswaran"
      }
   },
   "parameters":{
      "PlaybookName":{
         "defaultValue":"PaloAlto-PAN-OS-GetSystemInfo",
         "type":"String",
         "metadata":{
            "description":"Name of the Logic App/Playbook"
         }
      },
      "CustomConnectorName":{
         "defaultValue":"PAN-OSXmlApiCustomConnector",
         "type":"String",
         "metadata":{
            "description":"Name of the custom connector which interacts with PAN-OS"
         }
      },
      "LogAnalyticsResourceGroup":{
         "type":"string",
         "metadata":{
            "description":"Name of the cLog Analytics Resource group for logging"
         }
      },
      "LogAnalyticsResourceName":{
         "type":"string",
         "metadata":{
            "description":"Name of the Log Analytics instance for logging"
         }
      },
      "KeyVaultName":{
         "defaultValue":"pan-os-kv",
         "type":"string",
         "metadata":{
            "description":"Specifies the name of the key vault."
         }
      },
      "secretName": {
         "type": "String",
         "defaultValue": "X-PAN-KEY",
         "metadata": {
            "description": "Name of the secret"
         }
      },
      "secretValue":{
         "type":"secureString",
         "defaultValue":"",
         "metadata":{
            "description":"Specifies the value of the secret that you want to create."
         }
      },
      "onPremiseGatewayName": {
         "defaultValue": "",
         "type": "String",
         "metadata": {
            "description": "Provide the On-premises data gateway that will be used with PaloAlto connector. Data gateway should be deployed under the same subscription and resource group as playbook."
         }
      }
   },
   "variables":{
      "subscriptionId":"[subscription().subscriptionId]",
      "location":"[resourceGroup().location]",
      "AzureMonitorConnectionName":"[concat('azuremonitor-', parameters('PlaybookName'))]",
      "AzureSentinelConnectionName":"[concat('azuresentinel-', parameters('PlaybookName'))]",
      "PaloAltoConnectorConnectionName":"[concat('PaloAltoConnector-', parameters('PlaybookName'))]",
      "KeyVaultConnectionName":"[concat('keyvault-', parameters('KeyVaultName'))]"
   },
   "resources":[
      {
         "type":"Microsoft.Web/connections",
         "apiVersion":"2016-06-01",
         "name":"[variables('PaloAltoConnectorConnectionName')]",
         "location":"[resourceGroup().location]",
         "properties":{
            "parameterValues": {
               "authType": "anonymous",
               "gateway": {
                  "id": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Web/connectionGateways/',parameters('onPremiseGatewayName'))]"
               }
            },
            "api":{
               "id":"[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/customApis/', parameters('CustomConnectorName'))]"
            }
         }
      },
      {
         "type":"Microsoft.Web/connections",
         "apiVersion":"2016-06-01",
         "name":"[variables('AzureSentinelConnectionName')]",
         "location":"[resourceGroup().location]",
         "kind":"V1",
         "properties":{
            "displayName":"[parameters('PlaybookName')]",
            "customParameterValues":{

            },
            "parameterValueType":"Alternative",
            "api":{
               "id":"[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
            }
         }
      },
      {
         "type":"Microsoft.Web/connections",
         "apiVersion":"2016-06-01",
         "name":"[variables('AzureMonitorConnectionName')]",
         "location":"[resourceGroup().location]",
         "properties":{
            "customParameterValues":{

            },
            "api":{
               "id":"[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuremonitorlogs')]"
            }
         }
      },
      {
         "type":"Microsoft.Web/connections",
         "apiVersion":"2016-06-01",
         "name":"[variables('KeyVaultConnectionName')]",
         "location":"[resourceGroup().location]",
         "kind":"V1",
         "properties":{
            "displayName":"[parameters('PlaybookName')]",
            "customParameterValues":{

            },
            "parameterValueType":"Alternative",
            "alternativeParameterValues":{
               "vaultName":"[parameters('KeyVaultName')]"
            },
            "api":{
               "id":"[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/keyvault')]"
            }
         }
      },
      {
         "type":"Microsoft.Logic/workflows",
         "apiVersion":"2017-07-01",
         "name":"[parameters('PlaybookName')]",
         "location":"[variables('location')]",
         "identity":{
            "type":"SystemAssigned"
         },
         "dependsOn":[
            "[resourceId('Microsoft.Web/connections', variables('PaloAltoConnectorConnectionName'))]",
            "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
            "[resourceId('Microsoft.Web/connections', variables('KeyVaultConnectionName'))]",
            "[resourceId('Microsoft.Web/connections', variables('AzureMonitorConnectionName'))]"
         ],
         "properties":{
            "state":"Enabled",
            "definition":{
               "$schema":"https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
               "contentVersion":"1.0.0.0",
               "parameters":{
                  "$connections":{
                     "defaultValue":{

                     },
                     "type":"Object"
                  },
                  "secretName": {
                     "type": "String",
                     "defaultValue": "[parameters('secretName')]"
                  }
               },
               "triggers":{
                  "Microsoft_Sentinel_incident":{
                     "type":"ApiConnectionWebhook",
                     "inputs":{
                        "body":{
                           "callback_url":"@{listCallbackUrl()}"
                        },
                        "host":{
                           "connection":{
                              "name":"@parameters('$connections')['azuresentinel']['connectionId']"
                           }
                        },
                        "path":"/subscribe"
                     }
                  }
               },
               "actions":{
                  "For_each": {
                     "actions": {
                        "If_incident_is_a_Palo_Alto_incident": {
                           "actions": {
                              "Add_comment_to_incident_(V3)": {
                                 "inputs": {
                                    "body": {
                                       "incidentArmId": "@triggerBody()?['object']?['id']",
                                       "message": "<p>@{body('Query_Palo_Alto_XML_API')}</p>"
                                    },
                                    "host": {
                                       "connection": {
                                          "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                       }
                                    },
                                    "method": "post",
                                    "path": "/Incidents/Comment"
                                 },
                                 "runAfter": {
                                    "Query_Palo_Alto_XML_API": [
                                       "Succeeded"
                                    ]
                                 },
                                 "type": "ApiConnection"
                              },
                              "Query_Palo_Alto_XML_API": {
                                 "inputs": {
                                    "headers": {
                                       "X-PAN-KEY": "@body('Get_secret')?['value']"
                                    },
                                    "host": {
                                       "connection": {
                                          "name": "@parameters('$connections')['paloaltoconnector']['connectionId']"
                                       }
                                    },
                                    "method": "get",
                                    "path": "/api/",
                                    "queries": {
                                       "cmd": "<show><system><info></info></system></show>",
                                       "device_name": "@{items('For_each')['MonitoringDeviceName']}",
                                       "type": "op"
                                    }
                                 },
                                 "runAfter": {},
                                 "type": "ApiConnection"
                              }
                           },
                           "expression": {
                              "and": [
                                 {
                                    "contains": [
                                       "@items('For_each')['AlertSource']",
                                       "@string('PaloAlto')"
                                    ]
                                 }
                              ]
                           },
                           "runAfter": {},
                           "type": "If"
                        }
                     },
                     "foreach": "@body('Run_query_and_list_results')?['value']",
                     "runAfter": {
                        "Run_query_and_list_results": [
                           "Succeeded"
                        ]
                     },
                     "type": "Foreach"
                  },
                  "Get_secret": {
                     "inputs": {
                        "host": {
                           "connection": {
                              "name": "@parameters('$connections')['keyvault']['connectionId']"
                           }
                        },
                        "method": "get",
                        "path": "/secrets/@{encodeURIComponent(parameters('secretName'))}/value"
                     },
                     "runAfter": {},
                     "runtimeConfiguration": {
                        "secureData": {
                           "properties": [
                              "outputs"
                           ]
                        }
                     },
                     "type": "ApiConnection"
                  },
                  "Run_query_and_list_results": {
                     "inputs": {
                        "body": "@{triggerBody()?['ExtendedProperties']?['Query']}\n| limit 10",
                        "host": {
                           "connection": {
                              "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                           }
                        },
                        "method": "post",
                        "path": "/queryData",
                        "queries": {
                           "resourcegroups": "Log Analytics Resource Group",
                           "resourcename": "Log Analytics Resource Name",
                           "resourcetype": "Log Analytics Workspace",
                           "subscriptions": "3102b8f9-10e3-49bf-8712-51c184fddef5",
                           "timerange": "Set in query"
                        }
                     },
                     "runAfter": {
                        "Get_secret": [
                           "Succeeded"
                        ]
                     },
                     "type": "ApiConnection"
                  }
               },
               "outputs":{

               }
            },
            "parameters":{
               "$connections":{
                  "value":{
                     "azuremonitorlogs":{
                        "connectionId":"[resourceId('Microsoft.Web/connections', variables('AzureMonitorConnectionName'))]",
                        "connectionName":"azuremonitorlogs",
                        "id":"[concat('/subscriptions/', subscription().subscriptionId,'/providers/Microsoft.Web/locations/', variables('location'), '/managedApis/azuremonitorlogs')]"
                     },
                     "azuresentinel":{
                        "connectionId":"[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName":"azuresentinel",
                        "id":"[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('location'), '/managedApis/azuresentinel')]",
                        "connectionProperties":{
                           "authentication":{
                              "type":"ManagedServiceIdentity"
                           }
                        }
                     },
                     "paloaltoconnector":{
                        "connectionId":"[resourceId('Microsoft.Web/connections', variables('PaloAltoConnectorConnectionName'))]",
                        "connectionName":"[variables('PaloAltoConnectorConnectionName')]",
                        "id":"[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/customApis/', parameters('CustomConnectorName'))]"
                     },
                     "keyvault": {
                        "connectionId": "[resourceId('Microsoft.Web/connections', variables('KeyVaultConnectionName'))]",
                        "connectionName": "[variables('KeyVaultConnectionName')]",
                        "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/keyvault')]",
                        "connectionProperties": {
                           "authentication": {
                              "type": "ManagedServiceIdentity"
                           }
                        }
                     }
                  }
               }
            }
         }
      }
   ]
}