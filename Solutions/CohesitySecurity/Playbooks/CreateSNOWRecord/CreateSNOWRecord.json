{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "title": "",
        "description": "",
        "prerequisites": "",
    "postDeployment": [],
    "prerequisitesDeployTemplateFile": "",
    "lastUpdateTime": "",
"entities": [],
"tags": [],
"support": {
"tier": "community",
"armtemplate": "Generated from https://github.com/Azure/Azure-Sentinel/tree/master/Tools/Playbook-ARM-Template-Generator"
},
"author": {
"name": ""
}
},
"parameters": {
"PlaybookName": {
"defaultValue": "CreateSNOWRecord",
"type": "string"
}
},
"variables": {
"MicrosoftSentinelConnectionName": "[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
"Service-NowConnectionName": "[concat('Service-Now-', parameters('PlaybookName'))]"
},
"resources": [
{
"properties": {
    "provisioningState": "Succeeded",
    "state": "Enabled",
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "contentVersion": "1.0.0.0",
        "parameters": {
            "$connections": {
            "defaultValue": {},
            "type": "Object"
        }
    },
    "triggers": {
        "Microsoft_Sentinel_incident": {
            "type": "ApiConnectionWebhook",
            "inputs": {
                "body": {
                    "callback_url": "@{listCallbackUrl()}"
                },
                "host": {
                    "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                    }
                },
                "path": "/incident-creation"
            }
        }
    },
    "actions": {
        "Create_Record": {
            "runAfter": {
                "Switch": [
                    "Succeeded"
                ]
            },
            "type": "ApiConnection",
            "inputs": {
                "body": {
                    "comments": "@triggerBody()?['object']?['properties']?['incidentUrl']",
                    "description": "Incident description: @{triggerBody()?['object']?['properties']?['description']};\nSeverity: @{triggerBody()?['object']?['properties']?['severity']}",
                    "impact": "@variables('Severity')",
                    "number": "@triggerBody()?['object']?['name']",
                    "short_description": "@triggerBody()?['object']?['properties']?['title']",
                    "urgency": "@variables('Severity')"
                },
                "host": {
                    "connection": {
                        "name": "@parameters('$connections')['service-now']['connectionId']"
                    }
                },
                "method": "post",
                "path": "/api/now/v2/table/@{encodeURIComponent('incident')}",
                "queries": {
                    "sysparm_display_value": false,
                    "sysparm_exclude_reference_link": true
                }
            }
        },
        "Initialize_variable": {
        "runAfter": {},
        "type": "InitializeVariable",
        "inputs": {
            "variables": [
                {
                    "name": "Severity",
                    "type": "string",
                    "value": "3"
                }
            ]
        }
    },
    "Switch": {
        "runAfter": {
            "Initialize_variable": [
                "Succeeded"
            ]
        },
        "cases": {
            "Case_Severity_High": {
                "case": "High",
                "actions": {
                    "Set_Severity_variable_to_High": {
                    "runAfter": {},
                    "type": "SetVariable",
                    "inputs": {
                        "name": "Severity",
                        "value": "1"
                    }
                }
            }
        },
        "Case_Severity_Medium": {
            "case": "Medium",
            "actions": {
                "Set_Severity_variable_to_Medium": {
                "runAfter": {},
                "type": "SetVariable",
                "inputs": {
                    "name": "Severity",
                    "value": "2"
                }
            }
        }
    }
},
"default": {
"actions": {}
},
"expression": "@triggerBody()?['object']?['properties']?['severity']",
"type": "Switch"
}
},
"outputs": {}
},
"parameters": {
"$connections": {
"value": {
"azuresentinel": {
"connectionId": "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
"connectionName": "[variables('MicrosoftSentinelConnectionName')]",
"id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]",
"connectionProperties": {
"authentication": {
    "type": "ManagedServiceIdentity"
}
}
},
"service-now": {
"connectionId": "[resourceId('Microsoft.Web/connections', variables('Service-NowConnectionName'))]",
"connectionName": "[variables('Service-NowConnectionName')]",
"id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Service-Now')]"
}
}
}
}
},
"name": "[parameters('PlaybookName')]",
"type": "Microsoft.Logic/workflows",
"location": "[resourceGroup().location]",
"tags": {
"hidden-SentinelTemplateName": "CreateSNOWRecord",
"hidden-SentinelTemplateVersion": "1.0"
},
"identity": {
"type": "SystemAssigned"
},
"apiVersion": "2019-05-01",
"dependsOn": [
"[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
"[resourceId('Microsoft.Web/connections', variables('Service-NowConnectionName'))]"
]
},
{
"type": "Microsoft.Web/connections",
"apiVersion": "2016-06-01",
"name": "[variables('MicrosoftSentinelConnectionName')]",
"location": "[resourceGroup().location]",
"kind": "V1",
"properties": {
"displayName": "[variables('MicrosoftSentinelConnectionName')]",
"customParameterValues": {},
"parameterValueType": "Alternative",
"api": {
"id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]"
}
}
},
{
"type": "Microsoft.Web/connections",
"apiVersion": "2016-06-01",
"name": "[variables('Service-NowConnectionName')]",
"location": "[resourceGroup().location]",
"kind": "V1",
"properties": {
"displayName": "[variables('Service-NowConnectionName')]",
"customParameterValues": {},
"api": {
"id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Service-Now')]"
}
}
}
]
}
