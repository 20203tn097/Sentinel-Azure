{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "FunctionName": {
      "defaultValue": "IncidentProducer2",
      "minLength": 1,
      "maxLength": 20,
      "type": "string"
    },
    "Workspace": {
      "type": "string",
      "defaultValue": "<workspace name where you are going to receive security incidents>"
    },
    "StartDaysAgo": {
      "type": "string",
      "defaultValue": "-30"
    }
  },
  "variables": {
    "FunctionName": "[concat(toLower(parameters('FunctionName')), uniqueString(resourceGroup().id))]",
    "StorageSuffix": "[environment().suffixes.storage]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[tolower(variables('FunctionName'))]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('FunctionName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('FunctionName')))]"
      ],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "enabled": false
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
      "apiVersion": "2022-05-01",
      "name": "[concat(variables('FunctionName'), '/cohesity-incidents')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('FunctionName')))]"
      ],
      "properties": {
        "metadata": {}
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[variables('FunctionName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('FunctionName')))]"
      ],
      "kind": "functionapp",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "name": "[variables('FunctionName')]",
        "httpsOnly": true,
        "clientAffinityEnabled": true,
        "alwaysOn": true,
        "reserved": true
      },

      "resources": [
        {
          "apiVersion": "2018-11-01",
          "type": "config",
          "name": "appsettings",
          "dependsOn": [
            "[concat('Microsoft.Web/sites/', variables('FunctionName'))]"
          ],
          "properties": {
            "FUNCTIONS_WORKER_RUNTIME": "dotnet",
            "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=', toLower(variables('FunctionName')),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', toLower(variables('FunctionName'))), '2019-06-01').keys[0].value, ';EndpointSuffix=',toLower(variables('StorageSuffix')))]",
            "Workspace": "[parameters('Workspace')]"
           
          }
        }
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('FunctionName'), '/default/cohesity-extra-parameters')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('FunctionName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('FunctionName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    }
  ]
}

