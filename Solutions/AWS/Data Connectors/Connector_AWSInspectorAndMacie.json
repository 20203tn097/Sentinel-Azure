{
    "id": "AWSIntegration",
    "title": "AWS Inspector and Macie Integration",
    "publisher": "Secugram",
    "logo": "AWS.svg",
    "descriptionMarkdown": "Use this template to pull findings from AWS Inspector and Macie using S3.",
    "graphQueries": [
        {
            "metricName": "Total findings received",
            "legend": "AWS_Inspector_CL",
            "baseQuery": "QRadarOffense_CL"
        }
    ],
    "sampleQueries": [
        {
            "description" : "Query EC2 Instance contains multiple High and Critical vulnerbilities ",
            "query": "AWS_Inspector_CL | extend d=parse_json(detail_findings_s) | extend types=d[0].Types[0] | extend severity = d[0].Severity['Label'] | extend ec2instance = d[0].Resources[0].Id | where types contains 'CVE' and (severity =~ 'High' or severity =~ 'Critical')| summarize count() by tostring(ec2instance) | where count_ >= 5"
        }
    ],
    "dataTypes": [
        {
            "name": "AWS_Inspector_CL",
            "lastDataReceivedQuery": "AWS_Inspector_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
        }
    ],
    "connectivityCriterias": [
        {
            "type": "IsConnectedQuery",
            "value": [
                "AWS_Inspector_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
            ]
        }
    ],
    "availability": {
        "status": 1,
        "isPreview": true
    },
    "permissions": {
        "resourceProvider": [
            {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "read and write permissions on the workspace are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                    "write": true,
                    "read": true,
                    "delete": true
                }
            },
            {
                "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                "providerDisplayName": "Keys",
                "scope": "Workspace",
                "requiredPermissions": {
                    "action": true
                }
            }
        ],
        "customs": [
            {
                "name": "Microsoft.Web/sites permissions",
                "description": "Read and write permissions to Azure Functions to create a Function App is required. [See the documentation to learn more about Azure Functions](https://docs.microsoft.com/azure/azure-functions/)."
            },            
            {
                "name": "AWS Access Key",
                "description": "You must create an access key to authenticate the background polling service that the Operations app uses to request data from AWS S3. [See the documentation to learn more about AWS Access Token](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html)."
            }
        ]
    },
    "instructionSteps": [
        {
            "title": "",
            "description": ">**NOTE:** This connector uses Azure Functions to connect to a S3 to pull its AWS Inspector and Macie findings into Azure Sentinel. This might result in additional data ingestion costs. Check the [Azure Functions pricing page](https://azure.microsoft.com/pricing/details/functions/) for details."
        },
        {
            "title": "",
            "description": ">**(Optional Step)** Securely store workspace and API authorization key(s) or token(s) in Azure Key Vault. Azure Key Vault provides a secure mechanism to store and retrieve key values. [Follow these instructions](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references) to use Azure Key Vault with an Azure Function App."
        },
        {
            "title": "",
            "description": "**STEP 1 - Using Azure Resource Manager (ARM) Template to deploy the connector**\n\n>**IMPORTANT:** Before deploying the AWS connector, have the Workspace ID and Workspace Primary Key (can be copied from the following), as well as the AWS Access Key, readily available.",
            "instructions": [
                {
                    "parameters": {
                        "fillWith": [
                            "WorkspaceId"
                        ],
                        "label": "Workspace ID"
                    },
                    "type": "CopyableLabel"
                },
                {
                    "parameters": {
                        "fillWith": [
                            "PrimaryKey"
                        ],
                        "label": "Primary Key"
                    },
                    "type": "CopyableLabel"
                }
            ]
        },
        {
            "title": "",
            "description": "**Azure Resource Manager (ARM) Template**\n\nUse this method for automated deployment of the AWS Connector.\n\n1. Click the **Deploy to Azure** button below. \n\n\t[![Deploy To Azure](https://aka.ms/deploytoazurebutton)](https://aka.ms/sentinel-awsinspectorandmacie-azuredeploy)\n2. Select the preferred **Subscription**, **Resource Group** and **Location**. \n3. Enter the **Workspace ID**, **Workspace Key**, **Qradar Authorized Service Token**, **SPN Credential**. \n>Note: If using Azure Key Vault secrets for any of the values above, use the`@Microsoft.KeyVault(SecretUri={Security Identifier})`schema in place of the string values. Refer to [Key Vault references documentation](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references) for further details. \n4. Mark the checkbox labeled **I agree to the terms and conditions stated above**. \n5. Click **Purchase** to deploy."
        }
        
    ],
    "metadata": {
        "id": "Unique Identifier (GUID) used to identify dependencies and content from solutions or community.",
        "version": "1.0.0",
        "kind": "dataConnector",
        "source": {
            "kind": "source type of the content. Value must be one of these : localWorkspace | community | solution | sourceRepository",
            "name": "Name of the content source. The repo name, solution name, LA workspace name etc."
        },
        "author": {
            "name": "Secugram"
        },
        "support": {
            "tier": "Community",
            "name": "Secugram",
            "email": "Secugram.io@gmail.com",
            "link":"Optional: Link for support help, like to support page to open a ticket etc"
        }
    }
}