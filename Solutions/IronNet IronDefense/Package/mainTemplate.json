{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Ecosystems & Integrations - support@ironnet.com",
    "comments": "Solution template for IronNet IronDefense"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    }
  },
  "variables": {
    "email": "support@ironnet.com",
    "_email": "[variables('email')]",
    "_solutionName": "IronNet IronDefense",
    "_solutionVersion": "3.0.0",
    "solutionId": "ironnetcybersecurity1585849518753.irondefense-for-sentinel",
    "_solutionId": "[variables('solutionId')]",
    "IronNet_UpdateIronDefenseAlerts": "IronNet_UpdateIronDefenseAlerts",
    "_IronNet_UpdateIronDefenseAlerts": "[variables('IronNet_UpdateIronDefenseAlerts')]",
    "playbookVersion1": "1.0",
    "playbookContentId1": "IronNet_UpdateIronDefenseAlerts",
    "_playbookContentId1": "[variables('playbookContentId1')]",
    "playbookId1": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId1'))]",
    "playbookTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId1'))),variables('playbookVersion1')))]",
    "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
    "_playbookcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId1'),'-', variables('playbookVersion1'))))]",
    "blanks": "[replace('b', 'b', '')]",
    "IronNet_UpdateSentinelIncidents": "IronNet_UpdateSentinelIncidents",
    "_IronNet_UpdateSentinelIncidents": "[variables('IronNet_UpdateSentinelIncidents')]",
    "playbookVersion2": "1.0",
    "playbookContentId2": "IronNet_UpdateSentinelIncidents",
    "_playbookContentId2": "[variables('playbookContentId2')]",
    "playbookId2": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId2'))]",
    "playbookTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId2'))),variables('playbookVersion2')))]",
    "_playbookcontentProductId2": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId2'),'-', variables('playbookVersion2'))))]",
    "_solutioncontentProductId": "[concat(take(variables('_solutionId'),50),'-','sl','-', uniqueString(concat(variables('_solutionId'),'-','Solution','-',variables('_solutionId'),'-', variables('_solutionVersion'))))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "UpdateIronDefenseAlerts Playbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion1')]",
          "parameters": {
            "IronApiUsername": {
              "type": "string",
              "repeat": "false",
              "metadata": {
                "label": "IronDefense Username",
                "description": "IronVue username to connect to IronDefense API"
              }
            },
            "IronApiPassword": {
              "type": "securestring",
              "repeat": "false",
              "metadata": {
                "label": {
                  "password": "IronDefense Password",
                  "confirmPassword": "Confirm Password"
                },
                "description": "IronVue password to connect to IronDefense API"
              }
            },
            "IronDefenseUrl": {
              "type": "string",
              "repeat": "false",
              "metadata": {
                "label": "IronDefense URL",
                "description": "IronDefense URL used to authenticate to IronAPI"
              }
            },
            "AzureClientId": {
              "type": "string",
              "metadata": {
                "label": "Client ID",
                "description": "Azure Active Directory ClientId used to connect to the Microsoft Sentinel API to fetch Incidents"
              }
            },
            "AzureClientSecret": {
              "type": "securestring",
              "metadata": {
                "label": {
                  "password": "Client Secret",
                  "confirmPassword": "Confirm Client Secret"
                },
                "description": "Azure Active Directory ClientSecret used to connect to the Microsoft Sentinel API to fetch Incidents"
              }
            },
            "ShareCommentWithIrondome": {
              "type": "bool",
              "metadata": {
                "label": "Share Comments With Irondome(Recommended)",
                "description": "Check this flag to share the comments within the incident with IronDome"
              }
            },
            "RecurrenceInterval": {
              "type": "string",
              "metadata": {
                "label": "Playback Recurrence Interval",
                "description": "Polling Interval for the Playbook to execute (This must be an Integer value)"
              }
            },
            "RecurrenceFrequency": {
              "type": "string",
              "defaultValue": "Minute",
              "allowedValues": [
                "Day",
                "Hour",
                "Minute",
                "Month",
                "Second"
              ],
              "metadata": {
                "label": "Playback Recurrence Frequency",
                "description": "Polling Interval Frequency"
              }
            },
            "PlaybookName": {
              "type": "string",
              "defaultValue": "UpdateIronDefenseAlerts",
              "metadata": {
                "label": "Playbook Name",
                "description": "Playbook name to test the IronNet API"
              }
            }
          },
          "variables": {
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2019-05-01",
              "name": "[[parameters('playbook1-PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "tenant_id": {
                      "defaultValue": "[[subscription().tenantId]",
                      "type": "String"
                    },
                    "irondefense_url": {
                      "defaultValue": "[[parameters('playbook1-IronDefenseUrl')]",
                      "type": "String"
                    },
                    "user_name": {
                      "defaultValue": "[[parameters('playbook1-IronApiUsername')]",
                      "type": "String"
                    },
                    "password": {
                      "defaultValue": "[[parameters('playbook1-IronApiPassword')]",
                      "type": "SecureString"
                    },
                    "client_id": {
                      "defaultValue": "[[parameters('playbook1-AzureClientId')]",
                      "type": "String"
                    },
                    "client_secret": {
                      "defaultValue": "[[parameters('playbook1-AzureClientSecret')]",
                      "type": "SecureString"
                    },
                    "resource_group_id": {
                      "defaultValue": "[[resourceGroup().id]",
                      "type": "String"
                    },
                    "resource_group": {
                      "defaultValue": "[[resourceGroup().name]",
                      "type": "String"
                    },
                    "subscription_id": {
                      "defaultValue": "[[subscription().subscriptionId]",
                      "type": "String"
                    },
                    "workspace_name": {
                      "defaultValue": "[[parameters('workspace')]",
                      "type": "String"
                    },
                    "polling_interval": {
                      "defaultValue": "[[parameters('playbook1-RecurrenceInterval')]",
                      "type": "String"
                    },
                    "polling_frequency": {
                      "defaultValue": "[[parameters('playbook1-RecurrenceFrequency')]",
                      "type": "SecureString"
                    },
                    "share_comment_with_irondome": {
                      "defaultValue": "[[parameters('playbook1-ShareCommentWithIrondome')]",
                      "type": "Bool"
                    },
                    "microsoft_login_uri": {
                      "type": "string",
                      "defaultValue": "[[concat('login.microsoft','online.com')]"
                    },
                    "microsoft_management_uri": {
                      "type": "string",
                      "defaultValue": "[[concat('management.','azure.com')]"
                    }
                  },
                  "triggers": {
                    "Generate_the_token_for_Azure_Sentinel_Incident": {
                      "recurrence": {
                        "frequency": "@{parameters('polling_frequency')}",
                        "interval": "@{int(parameters('polling_interval'))}"
                      },
                      "type": "Http",
                      "inputs": {
                        "body": "grant_type=client_credentials&client_id=@{parameters('client_id')}&client_secret=@{parameters('client_secret')}&resource=https://@{parameters('microsoft_management_uri')}",
                        "headers": {
                          "Content-Type": "application/x-www-form-urlencoded"
                        },
                        "method": "POST",
                        "uri": "https://@{parameters('microsoft_login_uri')}/@{parameters('tenant_id')}/oauth2/token"
                      }
                    }
                  },
                  "actions": {
                    "Check_Result": {
                      "actions": {
                        "Incidents_were_modified": {
                          "type": "Compose",
                          "inputs": "Following one or more incidents were modified between @{variables('Interval Frequency')} to @{utcNow()}:\n@{variables('Incidents')}"
                        }
                      },
                      "runAfter": {
                        "Loop_through_All_the_Incident_Pages": [
                          "Succeeded"
                        ]
                      },
                      "else": {
                        "actions": {
                          "No_Incidents_modified": {
                            "type": "Compose",
                            "inputs": "No Incidents modified between @{variables('Interval Frequency')} to @{utcNow()}"
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "equals": [
                              "@variables('Flag')",
                              true
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "Initialize_Analyst_Expectation": {
                      "runAfter": {
                        "Initialize_Analyst_Severity": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Expectation",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Initialize_Analyst_Severity": {
                      "runAfter": {
                        "Initialize_Status": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Severity",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Initialize_Custom_Details": {
                      "runAfter": {
                        "Initialize_Analyst_Expectation": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Custom Details",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Initialize_Incident_Next_Link": {
                      "runAfter": {
                        "Map_Interval_Frequency": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Next Link",
                            "type": "string",
                            "value": "https://@{parameters('microsoft_management_uri')}@{parameters('resource_group_id')}/providers/Microsoft.OperationalInsights/workspaces/@{parameters('workspace_name')}/providers/Microsoft.SecurityInsights/incidents?api-version=2020-01-01&$orderby=properties/lastModifiedTimeUtc desc&$filter=(properties/lastModifiedTimeUtc ne properties/createdTimeUtc) and (properties/lastModifiedTimeUtc le @{utcNow()})  and (properties/lastModifiedTimeUtc gt @{variables('Interval Frequency')})"
                          }
                        ]
                      }
                    },
                    "Initialize_Incident_variable": {
                      "runAfter": {
                        "Parse_Token": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Incidents",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Initialize_Interval": {
                      "runAfter": {
                        "Initialize_Custom_Details": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Interval",
                            "type": "string",
                            "value": "-@{int(parameters('polling_interval'))}"
                          }
                        ]
                      }
                    },
                    "Initialize_Interval_Frequency": {
                      "runAfter": {
                        "Initialize_Interval": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Interval Frequency",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Initialize_Status": {
                      "runAfter": {
                        "Initialize_Success_Flag": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Status",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Initialize_Success_Flag": {
                      "runAfter": {
                        "Initialize_Incident_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Flag",
                            "type": "boolean",
                            "value": false
                          }
                        ]
                      }
                    },
                    "Loop_through_All_the_Incident_Pages": {
                      "actions": {
                        "Get_All_Updated_Incident": {
                          "type": "Http",
                          "inputs": {
                            "headers": {
                              "Authorization": "Bearer @{body('Parse_Token')?['access_token']}",
                              "content-type": "application/json"
                            },
                            "method": "GET",
                            "uri": "@variables('Next Link')"
                          }
                        },
                        "IronNet_Login_to_fetch_the_Token": {
                          "runAfter": {
                            "Parse_Incident_details": [
                              "Succeeded"
                            ]
                          },
                          "type": "Http",
                          "inputs": {
                            "authentication": {
                              "password": "@parameters('password')",
                              "type": "Basic",
                              "username": "@parameters('user_name')"
                            },
                            "body": "{}",
                            "headers": {
                              "Content-Type": "application/json"
                            },
                            "method": "POST",
                            "uri": "@{parameters('irondefense_url')}/IronApi/Login"
                          }
                        },
                        "Loop_through_each_Incident": {
                          "foreach": "@body('Parse_Incident_details')?['value']",
                          "actions": {
                            "Get_Incident_and_System_Alert_relations": {
                              "type": "Http",
                              "inputs": {
                                "headers": {
                                  "Authorization": "Bearer @{body('Parse_Token')?['access_token']}",
                                  "content-type": "application/json"
                                },
                                "method": "GET",
                                "uri": "https://@{parameters('microsoft_management_uri')}@{parameters('resource_group_id')}/providers/Microsoft.OperationalInsights/workspaces/@{parameters('workspace_name')}/providers/Microsoft.SecurityInsights/incidents/@{items('Loop_through_each_Incident')?['name']}/relations?api-version=2019-01-01-preview"
                              }
                            },
                            "Incidents_Updated": {
                              "runAfter": {
                                "Loop_through_Alerts": [
                                  "Succeeded"
                                ]
                              },
                              "type": "AppendToStringVariable",
                              "inputs": {
                                "name": "Incidents",
                                "value": "@{items('Loop_through_each_Incident')?['properties']?['incidentNumber']},"
                              }
                            },
                            "Loop_through_Alerts": {
                              "foreach": "@body('Parse_System_Alert_Id')?['value']",
                              "actions": {
                                "Check_for_Closed_Incident_and_Update_the_IronDefense_Analyst_Ratings": {
                                  "actions": {
                                    "Check_for_Comments": {
                                      "actions": {
                                        "For_each": {
                                          "foreach": "@body('Parse_Incidents_comments')?['value']",
                                          "actions": {
                                            "Update_Incident_Rating": {
                                              "type": "Http",
                                              "inputs": {
                                                "body": {
                                                  "alert_id": "@variables('Custom Details')",
                                                  "analyst_expectation": "@variables('Expectation')",
                                                  "analyst_severity": "@variables('Severity')",
                                                  "comment": "@items('For_each')?['properties']?['message']",
                                                  "share_comment_with_irondome": "@parameters('share_comment_with_irondome')"
                                                },
                                                "headers": {
                                                  "Authorization": "Bearer @{body('Parse_IronNet_Token')?['token']}",
                                                  "Content-Type": "application/json"
                                                },
                                                "method": "POST",
                                                "uri": "@{parameters('irondefense_url')}/IronApi/RateAlert"
                                              }
                                            }
                                          },
                                          "type": "Foreach"
                                        }
                                      },
                                      "runAfter": {
                                        "Map_Azure_Sentinel_Expectation_to_IronNet_Analyst_Expectation_": [
                                          "Succeeded"
                                        ]
                                      },
                                      "else": {
                                        "actions": {
                                          "Update_Incident_Rating_without_comment": {
                                            "type": "Http",
                                            "inputs": {
                                              "body": {
                                                "alert_id": "@variables('Custom Details')",
                                                "analyst_expectation": "@variables('Expectation')",
                                                "analyst_severity": "@variables('Severity')",
                                                "comment": "The Incident has been closed",
                                                "share_comment_with_irondome": "@parameters('share_comment_with_irondome')"
                                              },
                                              "headers": {
                                                "Authorization": "Bearer @{body('Parse_IronNet_Token')?['token']}",
                                                "Content-Type": "application/json"
                                              },
                                              "method": "POST",
                                              "uri": "@{parameters('irondefense_url')}/IronApi/RateAlert"
                                            }
                                          }
                                        }
                                      },
                                      "expression": {
                                        "and": [
                                          {
                                            "greater": [
                                              "@items('Loop_through_each_Incident')?['properties']?['additionalData']?['commentsCount']",
                                              0
                                            ]
                                          }
                                        ]
                                      },
                                      "type": "If"
                                    },
                                    "Map_Azure_Sentinel_Expectation_to_IronNet_Analyst_Expectation_": {
                                      "runAfter": {
                                        "Map_Azure_Sentinel_Severity_to_IronNet_Severity": [
                                          "Succeeded"
                                        ]
                                      },
                                      "cases": {
                                        "Case": {
                                          "case": "Undetermined",
                                          "actions": {
                                            "Map_Expectation_'Undetermined'": {
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "Expectation",
                                                "value": "EXP_UNKNOWN"
                                              }
                                            }
                                          }
                                        },
                                        "Case_2": {
                                          "case": "FalsePositive",
                                          "actions": {
                                            "Map_Expectation_'FalsePositive'": {
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "Expectation",
                                                "value": "EXP_EXPECTED"
                                              }
                                            }
                                          }
                                        },
                                        "Case_3": {
                                          "case": "BenignPositive",
                                          "actions": {
                                            "Map_Expectation_'BenignPositive'": {
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "Expectation",
                                                "value": "EXP_EXPECTED"
                                              }
                                            }
                                          }
                                        },
                                        "Case_4": {
                                          "case": "TruePositive",
                                          "actions": {
                                            "Map_Expectation_'TruePositive'": {
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "Expectation",
                                                "value": "EXP_UNEXPECTED"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "expression": "@items('Loop_through_each_Incident')?['properties']?['classification']",
                                      "type": "Switch"
                                    },
                                    "Map_Azure_Sentinel_Severity_to_IronNet_Severity": {
                                      "cases": {
                                        "Case": {
                                          "case": "Undetermined",
                                          "actions": {
                                            "Map_Severity_'Undetermined'": {
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "Severity",
                                                "value": "SEVERITY_UNDECIDED"
                                              }
                                            }
                                          }
                                        },
                                        "Case_2": {
                                          "case": "FalsePositive",
                                          "actions": {
                                            "Map_Severity_'FalsePositive'": {
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "Severity",
                                                "value": "SEVERITY_BENIGN"
                                              }
                                            }
                                          }
                                        },
                                        "Case_3": {
                                          "case": "BenignPositive",
                                          "actions": {
                                            "Map_Severity_'BenignPositive'": {
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "Severity",
                                                "value": "SEVERITY_MALICIOUS"
                                              }
                                            }
                                          }
                                        },
                                        "Case_4": {
                                          "case": "TruePositive",
                                          "actions": {
                                            "Map_Severity_'TruePositive'": {
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "Severity",
                                                "value": "SEVERITY_SUSPICIOUS"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "default": {
                                        "actions": {
                                          "Map_Default_Severity": {
                                            "type": "SetVariable",
                                            "inputs": {
                                              "name": "Severity",
                                              "value": "SEVERITY_UNDECIDED"
                                            }
                                          }
                                        }
                                      },
                                      "expression": "@items('Loop_through_each_Incident')?['properties']?['classification']",
                                      "type": "Switch"
                                    },
                                    "Update_the_Classification_Comment_if_it_exist": {
                                      "actions": {
                                        "Update_Incident_Rating_with_classification_comment": {
                                          "type": "Http",
                                          "inputs": {
                                            "body": {
                                              "alert_id": "@variables('Custom Details')",
                                              "analyst_expectation": "@variables('Expectation')",
                                              "analyst_severity": "@variables('Severity')",
                                              "comment": "@items('Loop_through_each_Incident')?['properties']?['classificationComment']",
                                              "share_comment_with_irondome": "@parameters('share_comment_with_irondome')"
                                            },
                                            "headers": {
                                              "Authorization": "Bearer @{body('Parse_IronNet_Token')?['token']}",
                                              "Content-Type": "application/json"
                                            },
                                            "method": "POST",
                                            "uri": "@{parameters('irondefense_url')}/IronApi/RateAlert"
                                          }
                                        }
                                      },
                                      "runAfter": {
                                        "Check_for_Comments": [
                                          "Succeeded"
                                        ]
                                      },
                                      "expression": {
                                        "and": [
                                          {
                                            "not": {
                                              "equals": [
                                                "@items('Loop_through_each_Incident')?['properties']?['classificationComment']",
                                                ""
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "type": "If"
                                    }
                                  },
                                  "runAfter": {
                                    "Check_for_Comments_and_Update_IronDefense_Alert_Status": [
                                      "Succeeded"
                                    ]
                                  },
                                  "expression": {
                                    "and": [
                                      {
                                        "equals": [
                                          "@items('Loop_through_each_Incident')?['properties']?['status']",
                                          "Closed"
                                        ]
                                      }
                                    ]
                                  },
                                  "type": "If"
                                },
                                "Check_for_Comments_and_Update_IronDefense_Alert_Status": {
                                  "actions": {
                                    "Loop_through_Comments": {
                                      "foreach": "@body('Parse_Incidents_comments')?['value']",
                                      "actions": {
                                        "Update_Incident_Status": {
                                          "type": "Http",
                                          "inputs": {
                                            "body": {
                                              "alert_id": "@variables('Custom Details')",
                                              "comment": "@items('Loop_through_Comments')?['properties']?['message']",
                                              "share_comment_with_irondome": "@parameters('share_comment_with_irondome')",
                                              "status": "@variables('Status')"
                                            },
                                            "headers": {
                                              "Authorization": "Bearer @{body('Parse_IronNet_Token')?['token']}",
                                              "Content-Type": "application/json"
                                            },
                                            "method": "POST",
                                            "uri": "@{parameters('irondefense_url')}/IronApi/SetAlertStatus"
                                          }
                                        }
                                      },
                                      "type": "Foreach"
                                    }
                                  },
                                  "runAfter": {
                                    "Parse_Incidents_comments": [
                                      "Succeeded"
                                    ]
                                  },
                                  "else": {
                                    "actions": {
                                      "Update_Incident_Status_without_comment": {
                                        "type": "Http",
                                        "inputs": {
                                          "body": {
                                            "alert_id": "@variables('Custom Details')",
                                            "comment": "The Incident has been changed to status @{items('Loop_through_each_Incident')?['properties']?['status']}",
                                            "share_comment_with_irondome": "@parameters('share_comment_with_irondome')",
                                            "status": "@variables('Status')"
                                          },
                                          "headers": {
                                            "Authorization": "Bearer @{body('Parse_IronNet_Token')?['token']}",
                                            "Content-Type": "application/json"
                                          },
                                          "method": "POST",
                                          "uri": "@{parameters('irondefense_url')}/IronApi/SetAlertStatus"
                                        }
                                      }
                                    }
                                  },
                                  "expression": {
                                    "and": [
                                      {
                                        "greater": [
                                          "@items('Loop_through_each_Incident')?['properties']?['additionalData']?['commentsCount']",
                                          0
                                        ]
                                      }
                                    ]
                                  },
                                  "type": "If"
                                },
                                "Fetch_Custom_Details_value_from_Incident": {
                                  "runAfter": {
                                    "Map_Azure_Sentinel_Status_to_IronNet_Status_": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "Custom Details",
                                    "value": "@body('Parse_Custom_Details')?['properties']?['additionalData']?['Custom Details']"
                                  }
                                },
                                "Fetch_Ironnet_Alert_Id_from_Incident_Custom_Details": {
                                  "foreach": "@body('Parse_IronDefense_Alert_Id')?['IronDefenseAlertId']",
                                  "actions": {
                                    "Set_AlertID": {
                                      "type": "SetVariable",
                                      "inputs": {
                                        "name": "Custom Details",
                                        "value": "@{items('Fetch_Ironnet_Alert_Id_from_Incident_Custom_Details')}"
                                      }
                                    }
                                  },
                                  "runAfter": {
                                    "Parse_IronDefense_Alert_Id": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "Foreach"
                                },
                                "Get_Entities": {
                                  "type": "Http",
                                  "inputs": {
                                    "headers": {
                                      "Authorization": "Bearer @{body('Parse_Token')?['access_token']}",
                                      "content-type": "application/json"
                                    },
                                    "method": "GET",
                                    "uri": "https://@{parameters('microsoft_management_uri')}@{parameters('resource_group_id')}/providers/Microsoft.OperationalInsights/workspaces/@{parameters('workspace_name')}/providers/Microsoft.SecurityInsights/Entities/@{items('Loop_through_Alerts')?['properties']?['relatedResourceName']}?api-version=2019-01-01-preview"
                                  }
                                },
                                "Get_Incident_latest_Comments": {
                                  "runAfter": {
                                    "Fetch_Ironnet_Alert_Id_from_Incident_Custom_Details": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "Http",
                                  "inputs": {
                                    "headers": {
                                      "Authorization": "Bearer @{body('Parse_Token')?['access_token']}",
                                      "content-type": "application/json"
                                    },
                                    "method": "GET",
                                    "uri": "https://@{parameters('microsoft_management_uri')}@{items('Loop_through_each_Incident')?['id']}/comments?api-version=2020-01-01"
                                  }
                                },
                                "Map_Azure_Sentinel_Status_to_IronNet_Status_": {
                                  "runAfter": {
                                    "Parse_Custom_Details": [
                                      "Succeeded"
                                    ]
                                  },
                                  "cases": {
                                    "Case": {
                                      "case": "New",
                                      "actions": {
                                        "Map_Status_'New'_": {
                                          "type": "SetVariable",
                                          "inputs": {
                                            "name": "Status",
                                            "value": "STATUS_AWAITING_REVIEW"
                                          }
                                        }
                                      }
                                    },
                                    "Case_2": {
                                      "case": "Active",
                                      "actions": {
                                        "Map_Status_'Active'": {
                                          "type": "SetVariable",
                                          "inputs": {
                                            "name": "Status",
                                            "value": "STATUS_UNDER_REVIEW"
                                          }
                                        }
                                      }
                                    },
                                    "Case_3": {
                                      "case": "Closed",
                                      "actions": {
                                        "Map_Status_'Closed'": {
                                          "type": "SetVariable",
                                          "inputs": {
                                            "name": "Status",
                                            "value": "STATUS_CLOSED"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "default": {
                                    "actions": {
                                      "Map_Default_Status_'New'": {
                                        "type": "SetVariable",
                                        "inputs": {
                                          "name": "Status",
                                          "value": "STATUS_AWAITING_REVIEW"
                                        }
                                      }
                                    }
                                  },
                                  "expression": "@items('Loop_through_each_Incident')?['properties']?['status']",
                                  "type": "Switch"
                                },
                                "Parse_Custom_Details": {
                                  "runAfter": {
                                    "Get_Entities": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "ParseJson",
                                  "inputs": {
                                    "content": "@body('Get_Entities')",
                                    "schema": {
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "kind": {
                                          "type": "string"
                                        },
                                        "name": {
                                          "type": "string"
                                        },
                                        "properties": {
                                          "properties": {
                                            "additionalData": {
                                              "properties": {
                                                "Analytic Rule Ids": {
                                                  "type": "string"
                                                },
                                                "Analytic Rule Name": {
                                                  "type": "string"
                                                },
                                                "Custom Details": {
                                                  "type": "string"
                                                },
                                                "Data Sources": {
                                                  "type": "string"
                                                },
                                                "Event Grouping": {
                                                  "type": "string"
                                                },
                                                "OriginalQuery": {
                                                  "type": "string"
                                                },
                                                "ProcessedBySentinel": {
                                                  "type": "string"
                                                },
                                                "Query": {
                                                  "type": "string"
                                                },
                                                "Query End Time UTC": {
                                                  "type": "string"
                                                },
                                                "Query Period": {
                                                  "type": "string"
                                                },
                                                "Query Start Time UTC": {
                                                  "type": "string"
                                                },
                                                "Search Query Results Overall Count": {
                                                  "type": "string"
                                                },
                                                "Trigger Operator": {
                                                  "type": "string"
                                                },
                                                "Trigger Threshold": {
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "alertDisplayName": {
                                              "type": "string"
                                            },
                                            "alertType": {
                                              "type": "string"
                                            },
                                            "confidenceLevel": {
                                              "type": "string"
                                            },
                                            "endTimeUtc": {
                                              "type": "string"
                                            },
                                            "friendlyName": {
                                              "type": "string"
                                            },
                                            "processingEndTime": {
                                              "type": "string"
                                            },
                                            "productComponentName": {
                                              "type": "string"
                                            },
                                            "productName": {
                                              "type": "string"
                                            },
                                            "providerAlertId": {
                                              "type": "string"
                                            },
                                            "resourceIdentifiers": {
                                              "items": {
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "workspaceId": {
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "workspaceId"
                                                ],
                                                "type": "object"
                                              },
                                              "type": "array"
                                            },
                                            "severity": {
                                              "type": "string"
                                            },
                                            "startTimeUtc": {
                                              "type": "string"
                                            },
                                            "status": {
                                              "type": "string"
                                            },
                                            "systemAlertId": {
                                              "type": "string"
                                            },
                                            "tactics": {
                                              "type": "array"
                                            },
                                            "timeGenerated": {
                                              "type": "string"
                                            },
                                            "vendorName": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  }
                                },
                                "Parse_Incidents_comments": {
                                  "runAfter": {
                                    "Get_Incident_latest_Comments": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "ParseJson",
                                  "inputs": {
                                    "content": "@body('Get_Incident_latest_Comments')",
                                    "schema": {
                                      "properties": {
                                        "value": {
                                          "items": {
                                            "properties": {
                                              "id": {
                                                "type": "string"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "properties": {
                                                "properties": {
                                                  "author": {
                                                    "properties": {
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "objectId": {
                                                        "type": "string"
                                                      },
                                                      "userPrincipalName": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "type": "object"
                                                  },
                                                  "createdTimeUtc": {
                                                    "type": "string"
                                                  },
                                                  "message": {
                                                    "type": "string"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "type": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "id",
                                              "name",
                                              "type",
                                              "properties"
                                            ],
                                            "type": "object"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  }
                                },
                                "Parse_IronDefense_Alert_Id": {
                                  "runAfter": {
                                    "Fetch_Custom_Details_value_from_Incident": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "ParseJson",
                                  "inputs": {
                                    "content": "@variables('Custom Details')",
                                    "schema": {
                                      "properties": {
                                        "AlertCreatedTime": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        },
                                        "AnalystRating": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        },
                                        "IronDefenseAlertId": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        },
                                        "IronDefenseStatus": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        },
                                        "IronVueUrl": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  }
                                }
                              },
                              "runAfter": {
                                "Parse_System_Alert_Id": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Foreach"
                            },
                            "Parse_System_Alert_Id": {
                              "runAfter": {
                                "Get_Incident_and_System_Alert_relations": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ParseJson",
                              "inputs": {
                                "content": "@body('Get_Incident_and_System_Alert_relations')",
                                "schema": {
                                  "properties": {
                                    "value": {
                                      "items": {
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "properties": {
                                            "properties": {
                                              "relatedResourceId": {
                                                "type": "string"
                                              },
                                              "relatedResourceKind": {
                                                "type": "string"
                                              },
                                              "relatedResourceName": {
                                                "type": "string"
                                              },
                                              "relatedResourceType": {
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "name",
                                          "type",
                                          "properties"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                }
                              }
                            },
                            "Set_Flag_Succeeded": {
                              "runAfter": {
                                "Incidents_Updated": [
                                  "Succeeded"
                                ]
                              },
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Flag",
                                "value": true
                              }
                            }
                          },
                          "runAfter": {
                            "Parse_IronNet_Token": [
                              "Succeeded"
                            ]
                          },
                          "type": "Foreach"
                        },
                        "Parse_Incident_details": {
                          "runAfter": {
                            "Get_All_Updated_Incident": [
                              "Succeeded"
                            ]
                          },
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@body('Get_All_Updated_Incident')",
                            "schema": {
                              "properties": {
                                "value": {
                                  "items": {
                                    "properties": {
                                      "etag": {
                                        "type": "string"
                                      },
                                      "id": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "properties": {
                                        "properties": {
                                          "additionalData": {
                                            "properties": {
                                              "alertProductNames": {
                                                "items": {
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              },
                                              "alertsCount": {
                                                "type": "integer"
                                              },
                                              "bookmarksCount": {
                                                "type": "integer"
                                              },
                                              "commentsCount": {
                                                "type": "integer"
                                              },
                                              "tactics": {
                                                "type": "array"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "classification": {
                                            "type": "string"
                                          },
                                          "classificationComment": {
                                            "type": "string"
                                          },
                                          "classificationReason": {
                                            "type": "string"
                                          },
                                          "createdTimeUtc": {
                                            "type": "string"
                                          },
                                          "description": {
                                            "type": "string"
                                          },
                                          "firstActivityTimeUtc": {
                                            "type": "string"
                                          },
                                          "incidentNumber": {
                                            "type": "integer"
                                          },
                                          "incidentUrl": {
                                            "type": "string"
                                          },
                                          "labels": {
                                            "type": "array"
                                          },
                                          "lastActivityTimeUtc": {
                                            "type": "string"
                                          },
                                          "lastModifiedTimeUtc": {
                                            "type": "string"
                                          },
                                          "owner": {
                                            "type": "object"
                                          },
                                          "relatedAnalyticRuleIds": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "severity": {
                                            "type": "string"
                                          },
                                          "status": {
                                            "type": "string"
                                          },
                                          "title": {
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "type": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "name",
                                      "etag",
                                      "type",
                                      "properties"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "Parse_IronNet_Token": {
                          "runAfter": {
                            "IronNet_Login_to_fetch_the_Token": [
                              "Succeeded"
                            ]
                          },
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@body('IronNet_Login_to_fetch_the_Token')",
                            "schema": {
                              "properties": {
                                "token": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "Set_Next_Link": {
                          "runAfter": {
                            "Loop_through_each_Incident": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "Next Link",
                            "value": "@body('Parse_Incident_details')?['nextLink']"
                          }
                        }
                      },
                      "runAfter": {
                        "Initialize_Incident_Next_Link": [
                          "Succeeded"
                        ]
                      },
                      "expression": "@not(equals(variables('Next Link'), null))",
                      "limit": {
                        "count": 60,
                        "timeout": "PT1H"
                      },
                      "type": "Until"
                    },
                    "Map_Interval_Frequency": {
                      "runAfter": {
                        "Initialize_Interval_Frequency": [
                          "Succeeded"
                        ]
                      },
                      "cases": {
                        "Case": {
                          "case": "Day",
                          "actions": {
                            "Set_Day": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Interval Frequency",
                                "value": "@{addDays(utcNow(),int(variables('Interval')))}"
                              }
                            }
                          }
                        },
                        "Case_2": {
                          "case": "Hour",
                          "actions": {
                            "Set_Hour": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Interval Frequency",
                                "value": "@{addHours(utcNow(),int(variables('Interval')))}"
                              }
                            }
                          }
                        },
                        "Case_3": {
                          "case": "Minute",
                          "actions": {
                            "Set_Minutes": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Interval Frequency",
                                "value": "@{addMinutes(utcNow(),int(variables('Interval')))}"
                              }
                            }
                          }
                        },
                        "Case_4": {
                          "case": "Second",
                          "actions": {
                            "Set_Second": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Interval Frequency",
                                "value": "@{addSeconds(utcNow(),int(variables('Interval')))}"
                              }
                            }
                          }
                        }
                      },
                      "expression": "@parameters('polling_frequency')",
                      "type": "Switch"
                    },
                    "Parse_Token": {
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@triggerBody()",
                        "schema": {
                          "properties": {
                            "access_token": {
                              "type": "string"
                            },
                            "expires_in": {
                              "type": "string"
                            },
                            "expires_on": {
                              "type": "string"
                            },
                            "ext_expires_in": {
                              "type": "string"
                            },
                            "not_before": {
                              "type": "string"
                            },
                            "resource": {
                              "type": "string"
                            },
                            "token_type": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  },
                  "outputs": {
                    "checkInts": {
                      "type": "bool",
                      "value": "[[greater(int(parameters('playbook1-RecurrenceInterval')), 0 )]"
                    }
                  }
                }
              },
              "tags": {
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId1'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId1')]",
                "contentId": "[variables('_playbookContentId1')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "IronNet IronDefense",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Ecosystems & Integrations",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ],
          "metadata": {
            "comments": "Updates IronDefense alert workflow status and rating via IronAPI when the corresponding Microsoft Sentinel Incident is updated.",
            "lastUpdateTime": "2023-07-07T14:54:45.485Z",
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId1')]",
        "contentKind": "Playbook",
        "displayName": "UpdateIronDefenseAlerts",
        "contentProductId": "[variables('_playbookcontentProductId1')]",
        "id": "[variables('_playbookcontentProductId1')]",
        "version": "[variables('playbookVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "UpdateAzureSentinelIncidents Playbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion2')]",
          "parameters": {
            "PlaybookName": {
              "type": "string",
              "repeat": "false",
              "defaultValue": "UpdateAzureSentinelIncidents",
              "metadata": {
                "label": "Playbook Name",
                "description": "Playbook name to test the IronNet API"
              }
            }
          },
          "variables": {
            "azuresentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('playbook2-azuresentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "IronDefenseAPIConnection",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2019-05-01",
              "name": "[[parameters('playbook2-PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('playbook2-azuresentinelConnectionName'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "irondefense_url": {
                      "defaultValue": "[[parameters('playbook1-IronDefenseUrl')]",
                      "type": "String"
                    },
                    "tenant_id": {
                      "defaultValue": "[[subscription().tenantId]",
                      "type": "String"
                    },
                    "user_name": {
                      "defaultValue": "[[parameters('playbook1-IronApiUsername')]",
                      "type": "String"
                    },
                    "password": {
                      "defaultValue": "[[parameters('playbook1-IronApiPassword')]",
                      "type": "SecureString"
                    },
                    "client_id": {
                      "defaultValue": "[[parameters('playbook1-AzureClientId')]",
                      "type": "String"
                    },
                    "client_secret": {
                      "defaultValue": "[[parameters('playbook1-AzureClientSecret')]",
                      "type": "SecureString"
                    },
                    "resource_group_id": {
                      "defaultValue": "[[resourceGroup().id]",
                      "type": "String"
                    },
                    "resource_group": {
                      "defaultValue": "[[resourceGroup().name]",
                      "type": "String"
                    },
                    "workspace_name": {
                      "defaultValue": "[[parameters('workspace')]",
                      "type": "String"
                    },
                    "microsoft_login_uri": {
                      "type": "string",
                      "defaultValue": "[[concat('login.microsoft','online.com')]"
                    },
                    "microsoft_management_uri": {
                      "type": "string",
                      "defaultValue": "[[concat('management.','azure.com')]"
                    }
                  },
                  "triggers": {
                    "When_a_response_to_an_Azure_Sentinel_alert_is_triggered": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/subscribe"
                      }
                    }
                  },
                  "actions": {
                    "Check_if_IronNet_Alert_details_exists_in_sentinel_Alert": {
                      "actions": {
                        "Check_for_an_Alert_or_Event": {
                          "actions": {
                            "Check_if_Sentinel_Incident_Exists": {
                              "actions": {
                                "Fetch_IronDefense_Severity": {
                                  "foreach": "@body('Extract_IronNet_Alert_details_from_Sentinel_Alert')?['AnalystRating']",
                                  "actions": {
                                    "Map_IronNet_Severity_to_Azure_Sentinel_Severity": {
                                      "cases": {
                                        "Case": {
                                          "case": "Low",
                                          "actions": {
                                            "Map_Severity_'Low'": {
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "Severity",
                                                "value": "Low"
                                              }
                                            }
                                          }
                                        },
                                        "Case_2": {
                                          "case": "Medium",
                                          "actions": {
                                            "Map_Severity_'Medium'": {
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "Severity",
                                                "value": "Medium"
                                              }
                                            }
                                          }
                                        },
                                        "Case_3": {
                                          "case": "High",
                                          "actions": {
                                            "Map_Severity_'High'": {
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "Severity",
                                                "value": "High"
                                              }
                                            }
                                          }
                                        },
                                        "Case_4": {
                                          "case": "Very-High",
                                          "actions": {
                                            "Map_Severity_'Very-High'": {
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "Severity",
                                                "value": "High"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "expression": "@items('Fetch_IronDefense_Severity')",
                                      "type": "Switch"
                                    }
                                  },
                                  "runAfter": {
                                    "Fetch_IronDefense_Status": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "Foreach"
                                },
                                "Fetch_IronDefense_Status": {
                                  "foreach": "@body('Extract_IronNet_Alert_details_from_Sentinel_Alert')?['IronDefenseStatus']",
                                  "actions": {
                                    "Map_IronNet_Status_to_Azure_Sentinel_Status": {
                                      "cases": {
                                        "Case": {
                                          "case": "STATUS_AWAITING_REVIEW",
                                          "actions": {
                                            "Map_Status_'STATUS_AWAITING_REVIEW'": {
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "Status",
                                                "value": "New"
                                              }
                                            }
                                          }
                                        },
                                        "Case_2": {
                                          "case": "STATUS_UNDER_REVIEW",
                                          "actions": {
                                            "Map_Status_'STATUS_UNDER_REVIEW'": {
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "Status",
                                                "value": "Active"
                                              }
                                            }
                                          }
                                        },
                                        "Case_3": {
                                          "case": "STATUS_CLOSED",
                                          "actions": {
                                            "Map_Classification": {
                                              "runAfter": {
                                                "Map_Status_'STATUS_CLOSED'": [
                                                  "Succeeded"
                                                ]
                                              },
                                              "cases": {
                                                "Case": {
                                                  "case": "SEVERITY_UNDECIDED",
                                                  "actions": {
                                                    "Map_Classification_'SEVERITY_UNDECIDED'": {
                                                      "type": "SetVariable",
                                                      "inputs": {
                                                        "name": "Classification",
                                                        "value": "Undetermined"
                                                      }
                                                    }
                                                  }
                                                },
                                                "Case_2": {
                                                  "case": "SEVERITY_BENIGN",
                                                  "actions": {
                                                    "Map_Classification_'SEVERITY_BENIGN'": {
                                                      "type": "SetVariable",
                                                      "inputs": {
                                                        "name": "Classification",
                                                        "value": "FalsePositive - IncorrectAlertLogic"
                                                      }
                                                    }
                                                  }
                                                },
                                                "Case_3": {
                                                  "case": "SEVERITY_MALICIOUS",
                                                  "actions": {
                                                    "Map_Classification_'SEVERITY_MALICIOUS'": {
                                                      "type": "SetVariable",
                                                      "inputs": {
                                                        "name": "Classification",
                                                        "value": "BenignPositive - SuspiciousButExpected"
                                                      }
                                                    }
                                                  }
                                                },
                                                "Case_4": {
                                                  "case": "SEVERITY_SUSPICIOUS",
                                                  "actions": {
                                                    "Map_Classification_'SEVERITY_SUSPICIOUS'": {
                                                      "type": "SetVariable",
                                                      "inputs": {
                                                        "name": "Classification",
                                                        "value": "TruePositive - SuspiciousActivity"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "expression": "@variables('Analyst Severity')",
                                              "type": "Switch"
                                            },
                                            "Map_Status_'STATUS_CLOSED'": {
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "Status",
                                                "value": "Closed"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "default": {
                                        "actions": {
                                          "Map_Other_Statuses": {
                                            "type": "SetVariable",
                                            "inputs": {
                                              "name": "Status",
                                              "value": "New"
                                            }
                                          }
                                        }
                                      },
                                      "expression": "@items('Fetch_IronDefense_Status')",
                                      "type": "Switch"
                                    }
                                  },
                                  "type": "Foreach"
                                },
                                "For_each_Sentinel_Incident": {
                                  "foreach": "@body('Parse_Sentinel_Incident')?['value']",
                                  "actions": {
                                    "Check_for_Classification": {
                                      "actions": {
                                        "Update_incident_2": {
                                          "type": "ApiConnection",
                                          "inputs": {
                                            "body": {
                                              "classification": {
                                                "ClassificationAndReason": "@variables('Classification')",
                                                "ClassificationReasonText": "This incident was closed in IronVue. View more details at @{variables('vueUrl')}"
                                              },
                                              "incidentArmId": "@items('For_each_Sentinel_Incident')?['id']",
                                              "severity": "@variables('Severity')",
                                              "status": "Closed"
                                            },
                                            "host": {
                                              "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                              }
                                            },
                                            "method": "put",
                                            "path": "/Incidents"
                                          }
                                        }
                                      },
                                      "else": {
                                        "actions": {
                                          "Update_incident": {
                                            "type": "ApiConnection",
                                            "inputs": {
                                              "body": {
                                                "incidentArmId": "@items('For_each_Sentinel_Incident')?['id']",
                                                "severity": "@variables('Severity')",
                                                "status": "@variables('Status')"
                                              },
                                              "host": {
                                                "connection": {
                                                  "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                }
                                              },
                                              "method": "put",
                                              "path": "/Incidents"
                                            }
                                          }
                                        }
                                      },
                                      "expression": {
                                        "and": [
                                          {
                                            "equals": [
                                              "@variables('Status')",
                                              "Closed"
                                            ]
                                          }
                                        ]
                                      },
                                      "type": "If"
                                    },
                                    "Check_if_Irondefense_Alert_has_Comments": {
                                      "actions": {
                                        "For_each_Comment": {
                                          "foreach": "@body('Parse_Get_Alert_IronDome_Information')?['community_comments']",
                                          "actions": {
                                            "Check_for_24_hours_comments": {
                                              "actions": {
                                                "Add_comment_to_incident_(V3)": {
                                                  "type": "ApiConnection",
                                                  "inputs": {
                                                    "body": {
                                                      "incidentArmId": "@items('For_each_Sentinel_Incident')?['id']",
                                                      "message": "<p>@{items('For_each_Comment')?['comment']}</p>"
                                                    },
                                                    "host": {
                                                      "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                      }
                                                    },
                                                    "method": "post",
                                                    "path": "/Incidents/Comment"
                                                  }
                                                }
                                              },
                                              "else": {
                                                "actions": {
                                                  "Older_Comments": {
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                      "name": "Message",
                                                      "value": "Olders Comments"
                                                    }
                                                  }
                                                }
                                              },
                                              "expression": {
                                                "and": [
                                                  {
                                                    "greater": [
                                                      "@items('For_each_Comment')?['created']",
                                                      "@addHours(utcNow(),-24)"
                                                    ]
                                                  }
                                                ]
                                              },
                                              "type": "If"
                                            }
                                          },
                                          "type": "Foreach"
                                        }
                                      },
                                      "runAfter": {
                                        "Parse_Get_Alert_IronDome_Information": [
                                          "Succeeded"
                                        ]
                                      },
                                      "else": {
                                        "actions": {
                                          "No_Comments": {
                                            "type": "SetVariable",
                                            "inputs": {
                                              "name": "Message",
                                              "value": "No Comments available for Alert @{variables('IronNet Alert Id')}"
                                            }
                                          }
                                        }
                                      },
                                      "expression": {
                                        "and": [
                                          {
                                            "greater": [
                                              "@length(body('Parse_Get_Alert_IronDome_Information')?['community_comments'])",
                                              0
                                            ]
                                          }
                                        ]
                                      },
                                      "type": "If"
                                    },
                                    "Get_Alert_IronDome_Information": {
                                      "runAfter": {
                                        "Check_for_Classification": [
                                          "Succeeded"
                                        ]
                                      },
                                      "type": "Http",
                                      "inputs": {
                                        "authentication": {
                                          "password": "@parameters('password')",
                                          "type": "Basic",
                                          "username": "@parameters('user_name')"
                                        },
                                        "body": {
                                          "alert_id": "@variables('IronNet Alert Id')"
                                        },
                                        "headers": {
                                          "Content-Type": "application/json"
                                        },
                                        "method": "POST",
                                        "uri": "@{parameters('irondefense_url')}/IronApi/GetAlertIronDomeInformation"
                                      }
                                    },
                                    "Parse_Get_Alert_IronDome_Information": {
                                      "runAfter": {
                                        "Get_Alert_IronDome_Information": [
                                          "Succeeded"
                                        ]
                                      },
                                      "type": "ParseJson",
                                      "inputs": {
                                        "content": "@body('Get_Alert_IronDome_Information')",
                                        "schema": {
                                          "properties": {
                                            "cognitive_system_score": {
                                              "type": "integer"
                                            },
                                            "community_comments": {
                                              "items": {
                                                "properties": {
                                                  "comment": {
                                                    "type": "string"
                                                  },
                                                  "created": {
                                                    "type": "string"
                                                  },
                                                  "dome_tags": {
                                                    "items": {
                                                      "type": "string"
                                                    },
                                                    "type": "array"
                                                  },
                                                  "enterprise": {
                                                    "type": "boolean"
                                                  },
                                                  "self": {
                                                    "type": "boolean"
                                                  }
                                                },
                                                "required": [
                                                  "created",
                                                  "comment",
                                                  "dome_tags",
                                                  "enterprise",
                                                  "self"
                                                ],
                                                "type": "object"
                                              },
                                              "type": "array"
                                            },
                                            "correlation_participation": {
                                              "items": {
                                                "properties": {
                                                  "dome_tag": {
                                                    "type": "string"
                                                  },
                                                  "ip": {
                                                    "properties": {
                                                      "activity_count": {
                                                        "type": "integer"
                                                      },
                                                      "benign_count": {
                                                        "type": "integer"
                                                      },
                                                      "comments_count": {
                                                        "type": "integer"
                                                      },
                                                      "first_seen": {
                                                        "type": "string"
                                                      },
                                                      "last_seen": {
                                                        "type": "string"
                                                      },
                                                      "malicious_count": {
                                                        "type": "integer"
                                                      },
                                                      "resource_owner": {
                                                        "type": "boolean"
                                                      },
                                                      "suspicious_count": {
                                                        "type": "integer"
                                                      },
                                                      "whitelisted_count": {
                                                        "type": "integer"
                                                      }
                                                    },
                                                    "type": "object"
                                                  }
                                                },
                                                "required": [
                                                  "dome_tag",
                                                  "behavior",
                                                  "domain",
                                                  "ip"
                                                ],
                                                "type": "object"
                                              },
                                              "type": "array"
                                            },
                                            "correlations": {
                                              "items": {
                                                "properties": {
                                                  "correlations": {
                                                    "items": {
                                                      "properties": {
                                                        "community_correlations": {
                                                          "type": "integer"
                                                        },
                                                        "enterprise_correlations": {
                                                          "type": "integer"
                                                        },
                                                        "ip": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "required": [
                                                        "ip",
                                                        "enterprise_correlations",
                                                        "community_correlations"
                                                      ],
                                                      "type": "object"
                                                    },
                                                    "type": "array"
                                                  },
                                                  "dome_tag": {
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "dome_tag",
                                                  "correlations"
                                                ],
                                                "type": "object"
                                              },
                                              "type": "array"
                                            },
                                            "dome_notifications": {
                                              "type": "array"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      }
                                    }
                                  },
                                  "runAfter": {
                                    "Fetch_IronDefense_Severity": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "Foreach"
                                }
                              },
                              "runAfter": {
                                "Parse_Sentinel_Incident": [
                                  "Succeeded"
                                ]
                              },
                              "else": {
                                "actions": {
                                  "No_Sentinel_Incidents": {
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "Message",
                                      "value": "No Sentinel Incidents present for the alert "
                                    }
                                  }
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "greater": [
                                      "@length(body('Parse_Sentinel_Incident')?['value'])",
                                      0
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "For_each_Analyst_Rating": {
                              "foreach": "@body('Extract_IronNet_Alert_details_from_Sentinel_Alert')?['AnalystRating']",
                              "actions": {
                                "Set_Analyst_Rating": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "Analyst Rating",
                                    "value": "@{items('For_each_Analyst_Rating')}"
                                  }
                                }
                              },
                              "type": "Foreach"
                            },
                            "For_each_Analyst_Severity": {
                              "foreach": "@body('Extract_IronNet_Alert_details_from_Sentinel_Alert')?['AnalystSeverity']",
                              "actions": {
                                "Set_Analyst_Severity": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "Analyst Severity",
                                    "value": "@{items('For_each_Analyst_Severity')}"
                                  }
                                }
                              },
                              "runAfter": {
                                "For_each_Analyst_Rating": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Foreach"
                            },
                            "For_each_vueUrl": {
                              "foreach": "@body('Extract_IronNet_Alert_details_from_Sentinel_Alert')?['IronVueUrl']",
                              "actions": {
                                "Set_vueUrl": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "vueUrl",
                                    "value": "@{items('For_each_vueUrl')}"
                                  }
                                }
                              },
                              "runAfter": {
                                "For_each_Analyst_Severity": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Foreach"
                            },
                            "Generate_the_token_for_Azure_Sentinel_Incident": {
                              "runAfter": {
                                "For_each_vueUrl": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Http",
                              "inputs": {
                                "body": "grant_type=client_credentials&client_id=@{parameters('client_id')}&client_secret=@{parameters('client_secret')}&resource=https://@{parameters('microsoft_management_uri')}",
                                "headers": {
                                  "Content-Type": "application/x-www-form-urlencoded"
                                },
                                "method": "POST",
                                "uri": "https://@{parameters('microsoft_login_uri')}/@{parameters('tenant_id')}/oauth2/token"
                              }
                            },
                            "Get_Sentinel_Incident": {
                              "runAfter": {
                                "Parse_Token": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Http",
                              "inputs": {
                                "headers": {
                                  "Authorization": "Bearer @{body('Parse_Token')?['access_token']}",
                                  "Content-Type": "application/json"
                                },
                                "method": "GET",
                                "uri": "https://@{parameters('microsoft_management_uri')}{parameters('resource_group_id')}/providers/Microsoft.OperationalInsights/workspaces/@{parameters('workspace_name')}/providers/Microsoft.SecurityInsights/incidents?api-version=2020-01-01&$filter=endsWith(properties/title,'(@{variables('IronNet Alert Id')})')"
                              }
                            },
                            "Parse_Sentinel_Incident": {
                              "runAfter": {
                                "Get_Sentinel_Incident": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ParseJson",
                              "inputs": {
                                "content": "@body('Get_Sentinel_Incident')",
                                "schema": {
                                  "properties": {
                                    "value": {
                                      "items": {
                                        "properties": {
                                          "etag": {
                                            "type": "string"
                                          },
                                          "id": {
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "properties": {
                                            "properties": {
                                              "additionalData": {
                                                "properties": {
                                                  "alertProductNames": {
                                                    "items": {
                                                      "type": "string"
                                                    },
                                                    "type": "array"
                                                  },
                                                  "alertsCount": {
                                                    "type": "integer"
                                                  },
                                                  "bookmarksCount": {
                                                    "type": "integer"
                                                  },
                                                  "commentsCount": {
                                                    "type": "integer"
                                                  },
                                                  "tactics": {
                                                    "type": "array"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "classification": {
                                                "type": "string"
                                              },
                                              "classificationComment": {
                                                "type": "string"
                                              },
                                              "classificationReason": {
                                                "type": "string"
                                              },
                                              "createdTimeUtc": {
                                                "type": "string"
                                              },
                                              "description": {
                                                "type": "string"
                                              },
                                              "firstActivityTimeUtc": {
                                                "type": "string"
                                              },
                                              "incidentNumber": {
                                                "type": "integer"
                                              },
                                              "incidentUrl": {
                                                "type": "string"
                                              },
                                              "labels": {
                                                "type": "array"
                                              },
                                              "lastActivityTimeUtc": {
                                                "type": "string"
                                              },
                                              "lastModifiedTimeUtc": {
                                                "type": "string"
                                              },
                                              "owner": {
                                                "type": "object"
                                              },
                                              "relatedAnalyticRuleIds": {
                                                "items": {
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              },
                                              "severity": {
                                                "type": "string"
                                              },
                                              "status": {
                                                "type": "string"
                                              },
                                              "title": {
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "name",
                                          "etag",
                                          "type",
                                          "properties"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                }
                              }
                            },
                            "Parse_Token": {
                              "runAfter": {
                                "Generate_the_token_for_Azure_Sentinel_Incident": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ParseJson",
                              "inputs": {
                                "content": "@body('Generate_the_token_for_Azure_Sentinel_Incident')",
                                "schema": {
                                  "properties": {
                                    "access_token": {
                                      "type": "string"
                                    },
                                    "expires_in": {
                                      "type": "string"
                                    },
                                    "expires_on": {
                                      "type": "string"
                                    },
                                    "ext_expires_in": {
                                      "type": "string"
                                    },
                                    "not_before": {
                                      "type": "string"
                                    },
                                    "resource": {
                                      "type": "string"
                                    },
                                    "token_type": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              }
                            }
                          },
                          "runAfter": {
                            "For_each_IronDefense_Alert": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Sentinel_Alert_contains_IronNet_Event_": {
                                "type": "SetVariable",
                                "inputs": {
                                  "name": "Message",
                                  "value": "This is an Event belonging to Alert @{variables('IronNet Alert Id')}"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "contains": [
                                  "@body('Parse_Extended_Properties')",
                                  "IronDefenseStatus"
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Extract_IronNet_Alert_details_from_Sentinel_Alert": {
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@body('Parse_Extended_Properties')?['Custom Details']",
                            "schema": {
                              "properties": {
                                "AlertCreatedTime": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "AnalystRating": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "AnalystSeverity": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "IronDefenseAlertId": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "IronDefenseStatus": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "IronVueUrl": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "For_each_IronDefense_Alert": {
                          "foreach": "@body('Extract_IronNet_Alert_details_from_Sentinel_Alert')?['IronDefenseAlertId']",
                          "actions": {
                            "Set_IronNet_Alert_Id": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "IronNet Alert Id",
                                "value": "@{items('For_each_IronDefense_Alert')}"
                              }
                            }
                          },
                          "runAfter": {
                            "Extract_IronNet_Alert_details_from_Sentinel_Alert": [
                              "Succeeded"
                            ]
                          },
                          "type": "Foreach"
                        }
                      },
                      "runAfter": {
                        "Parse_Extended_Properties": [
                          "Succeeded"
                        ]
                      },
                      "else": {
                        "actions": {
                          "No_Notifications": {
                            "type": "SetVariable",
                            "inputs": {
                              "name": "Message",
                              "value": "No Notifications"
                            }
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "not": {
                              "equals": [
                                "@body('Parse_Extended_Properties')?['Custom Details']",
                                ""
                              ]
                            }
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "Display_Output_Message": {
                      "runAfter": {
                        "Check_if_IronNet_Alert_details_exists_in_sentinel_Alert": [
                          "Succeeded"
                        ]
                      },
                      "type": "Compose",
                      "inputs": "@variables('Message')"
                    },
                    "Initialize_Analyst_Rating": {
                      "runAfter": {
                        "Initialize_Severity": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Analyst Rating",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Initialize_Analyst_Severity": {
                      "runAfter": {
                        "Initialize_Analyst_Rating": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Analyst Severity",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Initialize_Classification": {
                      "runAfter": {
                        "Initialize_IronNet_Alert_Id": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Classification",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Initialize_IronNet_Alert_Id": {
                      "runAfter": {
                        "Initialize_Analyst_Severity": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "IronNet Alert Id",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Initialize_Message": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Message",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Initialize_Severity": {
                      "runAfter": {
                        "Initialize_Status": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Severity",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Initialize_Status": {
                      "runAfter": {
                        "Initialize_Message": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Status",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Initialize_vueUrl": {
                      "runAfter": {
                        "Initialize_Classification": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "vueUrl",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Parse_Extended_Properties": {
                      "runAfter": {
                        "Initialize_vueUrl": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@triggerBody()?['ExtendedProperties']",
                        "schema": {
                          "properties": {
                            "Analytic Rule Ids": {
                              "type": "string"
                            },
                            "Analytic Rule Name": {
                              "type": "string"
                            },
                            "Custom Details": {
                              "type": "string"
                            },
                            "Data Sources": {
                              "type": "string"
                            },
                            "Event Grouping": {
                              "type": "string"
                            },
                            "OriginalQuery": {
                              "type": "string"
                            },
                            "ProcessedBySentinel": {
                              "type": "string"
                            },
                            "Query": {
                              "type": "string"
                            },
                            "Query End Time UTC": {
                              "type": "string"
                            },
                            "Query Period": {
                              "type": "string"
                            },
                            "Query Start Time UTC": {
                              "type": "string"
                            },
                            "Search Query Results Overall Count": {
                              "type": "string"
                            },
                            "Trigger Operator": {
                              "type": "string"
                            },
                            "Trigger Threshold": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('playbook2-azuresentinelConnectionName'))]",
                        "connectionName": "[[variables('playbook2-azuresentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]"
                      }
                    }
                  }
                }
              },
              "tags": {
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId2'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId2')]",
                "contentId": "[variables('_playbookContentId2')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion2')]",
                "source": {
                  "kind": "Solution",
                  "name": "IronNet IronDefense",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Ecosystems & Integrations",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ],
          "metadata": {
            "comments": "Enrich IronNet Alerts based on the corresponding Microsoft Sentinel Incident updates via IronNet Endpoints",
            "lastUpdateTime": "2023-07-07T14:54:46.862Z",
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId2')]",
        "contentKind": "Playbook",
        "displayName": "UpdateAzureSentinelIncidents",
        "contentProductId": "[variables('_playbookcontentProductId2')]",
        "id": "[variables('_playbookcontentProductId2')]",
        "version": "[variables('playbookVersion2')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentPackages",
      "apiVersion": "2023-04-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "3.0.0",
        "kind": "Solution",
        "contentSchemaVersion": "3.0.0",
        "displayName": "IronNet IronDefense",
        "publisherDisplayName": "Microsoft Sentinel, Microsoft Corporation",
        "descriptionHtml": "<p><strong>Note:</strong> <em>There may be <a href=\"https://aka.ms/sentinelsolutionsknownissues\">known issues</a> pertaining to this Solution, please refer to them before installing.</em></p>\n<p>The <a href=\"https://www.ironnet.com/what-is-collective-defense\">IronNet Collective Defense</a> solution enables ingestion of IronDefense alerts, events, and IronDome notifications into Microsoft Sentinel, enabling Microsoft Sentinel to utilize IronDefense's behavioral analytics and the IronDome community to quickly identify threats in your enterprise network.</p>\n<p><strong>Underlying Microsoft Technologies used:</strong></p>\n<p>This solution takes a dependency on the following technologies, and some of these dependencies either may be in <a href=\"https://azure.microsoft.com/support/legal/preview-supplemental-terms/\">Preview</a> state or might result in additional ingestion or operational costs:</p>\n<ol type=\"a\">\n<li><a href=\"https://docs.microsoft.com/azure/sentinel/connect-common-event-format\">Agent-based log collection (CEF over Syslog)</a></li>\n</ol>\n<p><strong>Playbooks:</strong> 2</p>\n<p><a href=\"https://aka.ms/azuresentinel\">Learn more about Microsoft Sentinel</a> | <a href=\"https://aka.ms/azuresentinelsolutionsdoc\">Learn more about Solutions</a></p>\n",
        "contentKind": "Solution",
        "contentProductId": "[variables('_solutioncontentProductId')]",
        "id": "[variables('_solutioncontentProductId')]",
        "icon": "<img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/IronNet%20IronDefense/Workbooks/Images/Logos/IronNet.svg\"width=\"75px\"height=\"75px\">",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "IronNet IronDefense",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Ecosystems & Integrations",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "Playbook",
              "contentId": "[variables('_IronNet_UpdateIronDefenseAlerts')]",
              "version": "[variables('playbookVersion1')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_IronNet_UpdateSentinelIncidents')]",
              "version": "[variables('playbookVersion2')]"
            }
          ]
        },
        "firstPublishDate": "2021-10-18",
        "providers": [
          "IronNet"
        ],
        "categories": {
          "domains": [
            "Security - Network"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
