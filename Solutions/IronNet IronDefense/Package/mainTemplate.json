{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Ecosystems & Integrations - support@ironnet.com",
    "comments": "Solution template for IronNet IronDefense"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    },
    "workbook1-name": {
      "type": "string",
      "defaultValue": "IronDefenseAlertDashboard",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    },
    "workbook2-name": {
      "type": "string",
      "defaultValue": "IronDefenseAlertDetails",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    }
  },
  "variables": {
    "email": "support@ironnet.com",
    "_email": "[variables('email')]",
    "_solutionName": "IronNet IronDefense",
    "_solutionVersion": "3.0.0",
    "solutionId": "ironnetcybersecurity1585849518753.irondefense-for-sentinel",
    "_solutionId": "[variables('solutionId')]",
    "uiConfigId1": "IronNetIronDefense",
    "_uiConfigId1": "[variables('uiConfigId1')]",
    "dataConnectorContentId1": "IronNetIronDefense",
    "_dataConnectorContentId1": "[variables('dataConnectorContentId1')]",
    "dataConnectorId1": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
    "_dataConnectorId1": "[variables('dataConnectorId1')]",
    "dataConnectorTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId1'))),variables('dataConnectorVersion1')))]",
    "dataConnectorVersion1": "1.0.0",
    "_dataConnectorcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','dc','-', uniqueString(concat(variables('_solutionId'),'-','DataConnector','-',variables('_dataConnectorContentId1'),'-', variables('dataConnectorVersion1'))))]",
    "analyticRuleVersion1": "1.0.1",
    "analyticRulecontentId1": "3cf46cb9-99d5-42ee-a43c-7bd88ea394a1",
    "_analyticRulecontentId1": "[variables('analyticRulecontentId1')]",
    "analyticRuleId1": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId1'))]",
    "analyticRuleTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId1'))),variables('analyticRuleVersion1')))]",
    "_analyticRulecontentProductId1": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-',variables('_analyticRulecontentId1'),'-', variables('analyticRuleVersion1'))))]",
    "IronNet_UpdateIronDefenseAlerts": "IronNet_UpdateIronDefenseAlerts",
    "_IronNet_UpdateIronDefenseAlerts": "[variables('IronNet_UpdateIronDefenseAlerts')]",
    "playbookVersion1": "1.0",
    "playbookContentId1": "IronNet_UpdateIronDefenseAlerts",
    "_playbookContentId1": "[variables('playbookContentId1')]",
    "playbookId1": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId1'))]",
    "playbookTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId1'))),variables('playbookVersion1')))]",
    "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
    "_playbookcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId1'),'-', variables('playbookVersion1'))))]",
    "blanks": "[replace('b', 'b', '')]",
    "IronNet_UpdateSentinelIncidents": "IronNet_UpdateSentinelIncidents",
    "_IronNet_UpdateSentinelIncidents": "[variables('IronNet_UpdateSentinelIncidents')]",
    "playbookVersion2": "1.0",
    "playbookContentId2": "IronNet_UpdateSentinelIncidents",
    "_playbookContentId2": "[variables('playbookContentId2')]",
    "playbookId2": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId2'))]",
    "playbookTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId2'))),variables('playbookVersion2')))]",
    "_playbookcontentProductId2": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId2'),'-', variables('playbookVersion2'))))]",
    "workbookVersion1": "3.0.0",
    "workbookContentId1": "IronDefenseAlertDashboard",
    "workbookId1": "[resourceId('Microsoft.Insights/workbooks', variables('workbookContentId1'))]",
    "workbookTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-wb-',uniquestring(variables('_workbookContentId1'))),variables('workbookVersion1')))]",
    "_workbookContentId1": "[variables('workbookContentId1')]",
    "_workbookcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','wb','-', uniqueString(concat(variables('_solutionId'),'-','Workbook','-',variables('_workbookContentId1'),'-', variables('workbookVersion1'))))]",
    "workbookVersion2": "3.0.0",
    "workbookContentId2": "IronDefenseAlertDetails",
    "workbookId2": "[resourceId('Microsoft.Insights/workbooks', variables('workbookContentId2'))]",
    "workbookTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(concat(parameters('workspace'),'-wb-',uniquestring(variables('_workbookContentId2'))),variables('workbookVersion2')))]",
    "_workbookContentId2": "[variables('workbookContentId2')]",
    "_workbookcontentProductId2": "[concat(take(variables('_solutionId'),50),'-','wb','-', uniqueString(concat(variables('_solutionId'),'-','Workbook','-',variables('_workbookContentId2'),'-', variables('workbookVersion2'))))]",
    "_solutioncontentProductId": "[concat(take(variables('_solutionId'),50),'-','sl','-', uniqueString(concat(variables('_solutionId'),'-','Solution','-',variables('_solutionId'),'-', variables('_solutionVersion'))))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('dataConnectorTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "IronNet IronDefense data connector with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
              "apiVersion": "2021-03-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "GenericUI",
              "properties": {
                "connectorUiConfig": {
                  "id": "[variables('_uiConfigId1')]",
                  "title": "IronNet IronDefense",
                  "publisher": "IronNet",
                  "descriptionMarkdown": "The IronNet IronDefense connector enables ingest of IronDefense alerts, events, and IronDome notifications into Microsoft Sentinel, enabling Microsoft Sentinel to utilize IronDefense's behavioral analytics and the IronDome community to quickly identify threats in your enterprise network.",
                  "graphQueries": [
                    {
                      "metricName": "Total data received",
                      "legend": "IronNet",
                      "baseQuery": "CommonSecurityLog\n| where DeviceVendor == \"IronNet\""
                    }
                  ],
                  "sampleQueries": [
                    {
                      "description": "10 most recent IronDefense alerts",
                      "query": "CommonSecurityLog \n| where DeviceVendor == \"IronNet\" and DeviceProduct == \"IronDefense\" and EventType == 1 | limit 10"
                    },
                    {
                      "description": "10 most recent IronDefense events",
                      "query": "CommonSecurityLog \n| where DeviceVendor == \"IronNet\" and DeviceProduct == \"IronDefense\" and EventType == 0 | limit 10"
                    },
                    {
                      "description": "10 most recent IronDome notifications",
                      "query": "CommonSecurityLog \n| where DeviceVendor == \"IronNet\" and DeviceProduct == \"IronDome\" | limit 10"
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "CommonSecurityLog (IronNet)",
                      "lastDataReceivedQuery": "CommonSecurityLog\n| where DeviceVendor == \"IronNet\"\n| summarize Time = max(TimeGenerated)\n| where isnotempty(Time)"
                    }
                  ],
                  "connectivityCriterias": [
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "CommonSecurityLog\n| where DeviceVendor == \"IronNet\"\n| summarize LastLogReceived = max(TimeGenerated)\n| project IsConnected = LastLogReceived > ago(30d)"
                      ]
                    }
                  ],
                  "availability": {
                    "status": 1,
                    "isPreview": false
                  },
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "read and write permissions are required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "read": true,
                          "write": true,
                          "delete": true
                        }
                      },
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                        "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                        "providerDisplayName": "Keys",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "action": true
                        }
                      }
                    ]
                  },
                  "instructionSteps": [
                    {
                      "description": "Install and configure the Linux agent to collect your Common Event Format (CEF) Syslog messages and forward them to Microsoft Sentinel.\n\n> Notice that the data from all regions will be stored in the selected workspace",
                      "innerSteps": [
                        {
                          "title": "1.1 Select or create a Linux machine",
                          "description": "Select or create a Linux machine that Microsoft Sentinel will use as the proxy between your security solution and Microsoft Sentinel this machine can be on your on-prem environment, Azure or other clouds."
                        },
                        {
                          "title": "1.2 Install the CEF collector on the Linux machine",
                          "description": "Install the Microsoft Monitoring Agent on your Linux machine and configure the machine to listen on the necessary port and forward messages to your Microsoft Sentinel workspace. The CEF collector collects CEF messages on port 514 TCP.\n\n> 1. Make sure that you have Python on your machine using the following command: python -version.\n\n> 2. You must have elevated permissions (sudo) on your machine.",
                          "instructions": [
                            {
                              "parameters": {
                                "fillWith": [
                                  "WorkspaceId",
                                  "PrimaryKey"
                                ],
                                "label": "Run the following command to install and apply the CEF collector:",
                                "value": "sudo wget -O cef_installer.py https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/DataConnectors/CEF/cef_installer.py&&sudo python cef_installer.py {0} {1}"
                              },
                              "type": "CopyableLabel"
                            }
                          ]
                        }
                      ],
                      "title": "1. Linux Syslog agent configuration"
                    },
                    {
                      "description": "Configure the IronNet Data Collector to send alerts, events, and IronDome notifications in CEF format to the proxy machine. Make sure you to send the logs to port 514 TCP on the machine's IP address.",
                      "innerSteps": [
                        {
                          "title": "2.1 Deploy the IronNet Data Collector VM",
                          "description": "Deploy the IronNet Data Collector VM using the image provided by your IronNet representative."
                        },
                        {
                          "title": "2.2 Configure the IronAPI connector using the Data Collector wizard.",
                          "description": "Ssh into the Data Collector VM as the config user and use the Data Collector configuration wizard to configure the IronAPI connector to receive notifications from IronDefense and forward them to your Microsoft Sentinel workspace. You will need:\n\n> 1. IronAPI credentials.\n\n> 2. IronDefense hostname.\n\n> 3. The public IP of the linux machine running the CEF collector.",
                          "instructions": [
                            {
                              "parameters": {
                                "label": "Run the following command to launch the Data Collector configuration wizard:",
                                "value": "wizard"
                              },
                              "type": "CopyableLabel"
                            }
                          ]
                        },
                        {
                          "title": "2.2 Verify IronAPI connector configuration",
                          "description": "Verify the IronAPI connector has been configured properly and is running normally.",
                          "instructions": [
                            {
                              "parameters": {
                                "label": "Run the following command to view the logs in the IronAPI connector. If no errors occur after 5 minutes, the connector is running normally.",
                                "value": "sudo journalctl -f CONTAINER_NAME=ironapi-notifications-collector"
                              },
                              "type": "CopyableLabel"
                            }
                          ]
                        }
                      ],
                      "title": "2. Forward Common Event Format (CEF) logs to Syslog agent"
                    },
                    {
                      "description": "Follow the instructions to validate your connectivity:\n\nOpen Log Analytics to check if the logs are received using the CommonSecurityLog schema.\n\n>It may take about 20 minutes until the connection streams data to your workspace.\n\nIf the logs are not received, run the following connectivity validation script:\n\n> 1. Make sure that you have Python on your machine using the following command: python -version\n\n>2. You must have elevated permissions (sudo) on your machine",
                      "instructions": [
                        {
                          "parameters": {
                            "fillWith": [
                              "WorkspaceId"
                            ],
                            "label": "Run the following command to validate your connectivity:",
                            "value": "sudo wget  -O cef_troubleshoot.py https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/DataConnectors/CEF/cef_troubleshoot.py&&sudo python cef_troubleshoot.py  {0}"
                          },
                          "type": "CopyableLabel"
                        }
                      ],
                      "title": "3. Validate connection"
                    },
                    {
                      "description": "Make sure to configure the machine's security according to your organization's security policy\n\n\n[Learn more >](https://aka.ms/SecureCEF)",
                      "title": "4. Secure your machine "
                    }
                  ],
                  "metadata": {
                    "id": "36f65971-b4a5-41ac-8f80-874a03121051",
                    "version": "1.0.0",
                    "kind": "dataConnector",
                    "source": {
                      "kind": "solution",
                      "name": "IronDefense"
                    },
                    "author": {
                      "name": "IronNet"
                    },
                    "support": {
                      "tier": "developer",
                      "name": "IronNet",
                      "email": "sre@ironnet.com",
                      "link": "https://www.ironnet.com/support"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2023-04-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
                "contentId": "[variables('_dataConnectorContentId1')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "IronNet IronDefense",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Ecosystems & Integrations",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_dataConnectorContentId1')]",
        "contentKind": "DataConnector",
        "displayName": "IronNet IronDefense",
        "contentProductId": "[variables('_dataConnectorcontentProductId1')]",
        "id": "[variables('_dataConnectorcontentProductId1')]",
        "version": "[variables('dataConnectorVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
      "dependsOn": [
        "[variables('_dataConnectorId1')]"
      ],
      "location": "[parameters('workspace-location')]",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
        "contentId": "[variables('_dataConnectorContentId1')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorVersion1')]",
        "source": {
          "kind": "Solution",
          "name": "IronNet IronDefense",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Ecosystems & Integrations",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "GenericUI",
      "properties": {
        "connectorUiConfig": {
          "title": "IronNet IronDefense",
          "publisher": "IronNet",
          "descriptionMarkdown": "The IronNet IronDefense connector enables ingest of IronDefense alerts, events, and IronDome notifications into Microsoft Sentinel, enabling Microsoft Sentinel to utilize IronDefense's behavioral analytics and the IronDome community to quickly identify threats in your enterprise network.",
          "graphQueries": [
            {
              "metricName": "Total data received",
              "legend": "IronNet",
              "baseQuery": "CommonSecurityLog\n| where DeviceVendor == \"IronNet\""
            }
          ],
          "dataTypes": [
            {
              "name": "CommonSecurityLog (IronNet)",
              "lastDataReceivedQuery": "CommonSecurityLog\n| where DeviceVendor == \"IronNet\"\n| summarize Time = max(TimeGenerated)\n| where isnotempty(Time)"
            }
          ],
          "connectivityCriterias": [
            {
              "type": "IsConnectedQuery",
              "value": [
                "CommonSecurityLog\n| where DeviceVendor == \"IronNet\"\n| summarize LastLogReceived = max(TimeGenerated)\n| project IsConnected = LastLogReceived > ago(30d)"
              ]
            }
          ],
          "sampleQueries": [
            {
              "description": "10 most recent IronDefense alerts",
              "query": "CommonSecurityLog \n| where DeviceVendor == \"IronNet\" and DeviceProduct == \"IronDefense\" and EventType == 1 | limit 10"
            },
            {
              "description": "10 most recent IronDefense events",
              "query": "CommonSecurityLog \n| where DeviceVendor == \"IronNet\" and DeviceProduct == \"IronDefense\" and EventType == 0 | limit 10"
            },
            {
              "description": "10 most recent IronDome notifications",
              "query": "CommonSecurityLog \n| where DeviceVendor == \"IronNet\" and DeviceProduct == \"IronDome\" | limit 10"
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": false
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "read and write permissions are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "read": true,
                  "write": true,
                  "delete": true
                }
              },
              {
                "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                "providerDisplayName": "Keys",
                "scope": "Workspace",
                "requiredPermissions": {
                  "action": true
                }
              }
            ]
          },
          "instructionSteps": [
            {
              "description": "Install and configure the Linux agent to collect your Common Event Format (CEF) Syslog messages and forward them to Microsoft Sentinel.\n\n> Notice that the data from all regions will be stored in the selected workspace",
              "innerSteps": [
                {
                  "title": "1.1 Select or create a Linux machine",
                  "description": "Select or create a Linux machine that Microsoft Sentinel will use as the proxy between your security solution and Microsoft Sentinel this machine can be on your on-prem environment, Azure or other clouds."
                },
                {
                  "title": "1.2 Install the CEF collector on the Linux machine",
                  "description": "Install the Microsoft Monitoring Agent on your Linux machine and configure the machine to listen on the necessary port and forward messages to your Microsoft Sentinel workspace. The CEF collector collects CEF messages on port 514 TCP.\n\n> 1. Make sure that you have Python on your machine using the following command: python -version.\n\n> 2. You must have elevated permissions (sudo) on your machine.",
                  "instructions": [
                    {
                      "parameters": {
                        "fillWith": [
                          "WorkspaceId",
                          "PrimaryKey"
                        ],
                        "label": "Run the following command to install and apply the CEF collector:",
                        "value": "sudo wget -O cef_installer.py https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/DataConnectors/CEF/cef_installer.py&&sudo python cef_installer.py {0} {1}"
                      },
                      "type": "CopyableLabel"
                    }
                  ]
                }
              ],
              "title": "1. Linux Syslog agent configuration"
            },
            {
              "description": "Configure the IronNet Data Collector to send alerts, events, and IronDome notifications in CEF format to the proxy machine. Make sure you to send the logs to port 514 TCP on the machine's IP address.",
              "innerSteps": [
                {
                  "title": "2.1 Deploy the IronNet Data Collector VM",
                  "description": "Deploy the IronNet Data Collector VM using the image provided by your IronNet representative."
                },
                {
                  "title": "2.2 Configure the IronAPI connector using the Data Collector wizard.",
                  "description": "Ssh into the Data Collector VM as the config user and use the Data Collector configuration wizard to configure the IronAPI connector to receive notifications from IronDefense and forward them to your Microsoft Sentinel workspace. You will need:\n\n> 1. IronAPI credentials.\n\n> 2. IronDefense hostname.\n\n> 3. The public IP of the linux machine running the CEF collector.",
                  "instructions": [
                    {
                      "parameters": {
                        "label": "Run the following command to launch the Data Collector configuration wizard:",
                        "value": "wizard"
                      },
                      "type": "CopyableLabel"
                    }
                  ]
                },
                {
                  "title": "2.2 Verify IronAPI connector configuration",
                  "description": "Verify the IronAPI connector has been configured properly and is running normally.",
                  "instructions": [
                    {
                      "parameters": {
                        "label": "Run the following command to view the logs in the IronAPI connector. If no errors occur after 5 minutes, the connector is running normally.",
                        "value": "sudo journalctl -f CONTAINER_NAME=ironapi-notifications-collector"
                      },
                      "type": "CopyableLabel"
                    }
                  ]
                }
              ],
              "title": "2. Forward Common Event Format (CEF) logs to Syslog agent"
            },
            {
              "description": "Follow the instructions to validate your connectivity:\n\nOpen Log Analytics to check if the logs are received using the CommonSecurityLog schema.\n\n>It may take about 20 minutes until the connection streams data to your workspace.\n\nIf the logs are not received, run the following connectivity validation script:\n\n> 1. Make sure that you have Python on your machine using the following command: python -version\n\n>2. You must have elevated permissions (sudo) on your machine",
              "instructions": [
                {
                  "parameters": {
                    "fillWith": [
                      "WorkspaceId"
                    ],
                    "label": "Run the following command to validate your connectivity:",
                    "value": "sudo wget  -O cef_troubleshoot.py https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/DataConnectors/CEF/cef_troubleshoot.py&&sudo python cef_troubleshoot.py  {0}"
                  },
                  "type": "CopyableLabel"
                }
              ],
              "title": "3. Validate connection"
            },
            {
              "description": "Make sure to configure the machine's security according to your organization's security policy\n\n\n[Learn more >](https://aka.ms/SecureCEF)",
              "title": "4. Secure your machine "
            }
          ],
          "id": "[variables('_uiConfigId1')]"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "IronDefense_Detection_Query_AnalyticalRules Analytics Rule with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRulecontentId1')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Creates incidents based on behavioral detections from IronDefense.",
                "displayName": "Create Incidents from IronDefense",
                "enabled": false,
                "query": "CommonSecurityLog\n| where DeviceProduct == \"IronDefense\"\n| summarize arg_max(TimeGenerated, *) by DeviceCustomString4, DeviceCustomString2\n| extend Category = coalesce(column_ifexists(\"DeviceEventCategory\",\"\"),extract(@'cat=([^;]+)(\\;|$)', 1, AdditionalExtensions))\t\n| extend Subcategory = extract(@'subcat=([^;]+)(\\;|$)', 1, AdditionalExtensions)\n| extend AlertDescription = strcat(Category, ': ', Subcategory)\n| extend Status = tostring(DeviceCustomString2)\n| extend IronVueUrl = replace(@'\\\\', @'', tostring(DeviceCustomString3))\n",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "IronNetIronDefense",
                    "dataTypes": [
                      "CommonSecurityLog"
                    ]
                  }
                ],
                "entityMappings": [
                  {
                    "entityType": "IP",
                    "fieldMappings": [
                      {
                        "identifier": "Address",
                        "columnName": "DestinationIP"
                      }
                    ]
                  },
                  {
                    "entityType": "IP",
                    "fieldMappings": [
                      {
                        "identifier": "Address",
                        "columnName": "SourceIP"
                      }
                    ]
                  },
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "DestinationHostName"
                      }
                    ]
                  },
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "SourceHostName"
                      }
                    ]
                  },
                  {
                    "entityType": "URL",
                    "fieldMappings": [
                      {
                        "identifier": "Url",
                        "columnName": "RequestURL"
                      }
                    ]
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "IronAlertIdentifier": "DeviceCustomString4",
                  "AnalystSeverity": "DeviceCustomString1",
                  "IronDefenseStatus": "Status",
                  "AlertCreatedTime": "TimeGenerated",
                  "AnalystRating": "LogSeverity",
                  "IronVueUrl": "IronVueUrl"
                },
                "alertDetailsOverride": {
                  "alertDescriptionFormat": "IronDefense detected suspicious activity on {{TimeGenerated}} and categorized it as \"{{AlertDescription}}\".  View full details in IronVue: {{IronVueUrl}}\n",
                  "alertSeverityColumnName": "LogSeverity",
                  "alertDisplayNameFormat": "{{Category}}: {{Subcategory}} ({{DeviceCustomString4}})\n"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId1'),'/'))))]",
              "properties": {
                "description": "IronNet IronDefense Analytics Rule 1",
                "parentId": "[variables('analyticRuleId1')]",
                "contentId": "[variables('_analyticRulecontentId1')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "IronNet IronDefense",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Ecosystems & Integrations",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_analyticRulecontentId1')]",
        "contentKind": "AnalyticsRule",
        "displayName": "Create Incidents from IronDefense",
        "contentProductId": "[variables('_analyticRulecontentProductId1')]",
        "id": "[variables('_analyticRulecontentProductId1')]",
        "version": "[variables('analyticRuleVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "UpdateIronDefenseAlerts Playbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion1')]",
          "parameters": {
            "IronApiUsername": {
              "type": "string",
              "metadata": {
                "label": "IronDefense Username",
                "description": "IronVue username to connect to IronDefense API"
              }
            },
            "IronApiPassword": {
              "type": "securestring",
              "metadata": {
                "label": {
                  "password": "IronDefense Password",
                  "confirmPassword": "Confirm Password"
                },
                "description": "IronVue password to connect to IronDefense API"
              }
            },
            "IronDefenseUrl": {
              "type": "string",
              "metadata": {
                "label": "IronDefense URL",
                "description": "IronDefense URL used to authenticate to IronAPI"
              }
            },
            "AzureClientId": {
              "type": "string",
              "metadata": {
                "label": "Client ID",
                "description": "Azure Active Directory ClientId used to connect to the Microsoft Sentinel API to fetch Incidents"
              }
            },
            "AzureClientSecret": {
              "type": "securestring",
              "metadata": {
                "label": {
                  "password": "Client Secret",
                  "confirmPassword": "Confirm Client Secret"
                },
                "description": "Azure Active Directory ClientSecret used to connect to the Microsoft Sentinel API to fetch Incidents"
              }
            },
            "ShareCommentWithIrondome": {
              "type": "bool",
              "metadata": {
                "label": "Share Comments With Irondome(Recommended)",
                "description": "Check this flag to share the comments within the incident with IronDome"
              }
            },
            "RecurrenceInterval": {
              "type": "string",
              "metadata": {
                "label": "Playback Recurrence Interval",
                "description": "Polling Interval for the Playbook to execute (This must be an Integer value)"
              }
            },
            "RecurrenceFrequency": {
              "type": "string",
              "defaultValue": "Minute",
              "allowedValues": [
                "Day",
                "Hour",
                "Minute",
                "Month",
                "Second"
              ],
              "metadata": {
                "label": "Playback Recurrence Frequency",
                "description": "Polling Interval Frequency"
              }
            },
            "PlaybookName": {
              "type": "string",
              "defaultValue": "UpdateIronDefenseAlerts",
              "metadata": {
                "label": "Playbook Name",
                "description": "Playbook name to test the IronNet API"
              }
            },
            "AzureLoginUrl": {
              "type": "string",
              "defaultValue": "[concat('login.microsoft','online.com')]"
            },
            "AzureManagementUrl": {
              "type": "string",
              "defaultValue": "[concat('management.','azure.com')]"
            }
          },
          "variables": {
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2019-05-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "tenant_id": {
                      "defaultValue": "[[subscription().tenantId]",
                      "type": "String"
                    },
                    "irondefense_url": {
                      "defaultValue": "[[parameters('IronDefenseUrl')]",
                      "type": "String"
                    },
                    "user_name": {
                      "defaultValue": "[[parameters('IronApiUsername')]",
                      "type": "String"
                    },
                    "password": {
                      "defaultValue": "[[parameters('IronApiPassword')]",
                      "type": "SecureString"
                    },
                    "client_id": {
                      "defaultValue": "[[parameters('AzureClientId')]",
                      "type": "String"
                    },
                    "client_secret": {
                      "defaultValue": "[[parameters('AzureClientSecret')]",
                      "type": "SecureString"
                    },
                    "resource_group_id": {
                      "defaultValue": "[[resourceGroup().id]",
                      "type": "String"
                    },
                    "resource_group": {
                      "defaultValue": "[[resourceGroup().name]",
                      "type": "String"
                    },
                    "subscription_id": {
                      "defaultValue": "[[subscription().subscriptionId]",
                      "type": "String"
                    },
                    "workspace_name": {
                      "defaultValue": "[[parameters('workspace')]",
                      "type": "String"
                    },
                    "polling_interval": {
                      "defaultValue": "[[parameters('RecurrenceInterval')]",
                      "type": "String"
                    },
                    "polling_frequency": {
                      "defaultValue": "[[parameters('RecurrenceFrequency')]",
                      "type": "SecureString"
                    },
                    "share_comment_with_irondome": {
                      "defaultValue": "[[parameters('ShareCommentWithIrondome')]",
                      "type": "Bool"
                    },
                    "microsoft_login_uri": {
                      "type": "string",
                      "defaultValue": "[[parameters('AzureLoginUrl')]"
                    },
                    "microsoft_management_uri": {
                      "type": "string",
                      "defaultValue": "[[parameters('AzureManagementUrl')]"
                    }
                  },
                  "triggers": {
                    "Generate_the_token_for_Azure_Sentinel_Incident": {
                      "recurrence": {
                        "frequency": "@{parameters('polling_frequency')}",
                        "interval": "@{int(parameters('polling_interval'))}"
                      },
                      "type": "Http",
                      "inputs": {
                        "body": "grant_type=client_credentials&client_id=@{parameters('client_id')}&client_secret=@{parameters('client_secret')}&resource=https://@{parameters('microsoft_management_uri')}",
                        "headers": {
                          "Content-Type": "application/x-www-form-urlencoded"
                        },
                        "method": "POST",
                        "uri": "https://@{parameters('microsoft_login_uri')}/@{parameters('tenant_id')}/oauth2/token"
                      }
                    }
                  },
                  "actions": {
                    "Check_Result": {
                      "actions": {
                        "Incidents_were_modified": {
                          "type": "Compose",
                          "inputs": "Following one or more incidents were modified between @{variables('Interval Frequency')} to @{utcNow()}:\n@{variables('Incidents')}"
                        }
                      },
                      "runAfter": {
                        "Loop_through_All_the_Incident_Pages": [
                          "Succeeded"
                        ]
                      },
                      "else": {
                        "actions": {
                          "No_Incidents_modified": {
                            "type": "Compose",
                            "inputs": "No Incidents modified between @{variables('Interval Frequency')} to @{utcNow()}"
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "equals": [
                              "@variables('Flag')",
                              true
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "Initialize_Analyst_Expectation": {
                      "runAfter": {
                        "Initialize_Analyst_Severity": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Expectation",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Initialize_Analyst_Severity": {
                      "runAfter": {
                        "Initialize_Status": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Severity",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Initialize_Custom_Details": {
                      "runAfter": {
                        "Initialize_Analyst_Expectation": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Custom Details",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Initialize_Incident_Next_Link": {
                      "runAfter": {
                        "Map_Interval_Frequency": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Next Link",
                            "type": "string",
                            "value": "https://@{parameters('microsoft_management_uri')}@{parameters('resource_group_id')}/providers/Microsoft.OperationalInsights/workspaces/@{parameters('workspace_name')}/providers/Microsoft.SecurityInsights/incidents?api-version=2020-01-01&$orderby=properties/lastModifiedTimeUtc desc&$filter=(properties/lastModifiedTimeUtc ne properties/createdTimeUtc) and (properties/lastModifiedTimeUtc le @{utcNow()})  and (properties/lastModifiedTimeUtc gt @{variables('Interval Frequency')})"
                          }
                        ]
                      }
                    },
                    "Initialize_Incident_variable": {
                      "runAfter": {
                        "Parse_Token": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Incidents",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Initialize_Interval": {
                      "runAfter": {
                        "Initialize_Custom_Details": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Interval",
                            "type": "string",
                            "value": "-@{int(parameters('polling_interval'))}"
                          }
                        ]
                      }
                    },
                    "Initialize_Interval_Frequency": {
                      "runAfter": {
                        "Initialize_Interval": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Interval Frequency",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Initialize_Status": {
                      "runAfter": {
                        "Initialize_Success_Flag": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Status",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Initialize_Success_Flag": {
                      "runAfter": {
                        "Initialize_Incident_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Flag",
                            "type": "boolean",
                            "value": false
                          }
                        ]
                      }
                    },
                    "Loop_through_All_the_Incident_Pages": {
                      "actions": {
                        "Get_All_Updated_Incident": {
                          "type": "Http",
                          "inputs": {
                            "headers": {
                              "Authorization": "Bearer @{body('Parse_Token')?['access_token']}",
                              "content-type": "application/json"
                            },
                            "method": "GET",
                            "uri": "@variables('Next Link')"
                          }
                        },
                        "IronNet_Login_to_fetch_the_Token": {
                          "runAfter": {
                            "Parse_Incident_details": [
                              "Succeeded"
                            ]
                          },
                          "type": "Http",
                          "inputs": {
                            "authentication": {
                              "password": "@parameters('password')",
                              "type": "Basic",
                              "username": "@parameters('user_name')"
                            },
                            "body": "{}",
                            "headers": {
                              "Content-Type": "application/json"
                            },
                            "method": "POST",
                            "uri": "@{parameters('irondefense_url')}/IronApi/Login"
                          }
                        },
                        "Loop_through_each_Incident": {
                          "foreach": "@body('Parse_Incident_details')?['value']",
                          "actions": {
                            "Get_Incident_and_System_Alert_relations": {
                              "type": "Http",
                              "inputs": {
                                "headers": {
                                  "Authorization": "Bearer @{body('Parse_Token')?['access_token']}",
                                  "content-type": "application/json"
                                },
                                "method": "GET",
                                "uri": "https://@{parameters('microsoft_management_uri')}@{parameters('resource_group_id')}/providers/Microsoft.OperationalInsights/workspaces/@{parameters('workspace_name')}/providers/Microsoft.SecurityInsights/incidents/@{items('Loop_through_each_Incident')?['name']}/relations?api-version=2019-01-01-preview"
                              }
                            },
                            "Incidents_Updated": {
                              "runAfter": {
                                "Loop_through_Alerts": [
                                  "Succeeded"
                                ]
                              },
                              "type": "AppendToStringVariable",
                              "inputs": {
                                "name": "Incidents",
                                "value": "@{items('Loop_through_each_Incident')?['properties']?['incidentNumber']},"
                              }
                            },
                            "Loop_through_Alerts": {
                              "foreach": "@body('Parse_System_Alert_Id')?['value']",
                              "actions": {
                                "Check_for_Closed_Incident_and_Update_the_IronDefense_Analyst_Ratings": {
                                  "actions": {
                                    "Check_for_Comments": {
                                      "actions": {
                                        "For_each": {
                                          "foreach": "@body('Parse_Incidents_comments')?['value']",
                                          "actions": {
                                            "Update_Incident_Rating": {
                                              "type": "Http",
                                              "inputs": {
                                                "body": {
                                                  "alert_id": "@variables('Custom Details')",
                                                  "analyst_expectation": "@variables('Expectation')",
                                                  "analyst_severity": "@variables('Severity')",
                                                  "comment": "@items('For_each')?['properties']?['message']",
                                                  "share_comment_with_irondome": "@parameters('share_comment_with_irondome')"
                                                },
                                                "headers": {
                                                  "Authorization": "Bearer @{body('Parse_IronNet_Token')?['token']}",
                                                  "Content-Type": "application/json"
                                                },
                                                "method": "POST",
                                                "uri": "@{parameters('irondefense_url')}/IronApi/RateAlert"
                                              }
                                            }
                                          },
                                          "type": "Foreach"
                                        }
                                      },
                                      "runAfter": {
                                        "Map_Azure_Sentinel_Expectation_to_IronNet_Analyst_Expectation_": [
                                          "Succeeded"
                                        ]
                                      },
                                      "else": {
                                        "actions": {
                                          "Update_Incident_Rating_without_comment": {
                                            "type": "Http",
                                            "inputs": {
                                              "body": {
                                                "alert_id": "@variables('Custom Details')",
                                                "analyst_expectation": "@variables('Expectation')",
                                                "analyst_severity": "@variables('Severity')",
                                                "comment": "The Incident has been closed",
                                                "share_comment_with_irondome": "@parameters('share_comment_with_irondome')"
                                              },
                                              "headers": {
                                                "Authorization": "Bearer @{body('Parse_IronNet_Token')?['token']}",
                                                "Content-Type": "application/json"
                                              },
                                              "method": "POST",
                                              "uri": "@{parameters('irondefense_url')}/IronApi/RateAlert"
                                            }
                                          }
                                        }
                                      },
                                      "expression": {
                                        "and": [
                                          {
                                            "greater": [
                                              "@items('Loop_through_each_Incident')?['properties']?['additionalData']?['commentsCount']",
                                              0
                                            ]
                                          }
                                        ]
                                      },
                                      "type": "If"
                                    },
                                    "Map_Azure_Sentinel_Expectation_to_IronNet_Analyst_Expectation_": {
                                      "runAfter": {
                                        "Map_Azure_Sentinel_Severity_to_IronNet_Severity": [
                                          "Succeeded"
                                        ]
                                      },
                                      "cases": {
                                        "Case": {
                                          "case": "Undetermined",
                                          "actions": {
                                            "Map_Expectation_'Undetermined'": {
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "Expectation",
                                                "value": "EXP_UNKNOWN"
                                              }
                                            }
                                          }
                                        },
                                        "Case_2": {
                                          "case": "FalsePositive",
                                          "actions": {
                                            "Map_Expectation_'FalsePositive'": {
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "Expectation",
                                                "value": "EXP_EXPECTED"
                                              }
                                            }
                                          }
                                        },
                                        "Case_3": {
                                          "case": "BenignPositive",
                                          "actions": {
                                            "Map_Expectation_'BenignPositive'": {
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "Expectation",
                                                "value": "EXP_EXPECTED"
                                              }
                                            }
                                          }
                                        },
                                        "Case_4": {
                                          "case": "TruePositive",
                                          "actions": {
                                            "Map_Expectation_'TruePositive'": {
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "Expectation",
                                                "value": "EXP_UNEXPECTED"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "expression": "@items('Loop_through_each_Incident')?['properties']?['classification']",
                                      "type": "Switch"
                                    },
                                    "Map_Azure_Sentinel_Severity_to_IronNet_Severity": {
                                      "cases": {
                                        "Case": {
                                          "case": "Undetermined",
                                          "actions": {
                                            "Map_Severity_'Undetermined'": {
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "Severity",
                                                "value": "SEVERITY_UNDECIDED"
                                              }
                                            }
                                          }
                                        },
                                        "Case_2": {
                                          "case": "FalsePositive",
                                          "actions": {
                                            "Map_Severity_'FalsePositive'": {
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "Severity",
                                                "value": "SEVERITY_BENIGN"
                                              }
                                            }
                                          }
                                        },
                                        "Case_3": {
                                          "case": "BenignPositive",
                                          "actions": {
                                            "Map_Severity_'BenignPositive'": {
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "Severity",
                                                "value": "SEVERITY_MALICIOUS"
                                              }
                                            }
                                          }
                                        },
                                        "Case_4": {
                                          "case": "TruePositive",
                                          "actions": {
                                            "Map_Severity_'TruePositive'": {
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "Severity",
                                                "value": "SEVERITY_SUSPICIOUS"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "default": {
                                        "actions": {
                                          "Map_Default_Severity": {
                                            "type": "SetVariable",
                                            "inputs": {
                                              "name": "Severity",
                                              "value": "SEVERITY_UNDECIDED"
                                            }
                                          }
                                        }
                                      },
                                      "expression": "@items('Loop_through_each_Incident')?['properties']?['classification']",
                                      "type": "Switch"
                                    },
                                    "Update_the_Classification_Comment_if_it_exist": {
                                      "actions": {
                                        "Update_Incident_Rating_with_classification_comment": {
                                          "type": "Http",
                                          "inputs": {
                                            "body": {
                                              "alert_id": "@variables('Custom Details')",
                                              "analyst_expectation": "@variables('Expectation')",
                                              "analyst_severity": "@variables('Severity')",
                                              "comment": "@items('Loop_through_each_Incident')?['properties']?['classificationComment']",
                                              "share_comment_with_irondome": "@parameters('share_comment_with_irondome')"
                                            },
                                            "headers": {
                                              "Authorization": "Bearer @{body('Parse_IronNet_Token')?['token']}",
                                              "Content-Type": "application/json"
                                            },
                                            "method": "POST",
                                            "uri": "@{parameters('irondefense_url')}/IronApi/RateAlert"
                                          }
                                        }
                                      },
                                      "runAfter": {
                                        "Check_for_Comments": [
                                          "Succeeded"
                                        ]
                                      },
                                      "expression": {
                                        "and": [
                                          {
                                            "not": {
                                              "equals": [
                                                "@items('Loop_through_each_Incident')?['properties']?['classificationComment']",
                                                ""
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "type": "If"
                                    }
                                  },
                                  "runAfter": {
                                    "Check_for_Comments_and_Update_IronDefense_Alert_Status": [
                                      "Succeeded"
                                    ]
                                  },
                                  "expression": {
                                    "and": [
                                      {
                                        "equals": [
                                          "@items('Loop_through_each_Incident')?['properties']?['status']",
                                          "Closed"
                                        ]
                                      }
                                    ]
                                  },
                                  "type": "If"
                                },
                                "Check_for_Comments_and_Update_IronDefense_Alert_Status": {
                                  "actions": {
                                    "Loop_through_Comments": {
                                      "foreach": "@body('Parse_Incidents_comments')?['value']",
                                      "actions": {
                                        "Update_Incident_Status": {
                                          "type": "Http",
                                          "inputs": {
                                            "body": {
                                              "alert_id": "@variables('Custom Details')",
                                              "comment": "@items('Loop_through_Comments')?['properties']?['message']",
                                              "share_comment_with_irondome": "@parameters('share_comment_with_irondome')",
                                              "status": "@variables('Status')"
                                            },
                                            "headers": {
                                              "Authorization": "Bearer @{body('Parse_IronNet_Token')?['token']}",
                                              "Content-Type": "application/json"
                                            },
                                            "method": "POST",
                                            "uri": "@{parameters('irondefense_url')}/IronApi/SetAlertStatus"
                                          }
                                        }
                                      },
                                      "type": "Foreach"
                                    }
                                  },
                                  "runAfter": {
                                    "Parse_Incidents_comments": [
                                      "Succeeded"
                                    ]
                                  },
                                  "else": {
                                    "actions": {
                                      "Update_Incident_Status_without_comment": {
                                        "type": "Http",
                                        "inputs": {
                                          "body": {
                                            "alert_id": "@variables('Custom Details')",
                                            "comment": "The Incident has been changed to status @{items('Loop_through_each_Incident')?['properties']?['status']}",
                                            "share_comment_with_irondome": "@parameters('share_comment_with_irondome')",
                                            "status": "@variables('Status')"
                                          },
                                          "headers": {
                                            "Authorization": "Bearer @{body('Parse_IronNet_Token')?['token']}",
                                            "Content-Type": "application/json"
                                          },
                                          "method": "POST",
                                          "uri": "@{parameters('irondefense_url')}/IronApi/SetAlertStatus"
                                        }
                                      }
                                    }
                                  },
                                  "expression": {
                                    "and": [
                                      {
                                        "greater": [
                                          "@items('Loop_through_each_Incident')?['properties']?['additionalData']?['commentsCount']",
                                          0
                                        ]
                                      }
                                    ]
                                  },
                                  "type": "If"
                                },
                                "Fetch_Custom_Details_value_from_Incident": {
                                  "runAfter": {
                                    "Map_Azure_Sentinel_Status_to_IronNet_Status_": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "Custom Details",
                                    "value": "@body('Parse_Custom_Details')?['properties']?['additionalData']?['Custom Details']"
                                  }
                                },
                                "Fetch_Ironnet_Alert_Id_from_Incident_Custom_Details": {
                                  "foreach": "@body('Parse_IronDefense_Alert_Id')?['IronDefenseAlertId']",
                                  "actions": {
                                    "Set_AlertID": {
                                      "type": "SetVariable",
                                      "inputs": {
                                        "name": "Custom Details",
                                        "value": "@{items('Fetch_Ironnet_Alert_Id_from_Incident_Custom_Details')}"
                                      }
                                    }
                                  },
                                  "runAfter": {
                                    "Parse_IronDefense_Alert_Id": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "Foreach"
                                },
                                "Get_Entities": {
                                  "type": "Http",
                                  "inputs": {
                                    "headers": {
                                      "Authorization": "Bearer @{body('Parse_Token')?['access_token']}",
                                      "content-type": "application/json"
                                    },
                                    "method": "GET",
                                    "uri": "https://@{parameters('microsoft_management_uri')}@{parameters('resource_group_id')}/providers/Microsoft.OperationalInsights/workspaces/@{parameters('workspace_name')}/providers/Microsoft.SecurityInsights/Entities/@{items('Loop_through_Alerts')?['properties']?['relatedResourceName']}?api-version=2019-01-01-preview"
                                  }
                                },
                                "Get_Incident_latest_Comments": {
                                  "runAfter": {
                                    "Fetch_Ironnet_Alert_Id_from_Incident_Custom_Details": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "Http",
                                  "inputs": {
                                    "headers": {
                                      "Authorization": "Bearer @{body('Parse_Token')?['access_token']}",
                                      "content-type": "application/json"
                                    },
                                    "method": "GET",
                                    "uri": "https://@{parameters('microsoft_management_uri')}@{items('Loop_through_each_Incident')?['id']}/comments?api-version=2020-01-01"
                                  }
                                },
                                "Map_Azure_Sentinel_Status_to_IronNet_Status_": {
                                  "runAfter": {
                                    "Parse_Custom_Details": [
                                      "Succeeded"
                                    ]
                                  },
                                  "cases": {
                                    "Case": {
                                      "case": "New",
                                      "actions": {
                                        "Map_Status_'New'_": {
                                          "type": "SetVariable",
                                          "inputs": {
                                            "name": "Status",
                                            "value": "STATUS_AWAITING_REVIEW"
                                          }
                                        }
                                      }
                                    },
                                    "Case_2": {
                                      "case": "Active",
                                      "actions": {
                                        "Map_Status_'Active'": {
                                          "type": "SetVariable",
                                          "inputs": {
                                            "name": "Status",
                                            "value": "STATUS_UNDER_REVIEW"
                                          }
                                        }
                                      }
                                    },
                                    "Case_3": {
                                      "case": "Closed",
                                      "actions": {
                                        "Map_Status_'Closed'": {
                                          "type": "SetVariable",
                                          "inputs": {
                                            "name": "Status",
                                            "value": "STATUS_CLOSED"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "default": {
                                    "actions": {
                                      "Map_Default_Status_'New'": {
                                        "type": "SetVariable",
                                        "inputs": {
                                          "name": "Status",
                                          "value": "STATUS_AWAITING_REVIEW"
                                        }
                                      }
                                    }
                                  },
                                  "expression": "@items('Loop_through_each_Incident')?['properties']?['status']",
                                  "type": "Switch"
                                },
                                "Parse_Custom_Details": {
                                  "runAfter": {
                                    "Get_Entities": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "ParseJson",
                                  "inputs": {
                                    "content": "@body('Get_Entities')",
                                    "schema": {
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "kind": {
                                          "type": "string"
                                        },
                                        "name": {
                                          "type": "string"
                                        },
                                        "properties": {
                                          "properties": {
                                            "additionalData": {
                                              "properties": {
                                                "Analytic Rule Ids": {
                                                  "type": "string"
                                                },
                                                "Analytic Rule Name": {
                                                  "type": "string"
                                                },
                                                "Custom Details": {
                                                  "type": "string"
                                                },
                                                "Data Sources": {
                                                  "type": "string"
                                                },
                                                "Event Grouping": {
                                                  "type": "string"
                                                },
                                                "OriginalQuery": {
                                                  "type": "string"
                                                },
                                                "ProcessedBySentinel": {
                                                  "type": "string"
                                                },
                                                "Query": {
                                                  "type": "string"
                                                },
                                                "Query End Time UTC": {
                                                  "type": "string"
                                                },
                                                "Query Period": {
                                                  "type": "string"
                                                },
                                                "Query Start Time UTC": {
                                                  "type": "string"
                                                },
                                                "Search Query Results Overall Count": {
                                                  "type": "string"
                                                },
                                                "Trigger Operator": {
                                                  "type": "string"
                                                },
                                                "Trigger Threshold": {
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "alertDisplayName": {
                                              "type": "string"
                                            },
                                            "alertType": {
                                              "type": "string"
                                            },
                                            "confidenceLevel": {
                                              "type": "string"
                                            },
                                            "endTimeUtc": {
                                              "type": "string"
                                            },
                                            "friendlyName": {
                                              "type": "string"
                                            },
                                            "processingEndTime": {
                                              "type": "string"
                                            },
                                            "productComponentName": {
                                              "type": "string"
                                            },
                                            "productName": {
                                              "type": "string"
                                            },
                                            "providerAlertId": {
                                              "type": "string"
                                            },
                                            "resourceIdentifiers": {
                                              "items": {
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "workspaceId": {
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "workspaceId"
                                                ],
                                                "type": "object"
                                              },
                                              "type": "array"
                                            },
                                            "severity": {
                                              "type": "string"
                                            },
                                            "startTimeUtc": {
                                              "type": "string"
                                            },
                                            "status": {
                                              "type": "string"
                                            },
                                            "systemAlertId": {
                                              "type": "string"
                                            },
                                            "tactics": {
                                              "type": "array"
                                            },
                                            "timeGenerated": {
                                              "type": "string"
                                            },
                                            "vendorName": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  }
                                },
                                "Parse_Incidents_comments": {
                                  "runAfter": {
                                    "Get_Incident_latest_Comments": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "ParseJson",
                                  "inputs": {
                                    "content": "@body('Get_Incident_latest_Comments')",
                                    "schema": {
                                      "properties": {
                                        "value": {
                                          "items": {
                                            "properties": {
                                              "id": {
                                                "type": "string"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "properties": {
                                                "properties": {
                                                  "author": {
                                                    "properties": {
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "objectId": {
                                                        "type": "string"
                                                      },
                                                      "userPrincipalName": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "type": "object"
                                                  },
                                                  "createdTimeUtc": {
                                                    "type": "string"
                                                  },
                                                  "message": {
                                                    "type": "string"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "type": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "id",
                                              "name",
                                              "type",
                                              "properties"
                                            ],
                                            "type": "object"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  }
                                },
                                "Parse_IronDefense_Alert_Id": {
                                  "runAfter": {
                                    "Fetch_Custom_Details_value_from_Incident": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "ParseJson",
                                  "inputs": {
                                    "content": "@variables('Custom Details')",
                                    "schema": {
                                      "properties": {
                                        "AlertCreatedTime": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        },
                                        "AnalystRating": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        },
                                        "IronDefenseAlertId": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        },
                                        "IronDefenseStatus": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        },
                                        "IronVueUrl": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  }
                                }
                              },
                              "runAfter": {
                                "Parse_System_Alert_Id": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Foreach"
                            },
                            "Parse_System_Alert_Id": {
                              "runAfter": {
                                "Get_Incident_and_System_Alert_relations": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ParseJson",
                              "inputs": {
                                "content": "@body('Get_Incident_and_System_Alert_relations')",
                                "schema": {
                                  "properties": {
                                    "value": {
                                      "items": {
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "properties": {
                                            "properties": {
                                              "relatedResourceId": {
                                                "type": "string"
                                              },
                                              "relatedResourceKind": {
                                                "type": "string"
                                              },
                                              "relatedResourceName": {
                                                "type": "string"
                                              },
                                              "relatedResourceType": {
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "name",
                                          "type",
                                          "properties"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                }
                              }
                            },
                            "Set_Flag_Succeeded": {
                              "runAfter": {
                                "Incidents_Updated": [
                                  "Succeeded"
                                ]
                              },
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Flag",
                                "value": true
                              }
                            }
                          },
                          "runAfter": {
                            "Parse_IronNet_Token": [
                              "Succeeded"
                            ]
                          },
                          "type": "Foreach"
                        },
                        "Parse_Incident_details": {
                          "runAfter": {
                            "Get_All_Updated_Incident": [
                              "Succeeded"
                            ]
                          },
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@body('Get_All_Updated_Incident')",
                            "schema": {
                              "properties": {
                                "value": {
                                  "items": {
                                    "properties": {
                                      "etag": {
                                        "type": "string"
                                      },
                                      "id": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "properties": {
                                        "properties": {
                                          "additionalData": {
                                            "properties": {
                                              "alertProductNames": {
                                                "items": {
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              },
                                              "alertsCount": {
                                                "type": "integer"
                                              },
                                              "bookmarksCount": {
                                                "type": "integer"
                                              },
                                              "commentsCount": {
                                                "type": "integer"
                                              },
                                              "tactics": {
                                                "type": "array"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "classification": {
                                            "type": "string"
                                          },
                                          "classificationComment": {
                                            "type": "string"
                                          },
                                          "classificationReason": {
                                            "type": "string"
                                          },
                                          "createdTimeUtc": {
                                            "type": "string"
                                          },
                                          "description": {
                                            "type": "string"
                                          },
                                          "firstActivityTimeUtc": {
                                            "type": "string"
                                          },
                                          "incidentNumber": {
                                            "type": "integer"
                                          },
                                          "incidentUrl": {
                                            "type": "string"
                                          },
                                          "labels": {
                                            "type": "array"
                                          },
                                          "lastActivityTimeUtc": {
                                            "type": "string"
                                          },
                                          "lastModifiedTimeUtc": {
                                            "type": "string"
                                          },
                                          "owner": {
                                            "type": "object"
                                          },
                                          "relatedAnalyticRuleIds": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "severity": {
                                            "type": "string"
                                          },
                                          "status": {
                                            "type": "string"
                                          },
                                          "title": {
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "type": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "name",
                                      "etag",
                                      "type",
                                      "properties"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "Parse_IronNet_Token": {
                          "runAfter": {
                            "IronNet_Login_to_fetch_the_Token": [
                              "Succeeded"
                            ]
                          },
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@body('IronNet_Login_to_fetch_the_Token')",
                            "schema": {
                              "properties": {
                                "token": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "Set_Next_Link": {
                          "runAfter": {
                            "Loop_through_each_Incident": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "Next Link",
                            "value": "@body('Parse_Incident_details')?['nextLink']"
                          }
                        }
                      },
                      "runAfter": {
                        "Initialize_Incident_Next_Link": [
                          "Succeeded"
                        ]
                      },
                      "expression": "@not(equals(variables('Next Link'), null))",
                      "limit": {
                        "count": 60,
                        "timeout": "PT1H"
                      },
                      "type": "Until"
                    },
                    "Map_Interval_Frequency": {
                      "runAfter": {
                        "Initialize_Interval_Frequency": [
                          "Succeeded"
                        ]
                      },
                      "cases": {
                        "Case": {
                          "case": "Day",
                          "actions": {
                            "Set_Day": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Interval Frequency",
                                "value": "@{addDays(utcNow(),int(variables('Interval')))}"
                              }
                            }
                          }
                        },
                        "Case_2": {
                          "case": "Hour",
                          "actions": {
                            "Set_Hour": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Interval Frequency",
                                "value": "@{addHours(utcNow(),int(variables('Interval')))}"
                              }
                            }
                          }
                        },
                        "Case_3": {
                          "case": "Minute",
                          "actions": {
                            "Set_Minutes": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Interval Frequency",
                                "value": "@{addMinutes(utcNow(),int(variables('Interval')))}"
                              }
                            }
                          }
                        },
                        "Case_4": {
                          "case": "Second",
                          "actions": {
                            "Set_Second": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Interval Frequency",
                                "value": "@{addSeconds(utcNow(),int(variables('Interval')))}"
                              }
                            }
                          }
                        }
                      },
                      "expression": "@parameters('polling_frequency')",
                      "type": "Switch"
                    },
                    "Parse_Token": {
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@triggerBody()",
                        "schema": {
                          "properties": {
                            "access_token": {
                              "type": "string"
                            },
                            "expires_in": {
                              "type": "string"
                            },
                            "expires_on": {
                              "type": "string"
                            },
                            "ext_expires_in": {
                              "type": "string"
                            },
                            "not_before": {
                              "type": "string"
                            },
                            "resource": {
                              "type": "string"
                            },
                            "token_type": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  },
                  "outputs": {
                    "checkInts": {
                      "type": "bool",
                      "value": "[[greater(int(parameters('RecurrenceInterval')), 0 )]"
                    }
                  }
                }
              },
              "tags": {
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId1'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId1')]",
                "contentId": "[variables('_playbookContentId1')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "IronNet IronDefense",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Ecosystems & Integrations",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ],
          "metadata": {
            "comments": "Updates IronDefense alert workflow status and rating via IronAPI when the corresponding Microsoft Sentinel Incident is updated.",
            "lastUpdateTime": "2023-08-03T21:25:38.414Z",
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId1')]",
        "contentKind": "Playbook",
        "displayName": "UpdateIronDefenseAlerts",
        "contentProductId": "[variables('_playbookcontentProductId1')]",
        "id": "[variables('_playbookcontentProductId1')]",
        "version": "[variables('playbookVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "UpdateAzureSentinelIncidents Playbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion2')]",
          "parameters": {
            "IronApiUsername": {
              "type": "string",
              "metadata": {
                "label": "IronDefense Username",
                "description": "IronVue username to connect to IronDefense API"
              }
            },
            "IronApiPassword": {
              "type": "securestring",
              "metadata": {
                "label": {
                  "password": "IronDefense Password",
                  "confirmPassword": "Confirm Password"
                },
                "description": "IronVue password to connect to IronDefense API"
              }
            },
            "IronDefenseUrl": {
              "type": "string",
              "metadata": {
                "label": "IronDefense URL",
                "description": "IronDefense URL used to authenticate to IronAPI"
              }
            },
            "AzureClientId": {
              "type": "string",
              "metadata": {
                "label": "Client ID",
                "description": "Azure Active Directory ClientId used to connect to the Microsoft Sentinel API to fetch Incidents"
              }
            },
            "AzureClientSecret": {
              "type": "securestring",
              "metadata": {
                "label": {
                  "password": "Client Secret",
                  "confirmPassword": "Confirm Client Secret"
                },
                "description": "Azure Active Directory ClientSecret used to connect to the Microsoft Sentinel API to fetch Incidents"
              }
            },
            "AzureLoginUrl": {
              "type": "string",
              "defaultValue": "[concat('login.microsoft','online.com')]"
            },
            "AzureManagementUrl": {
              "type": "string",
              "defaultValue": "[concat('management.','azure.com')]"
            },
            "PlaybookName": {
              "type": "string",
              "defaultValue": "UpdateAzureSentinelIncidents",
              "metadata": {
                "label": "Playbook Name",
                "description": "Playbook name to test the IronNet API"
              }
            }
          },
          "variables": {
            "azuresentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('azuresentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "IronDefenseAPIConnection",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2019-05-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('azuresentinelConnectionName'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "irondefense_url": {
                      "defaultValue": "[[parameters('IronDefenseUrl')]",
                      "type": "String"
                    },
                    "tenant_id": {
                      "defaultValue": "[[subscription().tenantId]",
                      "type": "String"
                    },
                    "user_name": {
                      "defaultValue": "[[parameters('IronApiUsername')]",
                      "type": "String"
                    },
                    "password": {
                      "defaultValue": "[[parameters('IronApiPassword')]",
                      "type": "SecureString"
                    },
                    "client_id": {
                      "defaultValue": "[[parameters('AzureClientId')]",
                      "type": "String"
                    },
                    "client_secret": {
                      "defaultValue": "[[parameters('AzureClientSecret')]",
                      "type": "SecureString"
                    },
                    "resource_group_id": {
                      "defaultValue": "[[resourceGroup().id]",
                      "type": "String"
                    },
                    "resource_group": {
                      "defaultValue": "[[resourceGroup().name]",
                      "type": "String"
                    },
                    "workspace_name": {
                      "defaultValue": "[[parameters('workspace')]",
                      "type": "String"
                    },
                    "microsoft_login_uri": {
                      "type": "string",
                      "defaultValue": "[[parameters('AzureLoginUrl)]"
                    },
                    "microsoft_management_uri": {
                      "type": "string",
                      "defaultValue": "[[parameters('AzureManagementUrl)]"
                    }
                  },
                  "triggers": {
                    "When_a_response_to_an_Azure_Sentinel_alert_is_triggered": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/subscribe"
                      }
                    }
                  },
                  "actions": {
                    "Check_if_IronNet_Alert_details_exists_in_sentinel_Alert": {
                      "actions": {
                        "Check_for_an_Alert_or_Event": {
                          "actions": {
                            "Check_if_Sentinel_Incident_Exists": {
                              "actions": {
                                "Fetch_IronDefense_Severity": {
                                  "foreach": "@body('Extract_IronNet_Alert_details_from_Sentinel_Alert')?['AnalystRating']",
                                  "actions": {
                                    "Map_IronNet_Severity_to_Azure_Sentinel_Severity": {
                                      "cases": {
                                        "Case": {
                                          "case": "Low",
                                          "actions": {
                                            "Map_Severity_'Low'": {
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "Severity",
                                                "value": "Low"
                                              }
                                            }
                                          }
                                        },
                                        "Case_2": {
                                          "case": "Medium",
                                          "actions": {
                                            "Map_Severity_'Medium'": {
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "Severity",
                                                "value": "Medium"
                                              }
                                            }
                                          }
                                        },
                                        "Case_3": {
                                          "case": "High",
                                          "actions": {
                                            "Map_Severity_'High'": {
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "Severity",
                                                "value": "High"
                                              }
                                            }
                                          }
                                        },
                                        "Case_4": {
                                          "case": "Very-High",
                                          "actions": {
                                            "Map_Severity_'Very-High'": {
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "Severity",
                                                "value": "High"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "expression": "@items('Fetch_IronDefense_Severity')",
                                      "type": "Switch"
                                    }
                                  },
                                  "runAfter": {
                                    "Fetch_IronDefense_Status": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "Foreach"
                                },
                                "Fetch_IronDefense_Status": {
                                  "foreach": "@body('Extract_IronNet_Alert_details_from_Sentinel_Alert')?['IronDefenseStatus']",
                                  "actions": {
                                    "Map_IronNet_Status_to_Azure_Sentinel_Status": {
                                      "cases": {
                                        "Case": {
                                          "case": "STATUS_AWAITING_REVIEW",
                                          "actions": {
                                            "Map_Status_'STATUS_AWAITING_REVIEW'": {
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "Status",
                                                "value": "New"
                                              }
                                            }
                                          }
                                        },
                                        "Case_2": {
                                          "case": "STATUS_UNDER_REVIEW",
                                          "actions": {
                                            "Map_Status_'STATUS_UNDER_REVIEW'": {
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "Status",
                                                "value": "Active"
                                              }
                                            }
                                          }
                                        },
                                        "Case_3": {
                                          "case": "STATUS_CLOSED",
                                          "actions": {
                                            "Map_Classification": {
                                              "runAfter": {
                                                "Map_Status_'STATUS_CLOSED'": [
                                                  "Succeeded"
                                                ]
                                              },
                                              "cases": {
                                                "Case": {
                                                  "case": "SEVERITY_UNDECIDED",
                                                  "actions": {
                                                    "Map_Classification_'SEVERITY_UNDECIDED'": {
                                                      "type": "SetVariable",
                                                      "inputs": {
                                                        "name": "Classification",
                                                        "value": "Undetermined"
                                                      }
                                                    }
                                                  }
                                                },
                                                "Case_2": {
                                                  "case": "SEVERITY_BENIGN",
                                                  "actions": {
                                                    "Map_Classification_'SEVERITY_BENIGN'": {
                                                      "type": "SetVariable",
                                                      "inputs": {
                                                        "name": "Classification",
                                                        "value": "FalsePositive - IncorrectAlertLogic"
                                                      }
                                                    }
                                                  }
                                                },
                                                "Case_3": {
                                                  "case": "SEVERITY_MALICIOUS",
                                                  "actions": {
                                                    "Map_Classification_'SEVERITY_MALICIOUS'": {
                                                      "type": "SetVariable",
                                                      "inputs": {
                                                        "name": "Classification",
                                                        "value": "BenignPositive - SuspiciousButExpected"
                                                      }
                                                    }
                                                  }
                                                },
                                                "Case_4": {
                                                  "case": "SEVERITY_SUSPICIOUS",
                                                  "actions": {
                                                    "Map_Classification_'SEVERITY_SUSPICIOUS'": {
                                                      "type": "SetVariable",
                                                      "inputs": {
                                                        "name": "Classification",
                                                        "value": "TruePositive - SuspiciousActivity"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "expression": "@variables('Analyst Severity')",
                                              "type": "Switch"
                                            },
                                            "Map_Status_'STATUS_CLOSED'": {
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "Status",
                                                "value": "Closed"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "default": {
                                        "actions": {
                                          "Map_Other_Statuses": {
                                            "type": "SetVariable",
                                            "inputs": {
                                              "name": "Status",
                                              "value": "New"
                                            }
                                          }
                                        }
                                      },
                                      "expression": "@items('Fetch_IronDefense_Status')",
                                      "type": "Switch"
                                    }
                                  },
                                  "type": "Foreach"
                                },
                                "For_each_Sentinel_Incident": {
                                  "foreach": "@body('Parse_Sentinel_Incident')?['value']",
                                  "actions": {
                                    "Check_for_Classification": {
                                      "actions": {
                                        "Update_incident_2": {
                                          "type": "ApiConnection",
                                          "inputs": {
                                            "body": {
                                              "classification": {
                                                "ClassificationAndReason": "@variables('Classification')",
                                                "ClassificationReasonText": "This incident was closed in IronVue. View more details at @{variables('vueUrl')}"
                                              },
                                              "incidentArmId": "@items('For_each_Sentinel_Incident')?['id']",
                                              "severity": "@variables('Severity')",
                                              "status": "Closed"
                                            },
                                            "host": {
                                              "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                              }
                                            },
                                            "method": "put",
                                            "path": "/Incidents"
                                          }
                                        }
                                      },
                                      "else": {
                                        "actions": {
                                          "Update_incident": {
                                            "type": "ApiConnection",
                                            "inputs": {
                                              "body": {
                                                "incidentArmId": "@items('For_each_Sentinel_Incident')?['id']",
                                                "severity": "@variables('Severity')",
                                                "status": "@variables('Status')"
                                              },
                                              "host": {
                                                "connection": {
                                                  "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                }
                                              },
                                              "method": "put",
                                              "path": "/Incidents"
                                            }
                                          }
                                        }
                                      },
                                      "expression": {
                                        "and": [
                                          {
                                            "equals": [
                                              "@variables('Status')",
                                              "Closed"
                                            ]
                                          }
                                        ]
                                      },
                                      "type": "If"
                                    },
                                    "Check_if_Irondefense_Alert_has_Comments": {
                                      "actions": {
                                        "For_each_Comment": {
                                          "foreach": "@body('Parse_Get_Alert_IronDome_Information')?['community_comments']",
                                          "actions": {
                                            "Check_for_24_hours_comments": {
                                              "actions": {
                                                "Add_comment_to_incident_(V3)": {
                                                  "type": "ApiConnection",
                                                  "inputs": {
                                                    "body": {
                                                      "incidentArmId": "@items('For_each_Sentinel_Incident')?['id']",
                                                      "message": "<p>@{items('For_each_Comment')?['comment']}</p>"
                                                    },
                                                    "host": {
                                                      "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                      }
                                                    },
                                                    "method": "post",
                                                    "path": "/Incidents/Comment"
                                                  }
                                                }
                                              },
                                              "else": {
                                                "actions": {
                                                  "Older_Comments": {
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                      "name": "Message",
                                                      "value": "Olders Comments"
                                                    }
                                                  }
                                                }
                                              },
                                              "expression": {
                                                "and": [
                                                  {
                                                    "greater": [
                                                      "@items('For_each_Comment')?['created']",
                                                      "@addHours(utcNow(),-24)"
                                                    ]
                                                  }
                                                ]
                                              },
                                              "type": "If"
                                            }
                                          },
                                          "type": "Foreach"
                                        }
                                      },
                                      "runAfter": {
                                        "Parse_Get_Alert_IronDome_Information": [
                                          "Succeeded"
                                        ]
                                      },
                                      "else": {
                                        "actions": {
                                          "No_Comments": {
                                            "type": "SetVariable",
                                            "inputs": {
                                              "name": "Message",
                                              "value": "No Comments available for Alert @{variables('IronNet Alert Id')}"
                                            }
                                          }
                                        }
                                      },
                                      "expression": {
                                        "and": [
                                          {
                                            "greater": [
                                              "@length(body('Parse_Get_Alert_IronDome_Information')?['community_comments'])",
                                              0
                                            ]
                                          }
                                        ]
                                      },
                                      "type": "If"
                                    },
                                    "Get_Alert_IronDome_Information": {
                                      "runAfter": {
                                        "Check_for_Classification": [
                                          "Succeeded"
                                        ]
                                      },
                                      "type": "Http",
                                      "inputs": {
                                        "authentication": {
                                          "password": "@parameters('password')",
                                          "type": "Basic",
                                          "username": "@parameters('user_name')"
                                        },
                                        "body": {
                                          "alert_id": "@variables('IronNet Alert Id')"
                                        },
                                        "headers": {
                                          "Content-Type": "application/json"
                                        },
                                        "method": "POST",
                                        "uri": "@{parameters('irondefense_url')}/IronApi/GetAlertIronDomeInformation"
                                      }
                                    },
                                    "Parse_Get_Alert_IronDome_Information": {
                                      "runAfter": {
                                        "Get_Alert_IronDome_Information": [
                                          "Succeeded"
                                        ]
                                      },
                                      "type": "ParseJson",
                                      "inputs": {
                                        "content": "@body('Get_Alert_IronDome_Information')",
                                        "schema": {
                                          "properties": {
                                            "cognitive_system_score": {
                                              "type": "integer"
                                            },
                                            "community_comments": {
                                              "items": {
                                                "properties": {
                                                  "comment": {
                                                    "type": "string"
                                                  },
                                                  "created": {
                                                    "type": "string"
                                                  },
                                                  "dome_tags": {
                                                    "items": {
                                                      "type": "string"
                                                    },
                                                    "type": "array"
                                                  },
                                                  "enterprise": {
                                                    "type": "boolean"
                                                  },
                                                  "self": {
                                                    "type": "boolean"
                                                  }
                                                },
                                                "required": [
                                                  "created",
                                                  "comment",
                                                  "dome_tags",
                                                  "enterprise",
                                                  "self"
                                                ],
                                                "type": "object"
                                              },
                                              "type": "array"
                                            },
                                            "correlation_participation": {
                                              "items": {
                                                "properties": {
                                                  "dome_tag": {
                                                    "type": "string"
                                                  },
                                                  "ip": {
                                                    "properties": {
                                                      "activity_count": {
                                                        "type": "integer"
                                                      },
                                                      "benign_count": {
                                                        "type": "integer"
                                                      },
                                                      "comments_count": {
                                                        "type": "integer"
                                                      },
                                                      "first_seen": {
                                                        "type": "string"
                                                      },
                                                      "last_seen": {
                                                        "type": "string"
                                                      },
                                                      "malicious_count": {
                                                        "type": "integer"
                                                      },
                                                      "resource_owner": {
                                                        "type": "boolean"
                                                      },
                                                      "suspicious_count": {
                                                        "type": "integer"
                                                      },
                                                      "whitelisted_count": {
                                                        "type": "integer"
                                                      }
                                                    },
                                                    "type": "object"
                                                  }
                                                },
                                                "required": [
                                                  "dome_tag",
                                                  "behavior",
                                                  "domain",
                                                  "ip"
                                                ],
                                                "type": "object"
                                              },
                                              "type": "array"
                                            },
                                            "correlations": {
                                              "items": {
                                                "properties": {
                                                  "correlations": {
                                                    "items": {
                                                      "properties": {
                                                        "community_correlations": {
                                                          "type": "integer"
                                                        },
                                                        "enterprise_correlations": {
                                                          "type": "integer"
                                                        },
                                                        "ip": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "required": [
                                                        "ip",
                                                        "enterprise_correlations",
                                                        "community_correlations"
                                                      ],
                                                      "type": "object"
                                                    },
                                                    "type": "array"
                                                  },
                                                  "dome_tag": {
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "dome_tag",
                                                  "correlations"
                                                ],
                                                "type": "object"
                                              },
                                              "type": "array"
                                            },
                                            "dome_notifications": {
                                              "type": "array"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      }
                                    }
                                  },
                                  "runAfter": {
                                    "Fetch_IronDefense_Severity": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "Foreach"
                                }
                              },
                              "runAfter": {
                                "Parse_Sentinel_Incident": [
                                  "Succeeded"
                                ]
                              },
                              "else": {
                                "actions": {
                                  "No_Sentinel_Incidents": {
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "Message",
                                      "value": "No Sentinel Incidents present for the alert "
                                    }
                                  }
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "greater": [
                                      "@length(body('Parse_Sentinel_Incident')?['value'])",
                                      0
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "For_each_Analyst_Rating": {
                              "foreach": "@body('Extract_IronNet_Alert_details_from_Sentinel_Alert')?['AnalystRating']",
                              "actions": {
                                "Set_Analyst_Rating": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "Analyst Rating",
                                    "value": "@{items('For_each_Analyst_Rating')}"
                                  }
                                }
                              },
                              "type": "Foreach"
                            },
                            "For_each_Analyst_Severity": {
                              "foreach": "@body('Extract_IronNet_Alert_details_from_Sentinel_Alert')?['AnalystSeverity']",
                              "actions": {
                                "Set_Analyst_Severity": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "Analyst Severity",
                                    "value": "@{items('For_each_Analyst_Severity')}"
                                  }
                                }
                              },
                              "runAfter": {
                                "For_each_Analyst_Rating": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Foreach"
                            },
                            "For_each_vueUrl": {
                              "foreach": "@body('Extract_IronNet_Alert_details_from_Sentinel_Alert')?['IronVueUrl']",
                              "actions": {
                                "Set_vueUrl": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "vueUrl",
                                    "value": "@{items('For_each_vueUrl')}"
                                  }
                                }
                              },
                              "runAfter": {
                                "For_each_Analyst_Severity": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Foreach"
                            },
                            "Generate_the_token_for_Azure_Sentinel_Incident": {
                              "runAfter": {
                                "For_each_vueUrl": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Http",
                              "inputs": {
                                "body": "grant_type=client_credentials&client_id=@{parameters('client_id')}&client_secret=@{parameters('client_secret')}&resource=https://@{parameters('microsoft_management_uri')}",
                                "headers": {
                                  "Content-Type": "application/x-www-form-urlencoded"
                                },
                                "method": "POST",
                                "uri": "https://@{parameters('microsoft_login_uri')}/@{parameters('tenant_id')}/oauth2/token"
                              }
                            },
                            "Get_Sentinel_Incident": {
                              "runAfter": {
                                "Parse_Token": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Http",
                              "inputs": {
                                "headers": {
                                  "Authorization": "Bearer @{body('Parse_Token')?['access_token']}",
                                  "Content-Type": "application/json"
                                },
                                "method": "GET",
                                "uri": "https://@{parameters('microsoft_management_uri')}{parameters('resource_group_id')}/providers/Microsoft.OperationalInsights/workspaces/@{parameters('workspace_name')}/providers/Microsoft.SecurityInsights/incidents?api-version=2020-01-01&$filter=endsWith(properties/title,'(@{variables('IronNet Alert Id')})')"
                              }
                            },
                            "Parse_Sentinel_Incident": {
                              "runAfter": {
                                "Get_Sentinel_Incident": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ParseJson",
                              "inputs": {
                                "content": "@body('Get_Sentinel_Incident')",
                                "schema": {
                                  "properties": {
                                    "value": {
                                      "items": {
                                        "properties": {
                                          "etag": {
                                            "type": "string"
                                          },
                                          "id": {
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "properties": {
                                            "properties": {
                                              "additionalData": {
                                                "properties": {
                                                  "alertProductNames": {
                                                    "items": {
                                                      "type": "string"
                                                    },
                                                    "type": "array"
                                                  },
                                                  "alertsCount": {
                                                    "type": "integer"
                                                  },
                                                  "bookmarksCount": {
                                                    "type": "integer"
                                                  },
                                                  "commentsCount": {
                                                    "type": "integer"
                                                  },
                                                  "tactics": {
                                                    "type": "array"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "classification": {
                                                "type": "string"
                                              },
                                              "classificationComment": {
                                                "type": "string"
                                              },
                                              "classificationReason": {
                                                "type": "string"
                                              },
                                              "createdTimeUtc": {
                                                "type": "string"
                                              },
                                              "description": {
                                                "type": "string"
                                              },
                                              "firstActivityTimeUtc": {
                                                "type": "string"
                                              },
                                              "incidentNumber": {
                                                "type": "integer"
                                              },
                                              "incidentUrl": {
                                                "type": "string"
                                              },
                                              "labels": {
                                                "type": "array"
                                              },
                                              "lastActivityTimeUtc": {
                                                "type": "string"
                                              },
                                              "lastModifiedTimeUtc": {
                                                "type": "string"
                                              },
                                              "owner": {
                                                "type": "object"
                                              },
                                              "relatedAnalyticRuleIds": {
                                                "items": {
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              },
                                              "severity": {
                                                "type": "string"
                                              },
                                              "status": {
                                                "type": "string"
                                              },
                                              "title": {
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "name",
                                          "etag",
                                          "type",
                                          "properties"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                }
                              }
                            },
                            "Parse_Token": {
                              "runAfter": {
                                "Generate_the_token_for_Azure_Sentinel_Incident": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ParseJson",
                              "inputs": {
                                "content": "@body('Generate_the_token_for_Azure_Sentinel_Incident')",
                                "schema": {
                                  "properties": {
                                    "access_token": {
                                      "type": "string"
                                    },
                                    "expires_in": {
                                      "type": "string"
                                    },
                                    "expires_on": {
                                      "type": "string"
                                    },
                                    "ext_expires_in": {
                                      "type": "string"
                                    },
                                    "not_before": {
                                      "type": "string"
                                    },
                                    "resource": {
                                      "type": "string"
                                    },
                                    "token_type": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              }
                            }
                          },
                          "runAfter": {
                            "For_each_IronDefense_Alert": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Sentinel_Alert_contains_IronNet_Event_": {
                                "type": "SetVariable",
                                "inputs": {
                                  "name": "Message",
                                  "value": "This is an Event belonging to Alert @{variables('IronNet Alert Id')}"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "contains": [
                                  "@body('Parse_Extended_Properties')",
                                  "IronDefenseStatus"
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Extract_IronNet_Alert_details_from_Sentinel_Alert": {
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@body('Parse_Extended_Properties')?['Custom Details']",
                            "schema": {
                              "properties": {
                                "AlertCreatedTime": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "AnalystRating": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "AnalystSeverity": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "IronDefenseAlertId": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "IronDefenseStatus": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "IronVueUrl": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "For_each_IronDefense_Alert": {
                          "foreach": "@body('Extract_IronNet_Alert_details_from_Sentinel_Alert')?['IronDefenseAlertId']",
                          "actions": {
                            "Set_IronNet_Alert_Id": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "IronNet Alert Id",
                                "value": "@{items('For_each_IronDefense_Alert')}"
                              }
                            }
                          },
                          "runAfter": {
                            "Extract_IronNet_Alert_details_from_Sentinel_Alert": [
                              "Succeeded"
                            ]
                          },
                          "type": "Foreach"
                        }
                      },
                      "runAfter": {
                        "Parse_Extended_Properties": [
                          "Succeeded"
                        ]
                      },
                      "else": {
                        "actions": {
                          "No_Notifications": {
                            "type": "SetVariable",
                            "inputs": {
                              "name": "Message",
                              "value": "No Notifications"
                            }
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "not": {
                              "equals": [
                                "@body('Parse_Extended_Properties')?['Custom Details']",
                                ""
                              ]
                            }
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "Display_Output_Message": {
                      "runAfter": {
                        "Check_if_IronNet_Alert_details_exists_in_sentinel_Alert": [
                          "Succeeded"
                        ]
                      },
                      "type": "Compose",
                      "inputs": "@variables('Message')"
                    },
                    "Initialize_Analyst_Rating": {
                      "runAfter": {
                        "Initialize_Severity": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Analyst Rating",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Initialize_Analyst_Severity": {
                      "runAfter": {
                        "Initialize_Analyst_Rating": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Analyst Severity",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Initialize_Classification": {
                      "runAfter": {
                        "Initialize_IronNet_Alert_Id": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Classification",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Initialize_IronNet_Alert_Id": {
                      "runAfter": {
                        "Initialize_Analyst_Severity": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "IronNet Alert Id",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Initialize_Message": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Message",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Initialize_Severity": {
                      "runAfter": {
                        "Initialize_Status": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Severity",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Initialize_Status": {
                      "runAfter": {
                        "Initialize_Message": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Status",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Initialize_vueUrl": {
                      "runAfter": {
                        "Initialize_Classification": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "vueUrl",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Parse_Extended_Properties": {
                      "runAfter": {
                        "Initialize_vueUrl": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@triggerBody()?['ExtendedProperties']",
                        "schema": {
                          "properties": {
                            "Analytic Rule Ids": {
                              "type": "string"
                            },
                            "Analytic Rule Name": {
                              "type": "string"
                            },
                            "Custom Details": {
                              "type": "string"
                            },
                            "Data Sources": {
                              "type": "string"
                            },
                            "Event Grouping": {
                              "type": "string"
                            },
                            "OriginalQuery": {
                              "type": "string"
                            },
                            "ProcessedBySentinel": {
                              "type": "string"
                            },
                            "Query": {
                              "type": "string"
                            },
                            "Query End Time UTC": {
                              "type": "string"
                            },
                            "Query Period": {
                              "type": "string"
                            },
                            "Query Start Time UTC": {
                              "type": "string"
                            },
                            "Search Query Results Overall Count": {
                              "type": "string"
                            },
                            "Trigger Operator": {
                              "type": "string"
                            },
                            "Trigger Threshold": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('azuresentinelConnectionName'))]",
                        "connectionName": "[[variables('azuresentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]"
                      }
                    }
                  }
                }
              },
              "tags": {
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId2'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId2')]",
                "contentId": "[variables('_playbookContentId2')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion2')]",
                "source": {
                  "kind": "Solution",
                  "name": "IronNet IronDefense",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Ecosystems & Integrations",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ],
          "metadata": {
            "comments": "Enrich IronNet Alerts based on the corresponding Microsoft Sentinel Incident updates via IronNet Endpoints",
            "lastUpdateTime": "2023-08-03T21:25:39.432Z",
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId2')]",
        "contentKind": "Playbook",
        "displayName": "UpdateAzureSentinelIncidents",
        "contentProductId": "[variables('_playbookcontentProductId2')]",
        "id": "[variables('_playbookcontentProductId2')]",
        "version": "[variables('playbookVersion2')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('workbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "IronDefenseAlertDashboardWorkbook Workbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('workbookVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Insights/workbooks",
              "name": "[variables('workbookContentId1')]",
              "location": "[parameters('workspace-location')]",
              "kind": "shared",
              "apiVersion": "2021-08-01",
              "metadata": {
                "description": "Sets the time name for analysis"
              },
              "properties": {
                "displayName": "[parameters('workbook1-name')]",
                "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"9bd917ac-854d-413f-818a-d59721a2a3ac\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"IronAPIUrl\",\"type\":1,\"value\":\"\",\"isHiddenWhenLocked\":true,\"timeContext\":{\"durationMs\":86400000}},{\"id\":\"ba233765-613b-42da-8262-e7709b5acfed\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"IronAPIKey\",\"type\":1,\"isHiddenWhenLocked\":true,\"timeContext\":{\"durationMs\":86400000},\"value\":\"\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 7\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"8947c88a-548b-41eb-afa2-f5def502dd7c\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"token\",\"type\":1,\"isGlobal\":true,\"query\":\"{\\\"version\\\":\\\"CustomEndpoint/1.0\\\",\\\"data\\\":\\\"{}\\\",\\\"headers\\\":[{\\\"key\\\":\\\"Content-Type\\\",\\\"value\\\":\\\"application/json\\\"},{\\\"key\\\":\\\"Authorization\\\",\\\"value\\\":\\\"Basic {IronAPIKey}\\\"}],\\\"method\\\":\\\"POST\\\",\\\"url\\\":\\\"{IronAPIUrl}/IronApi/Login\\\",\\\"contentType\\\":\\\"application/json\\\",\\\"transformers\\\":[{\\\"type\\\":\\\"jsonpath\\\",\\\"settings\\\":{\\\"tablePath\\\":\\\"token\\\"}}]}\",\"isHiddenWhenLocked\":true,\"queryType\":10,\"value\":\"\"},{\"id\":\"e63ced2c-bdbd-4c36-8c7c-66701725d915\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"AlertId\",\"type\":1,\"isHiddenWhenLocked\":true,\"timeContext\":{\"durationMs\":86400000},\"value\":\"\"},{\"id\":\"47a9aae0-19b6-417c-8a8a-e5f8db61584e\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"RiskScore\",\"type\":1,\"isHiddenWhenLocked\":true,\"value\":\"\"},{\"id\":\"f7f2f51e-fd36-460b-b907-350c5500e9e0\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Domain\",\"type\":1,\"isHiddenWhenLocked\":true,\"value\":\"\"},{\"id\":\"fc25df27-78e9-4082-8e2f-6ab5886a4b49\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"type\":4,\"isHiddenWhenLocked\":true,\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}]},\"value\":{\"durationMs\":7776000000}},{\"id\":\"86b16bbf-4f81-47c9-8520-f74207a6be96\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Category\",\"type\":1,\"isHiddenWhenLocked\":true,\"value\":\"\"},{\"id\":\"0814f935-9f4c-4db4-aada-dd01c2051412\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Subcategory\",\"type\":1,\"isHiddenWhenLocked\":true,\"value\":\"\"},{\"id\":\"44cfba2e-f5f8-40e9-b890-21d01a2e6dad\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"IronVueUrl\",\"type\":1,\"isHiddenWhenLocked\":true,\"value\":\"\"},{\"version\":\"KqlParameterItem/1.0\",\"name\":\"Time\",\"type\":1,\"isHiddenWhenLocked\":true,\"timeContext\":{\"durationMs\":86400000},\"id\":\"5265fb7c-9ecd-454b-93d9-41a87e3c6eba\",\"value\":\"\"},{\"id\":\"91d5556f-c021-4d14-b603-87607af0964a\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"pr10\",\"type\":1,\"isHiddenWhenLocked\":true,\"criteriaData\":[{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"param\",\"resultValType\":\"expression\",\"resultVal\":\"{token} > 0\"}}]},{\"id\":\"e991e752-07b3-4971-ae88-4301c651acd1\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"SourceIP\",\"type\":1,\"isHiddenWhenLocked\":true,\"value\":\"\"}],\"style\":\"pills\",\"queryType\":8},\"name\":\"parameters - 3\"},{\"type\":1,\"content\":{\"json\":\"<h1>Alert ID : {AlertId}</h1>\"},\"name\":\"text - 5\"},{\"type\":11,\"content\":{\"version\":\"LinkItem/1.0\",\"style\":\"tabs\",\"links\":[{\"id\":\"217b6954-972d-4acc-9f19-6fbbc1908379\",\"cellValue\":\"tabchange\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Statistics\",\"subTarget\":\"statistics\",\"style\":\"link\"},{\"id\":\"b2eb7d04-e625-45d7-bbcb-20b38e276edb\",\"cellValue\":\"tabchange\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Details\",\"subTarget\":\"alertdetails\",\"style\":\"link\"},{\"id\":\"173b4496-7968-4eba-bc25-b50c0ceee129\",\"cellValue\":\"tabchange\",\"linkTarget\":\"parameter\",\"linkLabel\":\"IronDome Notifications\",\"subTarget\":\"irondome\",\"style\":\"link\"}]},\"name\":\"links - 0\"},{\"type\":1,\"content\":{\"json\":\"\\r\\n<p style=\\\"font-weight: 600;font-size:14px;font-family: az_ea_font,''Segoe UI'',az_font,system-ui,-apple-system,BlinkMacSystemFont,Roboto,Oxygen,Ubuntu,Cantarell,''Open Sans'',''Helvetica Neue'',sans-serif;\\\">{Category} - {Subcategory}</p>\"},\"customWidth\":\"50\",\"name\":\"text - 1\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"<html>\\r\\n<body>\\r\\n<div style=\\\"padding-left:10px\\\">\\r\\n<p style=\\\"font-weight: 600;font-size:14px;font-family: az_ea_font,''Segoe UI'',az_font,system-ui,-apple-system,BlinkMacSystemFont,Roboto,Oxygen,Ubuntu,Cantarell,''Open Sans'',''Helvetica Neue'',sans-serif;\\\">Risk Score: {RiskScore}</p>\\r\\n<p style=\\\"font-weight: 600;font-size:14px;font-family: az_ea_font,''Segoe UI'',az_font,system-ui,-apple-system,BlinkMacSystemFont,Roboto,Oxygen,Ubuntu,Cantarell,''Open Sans'',''Helvetica Neue'',sans-serif;\\\">Domains: {Domain}</p>\\r\\n<p style=\\\"font-weight: 600;font-size:14px;font-family: az_ea_font,''Segoe UI'',az_font,system-ui,-apple-system,BlinkMacSystemFont,Roboto,Oxygen,Ubuntu,Cantarell,''Open Sans'',''Helvetica Neue'',sans-serif;\\\">Traffic Start: {Time}</p>\\r\\n<p style=\\\"font-weight: 600;font-size:14px;font-family: az_ea_font,''Segoe UI'',az_font,system-ui,-apple-system,BlinkMacSystemFont,Roboto,Oxygen,Ubuntu,Cantarell,''Open Sans'',''Helvetica Neue'',sans-serif;\\\">Traffic End:  {Time}</p>\\r\\n<p style=\\\"font-weight: 600;font-size:14px;font-family: az_ea_font,''Segoe UI'',az_font,system-ui,-apple-system,BlinkMacSystemFont,Roboto,Oxygen,Ubuntu,Cantarell,''Open Sans'',''Helvetica Neue'',sans-serif;\\\">IronVueUrl:  {IronVueUrl}</p>\\r\\n</div>\\r\\n</body>\\r\\n</html>\"},\"customWidth\":\"50\",\"name\":\"text - 0\",\"styleSettings\":{\"padding\":\"20px\"}}]},\"name\":\"layout\",\"styleSettings\":{\"showBorder\":true}}]},\"name\":\"category group\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"CommonSecurityLog\\r\\n| where DeviceCustomString4 == ''{AlertId}''\\r\\n| summarize activityCount = count() by LogSeverity, ''{SourceIP}'',DeviceCustomString4\\r\\n| project SourceIP=''{SourceIP}'',activityCount,LogSeverity,DeviceCustomString4\",\"size\":1,\"showAnalytics\":true,\"title\":\"Activity By Source IP (Severity vs Source IP)\",\"noDataMessage\":\"No Data found\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"unstackedbar\",\"chartSettings\":{\"xAxis\":\"SourceIP\",\"yAxis\":[\"activityCount\"],\"group\":\"LogSeverity\",\"createOtherGroup\":\"\",\"showMetrics\":false,\"showLegend\":true}},\"customWidth\":\"50\",\"name\":\"ActivityStatistic\",\"styleSettings\":{\"padding\":\"20px\",\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"CommonSecurityLog\\r\\n| where DeviceCustomString4 == ''{AlertId}'' \\r\\n| summarize eventCount = count() by DeviceCustomString4, TimeGenerated,''{SourceIP}''\\r\\n| project DeviceCustomString4,eventCount,SourceIP=''{SourceIP}'',TimeGenerated\",\"size\":1,\"showAnalytics\":true,\"title\":\"Events By Source IP (Source IP vs Time)\",\"noDataMessage\":\"No Data found\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"scatterchart\",\"chartSettings\":{\"xAxis\":\"TimeGenerated\",\"yAxis\":[\"eventCount\"],\"group\":\"SourceIP\",\"createOtherGroup\":\"\",\"showMetrics\":false,\"showLegend\":true,\"xSettings\":{\"numberFormatSettings\":{\"unit\":0,\"options\":{\"style\":\"decimal\",\"useGrouping\":true}}}}},\"customWidth\":\"50\",\"name\":\"query - 2\",\"styleSettings\":{\"padding\":\"20px\",\"showBorder\":true}}]},\"name\":\"charts\"}]},\"conditionalVisibility\":{\"parameterName\":\"tabchange\",\"comparison\":\"isEqualTo\",\"value\":\"statistics\"},\"name\":\"statisticsgroup\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"{\\\"version\\\":\\\"CustomEndpoint/1.0\\\",\\\"data\\\":\\\"{\\\\\\\"alert_id\\\\\\\":\\\\\\\"{AlertId}\\\\\\\"}\\\",\\\"headers\\\":[{\\\"key\\\":\\\"Authorization\\\",\\\"value\\\":\\\"Bearer {token}\\\"}],\\\"method\\\":\\\"POST\\\",\\\"url\\\":\\\"{IronAPIUrl}/IronApi/GetEvents\\\",\\\"contentType\\\":\\\"application/json\\\",\\\"transformers\\\":[{\\\"type\\\":\\\"jsonpath\\\",\\\"settings\\\":{\\\"tablePath\\\":\\\"$.events[*].session_details[*]\\\"}}]}\",\"size\":0,\"showAnalytics\":true,\"noDataMessage\":\"No Data found\",\"queryType\":10,\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"src_entity_id\",\"formatter\":5},{\"columnMatch\":\"dst_entity_id\",\"formatter\":5},{\"columnMatch\":\"secondary_app_protocol\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"28ch\"}},{\"columnMatch\":\"app_domains\",\"formatter\":5},{\"columnMatch\":\"total_bytes\",\"formatter\":5},{\"columnMatch\":\"url\",\"formatter\":5},{\"columnMatch\":\"src_entity_attribute_type\",\"formatter\":5},{\"columnMatch\":\"dst_entity_attribute_type\",\"formatter\":5}],\"labelSettings\":[{\"columnId\":\"src_entity_id\",\"label\":\"\"},{\"columnId\":\"src_ip\",\"label\":\"Source IP\"},{\"columnId\":\"src_domains\",\"label\":\"Source Domains\"},{\"columnId\":\"dst_entity_id\",\"label\":\"\"},{\"columnId\":\"dst_ip\",\"label\":\"Destination IP\"},{\"columnId\":\"dst_domains\",\"label\":\"Destination Domains\"},{\"columnId\":\"src_port\",\"label\":\"Source Port\"},{\"columnId\":\"dst_port\",\"label\":\"Destination Port\"},{\"columnId\":\"trans_protocol\",\"label\":\"Transport Protocol\"},{\"columnId\":\"primary_app_protocol\",\"label\":\"App Protocol\"},{\"columnId\":\"secondary_app_protocol\"},{\"columnId\":\"app_domains\"},{\"columnId\":\"bytes_in\",\"label\":\"Bytes In\"},{\"columnId\":\"bytes_out\",\"label\":\"Bytes Out\"},{\"columnId\":\"total_bytes\"},{\"columnId\":\"url\"},{\"columnId\":\"src_entity_attribute\",\"label\":\"Source Entity\"},{\"columnId\":\"src_entity_attribute_type\"},{\"columnId\":\"dst_entity_attribute\",\"label\":\"Destination Entity\"},{\"columnId\":\"dst_entity_attribute_type\"},{\"columnId\":\"src_network_id\",\"label\":\"Source Network Id\"},{\"columnId\":\"dst_network_id\",\"label\":\"Destination Network Id\"}]},\"sortBy\":[]},\"conditionalVisibility\":{\"parameterName\":\"tabchange\",\"comparison\":\"isEqualTo\",\"value\":\"alertdetails\"},\"name\":\"Default\"}]},\"conditionalVisibility\":{\"parameterName\":\"tabchange\",\"comparison\":\"isEqualTo\",\"value\":\"alertdetails\"},\"name\":\"detailsgrp\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"594df1a8-6ffe-4535-a4f6-d366cbd9e13e\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"irondome\",\"type\":1,\"query\":\"{\\\"version\\\":\\\"CustomEndpoint/1.0\\\",\\\"data\\\":\\\"{\\\\r\\\\n\\\\t\\\\\\\"alert_id\\\\\\\":\\\\\\\"{AlertId}\\\\\\\"\\\\r\\\\n}\\\",\\\"headers\\\":[{\\\"key\\\":\\\"Authorization\\\",\\\"value\\\":\\\"Bearer {token}\\\"},{\\\"key\\\":\\\"Content-Type\\\",\\\"value\\\":\\\"application/json\\\"}],\\\"method\\\":\\\"POST\\\",\\\"url\\\":\\\"{IronAPIUrl}/IronApi/GetAlertIronDomeInformation\\\",\\\"contentType\\\":\\\"application/json\\\"}\",\"isHiddenWhenLocked\":true,\"timeContext\":{\"durationMs\":86400000},\"queryType\":10},{\"id\":\"25b71692-08e7-4bc0-a33b-b0d8dd869163\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"IronDomeCategory\",\"type\":1,\"query\":\"{\\\"version\\\":\\\"1.0.0\\\",\\\"content\\\":\\\"{irondome}\\\",\\\"transformers\\\":[{\\\"type\\\":\\\"jsonpath\\\",\\\"settings\\\":{\\\"columns\\\":[{\\\"path\\\":\\\"$.dome_notifications[0].category\\\",\\\"columnid\\\":\\\"Category\\\",\\\"columnType\\\":\\\"string\\\",\\\"substringRegexMatch\\\":\\\"[\\\\\\\\w]{3}_\\\",\\\"substringReplace\\\":\\\" \\\"}]}}]}\",\"isHiddenWhenLocked\":true,\"timeContext\":{\"durationMs\":86400000},\"queryType\":8},{\"id\":\"f3722cfc-0b49-4773-8706-c9ad38d27a3c\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"CreatedDate\",\"type\":1,\"query\":\"{\\\"version\\\":\\\"1.0.0\\\",\\\"content\\\":\\\"{irondome}\\\",\\\"transformers\\\":[{\\\"type\\\":\\\"jsonpath\\\",\\\"settings\\\":{\\\"columns\\\":[{\\\"path\\\":\\\"$.dome_notifications[0].created\\\",\\\"columnid\\\":\\\"CreatedDate\\\"}]}}]}\",\"isHiddenWhenLocked\":true,\"timeContext\":{\"durationMs\":86400000},\"queryType\":8},{\"id\":\"0d6884db-0414-4f18-a921-8b17690ea320\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Comments\",\"type\":1,\"query\":\"{\\\"version\\\":\\\"1.0.0\\\",\\\"content\\\":\\\"{irondome}\\\",\\\"transformers\\\":[{\\\"type\\\":\\\"jsonpath\\\",\\\"settings\\\":{\\\"columns\\\":[{\\\"path\\\":\\\"$.dome_notifications[0].comment_details\\\",\\\"columnid\\\":\\\"Comments\\\",\\\"columnType\\\":\\\"string\\\"}]}}]}\",\"isHiddenWhenLocked\":true,\"timeContext\":{\"durationMs\":86400000},\"queryType\":8},{\"id\":\"9060ae37-2371-4ee1-be3a-7e1f56f00733\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"severity_malicious_details\",\"type\":1,\"query\":\"{\\\"version\\\":\\\"1.0.0\\\",\\\"content\\\":\\\"{irondome}\\\",\\\"transformers\\\":[{\\\"type\\\":\\\"jsonpath\\\",\\\"settings\\\":{\\\"columns\\\":[{\\\"path\\\":\\\"$.dome_notifications[*]..severity_malicious_details.ips\\\",\\\"columnid\\\":\\\"severity_malicious_details\\\",\\\"columnType\\\":\\\"string\\\"}]}}]}\",\"isHiddenWhenLocked\":true,\"timeContext\":{\"durationMs\":86400000},\"queryType\":8},{\"id\":\"5112d9a4-6982-4152-9981-dcd494557777\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"joined_high_risk_details\",\"type\":1,\"query\":\"{\\\"version\\\":\\\"1.0.0\\\",\\\"content\\\":\\\"{irondome}\\\",\\\"transformers\\\":[{\\\"type\\\":\\\"jsonpath\\\",\\\"settings\\\":{\\\"columns\\\":[{\\\"path\\\":\\\"$.dome_notifications[*].joined_high_risk_details.ips\\\",\\\"columnid\\\":\\\"joined_high_risk_details\\\",\\\"columnType\\\":\\\"string\\\"}]}}]}\",\"isHiddenWhenLocked\":true,\"timeContext\":{\"durationMs\":86400000},\"queryType\":8},{\"id\":\"59249b70-76a5-4a1a-bf08-aeb9b5292936\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"severity_suspicious_details\",\"type\":1,\"query\":\"{\\\"version\\\":\\\"1.0.0\\\",\\\"content\\\":\\\"{irondome}\\\",\\\"transformers\\\":[{\\\"type\\\":\\\"jsonpath\\\",\\\"settings\\\":{\\\"columns\\\":[{\\\"path\\\":\\\"$.dome_notifications[*].severity_suspicious_details.ips\\\",\\\"columnid\\\":\\\"severity_suspicious_details\\\",\\\"columnType\\\":\\\"string\\\"}]}}]}\",\"isHiddenWhenLocked\":true,\"timeContext\":{\"durationMs\":86400000},\"queryType\":8},{\"id\":\"d8a12e6d-41dd-4f52-97e0-9fbdbb3e085e\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"severity_malicious_details_domains\",\"type\":1,\"query\":\"{\\\"version\\\":\\\"1.0.0\\\",\\\"content\\\":\\\"{irondome}\\\",\\\"transformers\\\":[{\\\"type\\\":\\\"jsonpath\\\",\\\"settings\\\":{\\\"columns\\\":[{\\\"path\\\":\\\"$.dome_notifications[*].severity_malicious_details.domains\\\",\\\"columnid\\\":\\\"severity_malicious_details\\\",\\\"columnType\\\":\\\"string\\\"}]}}]}\",\"isHiddenWhenLocked\":true,\"timeContext\":{\"durationMs\":86400000},\"queryType\":8},{\"id\":\"8a84ef96-52fe-4144-a3de-1031d4666f97\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"joined_high_risk_details_domains\",\"type\":1,\"query\":\"{\\\"version\\\":\\\"1.0.0\\\",\\\"content\\\":\\\"{irondome}\\\",\\\"transformers\\\":[{\\\"type\\\":\\\"jsonpath\\\",\\\"settings\\\":{\\\"columns\\\":[{\\\"path\\\":\\\"$.dome_notifications[*].joined_high_risk_details.domains\\\",\\\"columnid\\\":\\\"joined_high_risk_details\\\",\\\"columnType\\\":\\\"string\\\"}]}}]}\",\"isHiddenWhenLocked\":true,\"timeContext\":{\"durationMs\":86400000},\"queryType\":8},{\"id\":\"5cb2f5d0-5e49-4f4d-ab78-5cf51b3815aa\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"severity_suspicious_details_domains\",\"type\":1,\"query\":\"{\\\"version\\\":\\\"1.0.0\\\",\\\"content\\\":\\\"{irondome}\\\",\\\"transformers\\\":[{\\\"type\\\":\\\"jsonpath\\\",\\\"settings\\\":{\\\"columns\\\":[{\\\"path\\\":\\\"$.dome_notifications[*].severity_suspicious_details.domains\\\",\\\"columnid\\\":\\\"severity_suspicious_details\\\",\\\"columnType\\\":\\\"string\\\"}]}}]}\",\"isHiddenWhenLocked\":true,\"timeContext\":{\"durationMs\":86400000},\"queryType\":8},{\"id\":\"d42b167f-1c45-4d89-aaa5-89ac254cc9ce\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Message\",\"type\":1,\"isHiddenWhenLocked\":true,\"criteriaData\":[{\"criteriaContext\":{\"leftOperand\":\"IronDomeCategory\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\" PARTICIPANT_ADDED\",\"resultValType\":\"static\",\"resultVal\":\"An alert was correlated with another alert produced by an IronDome participant.\"}},{\"criteriaContext\":{\"leftOperand\":\"IronDomeCategory\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\" COMMENT_ADDED\",\"resultValType\":\"param\",\"resultVal\":\"Comments\"}},{\"criteriaContext\":{\"leftOperand\":\"IronDomeCategory\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\" COMMUNITY_SEVERITY_CHANGED\",\"resultValType\":\"static\",\"resultVal\":\"An alert was correlated with another alert that was initially rated as benign/safelisted but was changed to suspicious/malicious.\"}},{\"criteriaContext\":{\"leftOperand\":\"IronDomeCategory\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\" COMMUNITY_SEVERITY_MISMATCHED\",\"resultValType\":\"static\",\"resultVal\":\"An alert rated initially as benign/safelisted was correlated with another alert rated malicious/suspicious by another IronDome participant.\"}},{\"criteriaContext\":{\"leftOperand\":\"IronDomeCategory\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\" ENTERPRISE_SEVERITY_MISMATCHED\",\"resultValType\":\"static\",\"resultVal\":\"An alert rated initially as benign/safelisted was correlated with another alert rated malicious/suspicious in this enterprise.\"}},{\"criteriaContext\":{\"leftOperand\":\"IronDomeCategory\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\" SEVERITY_MALICIOUS\",\"resultValType\":\"static\",\"resultVal\":\"Malicious activity was reported in IronDome. A threat intelligence rule has been automatically created in IronDefense.\"}},{\"criteriaContext\":{\"leftOperand\":\"IronDomeCategory\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\" JOINED_HIGH_RISK\",\"resultValType\":\"static\",\"resultVal\":\"An alert was correlated with malicious activity previously reported in IronDome.\"}},{\"criteriaContext\":{\"leftOperand\":\"IronDomeCategory\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\" SEVERITY_SUSPICIOUS\",\"resultValType\":\"static\",\"resultVal\":\"Suspicious activity was reported in IronDome.\"}},{\"criteriaContext\":{\"leftOperand\":\"IronDomeCategory\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\" SEVERITY_MALICIOUS\",\"resultValType\":\"param\",\"resultVal\":\"severity_malicious_details\"}},{\"criteriaContext\":{\"leftOperand\":\"IronDomeCategory\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\" JOINED_HIGH_RISK\",\"resultValType\":\"param\",\"resultVal\":\"joined_high_risk_details\"}},{\"criteriaContext\":{\"leftOperand\":\"IronDomeCategory\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\" SEVERITY_SUSPICIOUS\",\"resultValType\":\"param\",\"resultVal\":\"severity_suspicious_details\"}},{\"criteriaContext\":{\"leftOperand\":\"IronDomeCategory\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\" SEVERITY_MALICIOUS\",\"resultValType\":\"param\",\"resultVal\":\"severity_malicious_details_domains\"}},{\"criteriaContext\":{\"leftOperand\":\"IronDomeCategory\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\" JOINED_HIGH_RISK\",\"resultValType\":\"param\",\"resultVal\":\"joined_high_risk_details_domains\"}},{\"criteriaContext\":{\"leftOperand\":\"IronDomeCategory\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\" SEVERITY_SUSPICIOUS\",\"resultValType\":\"param\",\"resultVal\":\"severity_suspicious_details_domains\"}},{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"param\",\"resultValType\":\"param\",\"resultVal\":\"Comments\"}}],\"timeContext\":{\"durationMs\":86400000}},{\"id\":\"793abf11-10fe-44dd-8d5e-7846c17b2b12\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"IP\",\"type\":1,\"isHiddenWhenLocked\":true,\"criteriaData\":[{\"criteriaContext\":{\"leftOperand\":\"IronDomeCategory\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\" SEVERITY_MALICIOUS\",\"resultValType\":\"param\",\"resultVal\":\"severity_malicious_details\"}},{\"criteriaContext\":{\"leftOperand\":\"IronDomeCategory\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\" JOINED_HIGH_RISK\",\"resultValType\":\"param\",\"resultVal\":\"joined_high_risk_details\"}},{\"criteriaContext\":{\"leftOperand\":\"IronDomeCategory\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\" SEVERITY_SUSPICIOUS\",\"resultValType\":\"param\",\"resultVal\":\"severity_suspicious_details\"}},{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"param\",\"resultValType\":\"static\",\"resultVal\":\"null\"}}],\"timeContext\":{\"durationMs\":86400000}},{\"id\":\"95a0b4aa-a5fd-4d6b-b57b-2e1b5fde58d0\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Domains\",\"type\":1,\"isHiddenWhenLocked\":true,\"criteriaData\":[{\"criteriaContext\":{\"leftOperand\":\"IronDomeCategory\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\" SEVERITY_MALICIOUS\",\"resultValType\":\"param\",\"resultVal\":\"severity_malicious_details_domains\"}},{\"criteriaContext\":{\"leftOperand\":\"IronDomeCategory\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\" JOINED_HIGH_RISK\",\"resultValType\":\"param\",\"resultVal\":\"joined_high_risk_details_domains\"}},{\"criteriaContext\":{\"leftOperand\":\"IronDomeCategory\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\" SEVERITY_SUSPICIOUS\",\"resultValType\":\"param\",\"resultVal\":\"severity_suspicious_details_domains\"}},{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"param\",\"resultValType\":\"static\",\"resultVal\":\"null\"}}],\"timeContext\":{\"durationMs\":86400000}},{\"id\":\"f7418c77-ad35-41bc-a18a-e38b6dcdf3bb\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"IPStatement\",\"type\":1,\"isHiddenWhenLocked\":true,\"criteriaData\":[{\"criteriaContext\":{\"leftOperand\":\"IronDomeCategory\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\" JOINED_HIGH_RISK\",\"resultValType\":\"static\",\"resultVal\":\"<p style=\\\"font-weight: 600;font-size:14px;font-family: az_ea_font,''Segoe UI'',az_font,system-ui,-apple-system,BlinkMacSystemFont,Roboto,Oxygen,Ubuntu,Cantarell,''Open Sans'',''Helvetica Neue'',sans-serif;\\\">IP:  {IP}</p>\"}},{\"criteriaContext\":{\"leftOperand\":\"IronDomeCategory\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\" SEVERITY_SUSPICIOUS\",\"resultValType\":\"static\",\"resultVal\":\"<p style=\\\"font-weight: 600;font-size:14px;font-family: az_ea_font,''Segoe UI'',az_font,system-ui,-apple-system,BlinkMacSystemFont,Roboto,Oxygen,Ubuntu,Cantarell,''Open Sans'',''Helvetica Neue'',sans-serif;\\\">IP:  {IP}</p>\"}},{\"criteriaContext\":{\"leftOperand\":\"IronDomeCategory\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\" SEVERITY_MALICIOUS\",\"resultValType\":\"static\",\"resultVal\":\"<p style=\\\"font-weight: 600;font-size:14px;font-family: az_ea_font,''Segoe UI'',az_font,system-ui,-apple-system,BlinkMacSystemFont,Roboto,Oxygen,Ubuntu,Cantarell,''Open Sans'',''Helvetica Neue'',sans-serif;\\\">IP:  {IP}</p>\"}},{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"param\",\"resultValType\":\"static\",\"resultVal\":\"<p style=\\\"font-weight: 600;font-size:14px;font-family: az_ea_font,''Segoe UI'',az_font,system-ui,-apple-system,BlinkMacSystemFont,Roboto,Oxygen,Ubuntu,Cantarell,''Open Sans'',''Helvetica Neue'',sans-serif;\\\"></p>\"}}],\"timeContext\":{\"durationMs\":86400000}},{\"id\":\"12af8d3a-8c49-476e-8e1e-79c9a266b98e\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"DomainStatement\",\"type\":1,\"isHiddenWhenLocked\":true,\"criteriaData\":[{\"criteriaContext\":{\"leftOperand\":\"IronDomeCategory\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\" SEVERITY_MALICIOUS\",\"resultValType\":\"static\",\"resultVal\":\"<p style=\\\"font-weight: 600;font-size:14px;font-family: az_ea_font,''Segoe UI'',az_font,system-ui,-apple-system,BlinkMacSystemFont,Roboto,Oxygen,Ubuntu,Cantarell,''Open Sans'',''Helvetica Neue'',sans-serif;\\\">Domains:  {Domains}</p>\"}},{\"criteriaContext\":{\"leftOperand\":\"IronDomeCategory\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\" JOINED_HIGH_RISK\",\"resultValType\":\"static\",\"resultVal\":\"<p style=\\\"font-weight: 600;font-size:14px;font-family: az_ea_font,''Segoe UI'',az_font,system-ui,-apple-system,BlinkMacSystemFont,Roboto,Oxygen,Ubuntu,Cantarell,''Open Sans'',''Helvetica Neue'',sans-serif;\\\">Domains:  {Domains}</p>\"}},{\"criteriaContext\":{\"leftOperand\":\"IronDomeCategory\",\"operator\":\"==\",\"rightValType\":\"static\",\"rightVal\":\" SEVERITY_SUSPICIOUS\",\"resultValType\":\"static\",\"resultVal\":\"<p style=\\\"font-weight: 600;font-size:14px;font-family: az_ea_font,''Segoe UI'',az_font,system-ui,-apple-system,BlinkMacSystemFont,Roboto,Oxygen,Ubuntu,Cantarell,''Open Sans'',''Helvetica Neue'',sans-serif;\\\">Domains:  {Domains}</p>\"}},{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"param\",\"resultValType\":\"static\",\"resultVal\":\"<p style=\\\"font-weight: 600;font-size:14px;font-family: az_ea_font,''Segoe UI'',az_font,system-ui,-apple-system,BlinkMacSystemFont,Roboto,Oxygen,Ubuntu,Cantarell,''Open Sans'',''Helvetica Neue'',sans-serif;\\\"></p>\"}}],\"timeContext\":{\"durationMs\":86400000}}],\"style\":\"pills\",\"queryType\":10},\"name\":\"parameters - 4\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"<html>\\r\\n<body>\\r\\n<div style=\\\"padding-left:10px\\\">\\r\\n<p style=\\\"font-weight: 600;font-size:14px;font-family: az_ea_font,''Segoe UI'',az_font,system-ui,-apple-system,BlinkMacSystemFont,Roboto,Oxygen,Ubuntu,Cantarell,''Open Sans'',''Helvetica Neue'',sans-serif;\\\">Created Date: {CreatedDate}</p>\\r\\n<p style=\\\"font-weight: 600;font-size:14px;font-family: az_ea_font,''Segoe UI'',az_font,system-ui,-apple-system,BlinkMacSystemFont,Roboto,Oxygen,Ubuntu,Cantarell,''Open Sans'',''Helvetica Neue'',sans-serif;\\\">Category: {IronDomeCategory}</p>\\r\\n<p style=\\\"font-weight: 600;font-size:14px;font-family: az_ea_font,''Segoe UI'',az_font,system-ui,-apple-system,BlinkMacSystemFont,Roboto,Oxygen,Ubuntu,Cantarell,''Open Sans'',''Helvetica Neue'',sans-serif;\\\">Message: {Message}</p>\\r\\n{IPStatement}\\r\\n{DomainStatement}\\r\\n\\r\\n</div>\\r\\n</body>\\r\\n</html>\"},\"customWidth\":\"50\",\"name\":\"text - 0\",\"styleSettings\":{\"padding\":\"20px\"}}]},\"conditionalVisibility\":{\"parameterName\":\"IronDomeCategory\",\"comparison\":\"isNotEqualTo\"},\"name\":\"IronDome details\",\"styleSettings\":{\"showBorder\":true}},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"<html>\\r\\n<body>\\r\\n<div style=\\\"padding-left:10px\\\">\\r\\n<p style=\\\"font-weight: 600;font-size:14px;font-family: az_ea_font,''Segoe UI'',az_font,system-ui,-apple-system,BlinkMacSystemFont,Roboto,Oxygen,Ubuntu,Cantarell,''Open Sans'',''Helvetica Neue'',sans-serif;\\\">No IronDome Notifications found</p>\\r\\n</div>\\r\\n</body>\\r\\n</html>\"},\"customWidth\":\"50\",\"name\":\"text - 0\",\"styleSettings\":{\"padding\":\"20px\"}}]},\"conditionalVisibility\":{\"parameterName\":\"IronDomeCategory\",\"comparison\":\"isEqualTo\"},\"name\":\"Empty IronDome details\",\"styleSettings\":{\"showBorder\":true}}]},\"conditionalVisibility\":{\"parameterName\":\"tabchange\",\"comparison\":\"isEqualTo\",\"value\":\"irondome\"},\"name\":\"IronDome Notification group\"}],\"fromTemplateId\":\"sentinel-IronDefenseAlertDashboard\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\n",
                "version": "1.0",
                "sourceId": "[variables('workspaceResourceId')]",
                "category": "sentinel"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Workbook-', last(split(variables('workbookId1'),'/'))))]",
              "properties": {
                "description": "@{workbookKey=IronDefenseAlertDashboard; logoFileName=IronNet.svg; description=Sets the time name for analysis; dataTypesDependencies=System.Object[]; dataConnectorsDependencies=System.Object[]; previewImagesFileNames=System.Object[]; version=3.0.0; title=IronDefenseAlertDashboard; templateRelativePath=IronDefenseAlertDashboard.json; subtitle=; provider=Microsoft}.description",
                "parentId": "[variables('workbookId1')]",
                "contentId": "[variables('_workbookContentId1')]",
                "kind": "Workbook",
                "version": "[variables('workbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "IronNet IronDefense",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Ecosystems & Integrations",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                },
                "dependencies": {
                  "operator": "AND",
                  "criteria": [
                    {
                      "contentId": "CommonSecurityLog",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "IronNetIronDefense",
                      "kind": "DataConnector"
                    }
                  ]
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_workbookContentId1')]",
        "contentKind": "Workbook",
        "displayName": "[parameters('workbook1-name')]",
        "contentProductId": "[variables('_workbookcontentProductId1')]",
        "id": "[variables('_workbookcontentProductId1')]",
        "version": "[variables('workbookVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('workbookTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "IronDefenseAlertDetailsWorkbook Workbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('workbookVersion2')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Insights/workbooks",
              "name": "[variables('workbookContentId2')]",
              "location": "[parameters('workspace-location')]",
              "kind": "shared",
              "apiVersion": "2021-08-01",
              "metadata": {
                "description": "Sets the time name for analysis"
              },
              "properties": {
                "displayName": "[parameters('workbook2-name')]",
                "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"IronDefense\",\"items\":[{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"3c15c99e-f3bf-4012-93bc-fadbb6017a25\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"IronDefenseAlertDetailsId\",\"type\":1,\"value\":\"workbook1-id\",\"isRequired\":true,\"isHiddenWhenLocked\":true},{\"id\":\"a9f97bc9-5ee0-412a-ab04-d6f170a8aa7d\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"label\":\"Filter by Time\",\"type\":4,\"isRequired\":true,\"value\":{\"durationMs\":7776000000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}],\"allowCustom\":true},\"timeContext\":{\"durationMs\":86400000}},{\"id\":\"b9ef6a57-cc0b-4b6c-8ec0-d606b3939009\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"filter\",\"label\":\"Filter Alerts\",\"type\":2,\"multiSelect\":true,\"quote\":\"''\",\"delimiter\":\",\",\"value\":[\"THREAT_INTELLIGENCE_RULE_MATCH\"],\"typeSettings\":{\"additionalResourceOptions\":[],\"showDefault\":false},\"jsonData\":\"[{\\\"value\\\":\\\"SEVERITY_WHITELISTED\\\",\\\"text\\\":\\\"Exclude Safelist Alerts\\\",\\\"selected\\\":true},\\r\\n{\\\"value\\\":\\\"THREAT_INTELLIGENCE_RULE_MATCH\\\",\\\"text\\\":\\\"Exclude Blocklist Alerts\\\",\\\"selected\\\":true},\\r\\n{\\\"value\\\":\\\"STATUS_CLOSED\\\",\\\"text\\\":\\\"Exclude Closed Alerts\\\",\\\"selected\\\":true}]\",\"timeContext\":{\"durationMs\":86400000}}],\"style\":\"above\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 0\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"58b0a390-3085-498a-8368-3279e3195a4d\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"AlertRecords\",\"type\":1,\"isHiddenWhenLocked\":true,\"timeContext\":{\"durationMs\":86400000}},{\"id\":\"6a794c03-2319-46b3-94ab-52c47f8c8b94\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"condition\",\"type\":1,\"isHiddenWhenLocked\":true,\"criteriaData\":[{\"criteriaContext\":{\"leftOperand\":\"filter\",\"operator\":\"is Empty\",\"rightValType\":\"param\",\"resultValType\":\"static\",\"resultVal\":\"DeviceCustomString4 != \\\"\\\" \"}},{\"criteriaContext\":{\"leftOperand\":\"filter\",\"operator\":\"isNotNull\",\"rightValType\":\"param\",\"resultValType\":\"static\",\"resultVal\":\"DeviceCustomString4 != \\\"\\\" and (DeviceCustomString1 !in ({filter:value}) and DeviceCustomString2 !in ({filter:value}) and Subcategory !in ({filter:value}))\"}},{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"param\",\"resultValType\":\"static\",\"resultVal\":\"null\"}}],\"timeContext\":{\"durationMs\":86400000}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 14\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"CommonSecurityLog\\r\\n| where DeviceProduct == \\\"IronDefense\\\" and isnotempty(DeviceCustomString2) and Activity != \\\"\\\"\\r\\n| summarize arg_max(TimeGenerated,*) by DeviceCustomString4\\r\\n| project AdditionalExtensions, TimeGenerated,DeviceCustomString4,DeviceCustomString2,DeviceCustomString1\\r\\n| extend Subcategory = extract(@''subcat=([^;]+)(\\\\;|$)'',1, AdditionalExtensions)\\r\\n| where {condition}\\r\\n| summarize alerts = count() by DeviceCustomString4, TimeGenerated\\r\\n\",\"size\":4,\"aggregation\":4,\"showAnalytics\":true,\"title\":\"Alert Count over time\",\"noDataMessage\":\"No Data found\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"timeBrushParameterName\":\"timebrush\",\"timeBrushExportOnlyWhenBrushed\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"scatterchart\",\"chartSettings\":{\"xAxis\":\"TimeGenerated\",\"yAxis\":[\"alerts\"],\"group\":\"DeviceCustomString4\",\"createOtherGroup\":\"\",\"showMetrics\":false,\"seriesLabelSettings\":[{\"seriesName\":\"EventCount\",\"label\":\"Events going to occur\",\"comment\":\"\"}],\"xSettings\":{\"numberFormatSettings\":{\"unit\":0,\"options\":{\"style\":\"decimal\",\"useGrouping\":true}}},\"ySettings\":{\"numberFormatSettings\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"useGrouping\":true}},\"min\":0,\"max\":15}}},\"showPin\":false,\"name\":\"Timeline\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"CommonSecurityLog\\r\\n| where DeviceProduct == \\\"IronDefense\\\" and isnotempty(DeviceCustomString2) and Activity != \\\"\\\"\\r\\n| summarize arg_max(TimeGenerated,*) by DeviceCustomString4\\r\\n| project AdditionalExtensions, TimeGenerated,DeviceCustomString4,DeviceCustomString2,DeviceCustomString1\\r\\n| extend Subcategory = extract(@''subcat=([^;]+)(\\\\;|$)'',1, AdditionalExtensions)\\r\\n| where {condition}\\r\\n| summarize alerts = count() by DeviceCustomString4, TimeGenerated\",\"size\":4,\"showAnalytics\":true,\"noDataMessage\":\"No Data found\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"timebrush\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"unstackedbar\",\"chartSettings\":{\"xAxis\":\"TimeGenerated\",\"yAxis\":[\"alerts\"],\"group\":\"DeviceCustomString4\",\"createOtherGroup\":\"\",\"showMetrics\":false,\"showLegend\":true,\"xSettings\":{\"numberFormatSettings\":{\"unit\":0,\"options\":{\"style\":\"decimal\",\"useGrouping\":true}}},\"ySettings\":{\"numberFormatSettings\":{\"unit\":0,\"options\":{\"style\":\"decimal\",\"useGrouping\":true}}}}},\"conditionalVisibility\":{\"parameterName\":\"timebrush\",\"comparison\":\"isNotEqualTo\"},\"name\":\"zoom Alert time chart\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"f9df59b5-60d7-453b-a190-454a9d5af3ae\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"LowSeverityCount\",\"type\":1,\"query\":\"CommonSecurityLog\\r\\n| where DeviceProduct == \\\"IronDefense\\\" and isnotempty(DeviceCustomString2)\\r\\n| summarize arg_max(TimeGenerated,*) by DeviceCustomString4\\r\\n| extend Subcategory = extract(@''subcat=([^;]+)(\\\\;|$)'',1, AdditionalExtensions)\\r\\n| where {condition} and LogSeverity == \\\"Low\\\"\\r\\n| summarize lowseverity = count() by LogSeverity\\r\\n| project lowseverity\\r\\n\",\"isHiddenWhenLocked\":true,\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"d2139c75-e718-4a86-a900-4a6ad9642afc\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"HighSeverityCount\",\"type\":1,\"query\":\"CommonSecurityLog\\r\\n| where DeviceProduct == \\\"IronDefense\\\" and isnotempty(DeviceCustomString2)\\r\\n| summarize arg_max(TimeGenerated,*) by DeviceCustomString4\\r\\n| extend Subcategory = extract(@''subcat=([^;]+)(\\\\;|$)'',1, AdditionalExtensions)\\r\\n| where {condition} and LogSeverity == \\\"High\\\"\\r\\n| summarize highseverity = count() by LogSeverity\\r\\n| project highseverity\",\"isHiddenWhenLocked\":true,\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"1bfbb7b7-2397-4c10-9bd1-0a570ee21449\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"MediumSeverityCount\",\"type\":1,\"query\":\"CommonSecurityLog\\r\\n| where DeviceProduct == \\\"IronDefense\\\" and isnotempty(DeviceCustomString2)\\r\\n| summarize arg_max(TimeGenerated,*) by DeviceCustomString4\\r\\n| extend Subcategory = extract(@''subcat=([^;]+)(\\\\;|$)'',1, AdditionalExtensions)\\r\\n| where {condition} and LogSeverity == \\\"Medium\\\"\\r\\n| summarize mediumseverity = count() by LogSeverity\\r\\n| project mediumseverity\",\"isHiddenWhenLocked\":true,\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"5af782e4-3662-45a7-91f2-92f40dc7a620\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"CriticalSeverityCount\",\"type\":1,\"query\":\"CommonSecurityLog\\r\\n| where DeviceProduct == \\\"IronDefense\\\" and isnotempty(DeviceCustomString2)\\r\\n| summarize arg_max(TimeGenerated,*) by DeviceCustomString4\\r\\n| extend Subcategory = extract(@''subcat=([^;]+)(\\\\;|$)'',1, AdditionalExtensions)\\r\\n| where {condition} and LogSeverity == \\\"Very-High\\\"\\r\\n| summarize criticalseverity = count() by LogSeverity\\r\\n| project criticalseverity\",\"isHiddenWhenLocked\":true,\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"1bee5c74-b3fa-49bb-bf75-0f802815ad8e\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TotalSeverityCount\",\"type\":1,\"query\":\"CommonSecurityLog\\r\\n| where DeviceProduct == \\\"IronDefense\\\" and isnotempty(DeviceCustomString2)\\r\\n| summarize arg_max(TimeGenerated,*) by DeviceCustomString4\\r\\n| extend Subcategory = extract(@''subcat=([^;]+)(\\\\;|$)'',1, AdditionalExtensions)\\r\\n| where {condition} and LogSeverity in (\\\"Low\\\",\\\"Medium\\\",\\\"High\\\",\\\"Very-High\\\")\\r\\n| summarize total = count() by LogSeverity\\r\\n| summarize totalseverity = sum(total)\",\"isHiddenWhenLocked\":true,\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"13b81a24-6eec-4453-b30f-ec7e6c8a6ed8\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"ConditionalLowSeverityCount\",\"type\":1,\"isHiddenWhenLocked\":true,\"criteriaData\":[{\"criteriaContext\":{\"leftOperand\":\"LowSeverityCount\",\"operator\":\"is Empty\",\"rightValType\":\"param\",\"resultValType\":\"static\",\"resultVal\":\"0\"}},{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"param\",\"resultValType\":\"param\",\"resultVal\":\"LowSeverityCount\"}}],\"timeContext\":{\"durationMs\":1209600000},\"timeContextFromParameter\":\"TimeRange\"},{\"version\":\"KqlParameterItem/1.0\",\"name\":\"ConditionalMediumSeverityCount\",\"type\":1,\"isHiddenWhenLocked\":true,\"criteriaData\":[{\"criteriaContext\":{\"leftOperand\":\"MediumSeverityCount\",\"operator\":\"is Empty\",\"rightValType\":\"param\",\"resultValType\":\"static\",\"resultVal\":\"0\"}},{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"param\",\"resultValType\":\"param\",\"resultVal\":\"MediumSeverityCount\"}}],\"timeContext\":{\"durationMs\":1209600000},\"timeContextFromParameter\":\"TimeRange\",\"id\":\"9d2b0fc4-5828-4e38-aa32-3d86927d4f25\"},{\"version\":\"KqlParameterItem/1.0\",\"name\":\"ConditionalHighSeverityCount\",\"type\":1,\"isHiddenWhenLocked\":true,\"criteriaData\":[{\"criteriaContext\":{\"leftOperand\":\"HighSeverityCount\",\"operator\":\"is Empty\",\"rightValType\":\"param\",\"resultValType\":\"static\",\"resultVal\":\"0\"}},{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"param\",\"resultValType\":\"param\",\"resultVal\":\"HighSeverityCount\"}}],\"timeContext\":{\"durationMs\":1209600000},\"timeContextFromParameter\":\"TimeRange\",\"id\":\"064172c9-10aa-4220-bda3-f44306cb6f71\"},{\"version\":\"KqlParameterItem/1.0\",\"name\":\"ConditionalCriticalSeverityCount\",\"type\":1,\"isHiddenWhenLocked\":true,\"criteriaData\":[{\"criteriaContext\":{\"leftOperand\":\"CriticalSeverityCount\",\"operator\":\"is Empty\",\"rightValType\":\"param\",\"resultValType\":\"static\",\"resultVal\":\"0\"}},{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"param\",\"resultValType\":\"param\",\"resultVal\":\"CriticalSeverityCount\"}}],\"timeContext\":{\"durationMs\":1209600000},\"timeContextFromParameter\":\"TimeRange\",\"id\":\"b31435bc-76d4-453a-82a8-492e2b75dc2f\"},{\"id\":\"4346548d-37fa-48cf-9489-c91d323d4db8\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"ConditionalTotalSeverityCount\",\"type\":1,\"isHiddenWhenLocked\":true,\"criteriaData\":[{\"criteriaContext\":{\"leftOperand\":\"TotalSeverityCount\",\"operator\":\"is Empty\",\"rightValType\":\"param\",\"resultValType\":\"static\",\"resultVal\":\"0\"}},{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"param\",\"resultValType\":\"param\",\"resultVal\":\"TotalSeverityCount\"}}],\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 13\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"188c7c67-865a-43e2-945f-c987a21d3204\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"IronNetAlert\",\"type\":1,\"query\":\" Resources\\r\\n | where type == \\\"microsoft.insights/workbooks\\\" and properties.displayName==\\\"IronDefenseAlertDetails\\\"\\r\\n | project name\",\"isHiddenWhenLocked\":true,\"timeContext\":{\"durationMs\":86400000},\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\"}],\"style\":\"pills\",\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\"},\"name\":\"parameters - 18\"},{\"type\":1,\"content\":{\"json\":\"<p style=\\\"font-weight: 600;font-size:14px;font-family: az_ea_font, ''Segoe UI'',az_font,system-ui,-apple-system,BlinkMacSystemFont,Roboto,Oxygen,Ubuntu,Cantarell,''Open Sans'',''Helvetica Neue'',sans-serif;\\\">Alerts</p>\"},\"name\":\"text - 12\"},{\"type\":1,\"content\":{\"json\":\"<html>\\r\\n<body>\\r\\n<div style=\\\"background-color:green;color:white;text-align:center;\\\">\\r\\n<h1 style=\\\"font-bold:true;font-size: 80px;margin-top:0cm\\\">{ConditionalLowSeverityCount}</h1>\\r\\n<p style=\\\"font-bold:true;font-size: 20px;margin-bottom:0px;padding-bottom:10px\\\">Low Severity</p>\\r\\n</div>\\r\\n</body>\\r\\n</html>\"},\"customWidth\":\"20\",\"name\":\"text - 7\",\"styleSettings\":{\"padding\":\"2px\"}},{\"type\":1,\"content\":{\"json\":\"<html>\\r\\n<body>\\r\\n<div style=\\\"background-color:#fdcc0d;color:white;text-align:center;\\\">\\r\\n<h1 style=\\\"font-bold:true;font-size: 80px;margin-top:0cm\\\">{ConditionalMediumSeverityCount}</h1>\\r\\n<p style=\\\"font-bold:true;font-size: 20px;margin-bottom:0px;padding-bottom:10px\\\">Medium Severity</p>\\r\\n</div>\\r\\n</body>\\r\\n</html>\"},\"customWidth\":\"20\",\"name\":\"text - 7 - Copy\",\"styleSettings\":{\"padding\":\"3px\"}},{\"type\":1,\"content\":{\"json\":\"<html>\\r\\n<body>\\r\\n<div style=\\\"background-color:orange;color:white;text-align:center;\\\">\\r\\n<h1 style=\\\"font-bold:true;font-size: 80px;margin-top:0cm\\\">{ConditionalHighSeverityCount}</h1>\\r\\n<p style=\\\"font-bold:true;font-size: 20px;margin-bottom:0px;padding-bottom:10px\\\">High Severity</p>\\r\\n</div>\\r\\n</body>\\r\\n</html>\"},\"customWidth\":\"20\",\"name\":\"text - 7 - Copy - Copy\",\"styleSettings\":{\"padding\":\"3px\"}},{\"type\":1,\"content\":{\"json\":\"<html>\\r\\n<body>\\r\\n<div style=\\\"background-color:red;color:white;text-align:center;\\\">\\r\\n<h1 style=\\\"font-bold:true;font-size: 80px;margin-top:0cm\\\">{ConditionalCriticalSeverityCount}</h1>\\r\\n<p style=\\\"font-bold:true;font-size: 20px;margin-bottom:0px;padding-bottom:10px\\\">Critical Severity</p>\\r\\n</div>\\r\\n</body>\\r\\n</html>\"},\"customWidth\":\"20\",\"name\":\"text - 7 - Copy - Copy - Copy\",\"styleSettings\":{\"padding\":\"3px\"}},{\"type\":1,\"content\":{\"json\":\"<html>\\r\\n<body>\\r\\n<div style=\\\"background-color:blue;color:white;text-align:center;\\\">\\r\\n<h1 style=\\\"font-bold:true;font-size: 80px;margin-top:0cm\\\">{ConditionalTotalSeverityCount}</h1>\\r\\n<p style=\\\"font-bold:true;font-size: 20px;margin-bottom:0px;padding-bottom:10px\\\">Total</p>\\r\\n</div>\\r\\n</body>\\r\\n</html>\"},\"customWidth\":\"20\",\"name\":\"text - 7 - Copy - Copy - Copy - Copy\",\"styleSettings\":{\"padding\":\"3px\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"CommonSecurityLog\\r\\n| where DeviceProduct == \\\"IronDefense\\\" and isnotempty(DeviceCustomString2)\\r\\n| summarize arg_max(TimeGenerated,*) by DeviceCustomString4\\r\\n| project AdditionalExtensions, TimeGenerated,DeviceCustomString4,DeviceCustomString2,DeviceCustomString1\\r\\n| extend Subcategory = extract(@''subcat=([^;]+)(\\\\;|$)'',1, AdditionalExtensions)\\r\\n| where {condition}\\r\\n| extend Category = extract(@''cat=([^;]+)(\\\\;|$)'',1, AdditionalExtensions)\\r\\n| summarize CategoryCount = count() by  Category, TimeGenerated \\r\\n| render piechart \",\"size\":3,\"showAnalytics\":true,\"title\":\"Top Analytic Models\",\"noDataMessage\":\"No Data found\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"status\",\"formatter\":11}]},\"chartSettings\":{\"showMetrics\":false,\"showLegend\":true}},\"customWidth\":\"50\",\"name\":\"analytic model\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"CommonSecurityLog\\r\\n| where DeviceProduct == \\\"IronDefense\\\" and isnotempty(DeviceCustomString2) and Activity != \\\"\\\"\\r\\n| summarize arg_max(TimeGenerated,*) by DeviceCustomString4\\r\\n| project AdditionalExtensions, TimeGenerated,DeviceCustomString4,DeviceCustomString2,DeviceCustomString1\\r\\n| extend Subcategory = extract(@''subcat=([^;]+)(\\\\;|$)'',1, AdditionalExtensions)\\r\\n| where {condition} and Subcategory != \\\"\\\"\\r\\n| summarize subcategoryCount = count() by  Subcategory, TimeGenerated \\r\\n| render piechart \",\"size\":3,\"showAnalytics\":true,\"title\":\"Top Anomalous Alerts\",\"noDataMessage\":\"No Data found\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"chartSettings\":{\"showMetrics\":false,\"showLegend\":true}},\"customWidth\":\"50\",\"name\":\"Anomalous Events\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"CommonSecurityLog\\r\\n| where isnotempty(Activity) and isnotempty(DeviceCustomString1) and isnotempty(DeviceCustomString2)\\r\\n| summarize arg_max(TimeGenerated,*) by DeviceCustomString4\\r\\n| project AdditionalExtensions, TimeGenerated,DeviceCustomString2,DeviceCustomString1,DeviceCustomString4\\r\\n| extend Subcategory = extract(@''subcat=([^;]+)(\\\\;|$)'',1, AdditionalExtensions)\\r\\n| where {condition}\\r\\n| summarize subcategoryCount = count() by  Subcategory, TimeGenerated \\r\\n| render timechart\",\"size\":1,\"showAnnotations\":true,\"showAnalytics\":true,\"title\":\"Alert Count Over Time\",\"noDataMessage\":\"No Data found\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"linechart\",\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"Activity\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"countRecord\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}},\"graphSettings\":{\"type\":2,\"topContent\":{\"columnMatch\":\"Activity\",\"formatter\":1},\"centerContent\":{\"columnMatch\":\"countRecord\",\"formatter\":1,\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}},\"nodeIdField\":\"Activity\",\"sourceIdField\":\"TimeGenerated\",\"targetIdField\":\"countRecord\",\"graphOrientation\":3,\"showOrientationToggles\":false,\"nodeSize\":\"\",\"staticNodeSize\":100,\"colorSettings\":\"\",\"hivesMargin\":5},\"chartSettings\":{\"group\":\"Subcategory\",\"createOtherGroup\":10,\"showMetrics\":false,\"showLegend\":true,\"xSettings\":{\"numberFormatSettings\":{\"unit\":0,\"options\":{\"style\":\"decimal\",\"useGrouping\":true}}},\"ySettings\":{\"min\":0,\"max\":15}},\"mapSettings\":{\"locInfo\":\"LatLong\",\"sizeSettings\":\"Event_Count\",\"sizeAggregation\":\"Sum\",\"legendMetric\":\"Event_Count\",\"legendAggregation\":\"Sum\",\"itemColorSettings\":{\"type\":\"heatmap\",\"colorAggregation\":\"Sum\",\"nodeColorField\":\"Event_Count\",\"heatmapPalette\":\"greenRed\"}}},\"name\":\"query - 5\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"CommonSecurityLog\\r\\n| where DeviceProduct==\\\"IronDefense\\\" and isnotempty(DeviceCustomString2)\\r\\n| extend DeviceCustomNumber1 = coalesce(column_ifexists(\\\"FieldDeviceCustomNumber1\\\", long(null)),DeviceCustomNumber1)\\r\\n| summarize arg_max(TimeGenerated,*) by DeviceCustomString4\\r\\n| project AdditionalExtensions, TimeGenerated,DeviceCustomString4,DeviceCustomString3,DeviceCustomString2,Activity,LogSeverity,DeviceCustomNumber1,DestinationHostName,EventCount,DeviceCustomString5,DeviceExternalID,SourceIP,DeviceCustomString1\\r\\n| extend Category = extract(@''cat=([^;]+)(\\\\;|$)'',1, AdditionalExtensions)\\r\\n| extend Category = coalesce(column_ifexists(\\\"DeviceEventCategory\\\",\\\"\\\"),Category)\\r\\n| extend Subcategory = extract(@''subcat=([^;]+)(\\\\;|$)'',1, AdditionalExtensions)\\r\\n| where {condition}\\r\\n| extend IronVueUrl = replace(@''\\\\\\\\'',@'''',DeviceCustomString3)\\r\\n| extend Status = case(DeviceCustomString2 == \\\"STATUS_AWAITING_REVIEW\\\",\\\"Awaiting Review\\\",DeviceCustomString2 == \\\"STATUS_NONE\\\",\\\"None\\\",DeviceCustomString2 == \\\"STATUS_UNDER_REVIEW\\\",\\\"Under Review\\\",DeviceCustomString2 == \\\"STATUS_CLOSED\\\",\\\"Closed\\\",DeviceCustomString2)\\r\\n| extend Behaviour = Subcategory\\r\\n|project DeviceCustomString4,IronVueUrl,Subcategory,Status,Category,Behaviour,LogSeverity,DeviceCustomNumber1,DestinationHostName,TimeGenerated,Last_Detection=TimeGenerated,EventCount,DeviceCustomString5,DeviceExternalID,SourceIP\\r\\n\",\"size\":1,\"showAnalytics\":true,\"title\":\"Alert Summary\",\"noDataMessage\":\"No Data found\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"DeviceEventClassID\",\"exportParameterName\":\"AlertRecords\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"DeviceCustomString4\",\"formatter\":7,\"formatOptions\":{\"linkTarget\":\"WorkbookTemplate\",\"workbookContext\":{\"componentIdSource\":\"workbook\",\"resourceIdsSource\":\"workbook\",\"templateIdSource\":\"parameter\",\"templateId\":\"IronNetAlert\",\"typeSource\":\"workbook\",\"gallerySource\":\"workbook\",\"locationSource\":\"default\",\"passSpecificParams\":true,\"templateParameters\":[{\"name\":\"AlertId\",\"source\":\"column\",\"value\":\"DeviceCustomString4\"},{\"name\":\"RiskScore\",\"source\":\"column\",\"value\":\"DeviceCustomNumber1\"},{\"name\":\"Domain\",\"source\":\"column\",\"value\":\"DestinationHostName\"},{\"name\":\"TimeRange\",\"source\":\"parameter\",\"value\":\"TimeRange\"},{\"name\":\"Category\",\"source\":\"column\",\"value\":\"Category\"},{\"name\":\"Environment\",\"source\":\"column\",\"value\":\"DeviceExternalID\"},{\"name\":\"Time\",\"source\":\"column\",\"value\":\"TimeGenerated\"},{\"name\":\"SourceIP\",\"source\":\"column\",\"value\":\"SourceIP\"},{\"name\":\"Subcategory\",\"source\":\"column\",\"value\":\"Subcategory\"},{\"name\":\"IronVueUrl\",\"source\":\"column\",\"value\":\"IronVueUrl\"}]}}},{\"columnMatch\":\"IronVueUrl\",\"formatter\":5},{\"columnMatch\":\"Subcategory\",\"formatter\":5},{\"columnMatch\":\"Status\",\"formatter\":1,\"formatOptions\":{\"workbookContext\":{\"componentIdSource\":\"workbook\",\"resourceIdsSource\":\"workbook\",\"templateIdSource\":\"parameter\",\"templateId\":\"IronNetAlert\",\"typeSource\":\"workbook\",\"gallerySource\":\"workbook\",\"locationSource\":\"default\",\"passSpecificParams\":true,\"templateParameters\":[{\"name\":\"AlertId\",\"source\":\"column\",\"value\":\"DeviceCustomString4\"},{\"name\":\"RiskScore\",\"source\":\"column\",\"value\":\"DeviceCustomNumber1\"},{\"name\":\"Domain\",\"source\":\"column\",\"value\":\"DestinationHostName\"},{\"name\":\"TimeRange\",\"source\":\"parameter\",\"value\":\"TimeRange\"},{\"name\":\"Category\",\"source\":\"column\",\"value\":\"Category\"},{\"name\":\"Subcategory\",\"source\":\"column\",\"value\":\"Subcategory\"},{\"name\":\"Environment\",\"source\":\"column\",\"value\":\"DeviceExternalID\"},{\"name\":\"Time\",\"source\":\"column\",\"value\":\"TimeGenerated\"},{\"name\":\"SourceIP\",\"source\":\"column\",\"value\":\"SourceIP\"}]}}},{\"columnMatch\":\"DeviceCustomString5\",\"formatter\":5},{\"columnMatch\":\"DeviceExternalID\",\"formatter\":5},{\"columnMatch\":\"SourceIP\",\"formatter\":5},{\"columnMatch\":\"DeviceCustomString3\",\"formatter\":5},{\"columnMatch\":\"DeviceCustomString2\",\"formatter\":7,\"formatOptions\":{\"linkTarget\":\"WorkbookTemplate\",\"linkLabel\":\"\",\"linkIsContextBlade\":false,\"workbookContext\":{\"componentIdSource\":\"workbook\",\"resourceIdsSource\":\"workbook\",\"templateIdSource\":\"parameter\",\"templateId\":\"IronNetAlert\",\"typeSource\":\"workbook\",\"gallerySource\":\"workbook\",\"locationSource\":\"default\",\"passSpecificParams\":true,\"templateParameters\":[{\"name\":\"AlertId\",\"source\":\"column\",\"value\":\"DeviceCustomString4\"},{\"name\":\"RiskScore\",\"source\":\"column\",\"value\":\"DeviceCustomNumber1\"},{\"name\":\"Domain\",\"source\":\"column\",\"value\":\"DeviceCustomString2\"},{\"name\":\"TimeRange\",\"source\":\"parameter\",\"value\":\"TimeRange\"},{\"name\":\"Category\",\"source\":\"column\",\"value\":\"Category\"},{\"name\":\"Subcategory\",\"source\":\"column\",\"value\":\"Subcategory\"},{\"name\":\"Environment\",\"source\":\"column\",\"value\":\"DeviceExternalID\"},{\"name\":\"Time\",\"source\":\"column\",\"value\":\"TimeGenerated\"},{\"name\":\"SourceIP\",\"source\":\"column\",\"value\":\"SourceIP\"}]},\"bladeOpenContext\":{\"bladeName\":\"simple\",\"extensionName\":\"PopUpview\",\"bladeParameters\":[{\"name\":\"alertid\",\"source\":\"column\",\"value\":\"DeviceEventClassID\"},{\"name\":\"cscd\",\"source\":\"column\",\"value\":\"Activity\"}]}}},{\"columnMatch\":\"DeviceEventClassID\",\"formatter\":5}],\"sortBy\":[{\"itemKey\":\"TimeGenerated\",\"sortOrder\":2}],\"labelSettings\":[{\"columnId\":\"DeviceCustomString4\",\"label\":\"AlertID\"},{\"columnId\":\"Subcategory\"},{\"columnId\":\"Status\"},{\"columnId\":\"Category\"},{\"columnId\":\"Behaviour\"},{\"columnId\":\"LogSeverity\",\"label\":\"Severity\"},{\"columnId\":\"DeviceCustomNumber1\",\"label\":\"Risk Score\"},{\"columnId\":\"DestinationHostName\",\"label\":\"Domains\"},{\"columnId\":\"TimeGenerated\",\"label\":\"First Detection\"},{\"columnId\":\"Last_Detection\",\"label\":\"Last Detection\"},{\"columnId\":\"EventCount\",\"label\":\"Events\"},{\"columnId\":\"DeviceCustomString5\",\"label\":\"EventID\"},{\"columnId\":\"DeviceExternalID\",\"label\":\"Environment\"},{\"columnId\":\"SourceIP\"}]},\"sortBy\":[{\"itemKey\":\"TimeGenerated\",\"sortOrder\":2}]},\"name\":\"query - 13\"}]},\"name\":\"IronDefenseGroup\"}],\"styleSettings\":{\"paddingStyle\":\"wide\",\"spacingStyle\":\"wide\"},\"fromTemplateId\":\"sentinel-IronDefenseAlertDetails\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\n",
                "version": "1.0",
                "sourceId": "[variables('workspaceResourceId')]",
                "category": "sentinel"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Workbook-', last(split(variables('workbookId2'),'/'))))]",
              "properties": {
                "description": "@{workbookKey=IronDefenseAlertDetails; logoFileName=IronNet.svg; description=Sets the time name for analysis; dataTypesDependencies=System.Object[]; dataConnectorsDependencies=System.Object[]; previewImagesFileNames=System.Object[]; version=3.0.0; title=IronDefenseAlertDetails; templateRelativePath=IronDefenseAlertDetails.json; subtitle=; provider=Microsoft}.description",
                "parentId": "[variables('workbookId2')]",
                "contentId": "[variables('_workbookContentId2')]",
                "kind": "Workbook",
                "version": "[variables('workbookVersion2')]",
                "source": {
                  "kind": "Solution",
                  "name": "IronNet IronDefense",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Ecosystems & Integrations",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                },
                "dependencies": {
                  "operator": "AND",
                  "criteria": [
                    {
                      "contentId": "CommonSecurityLog",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "IronNetIronDefense",
                      "kind": "DataConnector"
                    }
                  ]
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_workbookContentId2')]",
        "contentKind": "Workbook",
        "displayName": "[parameters('workbook2-name')]",
        "contentProductId": "[variables('_workbookcontentProductId2')]",
        "id": "[variables('_workbookcontentProductId2')]",
        "version": "[variables('workbookVersion2')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentPackages",
      "apiVersion": "2023-04-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "3.0.0",
        "kind": "Solution",
        "contentSchemaVersion": "3.0.0",
        "displayName": "IronNet IronDefense",
        "publisherDisplayName": "Microsoft Sentinel, Microsoft Corporation",
        "descriptionHtml": "<p><strong>Note:</strong> <em>There may be <a href=\"https://aka.ms/sentinelsolutionsknownissues\">known issues</a> pertaining to this Solution, please refer to them before installing.</em></p>\n<p>The <a href=\"https://www.ironnet.com/what-is-collective-defense\">IronNet Collective Defense</a> solution enables ingestion of IronDefense alerts, events, and IronDome notifications into Microsoft Sentinel, enabling Microsoft Sentinel to utilize IronDefense's behavioral analytics and the IronDome community to quickly identify threats in your enterprise network.</p>\n<p><strong>Underlying Microsoft Technologies used:</strong></p>\n<p>This solution takes a dependency on the following technologies, and some of these dependencies either may be in <a href=\"https://azure.microsoft.com/support/legal/preview-supplemental-terms/\">Preview</a> state or might result in additional ingestion or operational costs:</p>\n<ol type=\"a\">\n<li><a href=\"https://docs.microsoft.com/azure/sentinel/connect-common-event-format\">Agent-based log collection (CEF over Syslog)</a></li>\n</ol>\n<p><strong>Data Connectors:</strong> 1, <strong>Workbooks:</strong> 2, <strong>Analytic Rules:</strong> 1, <strong>Playbooks:</strong> 2</p>\n<p><a href=\"https://aka.ms/azuresentinel\">Learn more about Microsoft Sentinel</a> | <a href=\"https://aka.ms/azuresentinelsolutionsdoc\">Learn more about Solutions</a></p>\n",
        "contentKind": "Solution",
        "contentProductId": "[variables('_solutioncontentProductId')]",
        "id": "[variables('_solutioncontentProductId')]",
        "icon": "<img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/IronNet%20IronDefense/Workbooks/Images/Logos/IronNet.svg\"width=\"75px\"height=\"75px\">",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "IronNet IronDefense",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Ecosystems & Integrations",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentId1')]",
              "version": "[variables('dataConnectorVersion1')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId1')]",
              "version": "[variables('analyticRuleVersion1')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_IronNet_UpdateIronDefenseAlerts')]",
              "version": "[variables('playbookVersion1')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_IronNet_UpdateSentinelIncidents')]",
              "version": "[variables('playbookVersion2')]"
            },
            {
              "kind": "Workbook",
              "contentId": "[variables('_workbookContentId1')]",
              "version": "[variables('workbookVersion1')]"
            },
            {
              "kind": "Workbook",
              "contentId": "[variables('_workbookContentId2')]",
              "version": "[variables('workbookVersion2')]"
            }
          ]
        },
        "firstPublishDate": "2021-10-18",
        "providers": [
          "IronNet"
        ],
        "categories": {
          "domains": [
            "Security - Network"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
