{
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion":  "1.0.0.0",
    "metadata":  {
                     "author":  "Nicholas DiCola, Sreedhar Ande",
                     "comments":  "Solution template for GitHub"
                 },
    "parameters":  {
                       "location":  {
                                        "type":  "string",
                                        "minLength":  1,
                                        "defaultValue":  "[resourceGroup().location]",
                                        "metadata":  {
                                                         "description":  "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
                                                     }
                                    },
                       "workspace-location":  {
                                                  "type":  "string",
                                                  "minLength":  1,
                                                  "defaultValue":  "[parameters('location')]",
                                                  "metadata":  {
                                                                   "description":  "Region to deploy solution resources"
                                                               }
                                              },
                       "workspace":  {
                                         "defaultValue":  "Enter Log Analytics Workspace",
                                         "type":  "string",
                                         "minLength":  1,
                                         "metadata":  {
                                                          "description":  "Workspace name for Log Analytics where Sentinel is setup"
                                                      }
                                     },
                       "formattedTimeNow":  {
                                                "type":  "string",
                                                "defaultValue":  "[utcNow('g')]",
                                                "metadata":  {
                                                                 "description":  "Appended to workbook displayNames to make them unique"
                                                             }
                                            },
                       "workbook1-id":  {
                                            "type":  "string",
                                            "defaultValue":  "[newGuid()]",
                                            "minLength":  1,
                                            "metadata":  {
                                                             "description":  "Unique id for the workbook"
                                                         }
                                        },
                       "workbook1-name":  {
                                              "type":  "string",
                                              "defaultValue":  "GitHub",
                                              "minLength":  1,
                                              "metadata":  {
                                                               "description":  "Name for the workbook"
                                                           }
                                          },
                       "analytic1-id":  {
                                            "type":  "string",
                                            "defaultValue":  "[newGuid()]",
                                            "minLength":  1,
                                            "metadata":  {
                                                             "description":  "Unique id for the scheduled alert rule"
                                                         }
                                        },
                       "analytic2-id":  {
                                            "type":  "string",
                                            "defaultValue":  "[newGuid()]",
                                            "minLength":  1,
                                            "metadata":  {
                                                             "description":  "Unique id for the scheduled alert rule"
                                                         }
                                        },
                       "analytic3-id":  {
                                            "type":  "string",
                                            "defaultValue":  "[newGuid()]",
                                            "minLength":  1,
                                            "metadata":  {
                                                             "description":  "Unique id for the scheduled alert rule"
                                                         }
                                        },
                       "analytic4-id":  {
                                            "type":  "string",
                                            "defaultValue":  "[newGuid()]",
                                            "minLength":  1,
                                            "metadata":  {
                                                             "description":  "Unique id for the scheduled alert rule"
                                                         }
                                        },
                       "connector1-name":  {
                                               "type":  "string",
                                               "defaultValue":  "bf2c20c5-8dbb-46e0-9b15-d6b4cb7ff116"
                                           }
                   },
    "variables":  {
                      "workbook-source":  "[concat(resourceGroup().id, '/providers/Microsoft.OperationalInsights/workspaces/',parameters('workspace'))]",
                      "_workbook-source":  "[variables('workbook-source')]",
                      "workspace-dependency":  "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspace'))]",
                      "connector1-source":  "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.OperationalInsights/workspaces/',parameters('workspace'),'/providers/Microsoft.SecurityInsights/dataConnectors/',parameters('connector1-name'))]",
                      "_connector1-source":  "[variables('connector1-source')]"
                  },
    "resources":  [
                      {
                          "type":  "Microsoft.Insights/workbooks",
                          "name":  "[parameters('workbook1-id')]",
                          "location":  "[parameters('workspace-location')]",
                          "kind":  "shared",
                          "apiVersion":  "2020-02-12",
                          "properties":  {
                                             "displayName":  "[concat(parameters('workbook1-name'), ' - ', parameters('formattedTimeNow'))]",
                                             "serializedData":  "\"{    \\\"version\\\": \\\"Notebook/1.0\\\",    \\\"items\\\": [      {        \\\"type\\\": 1,        \\\"content\\\": {          \\\"json\\\": \\\"**NOTE**: This workbook depends on a parser based on a Kusto Function to work as expected [**GitHubParser**](https://github.com/Azure/Azure-Sentinel/tree/master/Parsers/GitHub) which is deployed with the Azure Sentinel Solution.\\\"        },        \\\"name\\\": \\\"text - 2\\\"      },      {        \\\"type\\\": 9,        \\\"content\\\": {          \\\"version\\\": \\\"KqlParameterItem/1.0\\\",          \\\"parameters\\\": [            {              \\\"id\\\": \\\"a9923eb9-9a02-4a48-bb72-e9be338eeb3b\\\",              \\\"version\\\": \\\"KqlParameterItem/1.0\\\",              \\\"name\\\": \\\"TimeRange\\\",              \\\"type\\\": 4,              \\\"value\\\": {                \\\"durationMs\\\": 1209600000              },              \\\"typeSettings\\\": {                \\\"selectableValues\\\": [                  {                    \\\"durationMs\\\": 300000                  },                  {                    \\\"durationMs\\\": 900000                  },                  {                    \\\"durationMs\\\": 1800000                  },                  {                    \\\"durationMs\\\": 3600000                  },                  {                    \\\"durationMs\\\": 14400000                  },                  {                    \\\"durationMs\\\": 43200000                  },                  {                    \\\"durationMs\\\": 86400000                  },                  {                    \\\"durationMs\\\": 172800000                  },                  {                    \\\"durationMs\\\": 259200000                  },                  {                    \\\"durationMs\\\": 604800000                  },                  {                    \\\"durationMs\\\": 1209600000                  },                  {                    \\\"durationMs\\\": 2419200000                  },                  {                    \\\"durationMs\\\": 2592000000                  },                  {                    \\\"durationMs\\\": 5184000000                  },                  {                    \\\"durationMs\\\": 7776000000                  }                ]              },              \\\"resourceType\\\": \\\"microsoft.insights/components\\\"            }          ],          \\\"style\\\": \\\"pills\\\",          \\\"queryType\\\": 0,          \\\"resourceType\\\": \\\"microsoft.operationalinsights/workspaces\\\"        },        \\\"name\\\": \\\"parameters - 2\\\"      },      {        \\\"type\\\": 3,        \\\"content\\\": {          \\\"version\\\": \\\"KqlItem/1.0\\\",          \\\"query\\\": \\\"GitHub_CL\\\\n| extend TimeGenerated = node_createdAt_t\\\\n| where node_action_s == \\\\\\\"org.add_member\\\\\\\" or node_action_s == \\\\\\\"org.remove_member\\\\\\\"\\\\n| extend MemberName = node_userLogin_s\\\\n| extend Action = iif(node_action_s==\\\\\\\"org.add_member\\\\\\\", \\\\\\\"Added\\\\\\\", \\\\\\\"Removed\\\\\\\")\\\\n| extend Organization = node_organizationName_s\\\\n| extend Permission = node_permission_s\\\\n| sort by TimeGenerated desc\\\\n| project MemberName, Action, Organization, Permission\\\\n\\\",          \\\"size\\\": 1,          \\\"title\\\": \\\"Members Added or Removed\\\",          \\\"timeContext\\\": {            \\\"durationMs\\\": 0          },          \\\"timeContextFromParameter\\\": \\\"TimeRange\\\",          \\\"queryType\\\": 0,          \\\"resourceType\\\": \\\"microsoft.operationalinsights/workspaces\\\"        },        \\\"customWidth\\\": \\\"50\\\",        \\\"name\\\": \\\"membersaddedorremoved\\\"      },      {        \\\"type\\\": 3,        \\\"content\\\": {          \\\"version\\\": \\\"KqlItem/1.0\\\",          \\\"query\\\": \\\"GitHub_CL\\\\r\\\\n| extend TimeGenerated = node_createdAt_t\\\\r\\\\n| where node_action_s == \\\\\\\"repo.create\\\\\\\"\\\\r\\\\n| extend RepoName = node_repositoryName_s\\\\r\\\\n| extend Actor = node_actorLogin_s\\\\r\\\\n| extend Private = node_visibility_s\\\\r\\\\n| sort by TimeGenerated desc\\\\r\\\\n| project RepoName, Actor, Private\\\\r\\\\n\\\",          \\\"size\\\": 0,          \\\"title\\\": \\\"Repositories Created\\\",          \\\"timeContext\\\": {            \\\"durationMs\\\": 0          },          \\\"timeContextFromParameter\\\": \\\"TimeRange\\\",          \\\"queryType\\\": 0,          \\\"resourceType\\\": \\\"microsoft.operationalinsights/workspaces\\\"        },        \\\"customWidth\\\": \\\"50\\\",        \\\"name\\\": \\\"repositoriescreated\\\"      },      {        \\\"type\\\": 3,        \\\"content\\\": {          \\\"version\\\": \\\"KqlItem/1.0\\\",          \\\"query\\\": \\\"GitHub_CL\\\\r\\\\n| extend TimeGenerated = node_createdAt_t\\\\r\\\\n| where node_action_s == \\\\\\\"team.add_repository\\\\\\\" or node_action_s == \\\\\\\"team.remove_repository\\\\\\\"\\\\r\\\\n| extend Organization = node_organizationName_s\\\\r\\\\n| extend RepoName = node_repositoryName_s\\\\r\\\\n| extend TeamName = node_teamName_s\\\\r\\\\n| extend Action = iif(node_action_s==\\\\\\\"team.add_repository\\\\\\\", \\\\\\\"Added\\\\\\\", \\\\\\\"Removed\\\\\\\")\\\\r\\\\n| sort by TimeGenerated desc\\\\r\\\\n| project Organization, RepoName, TeamName, Action\\\\r\\\\n\\\",          \\\"size\\\": 0,          \\\"title\\\": \\\"Teams Added/Removed Repository\\\",          \\\"timeContext\\\": {            \\\"durationMs\\\": 0          },          \\\"timeContextFromParameter\\\": \\\"TimeRange\\\",          \\\"queryType\\\": 0,          \\\"resourceType\\\": \\\"microsoft.operationalinsights/workspaces\\\"        },        \\\"customWidth\\\": \\\"50\\\",        \\\"name\\\": \\\"teamsaddedremovedtorepository\\\"      },      {        \\\"type\\\": 3,        \\\"content\\\": {          \\\"version\\\": \\\"KqlItem/1.0\\\",          \\\"query\\\": \\\"GitHub_CL\\\\r\\\\n| extend TimeGenerated = node_createdAt_t\\\\r\\\\n| where node_action_s == \\\\\\\"repo.access\\\\\\\" and node_operationType_s == \\\\\\\"MODIFY\\\\\\\" and node_visibility_s == \\\\\\\"PUBLIC\\\\\\\"\\\\r\\\\n| extend Organiation = node_organizationName_s\\\\r\\\\n| extend Repo = node_repositoryName_s\\\\r\\\\n| extend Actor = node_actorLogin_s\\\\r\\\\n| sort by TimeGenerated desc\\\\r\\\\n| project Organiation, Repo, Actor\\\\r\\\\n\\\",          \\\"size\\\": 0,          \\\"title\\\": \\\"Private Repos made Public\\\",          \\\"timeContext\\\": {            \\\"durationMs\\\": 0          },          \\\"timeContextFromParameter\\\": \\\"TimeRange\\\",          \\\"queryType\\\": 0,          \\\"resourceType\\\": \\\"microsoft.operationalinsights/workspaces\\\"        },        \\\"customWidth\\\": \\\"50\\\",        \\\"name\\\": \\\"privatereposmadepublic\\\"      },      {        \\\"type\\\": 3,        \\\"content\\\": {          \\\"version\\\": \\\"KqlItem/1.0\\\",          \\\"query\\\": \\\"GitHubRepoLogs_CL\\\\r\\\\n| extend TimeGenerated = created_at_t\\\\r\\\\n| where LogType_s == \\\\\\\"Forks\\\\\\\"\\\\r\\\\n| summarize count() by bin(TimeGenerated, 1d), name_s\\\",          \\\"size\\\": 0,          \\\"title\\\": \\\"Fork Count by Repoistory over Time\\\",          \\\"timeContext\\\": {            \\\"durationMs\\\": 0          },          \\\"timeContextFromParameter\\\": \\\"TimeRange\\\",          \\\"queryType\\\": 0,          \\\"resourceType\\\": \\\"microsoft.operationalinsights/workspaces\\\",          \\\"visualization\\\": \\\"barchart\\\"        },        \\\"customWidth\\\": \\\"50\\\",        \\\"name\\\": \\\"query - 6\\\"      },      {        \\\"type\\\": 3,        \\\"content\\\": {          \\\"version\\\": \\\"KqlItem/1.0\\\",          \\\"query\\\": \\\"GitHubRepoLogs_CL\\\\r\\\\n| where LogType_s == \\\\\\\"Clones\\\\\\\"\\\\r\\\\n| extend TimeGenerated = timestamp_t\\\\r\\\\n| summarize count() by bin(TimeGenerated, 1d), Repository_s\\\",          \\\"size\\\": 0,          \\\"title\\\": \\\"Clone count by Repository Over Time\\\",          \\\"timeContext\\\": {            \\\"durationMs\\\": 0          },          \\\"timeContextFromParameter\\\": \\\"TimeRange\\\",          \\\"queryType\\\": 0,          \\\"resourceType\\\": \\\"microsoft.operationalinsights/workspaces\\\",          \\\"visualization\\\": \\\"barchart\\\"        },        \\\"customWidth\\\": \\\"50\\\",        \\\"name\\\": \\\"query - 7\\\"      }    ],    \\\"fromTemplateId\\\": \\\"sentinel-GitHubSecurity\\\",    \\\"$schema\\\": \\\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\\\"  }\"\r\n",
                                             "version":  "1.0",
                                             "sourceId":  "[variables('_workbook-source')]",
                                             "category":  "sentinel"
                                         }
                      },
                      {
                          "type":  "Microsoft.OperationalInsights/workspaces/providers/alertRules",
                          "name":  "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic1-id'))]",
                          "apiVersion":  "2020-01-01",
                          "kind":  "Scheduled",
                          "location":  "[parameters('workspace-location')]",
                          "properties":  {
                                             "description":  "Detect activities from a location that was not recently or was never visited by the user or by any user in your organization.",
                                             "displayName":  "GitHub Activites from a New Country",
                                             "enabled":  false,
                                             "query":  "let LearningPeriod = 7d;\nlet RunTime = 1h;\nlet StartTime = 1h;\nlet EndRunTime = StartTime - RunTime;\nlet EndLearningTime = StartTime + LearningPeriod;\nlet GitHubCountryCodeLogs = (GitHubAudit\n| where Country != \"\");\n  GitHubCountryCodeLogs\n| where TimeGenerated between (ago(EndLearningTime) .. ago(StartTime))\n| summarize makeset(Country) by Actor\n| join kind=innerunique (\n  GitHubCountryCodeLogs\n  | where TimeGenerated between (ago(StartTime) .. ago(EndRunTime))\n  | distinct Country, Actor, TimeGenerated\n) on Actor \n| where set_Country !contains Country\n| extend AccountCustomEntity = Actor , timestamp = TimeGenerated\n",
                                             "queryFrequency":  "P1D",
                                             "queryPeriod":  "P7D",
                                             "severity":  "Medium",
                                             "suppressionDuration":  "PT1H",
                                             "suppressionEnabled":  false,
                                             "triggerOperator":  "GreaterThan",
                                             "triggerThreshold":  0,
                                             "tactics":  [
                                                             "InitialAccess"
                                                         ]
                                         }
                      },
                      {
                          "type":  "Microsoft.OperationalInsights/workspaces/providers/alertRules",
                          "name":  "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic2-id'))]",
                          "apiVersion":  "2020-01-01",
                          "kind":  "Scheduled",
                          "location":  "[parameters('workspace-location')]",
                          "properties":  {
                                             "description":  "This alerts when there is a new security vulnerability in a GitHub repository.",
                                             "displayName":  "GitHub Security Vulnerability in Repository",
                                             "enabled":  false,
                                             "query":  "\nGitHubRepo\n| where Action == \"vulnerabilityAlert\"\n| project TimeGenerated, DismmisedAt, Reason, vulnerableManifestFilename, Description, Link, PublishedAt, Severity, Summary\n",
                                             "queryFrequency":  "PT1H",
                                             "queryPeriod":  "PT1H",
                                             "severity":  "Informational",
                                             "suppressionDuration":  "PT1H",
                                             "suppressionEnabled":  false,
                                             "triggerOperator":  "GreaterThan",
                                             "triggerThreshold":  0
                                         }
                      },
                      {
                          "type":  "Microsoft.OperationalInsights/workspaces/providers/alertRules",
                          "name":  "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic3-id'))]",
                          "apiVersion":  "2020-01-01",
                          "kind":  "Scheduled",
                          "location":  "[parameters('workspace-location')]",
                          "properties":  {
                                             "description":  "Identifies a match in GitHub_CL table from any IP IOC from TI",
                                             "displayName":  "TI map IP entity to GitHub_CL",
                                             "enabled":  false,
                                             "query":  "\nThreatIntelligenceIndicator\n| where Action == true\n// Picking up only IOC's that contain the entities we want\n| where isnotempty(NetworkIP) or isnotempty(EmailSourceIpAddress) or isnotempty(NetworkDestinationIP) or isnotempty(NetworkSourceIP)\n// Taking the first non-empty value based on potential IOC match availability\n| extend TI_ipEntity = iff(isnotempty(NetworkIP), NetworkIP, NetworkDestinationIP)\n| extend TI_ipEntity = iff(isempty(TI_ipEntity) and isnotempty(NetworkSourceIP), NetworkSourceIP, TI_ipEntity)\n| extend TI_ipEntity = iff(isempty(TI_ipEntity) and isnotempty(EmailSourceIpAddress), EmailSourceIpAddress, TI_ipEntity)\n| join (\n  GitHubAudit\n  | extend GitHubAudit_TimeGenerated = TimeGenerated\n)\non $left.TI_ipEntity == $right.IPaddress\n| summarize LatestIndicatorTime = arg_max(TimeGenerated, *) by IndicatorId\n| project LatestIndicatorTime, Description, ActivityGroupNames, IndicatorId, ThreatType, Url, ExpirationDateTime, ConfidenceScore, GitHubAudit_TimeGenerated, TI_ipEntity, IPaddress, Actor, Action, Country, OperationType, NetworkIP, NetworkDestinationIP, NetworkSourceIP, EmailSourceIpAddress\n| extend timestamp = GitHubAudit_TimeGenerated, IPCustomEntity = IPaddress, AccountCustomEntity = Actor\n",
                                             "queryFrequency":  "PT1H",
                                             "queryPeriod":  "P1D",
                                             "severity":  "Medium",
                                             "suppressionDuration":  "PT1H",
                                             "suppressionEnabled":  false,
                                             "triggerOperator":  "GreaterThan",
                                             "triggerThreshold":  0,
                                             "tactics":  [
                                                             "Impact"
                                                         ]
                                         }
                      },
                      {
                          "type":  "Microsoft.OperationalInsights/workspaces/providers/alertRules",
                          "name":  "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic4-id'))]",
                          "apiVersion":  "2020-01-01",
                          "kind":  "Scheduled",
                          "location":  "[parameters('workspace-location')]",
                          "properties":  {
                                             "description":  "Two-factor authentication is a process where a user is prompted during the sign-in process for an additional form of identification, such as to enter a code on their cellphone or to provide a fingerprint scan. Two factor authentication reduces the risk of account takeover. Attacker will want to disable such security tools in order to go undetected. ",
                                             "displayName":  "GitHub Two Factor Auth Disable",
                                             "enabled":  false,
                                             "query":  "\nGitHubAudit\n| where Action == \"org.disable_two_factor_requirement\"\n| project TimeGenerated, Action, Actor, Country, IPaddress, Repository\n| extend AccountCustomEntity = Actor, IPCustomEntity = IPaddress\n",
                                             "queryFrequency":  "P1D",
                                             "queryPeriod":  "P1D",
                                             "severity":  "Medium",
                                             "suppressionDuration":  "PT1H",
                                             "suppressionEnabled":  false,
                                             "triggerOperator":  "GreaterThan",
                                             "triggerThreshold":  0,
                                             "tactics":  [
                                                             "DefenseEvasion"
                                                         ]
                                         }
                      },
                      {
                          "type":  "Microsoft.OperationalInsights/workspaces",
                          "apiVersion":  "2020-08-01",
                          "name":  "[parameters('workspace')]",
                          "location":  "[parameters('workspace-location')]",
                          "resources":  [
                                            {
                                                "type":  "savedSearches",
                                                "apiVersion":  "2020-08-01",
                                                "name":  "GitHub Data Parser",
                                                "dependsOn":  [
                                                                  "[variables('workspace-dependency')]"
                                                              ],
                                                "properties":  {
                                                                   "eTag":  "*",
                                                                   "displayName":  "GitHub Data Parser",
                                                                   "category":  "Samples",
                                                                   "functionAlias":  "GitHubAuditLog",
                                                                   "query":  "\n\nGitHub_CL\n| project TimeGenerated=node_createdAt_t,\n    Organization=columnifexists('node_organizationName_s', \"\"),\n    Action=node_action_s,\n    OperationType=node_operationType_s,\n    Repository=columnifexists('node_repositoryName_s',\"\"),\n    Actor=columnifexists('node_actorLogin_s', \"\"),\n    IPaddress=columnifexists('node_actorIp_s', \"\"),\n    City=columnifexists('node_actorLocation_city_s', \"\"),\n    Country=columnifexists('node_actorLocation_country_s', \"\"),\n    ImpactedUser=columnifexists('node_userLogin_s', \"\"),\n    ImpactedUserEmail=columnifexists('node_user_email_s', \"\"),\n    InvitedUserPermission=columnifexists('node_permission_s', \"\"),\n    Visability=columnifexists('node_visibility_s', \"\"),\n    OauthApplication=columnifexists('node_oauthApplicationName_s', \"\"),\n    OauthApplicationUrl=columnifexists('node_applicationUrl_s', \"\"),\n    OauthApplicationState=columnifexists('node_state_s', \"\"),\n    UserCanInviteCollaborators=columnifexists('node_canInviteOutsideCollaboratorsToRepositories_b', \"\"),\n    MembershipType=columnifexists('node_membershipTypes_s', \"\"),\n    CurrentPermission=columnifexists('node_permission_s', \"\"),\n    PreviousPermission=columnifexists('node_permissionWas_s', \"\"),\n    TeamName=columnifexists('node_teamName_s', \"\"),\n    Reason=columnifexists('node_reason_s', \"\"),\n    BlockedUser=columnifexists('node_blockedUserName_s', \"\"),\n    CanCreateRepositories=columnifexists('canCreateRepositories_b', \"\")\n\n\n\n",
                                                                   "version":  1
                                                               }
                                            }
                                        ]
                      },
                      {
                          "type":  "Microsoft.OperationalInsights/workspaces",
                          "apiVersion":  "2020-08-01",
                          "name":  "[parameters('workspace')]",
                          "location":  "[parameters('workspace-location')]",
                          "resources":  [
                                            {
                                                "type":  "savedSearches",
                                                "apiVersion":  "2020-08-01",
                                                "name":  "GitHub Data Parser",
                                                "dependsOn":  [
                                                                  "[variables('workspace-dependency')]"
                                                              ],
                                                "properties":  {
                                                                   "eTag":  "*",
                                                                   "displayName":  "GitHub Data Parser",
                                                                   "category":  "Samples",
                                                                   "functionAlias":  "GitHubRepoLog",
                                                                   "query":  "\n\nGitHubRepoLogs_CL\n| project TimeGenerated = columnifexists('DateTime_t', \"\"),\n    Organization=columnifexists('Organization_s', \"\"),\n    Repository=columnifexists('Repository_s',\"\"),\n    Action=columnifexists('LogType_s',\"\"),\n    Actor=coalesce(login_s, owner_login_s),\n    ActorType=coalesce(owner_type_s, type_s),\n    IsPrivate=columnifexists('private_b',\"\"),\n    ForksUrl=columnifexists('forks_url_s',\"\"),\n    PushedAt=columnifexists('pushed_at_t',\"\"),\n    IsDisabled=columnifexists('disabled_b',\"\"),\n    AdminPermissions=columnifexists('permissions_admin_b',\"\"),\n    PushPermissions=columnifexists('permissions_push_b',\"\"),\n    PullPermissions=columnifexists('permissions_pull_b',\"\"),\n    ForkCount=columnifexists('forks_count_d',\"\"),\n    Count=columnifexists('count_d,',\"\"),\n    UniqueUsersCount=columnifexists('uniques_d',\"\"),\n    DismmisedAt=columnifexists('dismissedAt_t',\"\"),\n    Reason=columnifexists('dismissReason_s',\"\"),\n    vulnerableManifestFilename = columnifexists('vulnerableManifestFilename_s',\"\"),\n    Description=columnifexists('securityAdvisory_description_s',\"\"),\n    Link=columnifexists('securityAdvisory_permalink_s',\"\"),\n    PublishedAt=columnifexists('securityAdvisory_publishedAt_t ',\"\"),\n    Severity=columnifexists('securityAdvisory_severity_s',\"\"),\n    Summary=columnifexists('securityAdvisory_summary_s',\"\")\n",
                                                                   "version":  1
                                                               }
                                            },
                                            {
                                                "type":  "savedSearches",
                                                "apiVersion":  "2020-08-01",
                                                "name":  "GitHub Hunting Query 1",
                                                "dependsOn":  [
                                                                  "[variables('workspace-dependency')]"
                                                              ],
                                                "properties":  {
                                                                   "eTag":  "*",
                                                                   "displayName":  "GitHub First Time Invite Member and Add Member to Repo",
                                                                   "category":  "Hunting Queries",
                                                                   "query":  "\nlet LearningPeriod = 7d;\nlet RunTime = 1h;\nlet StartTime = 1h;\nlet EndRunTime = StartTime - RunTime;\nlet EndLearningTime = StartTime + LearningPeriod;\nlet GitHubOrgMemberLogs = (GitHubAudit\n| where Action == \"org.invite_member\" or Action == \"org.update_member\" or Action == \"org.add_member\" or Action == \"repo.add_member\" or Action == \"team.add_member\");\nGitHubOrgMemberLogs\n| where TimeGenerated between (ago(EndLearningTime) .. ago(StartTime))\n| distinct Actor\n| join kind=rightanti (\n  GitHubOrgMemberLogs\n  | where TimeGenerated between (ago(StartTime) .. ago(EndRunTime))\n  | distinct Actor\n) on Actor\n",
                                                                   "version":  1,
                                                                   "tags":  [
                                                                                {
                                                                                    "name":  "description",
                                                                                    "value":  "This hunting query identifies a user that add/invite a member to the organization for the first time. This technique can be leveraged by attackers to add stealth account access to the organization."
                                                                                },
                                                                                {
                                                                                    "name":  "tactics",
                                                                                    "value":  "Persistence"
                                                                                }
                                                                            ]
                                                               }
                                            },
                                            {
                                                "type":  "savedSearches",
                                                "apiVersion":  "2020-08-01",
                                                "name":  "GitHub Hunting Query 2",
                                                "dependsOn":  [
                                                                  "[variables('workspace-dependency')]"
                                                              ],
                                                "properties":  {
                                                                   "eTag":  "*",
                                                                   "displayName":  "GitHub Inactive or New Account Access or Usage",
                                                                   "category":  "Hunting Queries",
                                                                   "query":  "\nlet LearningPeriod = 7d;\nlet RunTime = 1h;\nlet StartTime = 1h;\nlet EndRunTime = StartTime - RunTime;\nlet EndLearningTime = StartTime + LearningPeriod;\nlet GitHubActorLogin = (GitHubAudit\n| where Actor != \"\");\nlet GitHubUser = (GitHubAudit\n| where ImpactedUser != \"\");\nlet GitHubNewActorLogin = (GitHubActorLogin\n| where TimeGenerated between (ago(EndLearningTime) .. ago(StartTime))\n| summarize makeset(Actor)\n| extend Dummy = 1\n| join kind=innerunique (\n  GitHubActorLogin\n  | where TimeGenerated between (ago(StartTime) .. ago(EndRunTime))\n  | distinct Actor\n  | extend Dummy = 1\n) on Dummy\n| project-away Dummy\n| where set_Actor  !contains Actor);\nlet GitHubNewUser = ( GitHubUser\n| where TimeGenerated between (ago(EndLearningTime) .. ago(StartTime))\n| summarize makeset(ImpactedUser)\n| extend Dummy = 1\n| join kind=innerunique (\n  GitHubUser\n  | where TimeGenerated between (ago(StartTime) .. ago(EndRunTime))\n  | distinct ImpactedUser\n  | extend Dummy = 1\n) on Dummy\n| project-away Dummy\n| where set_ImpactedUser !contains ImpactedUser);\nunion GitHubNewActorLogin, GitHubNewUser\n",
                                                                   "version":  1,
                                                                   "tags":  [
                                                                                {
                                                                                    "name":  "description",
                                                                                    "value":  "This hunting query identifies Accounts that are new or inactive and have accessed or used GitHub that may be a sign of compromise."
                                                                                },
                                                                                {
                                                                                    "name":  "tactics",
                                                                                    "value":  "Persistence"
                                                                                }
                                                                            ]
                                                               }
                                            },
                                            {
                                                "type":  "savedSearches",
                                                "apiVersion":  "2020-08-01",
                                                "name":  "GitHub Hunting Query 3",
                                                "dependsOn":  [
                                                                  "[variables('workspace-dependency')]"
                                                              ],
                                                "properties":  {
                                                                   "eTag":  "*",
                                                                   "displayName":  "GitHub Mass Deletion of repos or projects",
                                                                   "category":  "Hunting Queries",
                                                                   "query":  "\nlet LearningPeriod = 7d;\nlet BinTime = 1h;\nlet RunTime = 1h;\nlet StartTime = 1h;\nlet NumberOfStds = 3;\nlet MinThreshold = 10.0;\nlet EndRunTime = StartTime - RunTime;\nlet EndLearningTime = StartTime + LearningPeriod;\nlet GitHubRepositoryDestroyEvents = (GitHubAudit\n| where Action == \"repo.destroy\");\nGitHubRepositoryDestroyEvents\n| where TimeGenerated between (ago(EndLearningTime) .. ago(StartTime))\n| summarize count() by bin(TimeGenerated, BinTime)\n| summarize AvgInLearning = avg(count_), StdInLearning = stdev(count_)\n| extend LearningThreshold = max_of(AvgInLearning + StdInLearning * NumberOfStds, MinThreshold)\n| extend Dummy = 1\n| join kind=innerunique (\n  GitHubRepositoryDestroyEvents\n  | where TimeGenerated between (ago(StartTime) .. ago(EndRunTime))\n  | summarize CountInRunTime = count() by bin(TimeGenerated, BinTime)\n  | extend Dummy = 1\n) on Dummy\n| project-away Dummy\n| where CountInRunTime  LearningThreshold\n",
                                                                   "version":  1,
                                                                   "tags":  [
                                                                                {
                                                                                    "name":  "description",
                                                                                    "value":  "This hunting query identifies GitHub activites where there are a large number of deletions that may be a sign of compromise."
                                                                                },
                                                                                {
                                                                                    "name":  "tactics",
                                                                                    "value":  "Impact"
                                                                                }
                                                                            ]
                                                               }
                                            },
                                            {
                                                "type":  "savedSearches",
                                                "apiVersion":  "2020-08-01",
                                                "name":  "GitHub Hunting Query 4",
                                                "dependsOn":  [
                                                                  "[variables('workspace-dependency')]"
                                                              ],
                                                "properties":  {
                                                                   "eTag":  "*",
                                                                   "displayName":  "GitHub OAuth App Restrictions Disabled",
                                                                   "category":  "Hunting Queries",
                                                                   "query":  "\nGitHubAudit\n| where Action == \"org.disable_oauth_app_restrictions\"\n| project TimeGenerated, Action, Actor, Country\n",
                                                                   "version":  1,
                                                                   "tags":  [
                                                                                {
                                                                                    "name":  "description",
                                                                                    "value":  "This hunting query identifies GitHub OAuth Apps that have restrictions disabled that may be a sign of compromise. Attacker will want to disable such security tools in order to go undetected. "
                                                                                },
                                                                                {
                                                                                    "name":  "tactics",
                                                                                    "value":  "Persistence,DefenseEvasion"
                                                                                }
                                                                            ]
                                                               }
                                            },
                                            {
                                                "type":  "savedSearches",
                                                "apiVersion":  "2020-08-01",
                                                "name":  "GitHub Hunting Query 5",
                                                "dependsOn":  [
                                                                  "[variables('workspace-dependency')]"
                                                              ],
                                                "properties":  {
                                                                   "eTag":  "*",
                                                                   "displayName":  "GitHub Update Permissions",
                                                                   "category":  "Hunting Queries",
                                                                   "query":  "\nGitHubAudit\n| where Action == \"org.update_default_repository_permission\"\n| project TimeGenerated, Action, Actor, Country, Repository, PreviousPermission, CurrentPermission\n",
                                                                   "version":  1,
                                                                   "tags":  [
                                                                                {
                                                                                    "name":  "description",
                                                                                    "value":  "This hunting query identifies GitHub activites where permissions are updated that may be a sign of compromise."
                                                                                },
                                                                                {
                                                                                    "name":  "tactics",
                                                                                    "value":  "Persistence,DefenseEvasion"
                                                                                }
                                                                            ]
                                                               }
                                            },
                                            {
                                                "type":  "savedSearches",
                                                "apiVersion":  "2020-08-01",
                                                "name":  "GitHub Hunting Query 6",
                                                "dependsOn":  [
                                                                  "[variables('workspace-dependency')]"
                                                              ],
                                                "properties":  {
                                                                   "eTag":  "*",
                                                                   "displayName":  "GitHub Repo switched from private to public",
                                                                   "category":  "Hunting Queries",
                                                                   "query":  "\nGitHubAudit\n| where Action == \"repo.access\"\n| where OperationType == \"MODIFY\"\n| where Visibility == \"PUBLIC\" \n| project TimeGenerated, Action, Actor, Country, Repository, Visibility\n",
                                                                   "version":  1,
                                                                   "tags":  [
                                                                                {
                                                                                    "name":  "description",
                                                                                    "value":  "This hunting query identifies GitHub activites where a repo was changed from private to public that may be a sign of compromise."
                                                                                },
                                                                                {
                                                                                    "name":  "tactics",
                                                                                    "value":  "Collection"
                                                                                }
                                                                            ]
                                                               }
                                            },
                                            {
                                                "type":  "savedSearches",
                                                "apiVersion":  "2020-08-01",
                                                "name":  "GitHub Hunting Query 7",
                                                "dependsOn":  [
                                                                  "[variables('workspace-dependency')]"
                                                              ],
                                                "properties":  {
                                                                   "eTag":  "*",
                                                                   "displayName":  "GitHub OAuth App Restrictions Disabled",
                                                                   "category":  "Hunting Queries",
                                                                   "query":  "\nlet CollaboratorsUserToRepoMapping = (\nGitHubRepo\n| where Action == \"Collaborators\"\n| distinct Repository , Actor, Organization);\nlet UserCommitsInRepoMapping = (\nGitHubRepo\n| where Action == \"Commits\"\n| distinct  Repository ,Actor, Organization);\nunion CollaboratorsUserToRepoMapping, UserCommitsInRepoMapping\n| summarize ContributedToRepos = make_set(Repository) by Actor, Organization\n| join kind=innerunique (\nGitHubRepo\n| where Action == \"Forks\"\n| distinct Repository , Actor, Organization\n) on Actor, Organization\n| project-away Actor1, Organization1\n| where ContributedToRepos !contains Repository\n",
                                                                   "version":  1,
                                                                   "tags":  [
                                                                                {
                                                                                    "name":  "description",
                                                                                    "value":  "This hunting query identifies a fork activity against a repository done by a user who is not the owner of the repo nor a contributes."
                                                                                },
                                                                                {
                                                                                    "name":  "tactics",
                                                                                    "value":  "Exfiltration"
                                                                                }
                                                                            ]
                                                               }
                                            },
                                            {
                                                "type":  "savedSearches",
                                                "apiVersion":  "2020-08-01",
                                                "name":  "GitHub Hunting Query 8",
                                                "dependsOn":  [
                                                                  "[variables('workspace-dependency')]"
                                                              ],
                                                "properties":  {
                                                                   "eTag":  "*",
                                                                   "displayName":  "GitHub Repo Clone - Time Series Anomly",
                                                                   "category":  "Hunting Queries",
                                                                   "query":  "\nlet min_t = toscalar(GitHubRepo\n| summarize min(timestamp_t));\nlet max_t = toscalar(GitHubRepo\n| summarize max(timestamp_t));\nGitHubRepo\n| where Action == \"Clones\"\n| distinct TimeGenerated, Repository, Count\n| make-series num=sum(tolong(Count)) default=0 on TimeGenerated in range(min_t, max_t, 1h) by Repository \n| extend (anomalies, score, baseline) = series_decompose_anomalies(num, 1.5, -1, 'linefit')\n| render timechart \n",
                                                                   "version":  1,
                                                                   "tags":  [
                                                                                {
                                                                                    "name":  "description",
                                                                                    "value":  "Attacker can exfiltrate data from you GitHub repository after gaining access to it by performing clone action. This hunting queries allows you to track the clones activities for each of your repositories. The visualization allow you to quickly identify anomalies/excessive clone, to further investigate repo access \u0026 permissions"
                                                                                },
                                                                                {
                                                                                    "name":  "tactics",
                                                                                    "value":  "Collection"
                                                                                }
                                                                            ]
                                                               }
                                            },
                                            {
                                                "type":  "savedSearches",
                                                "apiVersion":  "2020-08-01",
                                                "name":  "GitHub Hunting Query 9",
                                                "dependsOn":  [
                                                                  "[variables('workspace-dependency')]"
                                                              ],
                                                "properties":  {
                                                                   "eTag":  "*",
                                                                   "displayName":  "GitHub First Time Repo Delete",
                                                                   "category":  "Hunting Queries",
                                                                   "query":  "\nlet LearningPeriod = 7d;\nlet RunTime = 1h;\nlet StartTime = 1h;\nlet EndRunTime = StartTime - RunTime;\nlet EndLearningTime = StartTime + LearningPeriod;\nlet GitHubRepositoryDestroyEvents = (GitHubAudit\n| where Action == \"repo.destroy\");\nGitHubRepositoryDestroyEvents\n| where TimeGenerated between (ago(EndLearningTime) .. ago(StartTime))\n| distinct Actor\n| join kind=rightanti (\n  GitHubRepositoryDestroyEvents\n  | where TimeGenerated between (ago(StartTime) .. ago(EndRunTime))\n  | distinct Actor\n) on Actor\n",
                                                                   "version":  1,
                                                                   "tags":  [
                                                                                {
                                                                                    "name":  "description",
                                                                                    "value":  "This hunting query identifies GitHub activites its the first time a user deleted a repo that may be a sign of compromise."
                                                                                },
                                                                                {
                                                                                    "name":  "tactics",
                                                                                    "value":  "Impact"
                                                                                }
                                                                            ]
                                                               }
                                            },
                                            {
                                                "type":  "savedSearches",
                                                "apiVersion":  "2020-08-01",
                                                "name":  "GitHub Hunting Query 10",
                                                "dependsOn":  [
                                                                  "[variables('workspace-dependency')]"
                                                              ],
                                                "properties":  {
                                                                   "eTag":  "*",
                                                                   "displayName":  "GitHub User Grants Access and Other User Grants Access",
                                                                   "category":  "Hunting Queries",
                                                                   "query":  "\nGitHubAudit\n| where ImpactedUser != \"\"\n| where Action == \"org.invite_member\" or Action == \"org.add_member\" or Action == \"team.add_member\" or Action == \"repo.add_member\"\n| distinct ImpactedUser, TimeGenerated, Actor\n| project-rename firstUserAdded = ImpactedUser, firstEventTime = TimeGenerated, firstAdderUser = Actor\n| join kind= innerunique (\n  GitHubAudit\n  | where ImpactedUser != \"\"\n  | where Action == \"org.invite_member\" or Action == \"org.add_member\" or Action == \"team.add_member\" or Action == \"repo.add_member\"\n  | distinct ImpactedUser, TimeGenerated, Actor\n  | project-rename secondUserAdded = ImpactedUser, secondEventTime = TimeGenerated, secondAdderUser = Actor\n) on $right.secondAdderUser == $left.firstUserAdded\n| where secondEventTime between (firstEventTime .. (firstEventTime + 1h))\n",
                                                                   "version":  1,
                                                                   "tags":  [
                                                                                {
                                                                                    "name":  "description",
                                                                                    "value":  "This hunting query identifies Accounts in GitHub that have granted access to another account which then grants access to yet another account that may be a sign of compromise."
                                                                                },
                                                                                {
                                                                                    "name":  "tactics",
                                                                                    "value":  "Persistence,PrivilegeEscalation"
                                                                                }
                                                                            ]
                                                               }
                                            }
                                        ]
                      },
                      {
                          "id":  "[variables('_connector1-source')]",
                          "name":  "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('connector1-name'))]",
                          "apiVersion":  "2021-03-01-preview",
                          "type":  "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
                          "kind":  "GenericUI",
                          "properties":  {
                                             "connectorUiConfig":  {
                                                                       "title":  "GitHub",
                                                                       "publisher":  "Microsoft",
                                                                       "descriptionMarkdown":  "The GitHub Enterprise connector provides the capability to ingest audit, repo and vulnerability alerts from the GitHub Enterprise into Azure Sentinel. The connector provides visibility into these log types in Azure Sentinel to view dashboards, create custom alerts, and to improve monitoring and investigation capabilities.",
                                                                       "graphQueries":  [
                                                                                            {
                                                                                                "metricName":  "Total data received",
                                                                                                "legend":  "GitHub Audit Logs",
                                                                                                "baseQuery":  "GitHub_CL"
                                                                                            },
                                                                                            {
                                                                                                "metricName":  "Total data received",
                                                                                                "legend":  "GitHub Repo Logs",
                                                                                                "baseQuery":  "GitHubRepoLogs_CL"
                                                                                            }
                                                                                        ],
                                                                       "sampleQueries":  [
                                                                                             {
                                                                                                 "description":  "Top 10 GitHub Audit Logs",
                                                                                                 "query":  "GitHub_CL \n| where TimeGenerated  ago(24h) \n| limit 10"
                                                                                             },
                                                                                             {
                                                                                                 "description":  "Top 10 Github Repo Logs",
                                                                                                 "query":  "GitHubRepoLogs_CL \n| where TimeGenerated  ago(24h) \n| limit 10"
                                                                                             }
                                                                                         ],
                                                                       "dataTypes":  [
                                                                                         {
                                                                                             "name":  "GitHub_CL",
                                                                                             "lastDataReceivedQuery":  "GitHub_CL \n| summarize Time = max(TimeGenerated) \n| where isnotempty(Time)"
                                                                                         },
                                                                                         {
                                                                                             "name":  "GitHubRepoLogs_CL",
                                                                                             "lastDataReceivedQuery":  "GitHubRepoLogs_CL \n| summarize Time = max(TimeGenerated) \n| where isnotempty(Time)"
                                                                                         }
                                                                                     ],
                                                                       "connectivityCriterias":  [
                                                                                                     {
                                                                                                         "type":  "IsConnectedQuery",
                                                                                                         "value":  [
                                                                                                                       "GitHub_CL \n| summarize LastLogReceived = max(TimeGenerated) \n| project IsConnected = LastLogReceived  ago(30d)",
                                                                                                                       "GitHubRepoLogs_CL \n| summarize LastLogReceived = max(TimeGenerated) \n| project IsConnected = LastLogReceived  ago(30d)"
                                                                                                                   ]
                                                                                                     }
                                                                                                 ],
                                                                       "availability":  {
                                                                                            "status":  1,
                                                                                            "isPreview":  true
                                                                                        },
                                                                       "permissions":  {
                                                                                           "resourceProvider":  [
                                                                                                                    {
                                                                                                                        "provider":  "Microsoft.OperationalInsights/workspaces",
                                                                                                                        "permissionsDisplayText":  "read and write permissions are required.",
                                                                                                                        "providerDisplayName":  "Workspace",
                                                                                                                        "scope":  "Workspace",
                                                                                                                        "requiredPermissions":  {
                                                                                                                                                    "write":  true,
                                                                                                                                                    "read":  true,
                                                                                                                                                    "delete":  true
                                                                                                                                                }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "provider":  "Microsoft.OperationalInsights/workspaces/sharedKeys",
                                                                                                                        "permissionsDisplayText":  "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key)",
                                                                                                                        "providerDisplayName":  "Keys",
                                                                                                                        "scope":  "Workspace",
                                                                                                                        "requiredPermissions":  {
                                                                                                                                                    "action":  true
                                                                                                                                                }
                                                                                                                    }
                                                                                                                ],
                                                                                           "customs":  [
                                                                                                           {
                                                                                                               "name":  "Microsoft.Web/sites permissions",
                                                                                                               "description":  "Read and write permissions to Azure Functions to create a Function App is required. [See the documentation to learn more about Azure Functions](https://docs.microsoft.com/azure/azure-functions/)."
                                                                                                           },
                                                                                                           {
                                                                                                               "name":  "GitHub API Token (Personal Access Token)",
                                                                                                               "description":  "A GitHub API Token is required. See the documentation to learn more about the [GitHub Personal Access Token](https://github.com/settings/tokens/)."
                                                                                                           }
                                                                                                       ]
                                                                                       },
                                                                       "instructionSteps":  [
                                                                                                {
                                                                                                    "description":  "**NOTE:** This connector uses Azure Functions to connect to GitHub Enterprise to pull its logs into Azure Sentinel. This might result in additional data ingestion costs. Check the [Azure Functions pricing page](https://azure.microsoft.com/pricing/details/functions/) for details."
                                                                                                },
                                                                                                {
                                                                                                    "description":  "**(Optional Step)** Securely store workspace and API authorization key(s) or token(s) in Azure Key Vault. Azure Key Vault provides a secure mechanism to store and retrieve key values. [Follow these instructions](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references) to use Azure Key Vault with an Azure Function App."
                                                                                                },
                                                                                                {
                                                                                                    "description":  "**STEP 1 - Configuration steps for the GitHub PAT**\n\n[Follow these instructions](https://github.com/settings/tokens) to create an PAT."
                                                                                                },
                                                                                                {
                                                                                                    "description":  "**STEP 2 - Choose ONE from the following two deployment options to deploy the connector and the associated Azure Function**\n\n**IMPORTANT:** Before deploying the GitHub Enterprise Data connector, have the Workspace ID and Workspace Primary Key (can be copied from the following), as well as the GitHub API Authorization Token, readily available.",
                                                                                                    "instructions":  [
                                                                                                                         {
                                                                                                                             "parameters":  {
                                                                                                                                                "fillWith":  [
                                                                                                                                                                 "WorkspaceId"
                                                                                                                                                             ],
                                                                                                                                                "label":  "Workspace ID"
                                                                                                                                            },
                                                                                                                             "type":  "CopyableLabel"
                                                                                                                         },
                                                                                                                         {
                                                                                                                             "parameters":  {
                                                                                                                                                "fillWith":  [
                                                                                                                                                                 "PrimaryKey"
                                                                                                                                                             ],
                                                                                                                                                "label":  "Primary Key"
                                                                                                                                            },
                                                                                                                             "type":  "CopyableLabel"
                                                                                                                         }
                                                                                                                     ]
                                                                                                },
                                                                                                {
                                                                                                    "description":  "This method provides an automated deployment of the GitHub Data connector using an ARM Tempate.\n\n1. Click the **Deploy to Azure** button below. \n\n\t[![Deploy To Azure](https://aka.ms/deploytoazurebutton)](https://portal.azure.com/#create/Microsoft.Template/uri/https://raw.githubusercontent.com/andedevsecops/Azure-Sentinel/master/Solutions/GitHub/Data%20Connectors/azuredeploy_GitHubFunction.json)\n\n2. Select the preferred **Subscription**, **Resource Group** and **Location**. \n3. Enter the **Workspace ID**, **Workspace Key**, **Personal Access Token** \n - The default **Time Interval** is set to pull the last five (5) minutes of data. If the time interval needs to be modified, it is recommended to change the Function App Timer Trigger accordingly (in the function.json file, post deployment) to prevent overlapping data ingestion. \n - Note: If using Azure Key Vault secrets for any of the values above, use the`@Microsoft.KeyVault(SecretUri={Security Identifier})`schema in place of the string values. Refer to [Key Vault references documentation](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references) for further details. \n4. Mark the checkbox labeled **I agree to the terms and conditions stated above**. \n5. Click **Purchase** to deploy.",
                                                                                                    "title":  "Option 1 - Azure Resource Manager (ARM) Template"
                                                                                                },
                                                                                                {
                                                                                                    "description":  "Use the following step-by-step instructions to deploy the GitHub Enterprise Data connector manually with Azure Functions.",
                                                                                                    "title":  "Option 2 - Manual Deployment of Azure Functions"
                                                                                                },
                                                                                                {
                                                                                                    "description":  "**1. Create a Function App**\n\n1.  From the Azure Portal, navigate to [Function App](https://portal.azure.com/#blade/HubsExtension/BrowseResource/resourceType/Microsoft.Web%2Fsites/kind/functionapp), and select **+ Add**.\n2. In the **Basics** tab, ensure Runtime stack is set to **Powershell Core**. \n3. In the **Hosting** tab, ensure the **Consumption (Serverless)** plan type is selected.\n4. Make other preferrable configuration changes, if needed, then click **Create**."
                                                                                                },
                                                                                                {
                                                                                                    "description":  "**2. Import Function App Code**\n\n1. In the newly created Function App, select **Functions** on the left pane and click **+ Add**.\n2. Select **Timer Trigger**.\n3. Enter a unique Function **Name** and leave the default cron schedule of every 5 minutes, then click **Create**.\n4. Click on **Code + Test** on the left pane. \n5. Copy the [Function App Code](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2Fandedevsecops%2FAzure-Sentinel%2Faz-func-github-dataconnector%2FDataConnectors%2FGithubFunction%2Fazuredeploy.json) and paste into the Function App `run.ps1` editor.\n5. Click **Save**."
                                                                                                },
                                                                                                {
                                                                                                    "description":  "**3. Configure the Function App**\n\n1. In the Function App, select the Function App Name and select **Configuration**.\n2. In the **Application settings** tab, select **+ New application setting**.\n3. Add each of the following five (5) application settings individually, with their respective string values (case-sensitive): \n\t\tPersonalAccessToken\n\t\tTimeInterval\n\t\tWorkspaceID\n\t\tWorkspaceKey\n - Set the `timeInterval` (in minutes) to the default value of `5` to correspond to the default Timer Trigger of every `5` minutes. Note that modifying time interval will require modifying the Function App Timer Trigger accordingly to prevent overlapping data.\n - Note: If using Azure Key Vault secrets for any of the values above, use the`@Microsoft.KeyVault(SecretUri={Security Identifier})`schema in place of the string values. Refer to [Key Vault references documentation](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references) for further details. \n4. Once all application settings have been entered, click **Save**."
                                                                                                }
                                                                                            ]
                                                                   }
                                         }
                      }
                  ],
    "outputs":  {

                }
}