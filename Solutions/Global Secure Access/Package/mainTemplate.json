{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Microsoft - support@microsoft.com",
    "comments": "Solution template for Global Secure Access"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    },
    "workbook1-name": {
      "type": "string",
      "defaultValue": "Microsoft Global Secure Access Enriched M365 Logs",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    },
    "workbook2-name": {
      "type": "string",
      "defaultValue": "Microsoft Global Secure Access Traffic Logs",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    }
  },
  "variables": {
    "email": "support@microsoft.com",
    "_email": "[variables('email')]",
    "_solutionName": "Global Secure Access",
    "_solutionVersion": "3.0.0",
    "solutionId": "azuresentinel.azure-sentinel-solution-globalsecureaccess",
    "_solutionId": "[variables('solutionId')]",
    "workbookVersion1": "1.0.0",
    "workbookContentId1": "GSAM365EnrichedEvents",
    "workbookId1": "[resourceId('Microsoft.Insights/workbooks', variables('workbookContentId1'))]",
    "workbookTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-wb-',uniquestring(variables('_workbookContentId1'))))]",
    "_workbookContentId1": "[variables('workbookContentId1')]",
    "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
    "_workbookcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','wb','-', uniqueString(concat(variables('_solutionId'),'-','Workbook','-',variables('_workbookContentId1'),'-', variables('workbookVersion1'))))]",
    "workbookVersion2": "1.0.0",
    "workbookContentId2": "GSANetworkTraffic",
    "workbookId2": "[resourceId('Microsoft.Insights/workbooks', variables('workbookContentId2'))]",
    "workbookTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-wb-',uniquestring(variables('_workbookContentId2'))))]",
    "_workbookContentId2": "[variables('workbookContentId2')]",
    "_workbookcontentProductId2": "[concat(take(variables('_solutionId'),50),'-','wb','-', uniqueString(concat(variables('_solutionId'),'-','Workbook','-',variables('_workbookContentId2'),'-', variables('workbookVersion2'))))]",
    "analyticRuleObject1": {
      "analyticRuleVersion1": "1.0.0",
      "_analyticRulecontentId1": "4c9f0a9e-44d7-4c9b-b7f0-f6a6e0d8f8fa",
      "analyticRuleId1": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '4c9f0a9e-44d7-4c9b-b7f0-f6a6e0d8f8fa')]",
      "analyticRuleTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('4c9f0a9e-44d7-4c9b-b7f0-f6a6e0d8f8fa')))]",
      "_analyticRulecontentProductId1": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','4c9f0a9e-44d7-4c9b-b7f0-f6a6e0d8f8fa','-', '1.0.0')))]"
    },
    "analyticRuleObject2": {
      "analyticRuleVersion2": "1.0.1",
      "_analyticRulecontentId2": "57abf863-1c1e-46c6-85b2-35370b712c1e",
      "analyticRuleId2": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '57abf863-1c1e-46c6-85b2-35370b712c1e')]",
      "analyticRuleTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('57abf863-1c1e-46c6-85b2-35370b712c1e')))]",
      "_analyticRulecontentProductId2": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','57abf863-1c1e-46c6-85b2-35370b712c1e','-', '1.0.1')))]"
    },
    "analyticRuleObject3": {
      "analyticRuleVersion3": "2.0.7",
      "_analyticRulecontentId3": "4c544b69-d9c6-4c78-8d4c-876e593dd318",
      "analyticRuleId3": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '4c544b69-d9c6-4c78-8d4c-876e593dd318')]",
      "analyticRuleTemplateSpecName3": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('4c544b69-d9c6-4c78-8d4c-876e593dd318')))]",
      "_analyticRulecontentProductId3": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','4c544b69-d9c6-4c78-8d4c-876e593dd318','-', '2.0.7')))]"
    },
    "analyticRuleObject4": {
      "analyticRuleVersion4": "2.1.2",
      "_analyticRulecontentId4": "9706a1bf-ba15-4b59-84d1-0d47bc1f4f0c",
      "analyticRuleId4": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '9706a1bf-ba15-4b59-84d1-0d47bc1f4f0c')]",
      "analyticRuleTemplateSpecName4": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('9706a1bf-ba15-4b59-84d1-0d47bc1f4f0c')))]",
      "_analyticRulecontentProductId4": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','9706a1bf-ba15-4b59-84d1-0d47bc1f4f0c','-', '2.1.2')))]"
    },
    "analyticRuleObject5": {
      "analyticRuleVersion5": "2.1.3",
      "_analyticRulecontentId5": "c672bad4-cf50-4cd8-a6d3-5d639ea454a3",
      "analyticRuleId5": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'c672bad4-cf50-4cd8-a6d3-5d639ea454a3')]",
      "analyticRuleTemplateSpecName5": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('c672bad4-cf50-4cd8-a6d3-5d639ea454a3')))]",
      "_analyticRulecontentProductId5": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','c672bad4-cf50-4cd8-a6d3-5d639ea454a3','-', '2.1.3')))]"
    },
    "analyticRuleObject6": {
      "analyticRuleVersion6": "2.0.5",
      "_analyticRulecontentId6": "2237211f-0427-4f08-ada3-4e75a761e12f",
      "analyticRuleId6": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '2237211f-0427-4f08-ada3-4e75a761e12f')]",
      "analyticRuleTemplateSpecName6": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('2237211f-0427-4f08-ada3-4e75a761e12f')))]",
      "_analyticRulecontentProductId6": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','2237211f-0427-4f08-ada3-4e75a761e12f','-', '2.0.5')))]"
    },
    "analyticRuleObject7": {
      "analyticRuleVersion7": "2.0.5",
      "_analyticRulecontentId7": "d6985de3-1948-41ed-9e96-c020d8098a43",
      "analyticRuleId7": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'd6985de3-1948-41ed-9e96-c020d8098a43')]",
      "analyticRuleTemplateSpecName7": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('d6985de3-1948-41ed-9e96-c020d8098a43')))]",
      "_analyticRulecontentProductId7": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','d6985de3-1948-41ed-9e96-c020d8098a43','-', '2.0.5')))]"
    },
    "analyticRuleObject8": {
      "analyticRuleVersion8": "2.0.5",
      "_analyticRulecontentId8": "b5e95dd7-67e0-4f48-9b3c-241215a97888",
      "analyticRuleId8": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'b5e95dd7-67e0-4f48-9b3c-241215a97888')]",
      "analyticRuleTemplateSpecName8": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('b5e95dd7-67e0-4f48-9b3c-241215a97888')))]",
      "_analyticRulecontentProductId8": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','b5e95dd7-67e0-4f48-9b3c-241215a97888','-', '2.0.5')))]"
    },
    "analyticRuleObject9": {
      "analyticRuleVersion9": "2.0.4",
      "_analyticRulecontentId9": "96669b22-162a-434a-97f5-ba098fe82585",
      "analyticRuleId9": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '96669b22-162a-434a-97f5-ba098fe82585')]",
      "analyticRuleTemplateSpecName9": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('96669b22-162a-434a-97f5-ba098fe82585')))]",
      "_analyticRulecontentProductId9": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','96669b22-162a-434a-97f5-ba098fe82585','-', '2.0.4')))]"
    },
    "analyticRuleObject10": {
      "analyticRuleVersion10": "2.0.5",
      "_analyticRulecontentId10": "0d10cf75-10cf-4c88-9150-046344f0c73c",
      "analyticRuleId10": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '0d10cf75-10cf-4c88-9150-046344f0c73c')]",
      "analyticRuleTemplateSpecName10": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('0d10cf75-10cf-4c88-9150-046344f0c73c')))]",
      "_analyticRulecontentProductId10": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','0d10cf75-10cf-4c88-9150-046344f0c73c','-', '2.0.5')))]"
    },
    "analyticRuleObject11": {
      "analyticRuleVersion11": "2.0.6",
      "_analyticRulecontentId11": "46151d71-c9c7-49f0-9a9d-f3159f8e976d",
      "analyticRuleId11": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '46151d71-c9c7-49f0-9a9d-f3159f8e976d')]",
      "analyticRuleTemplateSpecName11": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('46151d71-c9c7-49f0-9a9d-f3159f8e976d')))]",
      "_analyticRulecontentProductId11": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','46151d71-c9c7-49f0-9a9d-f3159f8e976d','-', '2.0.6')))]"
    },
    "analyticRuleObject12": {
      "analyticRuleVersion12": "2.0.6",
      "_analyticRulecontentId12": "c5075287-2bab-41b5-af8a-b9c15918d47f",
      "analyticRuleId12": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'c5075287-2bab-41b5-af8a-b9c15918d47f')]",
      "analyticRuleTemplateSpecName12": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('c5075287-2bab-41b5-af8a-b9c15918d47f')))]",
      "_analyticRulecontentProductId12": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','c5075287-2bab-41b5-af8a-b9c15918d47f','-', '2.0.6')))]"
    },
    "analyticRuleObject13": {
      "analyticRuleVersion13": "2.0.5",
      "_analyticRulecontentId13": "034c8a82-ef5c-4edb-9504-a9f781e10338",
      "analyticRuleId13": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '034c8a82-ef5c-4edb-9504-a9f781e10338')]",
      "analyticRuleTemplateSpecName13": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('034c8a82-ef5c-4edb-9504-a9f781e10338')))]",
      "_analyticRulecontentProductId13": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','034c8a82-ef5c-4edb-9504-a9f781e10338','-', '2.0.5')))]"
    },
    "analyticRuleObject14": {
      "analyticRuleVersion14": "2.2.5",
      "_analyticRulecontentId14": "db4d6341-cf6e-4302-b33a-bd0c6704d631",
      "analyticRuleId14": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'db4d6341-cf6e-4302-b33a-bd0c6704d631')]",
      "analyticRuleTemplateSpecName14": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('db4d6341-cf6e-4302-b33a-bd0c6704d631')))]",
      "_analyticRulecontentProductId14": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','db4d6341-cf6e-4302-b33a-bd0c6704d631','-', '2.2.5')))]"
    },
    "analyticRuleObject15": {
      "analyticRuleVersion15": "1.0.5",
      "_analyticRulecontentId15": "39f12c19-ef24-4de5-9fc6-0ad77a0ea9bb",
      "analyticRuleId15": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '39f12c19-ef24-4de5-9fc6-0ad77a0ea9bb')]",
      "analyticRuleTemplateSpecName15": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('39f12c19-ef24-4de5-9fc6-0ad77a0ea9bb')))]",
      "_analyticRulecontentProductId15": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','39f12c19-ef24-4de5-9fc6-0ad77a0ea9bb','-', '1.0.5')))]"
    },
    "analyticRuleObject16": {
      "analyticRuleVersion16": "1.0.5",
      "_analyticRulecontentId16": "6a829c52-934a-46fb-bfd2-ac660845e852",
      "analyticRuleId16": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '6a829c52-934a-46fb-bfd2-ac660845e852')]",
      "analyticRuleTemplateSpecName16": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('6a829c52-934a-46fb-bfd2-ac660845e852')))]",
      "_analyticRulecontentProductId16": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','6a829c52-934a-46fb-bfd2-ac660845e852','-', '1.0.5')))]"
    },
    "analyticRuleObject17": {
      "analyticRuleVersion17": "1.0.0",
      "_analyticRulecontentId17": "e3b6a9e7-4c3a-45e6-8baf-1d3bfa8e0c2b",
      "analyticRuleId17": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'e3b6a9e7-4c3a-45e6-8baf-1d3bfa8e0c2b')]",
      "analyticRuleTemplateSpecName17": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('e3b6a9e7-4c3a-45e6-8baf-1d3bfa8e0c2b')))]",
      "_analyticRulecontentProductId17": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','e3b6a9e7-4c3a-45e6-8baf-1d3bfa8e0c2b','-', '1.0.0')))]"
    },
    "analyticRuleObject18": {
      "analyticRuleVersion18": "1.0.0",
      "_analyticRulecontentId18": "f6a8d6a5-3e9f-47c8-a8d5-1b2b9d3b7d6a",
      "analyticRuleId18": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'f6a8d6a5-3e9f-47c8-a8d5-1b2b9d3b7d6a')]",
      "analyticRuleTemplateSpecName18": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('f6a8d6a5-3e9f-47c8-a8d5-1b2b9d3b7d6a')))]",
      "_analyticRulecontentProductId18": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','f6a8d6a5-3e9f-47c8-a8d5-1b2b9d3b7d6a','-', '1.0.0')))]"
    },
    "analyticRuleObject19": {
      "analyticRuleVersion19": "1.0.0",
      "_analyticRulecontentId19": "82cfa6b9-5f7e-4b8b-8b2f-a63f21b7a7d1",
      "analyticRuleId19": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '82cfa6b9-5f7e-4b8b-8b2f-a63f21b7a7d1')]",
      "analyticRuleTemplateSpecName19": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('82cfa6b9-5f7e-4b8b-8b2f-a63f21b7a7d1')))]",
      "_analyticRulecontentProductId19": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','82cfa6b9-5f7e-4b8b-8b2f-a63f21b7a7d1','-', '1.0.0')))]"
    },
    "huntingQueryObject1": {
      "huntingQueryVersion1": "2.0.2",
      "_huntingQuerycontentId1": "64cfb0c1-52cd-4d5e-9c05-d117e5082cc0",
      "huntingQueryTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('64cfb0c1-52cd-4d5e-9c05-d117e5082cc0')))]"
    },
    "huntingQueryObject2": {
      "huntingQueryVersion2": "2.0.2",
      "_huntingQuerycontentId2": "b6ccfddb-09d9-4451-8664-c3152174dcad",
      "huntingQueryTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('b6ccfddb-09d9-4451-8664-c3152174dcad')))]"
    },
    "huntingQueryObject3": {
      "huntingQueryVersion3": "2.0.2",
      "_huntingQuerycontentId3": "7c635360-30aa-4c89-a16d-7e66b447c960",
      "huntingQueryTemplateSpecName3": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('7c635360-30aa-4c89-a16d-7e66b447c960')))]"
    },
    "huntingQueryObject4": {
      "huntingQueryVersion4": "2.0.2",
      "_huntingQuerycontentId4": "4349bee3-e012-4804-9dff-53d6ce200d0e",
      "huntingQueryTemplateSpecName4": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('4349bee3-e012-4804-9dff-53d6ce200d0e')))]"
    },
    "huntingQueryObject5": {
      "huntingQueryVersion5": "2.0.2",
      "_huntingQuerycontentId5": "b93b70f6-6288-446b-a6b1-97d4a7a4cc0a",
      "huntingQueryTemplateSpecName5": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('b93b70f6-6288-446b-a6b1-97d4a7a4cc0a')))]"
    },
    "huntingQueryObject6": {
      "huntingQueryVersion6": "2.0.2",
      "_huntingQuerycontentId6": "ef1355c1-086f-409c-aa9f-a8be01ec2bb8",
      "huntingQueryTemplateSpecName6": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('ef1355c1-086f-409c-aa9f-a8be01ec2bb8')))]"
    },
    "huntingQueryObject7": {
      "huntingQueryVersion7": "2.0.2",
      "_huntingQuerycontentId7": "14079b48-241d-4f38-8388-94a77c8b2233",
      "huntingQueryTemplateSpecName7": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('14079b48-241d-4f38-8388-94a77c8b2233')))]"
    },
    "huntingQueryObject8": {
      "huntingQueryVersion8": "2.0.2",
      "_huntingQuerycontentId8": "d21545e6-b455-44b1-b6ed-82117bfefe8f",
      "huntingQueryTemplateSpecName8": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('d21545e6-b455-44b1-b6ed-82117bfefe8f')))]"
    },
    "huntingQueryObject9": {
      "huntingQueryVersion9": "2.0.2",
      "_huntingQuerycontentId9": "71b1eb7c-971c-46f8-bf10-8f08d64d239e",
      "huntingQueryTemplateSpecName9": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('71b1eb7c-971c-46f8-bf10-8f08d64d239e')))]"
    },
    "huntingQueryObject10": {
      "huntingQueryVersion10": "2.0.2",
      "_huntingQuerycontentId10": "dad2330d-a4d7-442c-acc8-5b05ec706658",
      "huntingQueryTemplateSpecName10": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('dad2330d-a4d7-442c-acc8-5b05ec706658')))]"
    },
    "huntingQueryObject11": {
      "huntingQueryVersion11": "2.0.2",
      "_huntingQuerycontentId11": "482a0dba-b2c4-40f7-860f-8ccebc34dbc5",
      "huntingQueryTemplateSpecName11": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('482a0dba-b2c4-40f7-860f-8ccebc34dbc5')))]"
    },
    "huntingQueryObject12": {
      "huntingQueryVersion12": "2.0.2",
      "_huntingQuerycontentId12": "bf6d639f-4573-4216-9839-22d4578eef7d",
      "huntingQueryTemplateSpecName12": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('bf6d639f-4573-4216-9839-22d4578eef7d')))]"
    },
    "huntingQueryObject13": {
      "huntingQueryVersion13": "2.0.3",
      "_huntingQuerycontentId13": "626b8462-dcc0-420a-bb69-5f7694cffb80",
      "huntingQueryTemplateSpecName13": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('626b8462-dcc0-420a-bb69-5f7694cffb80')))]"
    },
    "huntingQueryObject14": {
      "huntingQueryVersion14": "2.0.2",
      "_huntingQuerycontentId14": "de45c743-4887-46c6-90f8-88de3a3e28c4",
      "huntingQueryTemplateSpecName14": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('de45c743-4887-46c6-90f8-88de3a3e28c4')))]"
    },
    "huntingQueryObject15": {
      "huntingQueryVersion15": "2.0.2",
      "_huntingQuerycontentId15": "2a09347e-4664-4ff2-aa21-af0f82c78400",
      "huntingQueryTemplateSpecName15": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('2a09347e-4664-4ff2-aa21-af0f82c78400')))]"
    },
    "huntingQueryObject16": {
      "huntingQueryVersion16": "2.0.2",
      "_huntingQuerycontentId16": "6e0bc17a-589a-4c4f-a432-bb2371ff85b2",
      "huntingQueryTemplateSpecName16": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('6e0bc17a-589a-4c4f-a432-bb2371ff85b2')))]"
    },
    "huntingQueryObject17": {
      "huntingQueryVersion17": "2.0.2",
      "_huntingQuerycontentId17": "d76e05ba-8c54-468c-8118-c5ee773e5ed2",
      "huntingQueryTemplateSpecName17": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('d76e05ba-8c54-468c-8118-c5ee773e5ed2')))]"
    },
    "huntingQueryObject18": {
      "huntingQueryVersion18": "2.0.2",
      "_huntingQuerycontentId18": "2329cf25-5fcb-4ce1-99ec-adbd965bb46f",
      "huntingQueryTemplateSpecName18": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('2329cf25-5fcb-4ce1-99ec-adbd965bb46f')))]"
    },
    "huntingQueryObject19": {
      "huntingQueryVersion19": "2.0.2",
      "_huntingQuerycontentId19": "f6b30717-5a37-4146-abd5-847cb20f13a5",
      "huntingQueryTemplateSpecName19": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('f6b30717-5a37-4146-abd5-847cb20f13a5')))]"
    },
    "_solutioncontentProductId": "[concat(take(variables('_solutionId'),50),'-','sl','-', uniqueString(concat(variables('_solutionId'),'-','Solution','-',variables('_solutionId'),'-', variables('_solutionVersion'))))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('workbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "GSAM365EnrichedEvents Workbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('workbookVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Insights/workbooks",
              "name": "[variables('workbookContentId1')]",
              "location": "[parameters('workspace-location')]",
              "kind": "shared",
              "apiVersion": "2021-08-01",
              "metadata": {
                "description": "This Workbook provides a detailed view of Microsoft 365 log data, enriched with contextual information to enhance visibility into user activities and potential security threats."
              },
              "properties": {
                "displayName": "[parameters('workbook1-name')]",
                "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\"Please select the Log Analytics Workspace with 'EnrichedOffice365AuditLogs' enabled in the Microsoft Entra ID 'Diagnostic settings'\",\"style\":\"info\"},\"name\":\"text - 14\",\"styleSettings\":{\"showBorder\":true}},{\"type\":1,\"content\":{\"json\":\"## Enriched Microsoft 365 logs Workbook (Preview)\\n---\\n\\nThe enriched Microsoft 365 logs provide information about Microsoft 365 workloads, so you can review network data and security events relevant to Microsoft 365 apps.\"},\"name\":\"text - 2\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"crossComponentResources\":[\"value::all\"],\"parameters\":[{\"id\":\"ff8b2a55-1849-4848-acf8-eab5452e9f10\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"LogAnalyticWorkspace\",\"label\":\"Log Analytic Workspace\",\"type\":5,\"description\":\"The Log Analytic Workspace In Which To Execute The Queries\",\"isRequired\":true,\"query\":\"resources\\r\\n| where type == \\\"microsoft.operationalinsights/workspaces\\\"\\r\\n| project id\",\"crossComponentResources\":[\"value::all\"],\"typeSettings\":{\"resourceTypeFilter\":{\"microsoft.operationalinsights/workspaces\":true},\"showDefault\":false},\"timeContext\":{\"durationMs\":86400000},\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\"},{\"id\":\"f15f34d8-8e2d-4c39-8dee-be2f979c86a8\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"label\":\"Time Range\",\"type\":4,\"isRequired\":true,\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000}],\"allowCustom\":true},\"timeContext\":{\"durationMs\":86400000},\"value\":{\"durationMs\":2592000000}},{\"id\":\"8bab511b-53b3-4220-9d1c-372345b06728\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Users\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"EnrichedMicrosoft365AuditLogs\\r\\n| summarize Count = count() by UserId\\r\\n| order by Count desc, UserId asc\\r\\n| project Value = UserId, Label = strcat(UserId, ' - ', Count, ' Logs'), Selected = false\",\"crossComponentResources\":[\"{LogAnalyticWorkspace}\"],\"typeSettings\":{\"limitSelectTo\":20,\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"*\",\"showDefault\":false},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"value\":[\"value::all\"]}],\"style\":\"pills\",\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\"},\"name\":\"parameters - 15\"},{\"type\":11,\"content\":{\"version\":\"LinkItem/1.0\",\"style\":\"tabs\",\"tabStyle\":\"bigger\",\"links\":[{\"id\":\"e841bafb-6437-4d29-84ac-ba16c5a6d901\",\"cellValue\":\"selTab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Overview\",\"subTarget\":\"Overview\",\"style\":\"link\"},{\"id\":\"ac5f2082-50bc-4739-bdf2-20c93b613671\",\"cellValue\":\"selTab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"SharePoint/OneDrive Insights\",\"subTarget\":\"Threat\",\"style\":\"link\"},{\"id\":\"dc2778e7-739b-44ba-9ae4-c81901277f57\",\"cellValue\":\"selTab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Exchange Online Insights\",\"subTarget\":\"ThreatEXO\",\"style\":\"link\"},{\"id\":\"666111e2-54ff-4fa4-a648-11a5c8c0235b\",\"cellValue\":\"selTab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Teams Insights\",\"subTarget\":\"ThreatTeams\",\"style\":\"link\"}]},\"name\":\"links - 7\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EnrichedMicrosoft365AuditLogs\\r\\n| where UserId in ({Users}) or '*' in ({Users})\\r\\n| where Workload in (\\\"Exchange\\\")\\r\\n| extend GeoInfo = geo_info_from_ip_address(SourceIp) // Assuming a function exists to pull geo info\\r\\n| extend \\r\\n    Country = tostring(GeoInfo.country), \\r\\n    State = tostring(GeoInfo.state), \\r\\n    City = tostring(GeoInfo.city), \\r\\n    Latitude = tostring(GeoInfo.latitude), \\r\\n    Longitude = tostring(GeoInfo.longitude)\\r\\n| project \\r\\n    UserId, \\r\\n    Location = strcat(City, ', ', State, ', ', Country), // Constructing a full location string\\r\\n    Latitude, \\r\\n    Longitude, \\r\\n    City, \\r\\n    State, \\r\\n    Country\\r\\n| summarize Count = count() by City, State, Country\\r\\n\",\"size\":0,\"title\":\"Access By Location\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LogAnalyticWorkspace}\"],\"visualization\":\"map\",\"mapSettings\":{\"locInfo\":\"CountryRegion\",\"locInfoColumn\":\"Country\",\"latitude\":\"Latitude\",\"longitude\":\"Longitude\",\"sizeSettings\":\"Count\",\"sizeAggregation\":\"Sum\",\"labelSettings\":\"Country\",\"legendMetric\":\"Count\",\"legendAggregation\":\"Sum\",\"itemColorSettings\":{\"nodeColorField\":\"Count\",\"colorAggregation\":\"Sum\",\"type\":\"heatmap\",\"heatmapPalette\":\"turquoise\"}}},\"customWidth\":\"50\",\"name\":\"query - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EnrichedMicrosoft365AuditLogs\\r\\n| where UserId in ({Users}) or '*' in ({Users})\\r\\n| where Workload in (\\\"Exchange\\\")\\r\\n| summarize [\\\"Count\\\"] = count() by [\\\"Source IP\\\"] = SourceIp, [\\\"Device Operating System\\\"] = DeviceOperatingSystem\\r\\n| order by [\\\"Count\\\"] desc\\r\\n\",\"size\":0,\"title\":\"Access By Location And OS\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LogAnalyticWorkspace}\"]},\"customWidth\":\"50\",\"name\":\"query - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EnrichedMicrosoft365AuditLogs\\r\\n| where Operation in (\\\"Set-AdminAuditLogConfig\\\", \\\"Set-OrganizationConfig\\\")\\r\\n| project Timestamp = TimeGenerated, [\\\"User ID\\\"] = UserId, [\\\"Client IP\\\"] = ClientIp, Operation\\r\\n| summarize Count = count() by Timestamp, [\\\"User ID\\\"], [\\\"Client IP\\\"], Operation\\r\\n| project Timestamp, [\\\"User ID\\\"], [\\\"Client IP\\\"], Operation, Count\\r\\n| order by Count desc\\r\\n\",\"size\":0,\"title\":\"Audit Of Critical Configuration Changes\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LogAnalyticWorkspace}\"]},\"customWidth\":\"50\",\"name\":\"query - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EnrichedMicrosoft365AuditLogs\\r\\n| where Operation in (\\\"Set-TransportRule\\\", \\\"Set-AtpPolicyForO365\\\", \\\"Set-MalwareFilterRule\\\")\\r\\n| project Timestamp = TimeGenerated, [\\\"User ID\\\"] = UserId, [\\\"Client IP\\\"] = ClientIp, Operation\\r\\n| summarize Count = count() by Timestamp, [\\\"User ID\\\"], [\\\"Client IP\\\"], Operation\\r\\n| project Timestamp, [\\\"User ID\\\"], [\\\"Client IP\\\"], Operation, Count\\r\\n| order by Count desc\\r\\n\",\"size\":0,\"title\":\"Changes In Email Security Policies\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LogAnalyticWorkspace}\"]},\"customWidth\":\"50\",\"name\":\"query - 3\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EnrichedMicrosoft365AuditLogs\\r\\n| where Operation in (\\\"Add-RoleGroupMember\\\", \\\"Remove-ManagementRoleAssignment\\\")\\r\\n| project Timestamp = TimeGenerated, [\\\"User ID\\\"] = UserId, [\\\"Client IP\\\"] = ClientIp, Operation\\r\\n| summarize Count = count() by Timestamp, [\\\"User ID\\\"], [\\\"Client IP\\\"], Operation\\r\\n| project Timestamp, [\\\"User ID\\\"], [\\\"Client IP\\\"], Operation, Count\\r\\n| order by Count desc\\r\\n\",\"size\":0,\"title\":\"Monitoring Role Group Membership Changes\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LogAnalyticWorkspace}\"]},\"customWidth\":\"50\",\"name\":\"query - 4\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EnrichedMicrosoft365AuditLogs\\r\\n| where Operation in (\\\"New-TenantAllowBlockListSpoofitems\\\", \\\"Remove-TenantAllowBlockListSpoofitems\\\")\\r\\n| project Timestamp = TimeGenerated, [\\\"User ID\\\"] = UserId, [\\\"Client IP\\\"] = ClientIp, Operation\\r\\n| summarize Count = count() by Timestamp, [\\\"User ID\\\"], [\\\"Client IP\\\"], Operation\\r\\n| project Timestamp, [\\\"User ID\\\"], [\\\"Client IP\\\"], Operation, Count\\r\\n| order by Count desc\\r\\n\",\"size\":0,\"title\":\"Spoofing Settings Management Activities\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LogAnalyticWorkspace}\"]},\"customWidth\":\"50\",\"name\":\"query - 5\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EnrichedMicrosoft365AuditLogs\\r\\n| where Operation in (\\\"New-SafeAttachmentPolicy\\\", \\\"Set-SafeAttachmentPolicy\\\", \\\"Set-SafeAttachmentRule\\\")\\r\\n| project Timestamp = TimeGenerated, [\\\"User ID\\\"] = UserId, [\\\"Client IP\\\"] = ClientIp, Operation\\r\\n| summarize Count = count() by Timestamp, [\\\"User ID\\\"], [\\\"Client IP\\\"], Operation\\r\\n| project Timestamp, [\\\"User ID\\\"], [\\\"Client IP\\\"], Operation, Count\\r\\n| order by Count desc\\r\\n\",\"size\":0,\"title\":\"Safe Attachments Policy Changes\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LogAnalyticWorkspace}\"]},\"customWidth\":\"50\",\"name\":\"query - 6\"}]},\"conditionalVisibility\":{\"parameterName\":\"selTab\",\"comparison\":\"isEqualTo\",\"value\":\"ThreatEXO\"},\"name\":\"group - 18\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EnrichedMicrosoft365AuditLogs | where Workload == \\\"Exchange\\\" | where Operation in (\\\"Add-MailboxFolderPermission\\\", \\\"Add-RoleGroupMember\\\", \\\"New-TransportRule\\\", \\\"Remove-ManagementRoleAssignment\\\", \\\"Set-TransportRule\\\") | summarize Count = count(), Users = makeset(UserId) by Operation | order by Count desc\",\"size\":0,\"title\":\"Permission changes and security policy updates\",\"timeContext\":{\"durationMs\":86400000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LogAnalyticWorkspace}\"]},\"conditionalVisibility\":{\"parameterName\":\"seltab\",\"comparison\":\"isEqualTo\",\"value\":\"ThreatEXO\"},\"name\":\"query - 13\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EnrichedMicrosoft365AuditLogs\\r\\n| where UserId in ({Users}) or '*' in ({Users})\\r\\n| where Workload in (\\\"Teams\\\")\\r\\n| extend GeoInfo = geo_info_from_ip_address(SourceIp) // Assuming a function exists to pull geo info\\r\\n| extend \\r\\n    Country = tostring(GeoInfo.country), \\r\\n    State = tostring(GeoInfo.state), \\r\\n    City = tostring(GeoInfo.city), \\r\\n    Latitude = tostring(GeoInfo.latitude), \\r\\n    Longitude = tostring(GeoInfo.longitude)\\r\\n| project \\r\\n    UserId, \\r\\n    Location = strcat(City, ', ', State, ', ', Country), // Constructing a full location string\\r\\n    Latitude, \\r\\n    Longitude, \\r\\n    City, \\r\\n    State, \\r\\n    Country\\r\\n| summarize Count = count() by City, State, Country\\r\\n\",\"size\":0,\"title\":\"Access By Location\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LogAnalyticWorkspace}\"],\"visualization\":\"map\",\"mapSettings\":{\"locInfo\":\"CountryRegion\",\"locInfoColumn\":\"Country\",\"latitude\":\"Latitude\",\"longitude\":\"Longitude\",\"sizeSettings\":\"Count\",\"sizeAggregation\":\"Sum\",\"labelSettings\":\"Country\",\"legendMetric\":\"Count\",\"legendAggregation\":\"Sum\",\"itemColorSettings\":{\"nodeColorField\":\"Count\",\"colorAggregation\":\"Sum\",\"type\":\"heatmap\",\"heatmapPalette\":\"turquoise\"}}},\"customWidth\":\"50\",\"name\":\"query - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EnrichedMicrosoft365AuditLogs\\r\\n| where UserId in ({Users}) or '*' in ({Users})\\r\\n| where Workload in (\\\"Teams\\\")\\r\\n| summarize [\\\"Count\\\"] = count() by [\\\"Source IP\\\"] = SourceIp, [\\\"Device Operating System\\\"] = DeviceOperatingSystem\\r\\n| order by [\\\"Count\\\"] desc\\r\\n\",\"size\":0,\"title\":\"Access By Location And OS\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LogAnalyticWorkspace}\"]},\"customWidth\":\"50\",\"name\":\"query - 1\"}]},\"conditionalVisibility\":{\"parameterName\":\"selTab\",\"comparison\":\"isEqualTo\",\"value\":\"ThreatTeams\"},\"name\":\"group - 10\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EnrichedMicrosoft365AuditLogs\\r\\n| where UserId in ({Users}) or '*' in ({Users})\\r\\n| where Workload in (\\\"OneDrive\\\", \\\"SharePoint\\\",\\\"SPO/OneDrive\\\")\\r\\n| extend GeoInfo = geo_info_from_ip_address(SourceIp) // Assuming a function exists to pull geo info\\r\\n| extend \\r\\n    Country = tostring(GeoInfo.country), \\r\\n    State = tostring(GeoInfo.state), \\r\\n    City = tostring(GeoInfo.city), \\r\\n    Latitude = tostring(GeoInfo.latitude), \\r\\n    Longitude = tostring(GeoInfo.longitude)\\r\\n| project \\r\\n    UserId, \\r\\n    Location = strcat(City, ', ', State, ', ', Country), // Constructing a full location string\\r\\n    Latitude, \\r\\n    Longitude, \\r\\n    City, \\r\\n    State, \\r\\n    Country\\r\\n| summarize Count = count() by City, State, Country\\r\\n\",\"size\":0,\"title\":\"Access By Location\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LogAnalyticWorkspace}\"],\"visualization\":\"map\",\"mapSettings\":{\"locInfo\":\"CountryRegion\",\"locInfoColumn\":\"Country\",\"latitude\":\"Latitude\",\"longitude\":\"Longitude\",\"sizeSettings\":\"Count\",\"sizeAggregation\":\"Sum\",\"labelSettings\":\"Country\",\"legendMetric\":\"Country\",\"numberOfMetrics\":19,\"legendAggregation\":\"Count\",\"itemColorSettings\":{\"nodeColorField\":\"Count\",\"colorAggregation\":\"Sum\",\"type\":\"heatmap\",\"heatmapPalette\":\"turquoise\"}}},\"customWidth\":\"50\",\"conditionalVisibility\":{\"parameterName\":\"selTab\",\"comparison\":\"isEqualTo\",\"value\":\"Threat\"},\"name\":\"query - 19\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EnrichedMicrosoft365AuditLogs\\r\\n| where UserId in ({Users}) or '*' in ({Users})\\r\\n| where Workload in (\\\"OneDrive\\\", \\\"SharePoint\\\", \\\"SPO/OneDrive\\\")\\r\\n| summarize [\\\"Event Count\\\"] = count() by [\\\"Source IP\\\"] = SourceIp, [\\\"Device Operating System\\\"] = DeviceOperatingSystem\\r\\n| order by [\\\"Event Count\\\"] desc\\r\\n\",\"size\":2,\"title\":\"Access By Location And OS\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LogAnalyticWorkspace}\"],\"gridSettings\":{\"filter\":true}},\"customWidth\":\"50\",\"name\":\"query - 20\"}]},\"conditionalVisibility\":{\"parameterName\":\"selTab\",\"comparison\":\"isEqualTo\",\"value\":\"Threat\"},\"name\":\"group - 20\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EnrichedMicrosoft365AuditLogs\\r\\n| where Workload == \\\"Teams\\\"\\r\\n| where Operation in (\\\"MemberAdded\\\", \\\"MemberRemoved\\\", \\\"TeamDeleted\\\")\\r\\n| project Timestamp = TimeGenerated, [\\\"User ID\\\"] = UserId, [\\\"Client IP\\\"] = ClientIp, Operation\\r\\n| summarize Count = count() by Timestamp, [\\\"User ID\\\"], [\\\"Client IP\\\"], Operation\\r\\n| project Timestamp, [\\\"User ID\\\"], [\\\"Client IP\\\"], Operation, Count\\r\\n| order by Count desc\\r\\n\",\"size\":0,\"title\":\"Changes In Team Memberships\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LogAnalyticWorkspace}\"]},\"conditionalVisibility\":{\"parameterName\":\"selTab\",\"comparison\":\"isEqualTo\",\"value\":\"ThreatTeams\"},\"customWidth\":\"50\",\"name\":\"query - 11\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let RiskyExtensions = dynamic([\\\"exe\\\", \\\"msi\\\", \\\"bat\\\", \\\"cmd\\\", \\\"com\\\", \\\"scr\\\", \\\"pif\\\", \\\"ps1\\\", \\\"vbs\\\", \\\"js\\\", \\\"jse\\\", \\\"wsf\\\", \\\"docm\\\", \\\"xlsm\\\", \\\"pptm\\\", \\\"dll\\\", \\\"ocx\\\", \\\"cpl\\\", \\\"app\\\", \\\"vb\\\", \\\"reg\\\", \\\"inf\\\", \\\"hta\\\"]);\\r\\n\\r\\nEnrichedMicrosoft365AuditLogs\\r\\n| where Workload in (\\\"SPO/OneDrive\\\")\\r\\n| where UserId in ({Users}) or '*' in ({Users})\\r\\n| extend [\\\"File Extension\\\"] = tostring(parse_json(AdditionalProperties).SourceFileExtension)\\r\\n| where [\\\"File Extension\\\"] in (RiskyExtensions)\\r\\n| project Timestamp = TimeGenerated, [\\\"User ID\\\"] = UserId, [\\\"Client IP\\\"] = ClientIp, [\\\"File Extension\\\"], Operation\\r\\n| summarize Count = count() by Timestamp, [\\\"User ID\\\"], [\\\"Client IP\\\"], [\\\"File Extension\\\"], Operation\\r\\n| project Timestamp, [\\\"User ID\\\"], [\\\"Client IP\\\"], [\\\"File Extension\\\"], Operation, Count\\r\\n\",\"size\":0,\"title\":\"Risky File Operations\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LogAnalyticWorkspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"OperationCount\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\"}}]}},\"customWidth\":\"50\",\"conditionalVisibility\":{\"parameterName\":\"selTab\",\"comparison\":\"isEqualTo\",\"value\":\"Threat\"},\"name\":\"query - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EnrichedMicrosoft365AuditLogs\\r\\n| where Workload in (\\\"OneDrive\\\", \\\"SharePoint\\\", \\\"SPO/OneDrive\\\")\\r\\n| where Operation in (\\\"FileRecycled\\\", \\\"FileDownloaded\\\", \\\"FileUploaded\\\", \\\"FileCreated\\\", \\\"File Modified\\\")\\r\\n| project Timestamp = TimeGenerated, [\\\"User ID\\\"] = UserId, [\\\"Client IP\\\"] = ClientIp, Operation\\r\\n| summarize Count = count() by Timestamp, [\\\"User ID\\\"], [\\\"Client IP\\\"], Operation\\r\\n| project Timestamp, [\\\"User ID\\\"], [\\\"Client IP\\\"], Operation, Count\\r\\n| order by Count desc\\r\\n\",\"size\":0,\"title\":\"Bulk File Events\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LogAnalyticWorkspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"OperationCount\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\"}}]}},\"customWidth\":\"50\",\"conditionalVisibility\":{\"parameterName\":\"selTab\",\"comparison\":\"isEqualTo\",\"value\":\"Threat\"},\"name\":\"query - 8\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EnrichedMicrosoft365AuditLogs\\r\\n| where Workload in (\\\"SPO/OneDrive\\\")\\r\\n| where Operation == \\\"FileDeletedFirstStageRecycleBin\\\"\\r\\n| project Timestamp = TimeGenerated, [\\\"User ID\\\"] = UserId, [\\\"Client IP\\\"] = ClientIp, Operation\\r\\n| summarize Count = count() by bin(Timestamp, 1h), [\\\"User ID\\\"], [\\\"Client IP\\\"], Operation\\r\\n| project Timestamp, [\\\"User ID\\\"], [\\\"Client IP\\\"], Operation, Count\\r\\n| order by Count desc\\r\\n| where Count > 1\\r\\n\",\"size\":0,\"title\":\" Bulk File Deletion Operations\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LogAnalyticWorkspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"FileDeletions\",\"formatter\":8,\"formatOptions\":{\"palette\":\"blue\"}}]}},\"customWidth\":\"50\",\"conditionalVisibility\":{\"parameterName\":\"selTab\",\"comparison\":\"isEqualTo\",\"value\":\"Threat\"},\"name\":\"query - 3\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let baselinePeriod = 30d;\\r\\nlet detectionWindow = 1h;\\r\\nlet downloadThreshold = 5; // Threshold of downloads indicating potential exfiltration\\r\\n\\r\\nEnrichedMicrosoft365AuditLogs\\r\\n| where TimeGenerated >= ago(baselinePeriod)\\r\\n| where Workload in (\\\"OneDrive\\\", \\\"SharePoint\\\", \\\"SPO/OneDrive\\\")\\r\\n| where Operation == \\\"FileDownloaded\\\"\\r\\n| project Timestamp = TimeGenerated, [\\\"User ID\\\"] = UserId, [\\\"Client IP\\\"] = ClientIp, Operation\\r\\n| summarize Count = count() by bin(Timestamp, detectionWindow), [\\\"User ID\\\"], [\\\"Client IP\\\"], Operation\\r\\n| project Timestamp, [\\\"User ID\\\"], [\\\"Client IP\\\"], Operation, Count\\r\\n| order by Count desc\\r\\n\",\"size\":0,\"title\":\"Bulk File Download\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LogAnalyticWorkspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"DownloadCount\",\"formatter\":8,\"formatOptions\":{\"palette\":\"blue\"}}]}},\"customWidth\":\"50\",\"conditionalVisibility\":{\"parameterName\":\"selTab\",\"comparison\":\"isEqualTo\",\"value\":\"Threat\"},\"name\":\"query - 4\"}]},\"name\":\"group - 9\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EnrichedMicrosoft365AuditLogs\\r\\n| where UserId in ({Users}) or '*' in ({Users})\\r\\n| extend GeoInfo = geo_info_from_ip_address(SourceIp) // Assuming a function exists to pull geo info\\r\\n| extend \\r\\n    Country = tostring(GeoInfo.country), \\r\\n    State = tostring(GeoInfo.state), \\r\\n    City = tostring(GeoInfo.city), \\r\\n    Latitude = tostring(GeoInfo.latitude), \\r\\n    Longitude = tostring(GeoInfo.longitude)\\r\\n| project \\r\\n    UserId, \\r\\n    Location = strcat(City, ', ', State, ', ', Country), // Constructing a full location string\\r\\n    Latitude, \\r\\n    Longitude, \\r\\n    City, \\r\\n    State, \\r\\n    Country\\r\\n      | where tostring(Country) != \\\"\\\"\\r\\n| summarize Count = count() by City, State, Country\\r\\n\\r\\n\\r\\n\",\"size\":0,\"title\":\"Access By Location\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LogAnalyticWorkspace}\"],\"visualization\":\"map\",\"mapSettings\":{\"locInfo\":\"CountryRegion\",\"locInfoColumn\":\"Country\",\"latitude\":\"Latitude\",\"longitude\":\"Longitude\",\"sizeSettings\":\"Count\",\"sizeAggregation\":\"Sum\",\"minSize\":20,\"labelSettings\":\"Country\",\"legendMetric\":\"Country\",\"numberOfMetrics\":8,\"legendAggregation\":\"Count\",\"itemColorSettings\":{\"nodeColorField\":\"Count\",\"colorAggregation\":\"Sum\",\"type\":\"heatmap\",\"heatmapPalette\":\"turquoise\"}}},\"customWidth\":\"50\",\"conditionalVisibility\":{\"parameterName\":\"selTab\",\"comparison\":\"isEqualTo\",\"value\":\"Overview\"},\"name\":\"query - 5\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EnrichedMicrosoft365AuditLogs\\r\\n| where UserId in ({Users}) or '*' in ({Users})\\r\\n| summarize [\\\"Event Count\\\"] = count() by [\\\"Time Generated\\\"] = TimeGenerated, [\\\"User\\\"] = UserId, [\\\"Source IP\\\"] = SourceIp, [\\\"Device Operating System\\\"] = DeviceOperatingSystem, [\\\"Workload\\\"] = Workload\\r\\n| order by [\\\"Time Generated\\\"] desc\\r\\n\",\"size\":0,\"title\":\"Access By Location And OS\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LogAnalyticWorkspace}\"],\"gridSettings\":{\"rowLimit\":1000,\"filter\":true}},\"customWidth\":\"50\",\"conditionalVisibility\":{\"parameterName\":\"selTab\",\"comparison\":\"isEqualTo\",\"value\":\"Overview\"},\"name\":\"query - 1\"}]},\"name\":\"group - 19\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let data = EnrichedMicrosoft365AuditLogs\\r\\n| where UserId in ({Users}) or '*' in ({Users})\\r\\n| project \\r\\n    Operation, \\r\\n    UserId, \\r\\n    Workload, \\r\\n    SourceIp, \\r\\n    DeviceId, \\r\\n    TimeGenerated, \\r\\n    Details = pack_all(),\\r\\n    OS = tostring(DeviceOperatingSystem)\\r\\n| extend Workload = tostring(Workload)\\r\\n| extend WorkloadStatus = case(\\r\\n    Workload == \\\"Exchange\\\", \\\"Exchange\\\",\\r\\n    Workload == \\\"Teams\\\", \\\"Teams\\\",\\r\\n    Workload == \\\"SharePoint\\\", \\\"SharePoint\\\",\\r\\n    \\\"Other\\\"\\r\\n);\\r\\n\\r\\nlet appData = data\\r\\n| summarize \\r\\n    TotalCount = count(), \\r\\n    ExchangeCount = countif(Workload == \\\"Exchange\\\"), \\r\\n    TeamsCount = countif(Workload == \\\"Teams\\\"), \\r\\n    SharePointCount = countif(Workload == \\\"SharePoint\\\"), \\r\\n    OtherCount = countif(Workload == \\\"Other\\\") \\r\\n    by UserId\\r\\n| where UserId != ''\\r\\n| join kind=inner (\\r\\n    data\\r\\n    | make-series Trend = count() default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by UserId\\r\\n    | project-away TimeGenerated\\r\\n  ) on UserId\\r\\n| order by TotalCount desc, UserId asc\\r\\n| project UserId, TotalCount, ExchangeCount, TeamsCount, SharePointCount, OtherCount, Trend\\r\\n| serialize Id = row_number();\\r\\n\\r\\ndata\\r\\n| summarize \\r\\n    TotalCount = count(), \\r\\n    ExchangeCount = countif(Workload == \\\"Exchange\\\"), \\r\\n    TeamsCount = countif(Workload == \\\"Teams\\\"), \\r\\n    SharePointCount = countif(Workload == \\\"SharePoint\\\"), \\r\\n    OtherCount = countif(Workload == \\\"Other\\\") \\r\\n    by UserId, SourceIp = tostring(SourceIp)\\r\\n| join kind=inner (\\r\\n    data\\r\\n    | make-series Trend = count() default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by UserId, SourceIp\\r\\n    | project-away TimeGenerated\\r\\n  ) on UserId, SourceIp\\r\\n| order by TotalCount desc, UserId asc\\r\\n| project UserId, SourceIp, TotalCount, ExchangeCount, TeamsCount, SharePointCount, OtherCount, Trend\\r\\n| serialize Id = row_number(1000000)\\r\\n| join kind=inner (appData) on UserId\\r\\n| project Id, Name = SourceIp, Type = 'Client IP', ['Events Count'] = TotalCount, Trend, ['Exchange Events'] = ExchangeCount, ['Teams Events'] = TeamsCount, ['SharePoint Events'] = SharePointCount, ['Other Count'] = OtherCount, ParentId = Id1\\r\\n| union (\\r\\n    appData \\r\\n    | project Id, Name = UserId, Type = 'Operating System', ['Events Count'] = TotalCount, Trend, ['Exchange Events'] = ExchangeCount, ['Teams Events'] = TeamsCount, ['SharePoint Events'] = SharePointCount, ['Other Count'] = OtherCount, ParentId = -1\\r\\n  )\\r\\n| order by ['Events Count'] desc, Name asc\\r\\n\",\"size\":2,\"title\":\"Activity Log\",\"timeContextFromParameter\":\"TimeRange\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LogAnalyticWorkspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Id\",\"formatter\":5},{\"columnMatch\":\"Type\",\"formatter\":5},{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"Other Count\",\"formatter\":5},{\"columnMatch\":\"ParentId\",\"formatter\":5},{\"columnMatch\":\"Operation Count\",\"formatter\":8,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"Exchange Count\",\"formatter\":8,\"formatOptions\":{\"min\":0,\"palette\":\"blue\"}},{\"columnMatch\":\"Teams Count\",\"formatter\":8,\"formatOptions\":{\"min\":0,\"palette\":\"purple\"}},{\"columnMatch\":\"SharePoint Count\",\"formatter\":8,\"formatOptions\":{\"min\":0,\"palette\":\"turquoise\"}},{\"columnMatch\":\"Details\",\"formatter\":5,\"formatOptions\":{\"linkTarget\":\"GenericDetails\",\"linkIsContextBlade\":true}}],\"rowLimit\":1000,\"filter\":true,\"hierarchySettings\":{\"idColumn\":\"Id\",\"parentColumn\":\"ParentId\",\"treeType\":0,\"expanderColumn\":\"Name\"}}},\"conditionalVisibility\":{\"parameterName\":\"selTab\",\"comparison\":\"isEqualTo\",\"value\":\"Overview\"},\"name\":\"query - 6\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"<br />\\r\\n💡 _Click on a segment of the pie chart to explore more details_\"},\"conditionalVisibility\":{\"parameterName\":\"selTab\",\"comparison\":\"isEqualTo\",\"value\":\"Overview\"},\"name\":\"text - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EnrichedMicrosoft365AuditLogs\\r\\n| extend \\r\\n    OS = coalesce(DeviceOperatingSystem, \\\"Unknown OS\\\"),\\r\\n    OSVersion = coalesce(tostring(DeviceOperatingSystemVersion), \\\"Unknown Version\\\")\\r\\n| summarize DeviceCount = count() by OS, OSVersion\\r\\n| order by DeviceCount desc\\r\\n\",\"size\":3,\"title\":\"Devices Accessing M365\",\"timeContextFromParameter\":\"TimeRange\",\"exportParameterName\":\"Parampie\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LogAnalyticWorkspace}\"],\"visualization\":\"piechart\"},\"customWidth\":\"50\",\"conditionalVisibility\":{\"parameterName\":\"selTab\",\"comparison\":\"isEqualTo\",\"value\":\"Overview\"},\"name\":\"query - 6\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EnrichedMicrosoft365AuditLogs\\r\\n| where UserId in ({Users}) or '*' in ({Users})\\r\\n| extend \\r\\n    [\\\"Operating System\\\"] = coalesce(DeviceOperatingSystem, \\\"Unknown OS\\\"),\\r\\n    [\\\"OS Version\\\"] = coalesce(tostring(DeviceOperatingSystemVersion), \\\"Unknown Version\\\"),\\r\\n    [\\\"Device ID\\\"] = coalesce(tostring(DeviceId), \\\"Unknown DeviceId\\\")\\r\\n| where [\\\"Operating System\\\"] == dynamic({Parampie}).label\\r\\n| summarize [\\\"Device Count\\\"] = count() by [\\\"Operating System\\\"], [\\\"OS Version\\\"], [\\\"Device ID\\\"]\\r\\n| order by [\\\"Device Count\\\"] desc\\r\\n\",\"size\":2,\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LogAnalyticWorkspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"$gen_group\",\"formatter\":1}],\"hierarchySettings\":{\"treeType\":1,\"groupBy\":[\"OperatingSystem\",\"OSVersion\"],\"expandTopLevel\":false}}},\"customWidth\":\"50\",\"conditionalVisibilities\":[{\"parameterName\":\"selTab\",\"comparison\":\"isEqualTo\",\"value\":\"Overview\"},{\"parameterName\":\"Parampie\",\"comparison\":\"isNotEqualTo\"}],\"name\":\"query - 1\"}]},\"name\":\"group - 19\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let BusinessHoursStart = 8; // 8 AM\\r\\nlet BusinessHoursEnd = 18; // 6 PM\\r\\n\\r\\nEnrichedMicrosoft365AuditLogs \\r\\n| where UserId in ({Users}) or '*' in ({Users})\\r\\n| extend HourOfDay = hourofday(TimeGenerated)\\r\\n| where HourOfDay < BusinessHoursStart or HourOfDay > BusinessHoursEnd\\r\\n| summarize [\\\"Off-Hour Activities\\\"] = count() by [\\\"User ID\\\"] = UserId, [\\\"Date\\\"] = bin(TimeGenerated, 1d), [\\\"Operation\\\"]\\r\\n| order by [\\\"Off-Hour Activities\\\"] desc\\r\\n\",\"size\":0,\"title\":\"Activity Outside Standard Working Hours (8:00 - 18:00)\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LogAnalyticWorkspace}\"]},\"conditionalVisibility\":{\"parameterName\":\"selTab\",\"comparison\":\"isEqualTo\",\"value\":\"Overview\"},\"name\":\"query - 14\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EnrichedMicrosoft365AuditLogs\\n| summarize Count = count() by bin(TimeGenerated, 1h)\\n| order by TimeGenerated asc\\n\",\"size\":0,\"title\":\"Microsoft 365 Transactions\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LogAnalyticWorkspace}\"],\"visualization\":\"unstackedbar\"},\"conditionalVisibility\":{\"parameterName\":\"selTab\",\"comparison\":\"isEqualTo\",\"value\":\"Overview\"},\"name\":\"query - 2\"}],\"fallbackResourceIds\":[\"Global Secure Access\"],\"fromTemplateId\":\"community-Workbooks/Global Secure Access/Microsoft Entra Internet Access/Enriched Microsoft 365 logs\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
                "version": "1.0",
                "sourceId": "[variables('workspaceResourceId')]",
                "category": "sentinel"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Workbook-', last(split(variables('workbookId1'),'/'))))]",
              "properties": {
                "description": "@{workbookKey=GSAM365EnrichedEvents; logoFileName=gsa.svg; description=This Workbook provides a detailed view of Microsoft 365 log data, enriched with contextual information to enhance visibility into user activities and potential security threats.; dataTypesDependencies=System.Object[]; dataConnectorsDependencies=System.Object[]; previewImagesFileNames=System.Object[]; version=1.0.0; title=Microsoft Global Secure Access Enriched M365 Logs; templateRelativePath=GSAM365EnrichedEvents.json; provider=Microsoft}.description",
                "parentId": "[variables('workbookId1')]",
                "contentId": "[variables('_workbookContentId1')]",
                "kind": "Workbook",
                "version": "[variables('workbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Global Secure Access",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Partner",
                  "name": "Microsoft Corporation",
                  "email": "GSASentinelSupport@microsoft.com",
                  "link": "https://learn.microsoft.com/en-us/entra/global-secure-access/overview-what-is-global-secure-access"
                },
                "dependencies": {
                  "operator": "AND",
                  "criteria": [
                    {
                      "contentId": "AzureActiveDirectory",
                      "kind": "DataConnector"
                    }
                  ]
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_workbookContentId1')]",
        "contentKind": "Workbook",
        "displayName": "[parameters('workbook1-name')]",
        "contentProductId": "[variables('_workbookcontentProductId1')]",
        "id": "[variables('_workbookcontentProductId1')]",
        "version": "[variables('workbookVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('workbookTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "GSANetworkTraffic Workbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('workbookVersion2')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Insights/workbooks",
              "name": "[variables('workbookContentId2')]",
              "location": "[parameters('workspace-location')]",
              "kind": "shared",
              "apiVersion": "2021-08-01",
              "metadata": {
                "description": "This workbook provides an overview of all traffic logs within your network, offering insights into data transfer, anomalies, and potential threats."
              },
              "properties": {
                "displayName": "[parameters('workbook2-name')]",
                "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\"Please select the Log Analytics Workspace with 'NetworkAccessTrafficLogs' enabled through 'Diagnostic settings' in Microsoft Entra ID\",\"style\":\"info\"},\"name\":\"text - 7\",\"styleSettings\":{\"showBorder\":true}},{\"type\":1,\"content\":{\"json\":\"## Network Traffic Insights Workbook (Preview)\\n---\\nInformation in the dashboard is based on log data\\n\\n\\n\"},\"name\":\"text - 2\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"crossComponentResources\":[\"value::all\"],\"parameters\":[{\"id\":\"ff8b2a55-1849-4848-acf8-eab5452e9f10\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"LogAnalyticWorkspace\",\"label\":\"Log Analytic Workspace\",\"type\":5,\"description\":\"The Log Analytic Workspace In Which To Execute The Queries\",\"isRequired\":true,\"query\":\"resources\\r\\n| where type == \\\"microsoft.operationalinsights/workspaces\\\"\\r\\n| project id\",\"crossComponentResources\":[\"value::all\"],\"typeSettings\":{\"resourceTypeFilter\":{\"microsoft.operationalinsights/workspaces\":true},\"showDefault\":false},\"timeContext\":{\"durationMs\":2592000000},\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\"},{\"id\":\"f15f34d8-8e2d-4c39-8dee-be2f979c86a8\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"label\":\"Time Range\",\"type\":4,\"isRequired\":true,\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000}],\"allowCustom\":true},\"timeContext\":{\"durationMs\":86400000},\"value\":{\"durationMs\":604800000}},{\"id\":\"8bab511b-53b3-4220-9d1c-372345b06728\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Users\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"NetworkAccessTraffic\\r\\n| summarize Count = count() by UserPrincipalName\\r\\n| order by Count desc, UserPrincipalName asc\\r\\n| project Value = UserPrincipalName, Label = strcat(UserPrincipalName, ' - ', Count, ' Logs'), Selected = false\",\"crossComponentResources\":[\"{LogAnalyticWorkspace}\"],\"typeSettings\":{\"limitSelectTo\":20,\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"*\",\"showDefault\":false},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"value\":[\"value::all\"]},{\"id\":\"527af4d2-3089-4aa4-9fbb-48ec697db20d\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"WebCategories\",\"label\":\"Web Categories\",\"type\":2,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"NetworkAccessTraffic\\r\\n| extend firstCategory = tostring(split(DestinationWebCategories, ',')[0]) // Split and get the first category\\r\\n| summarize Count = count() by firstCategory\\r\\n| order by Count desc, firstCategory asc\\r\\n| project Value = firstCategory, Label = strcat(firstCategory, ' - ', Count, ' Logs')\",\"crossComponentResources\":[\"{LogAnalyticWorkspace}\"],\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"*\",\"showDefault\":false},\"timeContext\":{\"durationMs\":604800000},\"timeContextFromParameter\":\"TimeRange\",\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"value\":[\"value::all\"]}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 15\"},{\"type\":11,\"content\":{\"version\":\"LinkItem/1.0\",\"style\":\"tabs\",\"links\":[{\"id\":\"2b2cd1be-9d25-412c-8444-f005c4789b55\",\"cellValue\":\"tabSel\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Overview\",\"subTarget\":\"Overview\",\"style\":\"link\"},{\"id\":\"cc3e67f2-f20f-4430-8dee-d0773b90d9ce\",\"cellValue\":\"tabSel\",\"linkTarget\":\"parameter\",\"linkLabel\":\"All Traffic\",\"subTarget\":\"AllTraffic\",\"style\":\"link\"},{\"id\":\"5ae54b5a-ac7b-4b7a-a1e1-1e574625caa3\",\"cellValue\":\"tabSel\",\"linkTarget\":\"parameter\",\"linkLabel\":\"URL Lookup\",\"subTarget\":\"URLLookup\",\"style\":\"link\"},{\"id\":\"68c566f8-957e-4a3f-8b66-730fc24135fb\",\"cellValue\":\"tabSel\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Security Insights\",\"subTarget\":\"Security\",\"style\":\"link\"}]},\"name\":\"links - 7\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let NetworkAccessTrafficData = NetworkAccessTraffic\\r\\n| where SourceIp != \\\"\\\" and isnotempty(SourceIp)\\r\\n| summarize arg_max(TimeGenerated, *) by SourceIp, TenantId;\\r\\n\\r\\nlet SigninLogsData = SigninLogs\\r\\n| where IPAddress != \\\"\\\" and isnotempty(IPAddress)\\r\\n| summarize arg_max(TimeGenerated, *) by IPAddress, TenantId, UserId, CorrelationId;\\r\\n\\r\\nSigninLogsData\\r\\n| join kind=leftanti (\\r\\n    NetworkAccessTrafficData\\r\\n    | where SourceIp != \\\"\\\" and isnotempty(SourceIp)\\r\\n) on $left.IPAddress == $right.SourceIp and $left.TenantId == $right.TenantId\\r\\n| project TimeGenerated, IPAddress, UserId, UserPrincipalName, AppDisplayName, DeviceDetail.deviceId\\r\\n\",\"size\":0,\"title\":\"Sign-ins Outside Global Secure Access\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LogAnalyticWorkspace}\"],\"gridSettings\":{\"rowLimit\":1000,\"filter\":true}},\"name\":\"query - 0\"}]},\"conditionalVisibility\":{\"parameterName\":\"tabSel\",\"comparison\":\"isEqualTo\",\"value\":\"Security\"},\"name\":\"group - 10\"},{\"type\":1,\"content\":{\"json\":\"💡 Type the URL for detailed analysis\"},\"conditionalVisibility\":{\"parameterName\":\"tabSel\",\"comparison\":\"isEqualTo\",\"value\":\"URLLookup\"},\"name\":\"text - 10\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"ec8c38c8-3064-4921-8dcd-a69d3895599b\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"URL\",\"type\":1,\"typeSettings\":{\"isSearchBox\":true},\"timeContext\":{\"durationMs\":86400000}}],\"style\":\"above\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"conditionalVisibility\":{\"parameterName\":\"tabSel\",\"comparison\":\"isEqualTo\",\"value\":\"URLLookup\"},\"name\":\"parameters - 9\"},{\"type\":1,\"content\":{\"json\":\"# Web Categories\"},\"name\":\"text - 11\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let CategoryData = NetworkAccessTraffic \\r\\n| where DestinationFqdn contains \\\"{URL}\\\"  // Filters logs based on the provided URL parameter\\r\\n| extend CategoriesList = split(DestinationWebCategories, \\\",\\\")  // Split categories into a list\\r\\n| mv-expand Category = CategoriesList  // Expand the list into individual rows\\r\\n| extend Category = trim_start(\\\" \\\", trim_end(\\\" \\\", tostring(Category)))  // Trim leading and trailing spaces\\r\\n| extend Category = iff(TrafficType == \\\"microsoft365\\\", \\\"Microsoft M365\\\", Category)  // Set category to \\\"Microsoft M365\\\" if TrafficType is \\\"microsoft365\\\"\\r\\n| summarize UniqueCategories = make_set(Category);  // Create a set of unique categories\\r\\n\\r\\nCategoryData\\r\\n| extend \\r\\n    PrimaryCategory = iff(array_length(UniqueCategories) > 0, tostring(UniqueCategories[0]), \\\"None\\\")\\r\\n| project \\r\\n    col1 = PrimaryCategory,\\r\\n    snapshot = \\\"Primary Category\\\"\\r\\n\\r\\n| union (\\r\\n    CategoryData\\r\\n    | extend \\r\\n        SecondaryCategory = iff(array_length(UniqueCategories) > 1, tostring(UniqueCategories[1]), \\\"None\\\")\\r\\n    | project \\r\\n        col1 = SecondaryCategory,\\r\\n        snapshot = \\\"Secondary Category\\\"\\r\\n)\\r\\n\\r\\n| order by snapshot asc\\r\\n\",\"size\":4,\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LogAnalyticWorkspace}\"],\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"snapshot\"},\"leftContent\":{\"columnMatch\":\"col1\",\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2}}},\"showBorder\":true,\"size\":\"auto\"}},\"name\":\"query - 17\"},{\"type\":1,\"content\":{\"json\":\"# Traffic Access Details\"},\"name\":\"text - 15\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let NetworkData = NetworkAccessTraffic\\r\\n| where DestinationFqdn contains \\\"{URL}\\\";  // Filters logs based on the provided URL parameter\\r\\n\\r\\nNetworkData\\r\\n| summarize \\r\\n    UniqueUsers = dcount(UserPrincipalName),\\r\\n    UniqueDevices = dcount(DeviceId),    \\r\\n    TotalAllow = countif(Action == \\\"Allow\\\"),\\r\\n    TotalBlock = countif(Action == \\\"Block\\\")\\r\\n| project \\r\\n    col1 = UniqueUsers, \\r\\n    snapshot = \\\"Unique Users\\\"\\r\\n| union (NetworkData\\r\\n    | summarize UniqueDevices = dcount(DeviceId)\\r\\n    | project col1 = UniqueDevices, snapshot = \\\"Unique Devices\\\")\\r\\n| union (NetworkData\\r\\n    | summarize TotalAllow = countif(Action == \\\"Allow\\\")\\r\\n    | project col1 = TotalAllow, snapshot = \\\"Total Allow\\\")\\r\\n| union (NetworkData\\r\\n    | summarize TotalBlock = countif(Action == \\\"Block\\\")\\r\\n    | project col1 = TotalBlock, snapshot = \\\"Total Block\\\")\\r\\n| order by snapshot asc\",\"size\":4,\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LogAnalyticWorkspace}\"],\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"snapshot\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"col1\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"showBorder\":true}},\"name\":\"query - 14\"},{\"type\":1,\"content\":{\"json\":\"# Bandwidth Usage\"},\"name\":\"text - 16\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let NetworkData = NetworkAccessTraffic\\r\\n| where DestinationFqdn contains \\\"{URL}\\\";  // Filters logs based on the provided URL parameter\\r\\n\\r\\nNetworkData\\r\\n| summarize \\r\\n    TotalSent = sum(SentBytes),\\r\\n    TotalReceived = sum(ReceivedBytes),\\r\\n    TotalBandwidth = sum(SentBytes + ReceivedBytes)\\r\\n| extend \\r\\n    TotalSentMB = round(TotalSent / 1024.0 / 1024.0, 2),\\r\\n    TotalReceivedMB = round(TotalReceived / 1024.0 / 1024.0, 2),\\r\\n    TotalBandwidthMB = round(TotalBandwidth / 1024.0 / 1024.0, 2)\\r\\n| project \\r\\n    TotalSentMB,\\r\\n    TotalReceivedMB,\\r\\n    TotalBandwidthMB\\r\\n| extend dummy = 1\\r\\n| project-away dummy\\r\\n| mv-expand \\r\\n    Column = pack_array(\\\"TotalSentMB\\\", \\\"TotalReceivedMB\\\", \\\"TotalBandwidthMB\\\"),\\r\\n    Value = pack_array(TotalSentMB, TotalReceivedMB, TotalBandwidthMB)\\r\\n| extend \\r\\n    snapshot = case(\\r\\n        Column == \\\"TotalSentMB\\\", \\\"Total Sent (MB)\\\",\\r\\n        Column == \\\"TotalReceivedMB\\\", \\\"Total Received (MB)\\\",\\r\\n        Column == \\\"TotalBandwidthMB\\\", \\\"Total Bandwidth (MB)\\\",\\r\\n        \\\"Unknown\\\"\\r\\n    ),\\r\\n    col1 = iff(Value < 0.01, 0.00, Value)\\r\\n| project-away Column, Value\\r\\n| order by snapshot asc\",\"size\":4,\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LogAnalyticWorkspace}\"],\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"snapshot\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"col1\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"showBorder\":true}},\"name\":\"query - 17\"},{\"type\":1,\"content\":{\"json\":\"# Traffic Logs (filtered)\"},\"name\":\"text - 12\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"NetworkAccessTraffic\\r\\n| where UserPrincipalName in ({Users}) or '*' in ({Users})\\r\\n| where DestinationWebCategories in ({WebCategories}) or '*' in ({WebCategories})\\r\\n| where DestinationFqdn contains \\\"{URL}\\\"\\r\\n| project \\r\\n    Timestamp = TimeGenerated,\\r\\n    User = UserPrincipalName,\\r\\n    [\\\"Source IP\\\"] = SourceIp,\\r\\n    [\\\"Destination IP\\\"] = DestinationIp,\\r\\n    [\\\"Destination Port\\\"] = DestinationPort,\\r\\n    [\\\"Destination FQDN\\\"] = DestinationFqdn,\\r\\n    Action = case(\\r\\n        tolower(Action) == \\\"allow\\\", \\\"🟢 Allow\\\", \\r\\n        tolower(Action) == \\\"block\\\", \\\"🔴 Block\\\", \\r\\n        tolower(Action) // This returns the action in lowercase if it doesn't match \\\"allow\\\" or \\\"block\\\"\\r\\n    ),\\r\\n    [\\\"Policy Name\\\"] = PolicyName,\\r\\n    [\\\"Policy Rule ID\\\"] = PolicyRuleId,\\r\\n    [\\\"Received Bytes\\\"] = ReceivedBytes,\\r\\n    [\\\"Sent Bytes\\\"] = SentBytes,\\r\\n    [\\\"Device OS\\\"] = DeviceOperatingSystem    \\r\\n| order by Timestamp desc\\r\\n\",\"size\":0,\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LogAnalyticWorkspace}\"]},\"name\":\"query - 13\"}]},\"conditionalVisibility\":{\"parameterName\":\"tabSel\",\"comparison\":\"isEqualTo\",\"value\":\"URLLookup\"},\"name\":\"group - URL Lookup\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"NetworkAccessTraffic\\r\\n| where UserPrincipalName in ({Users}) or '*' in ({Users})\\r\\n| where DestinationWebCategories in ({WebCategories}) or '*' in ({WebCategories})\\r\\n| project \\r\\n    Timestamp = TimeGenerated,\\r\\n    User = UserPrincipalName,\\r\\n    [\\\"Source IP\\\"] = SourceIp,\\r\\n    [\\\"Destination IP\\\"] = DestinationIp,\\r\\n    [\\\"Destination Port\\\"] = DestinationPort,\\r\\n    [\\\"Destination FQDN\\\"] = DestinationFqdn,\\r\\n    Action = case(\\r\\n        tolower(Action) == \\\"allow\\\", \\\"🟢 Allow\\\", \\r\\n        tolower(Action) == \\\"block\\\", \\\"🔴 Block\\\", \\r\\n        tolower(Action) // This returns the action in lowercase if it doesn't match \\\"allow\\\" or \\\"block\\\"\\r\\n    ),\\r\\n    [\\\"Policy Name\\\"] = PolicyName,\\r\\n    [\\\"Web Category\\\"] = DestinationWebCategories,\\r\\n    [\\\"Transport Protocol\\\"] = TransportProtocol,\\r\\n    [\\\"Traffic Type\\\"] = TrafficType,\\r\\n    [\\\"Received Bytes\\\"] = ReceivedBytes,\\r\\n    [\\\"Sent Bytes\\\"] = SentBytes,\\r\\n    [\\\"Device OS\\\"] = DeviceOperatingSystem,\\r\\n    [\\\"Policy Rule ID\\\"] = PolicyRuleId\\r\\n| order by Timestamp desc\\r\\n\",\"size\":3,\"title\":\"Traffic Logs\",\"timeContextFromParameter\":\"TimeRange\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LogAnalyticWorkspace}\"],\"gridSettings\":{\"rowLimit\":1000,\"filter\":true}},\"conditionalVisibility\":{\"parameterName\":\"tabSel\",\"comparison\":\"isEqualTo\",\"value\":\"AllTraffic\"},\"name\":\"query - 6\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"// Unique Users\\nNetworkAccessTraffic\\n| where UserPrincipalName in ({Users}) or '*' in ({Users})\\n| where DestinationWebCategories in ({WebCategories}) or '*' in ({WebCategories})\\n| extend GeoInfo = geo_info_from_ip_address(SourceIp) // Extend each row with geolocation info\\n| project SourceIp, Country = tostring(GeoInfo.country), State = tostring(GeoInfo.state), City = tostring(GeoInfo.city), Latitude = tostring(GeoInfo.latitude), Longitude = tostring(GeoInfo.longitude)\\n| summarize UniqueUsers=dcount(Country)\\n| extend snapshot = \\\"Total Locations\\\"\\n| project col1 = UniqueUsers, snapshot\\n\\n// Union with Unique Devices\\n| union (\\n    NetworkAccessTraffic\\n    | where UserPrincipalName in ({Users}) or '*' in ({Users})\\n    | extend BytesInGB = todouble(SentBytes + ReceivedBytes) / (1024 * 1024 * 1024)  // Convert bytes to gigabytes\\n    | summarize TotalBytesGB = sum(BytesInGB)\\n    | extend snapshot = \\\"Total Bytes (GB)\\\"\\n    | project col1 =   tolong(TotalBytesGB), snapshot\\n)\\n\\n// Union with Total Internet Access\\n| union (\\n    NetworkAccessTraffic\\n    | where UserPrincipalName in ({Users}) or '*' in ({Users})\\n    | summarize TotalTransactions = count()\\n    | extend snapshot = \\\"Total Transactions\\\"\\n    | project col1 = TotalTransactions, snapshot\\n)\\n\\n// Union with Total Private Access\\n// Order by Snapshot for consistent tile ordering on dashboard\\n| order by snapshot\",\"size\":4,\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LogAnalyticWorkspace}\"],\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"snapshot\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"col1\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"}},\"showBorder\":true,\"size\":\"auto\"},\"mapSettings\":{\"locInfo\":\"LatLong\",\"sizeSettings\":\"ExistingClients\",\"sizeAggregation\":\"Sum\",\"legendMetric\":\"ExistingClients\",\"legendAggregation\":\"Sum\",\"itemColorSettings\":{\"type\":\"heatmap\",\"colorAggregation\":\"Sum\",\"nodeColorField\":\"ExistingClients\",\"heatmapPalette\":\"greenRed\"}},\"textSettings\":{\"style\":\"bignumber\"}},\"conditionalVisibility\":{\"parameterName\":\"tabSel\",\"comparison\":\"isEqualTo\",\"value\":\"Overview\"},\"name\":\"query - 2\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"NetworkAccessTraffic\\r\\n| where UserPrincipalName in ({Users}) or '*' in ({Users})\\r\\n| where DestinationWebCategories in ({WebCategories}) or '*' in ({WebCategories})\\r\\n| extend BytesIn = todouble(SentBytes + ReceivedBytes) / (1024 * 1024)  // Convert bytes to Mbytes\\r\\n| summarize TotalBytesMB = sum(BytesIn) by bin(TimeGenerated, 1h), TrafficType\\r\\n| order by bin(TimeGenerated, 1h) asc, TrafficType asc\\r\\n| project TimeGenerated, TrafficType, TotalBytesMB\\r\\n\",\"size\":2,\"title\":\"Usage Over Time (MB)\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LogAnalyticWorkspace}\"],\"visualization\":\"barchart\"},\"conditionalVisibility\":{\"parameterName\":\"tabSel\",\"comparison\":\"isEqualTo\",\"value\":\"Overview\"},\"name\":\"query - 0\"}]},\"name\":\"group - 5\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"NetworkAccessTraffic\\r\\n| where UserPrincipalName in ({Users}) or '*' in ({Users})\\r\\n| where DestinationWebCategories in ({WebCategories}) or '*' in ({WebCategories})\\r\\n| extend GeoInfo = geo_info_from_ip_address(SourceIp) // Extend each row with geolocation info\\r\\n| project  TimeGenerated, SourceIp, Country = tostring(GeoInfo.country), State = tostring(GeoInfo.state), City = tostring(GeoInfo.city), Latitude = tostring(GeoInfo.latitude), Longitude = tostring(GeoInfo.longitude)\\r\\n| where Country != \\\"\\\"\\r\\n| summarize Count = count() by City, State, Country\\r\\n\\r\\n\",\"size\":3,\"title\":\"Locations\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LogAnalyticWorkspace}\"],\"visualization\":\"map\",\"mapSettings\":{\"locInfo\":\"CountryRegion\",\"locInfoColumn\":\"Country\",\"latitude\":\"Latitude\",\"longitude\":\"Longitude\",\"sizeSettings\":\"Count\",\"sizeAggregation\":\"Sum\",\"labelSettings\":\"Country\",\"legendMetric\":\"Country\",\"legendAggregation\":\"Count\",\"itemColorSettings\":{\"nodeColorField\":\"Count\",\"colorAggregation\":\"Sum\",\"type\":\"heatmap\",\"heatmapPalette\":\"turquoise\"}}},\"name\":\"query - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"NetworkAccessTraffic\\r\\n| where UserPrincipalName in ({Users}) or '*' in ({Users})\\r\\n| where DestinationWebCategories in ({WebCategories}) or '*' in ({WebCategories})\\r\\n| where tolower(Action) == \\\"allow\\\" and DestinationWebCategories != '' // Filter for allowed traffic\\r\\n| where DestinationWebCategories in ({WebCategories}) or '*' in ({WebCategories})\\r\\n| extend firstCategory = tostring(split(DestinationWebCategories, ',')[0]) // Split and get the first category\\r\\n| summarize Count = count() by firstCategory\\r\\n| top 10 by Count\\r\\n\",\"size\":2,\"title\":\"Top Allowed Web Categories\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LogAnalyticWorkspace}\"],\"visualization\":\"piechart\"},\"customWidth\":\"50\",\"name\":\"query - 7\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"NetworkAccessTraffic\\r\\n| where UserPrincipalName in ({Users}) or '*' in ({Users})\\r\\n| where DestinationWebCategories in ({WebCategories}) or '*' in ({WebCategories})\\r\\n| where tolower(Action) == \\\"block\\\" and DestinationWebCategories != '' // Filter for blocked traffic\\r\\n| extend firstCategory = tostring(split(DestinationWebCategories, ',')[0]) // Split and get the first category\\r\\n| summarize Count = count() by firstCategory\\r\\n| top 10 by Count\\r\\n\",\"size\":3,\"title\":\"Top Blocked Web Categories\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LogAnalyticWorkspace}\"],\"visualization\":\"piechart\"},\"customWidth\":\"50\",\"name\":\"query - 6\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"NetworkAccessTraffic  \\r\\n| where UserPrincipalName in ({Users}) or '*' in ({Users})\\r\\n| where DestinationWebCategories in ({WebCategories}) or '*' in ({WebCategories})\\r\\n| where tolower(Action) == \\\"block\\\" and DestinationFqdn != ''  // Filter for blocked traffic with non-empty Destination FQDN\\r\\n| summarize Count = count() by [\\\"Destination FQDN\\\"] = DestinationFqdn, [\\\"Destination Web Categories\\\"] = DestinationWebCategories, [\\\"Policy Name\\\"] = PolicyName\\r\\n| order by Count\\r\\n\",\"size\":0,\"title\":\"Top Blocked Destinations\",\"timeContextFromParameter\":\"TimeRange\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LogAnalyticWorkspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Count\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\"}}],\"rowLimit\":1000,\"filter\":true,\"sortBy\":[{\"itemKey\":\"$gen_bar_Count_3\",\"sortOrder\":2}]},\"sortBy\":[{\"itemKey\":\"$gen_bar_Count_3\",\"sortOrder\":2}]},\"customWidth\":\"50\",\"name\":\"query - 5\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"NetworkAccessTraffic\\r\\n| where UserPrincipalName in ({Users}) or '*' in ({Users})\\r\\n| where DestinationWebCategories in ({WebCategories}) or '*' in ({WebCategories})\\r\\n| where SentBytes > 0\\r\\n| where tolower(Action) != \\\"block\\\"\\r\\n| summarize \\r\\n    Count = count(), \\r\\n    [\\\"Sent Bytes\\\"] = sum(SentBytes), \\r\\n    [\\\"Received Bytes\\\"] = sum(ReceivedBytes), \\r\\n    [\\\"Total Bytes\\\"] = sum(ReceivedBytes + SentBytes) \\r\\n    by [\\\"Destination FQDN\\\"] = DestinationFqdn\\r\\n| order by Count desc\\r\\n\",\"size\":0,\"title\":\"Top Allowed Destinations\",\"timeContextFromParameter\":\"TimeRange\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LogAnalyticWorkspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Count\",\"formatter\":4,\"formatOptions\":{\"palette\":\"magenta\"}},{\"columnMatch\":\"Recived\",\"formatter\":4,\"formatOptions\":{\"palette\":\"turquoise\"}},{\"columnMatch\":\"Total\",\"formatter\":4,\"formatOptions\":{\"palette\":\"pink\"}},{\"columnMatch\":\"Sent\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\"}}],\"rowLimit\":1000,\"filter\":true,\"sortBy\":[{\"itemKey\":\"$gen_bar_Count_1\",\"sortOrder\":2}]},\"sortBy\":[{\"itemKey\":\"$gen_bar_Count_1\",\"sortOrder\":2}]},\"customWidth\":\"50\",\"name\":\"query - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"NetworkAccessTraffic\\r\\n| where UserPrincipalName in ({Users}) or '*' in ({Users})\\r\\n| where TransportProtocol != ''\\r\\n| summarize Count = count() by toupper(TransportProtocol)\\r\\n| top 10 by Count\\r\\n\",\"size\":2,\"title\":\"Protocol Distribution\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{LogAnalyticWorkspace}\"],\"visualization\":\"piechart\"},\"customWidth\":\"50\",\"name\":\"query - 3\"}]},\"conditionalVisibility\":{\"parameterName\":\"tabSel\",\"comparison\":\"isEqualTo\",\"value\":\"Overview\"},\"name\":\"group - 4\"}],\"fallbackResourceIds\":[\"Global Secure Access\"],\"fromTemplateId\":\"community-Workbooks/Global Secure Access/Common/Network Traffic Insights\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
                "version": "1.0",
                "sourceId": "[variables('workspaceResourceId')]",
                "category": "sentinel"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Workbook-', last(split(variables('workbookId2'),'/'))))]",
              "properties": {
                "description": "@{workbookKey=GSANetworkTraffic; logoFileName=gsa.svg; description=This workbook provides an overview of all traffic logs within your network, offering insights into data transfer, anomalies, and potential threats.; dataTypesDependencies=System.Object[]; dataConnectorsDependencies=System.Object[]; previewImagesFileNames=System.Object[]; version=1.0.0; title=Microsoft Global Secure Access Traffic Logs; templateRelativePath=GSANetworkTraffic.json; subtitle=; provider=Microsoft}.description",
                "parentId": "[variables('workbookId2')]",
                "contentId": "[variables('_workbookContentId2')]",
                "kind": "Workbook",
                "version": "[variables('workbookVersion2')]",
                "source": {
                  "kind": "Solution",
                  "name": "Global Secure Access",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Partner",
                  "name": "Microsoft Corporation",
                  "email": "GSASentinelSupport@microsoft.com",
                  "link": "https://learn.microsoft.com/en-us/entra/global-secure-access/overview-what-is-global-secure-access"
                },
                "dependencies": {
                  "operator": "AND",
                  "criteria": [
                    {
                      "contentId": "AzureActiveDirectory",
                      "kind": "DataConnector"
                    }
                  ]
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_workbookContentId2')]",
        "contentKind": "Workbook",
        "displayName": "[parameters('workbook2-name')]",
        "contentProductId": "[variables('_workbookcontentProductId2')]",
        "id": "[variables('_workbookcontentProductId2')]",
        "version": "[variables('workbookVersion2')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject1').analyticRuleTemplateSpecName1]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Identity - AfterHoursActivity_AnalyticalRules Analytics Rule with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject1').analyticRuleVersion1]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This query identifies connections that occur outside of the defined operational hours. It helps in monitoring and flagging any unusual activity that may occur during non-business hours, indicating potential security concerns or policy violations.",
                "displayName": "Detect Connections Outside Operational Hours",
                "enabled": false,
                "query": "let starttime = todatetime('{{StartTimeISO}}');\nlet endtime = todatetime('{{EndTimeISO}}');\nlet operational_start_hour = 8; // Start of operational hours (8 AM)\nlet operational_end_hour = 18; // End of operational hours (6 PM)\nNetworkAccessTraffic\n| where TimeGenerated between(starttime .. endtime)\n| extend HourOfDay = datetime_part('hour', TimeGenerated)\n| where HourOfDay < operational_start_hour or HourOfDay >= operational_end_hour\n| project TimeGenerated, UserPrincipalName, SourceIp, DestinationIp, DestinationPort, Action, DeviceId, DeviceOperatingSystem, ConnectionId\n| extend IPCustomEntity = SourceIp, AccountCustomEntity = UserPrincipalName\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT24H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "AzureActiveDirectory",
                    "dataTypes": [
                      "EnrichedMicrosoft365AuditLogs"
                    ]
                  }
                ],
                "tactics": [
                  "InitialAccess"
                ],
                "techniques": [
                  "T1078",
                  "T1133"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "AccountCustomEntity",
                        "identifier": "Name"
                      }
                    ],
                    "entityType": "Account"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "IPCustomEntity",
                        "identifier": "Address"
                      }
                    ],
                    "entityType": "IP"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject1').analyticRuleId1,'/'))))]",
              "properties": {
                "description": "Global Secure Access Analytics Rule 1",
                "parentId": "[variables('analyticRuleObject1').analyticRuleId1]",
                "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject1').analyticRuleVersion1]",
                "source": {
                  "kind": "Solution",
                  "name": "Global Secure Access",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Partner",
                  "name": "Microsoft Corporation",
                  "email": "GSASentinelSupport@microsoft.com",
                  "link": "https://learn.microsoft.com/en-us/entra/global-secure-access/overview-what-is-global-secure-access"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
        "contentKind": "AnalyticsRule",
        "displayName": "Detect Connections Outside Operational Hours",
        "contentProductId": "[variables('analyticRuleObject1')._analyticRulecontentProductId1]",
        "id": "[variables('analyticRuleObject1')._analyticRulecontentProductId1]",
        "version": "[variables('analyticRuleObject1').analyticRuleVersion1]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject2').analyticRuleTemplateSpecName2]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Identity - SharedSessions_AnalyticalRules Analytics Rule with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject2').analyticRuleVersion2]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This query identifies network sessions based on DeviceId and UserPrincipalName, then checks for changed IP addresses and overlapping session times.",
                "displayName": "Detect IP Address Changes and Overlapping Sessions",
                "enabled": false,
                "query": "// Identify sessions\nlet sessions = \n  NetworkAccessTraffic\n  | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), SourceIps = make_set(SourceIp) by DeviceId, UserPrincipalName, SessionId\n  | sort by StartTime asc;\n// Check for changed IP addresses and overlapping session times\nsessions\n  | extend PreviousSourceIps = prev(SourceIps, 1)\n  | extend PreviousEndTime = prev(EndTime, 1)\n  | extend PreviousDeviceId = prev(DeviceId, 1)\n  | extend PreviousUserPrincipalName = prev(UserPrincipalName, 1)\n  | where DeviceId == PreviousDeviceId and UserPrincipalName == PreviousUserPrincipalName\n  | where set_difference(SourceIps, PreviousSourceIps) != dynamic([]) // Check if the current and previous IP sets differ\n  | where PreviousEndTime > StartTime // Check for overlapping session times\n  | project DeviceId, UserPrincipalName, SourceIps, PreviousSourceIps, StartTime, EndTime, PreviousEndTime\n  | extend IPCustomEntity = tostring(array_slice(SourceIps, 0, 1)[0]), PreviousIPCustomEntity = tostring(array_slice(PreviousSourceIps, 0, 1)[0]), AccountCustomEntity = UserPrincipalName\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT24H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "AzureActiveDirectory",
                    "dataTypes": [
                      "EnrichedMicrosoft365AuditLogs"
                    ]
                  }
                ],
                "tactics": [
                  "InitialAccess"
                ],
                "techniques": [
                  "T1078",
                  "T1133"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "AccountCustomEntity",
                        "identifier": "Name"
                      }
                    ],
                    "entityType": "Account"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "IPCustomEntity",
                        "identifier": "Address"
                      }
                    ],
                    "entityType": "IP"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject2').analyticRuleId2,'/'))))]",
              "properties": {
                "description": "Global Secure Access Analytics Rule 2",
                "parentId": "[variables('analyticRuleObject2').analyticRuleId2]",
                "contentId": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject2').analyticRuleVersion2]",
                "source": {
                  "kind": "Solution",
                  "name": "Global Secure Access",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Partner",
                  "name": "Microsoft Corporation",
                  "email": "GSASentinelSupport@microsoft.com",
                  "link": "https://learn.microsoft.com/en-us/entra/global-secure-access/overview-what-is-global-secure-access"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
        "contentKind": "AnalyticsRule",
        "displayName": "Detect IP Address Changes and Overlapping Sessions",
        "contentProductId": "[variables('analyticRuleObject2')._analyticRulecontentProductId2]",
        "id": "[variables('analyticRuleObject2')._analyticRulecontentProductId2]",
        "version": "[variables('analyticRuleObject2').analyticRuleVersion2]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject3').analyticRuleTemplateSpecName3]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Office 365 - exchange_auditlogdisabled_AnalyticalRules Analytics Rule with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject3').analyticRuleVersion3]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject3')._analyticRulecontentId3]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Identifies when the exchange audit logging has been disabled which may be an adversary attempt to evade detection or avoid other defenses.",
                "displayName": "GSA - Exchange AuditLog Disabled",
                "enabled": false,
                "query": "// OfficeActivity Query\nlet OfficeEvents = OfficeActivity\n    | where OfficeWorkload =~ \"Exchange\" \n    | where UserType in~ (\"Admin\", \"DcAdmin\")\n    // Only admin or global-admin can disable audit logging\n    | where Operation =~ \"Set-AdminAuditLogConfig\"\n    | extend AdminAuditLogEnabledValue = tostring(parse_json(tostring(parse_json(tostring(array_slice(parse_json(Parameters), 3, 3)))[0])).Value)\n    | where AdminAuditLogEnabledValue =~ \"False\"\n    | summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), OperationCount = count() by Operation, UserType, UserId, ClientIP, ResultStatus, Parameters, AdminAuditLogEnabledValue\n    | extend AccountName = iff(UserId contains '@', tostring(split(UserId, '@')[0]), UserId)\n    | extend AccountUPNSuffix = iff(UserId contains '@', tostring(split(UserId, '@')[1]), '')\n    | extend AccountName = iff(UserId contains '\\\\', tostring(split(UserId, '\\\\')[1]), AccountName)\n    | extend AccountNTDomain = iff(UserId contains '\\\\', tostring(split(UserId, '\\\\')[0]), '');\n// EnrichedMicrosoft365AuditLogs Query\nlet EnrichedEvents = EnrichedMicrosoft365AuditLogs\n    | where Workload =~ \"Exchange\"\n    | where UserType in~ (\"Admin\", \"DcAdmin\")\n    | where Operation =~ \"Set-AdminAuditLogConfig\"\n    | extend AdminAuditLogEnabledValue = tostring(parse_json(tostring(parse_json(tostring(array_slice(parse_json(tostring(AdditionalProperties.Parameters)), 3, 3)))[0])).Value)\n    | where AdminAuditLogEnabledValue =~ \"False\"\n    | summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), OperationCount = count() by Operation, UserType, UserId, ClientIP = SourceIp, ResultStatus, Parameters = tostring(AdditionalProperties.Parameters), AdminAuditLogEnabledValue\n    | extend AccountName = iff(UserId contains '@', tostring(split(UserId, '@')[0]), UserId)\n    | extend AccountUPNSuffix = iff(UserId contains '@', tostring(split(UserId, '@')[1]), '')\n    | extend AccountName = iff(UserId contains '\\\\', tostring(split(UserId, '\\\\')[1]), AccountName)\n    | extend AccountNTDomain = iff(UserId contains '\\\\', tostring(split(UserId, '\\\\')[0]), '');\n// Combine Office and Enriched Events and Deduplicate\nlet CombinedEvents = OfficeEvents\n    | union EnrichedEvents\n    | summarize arg_min(StartTimeUtc, *) by Operation, UserId, ClientIP;\n// Project Final Output\nCombinedEvents\n| project StartTimeUtc, EndTimeUtc, Operation, UserType, UserId, ClientIP, ResultStatus, Parameters, AdminAuditLogEnabledValue, AccountName, AccountUPNSuffix, AccountNTDomain\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "AzureActiveDirectory",
                    "dataTypes": [
                      "EnrichedMicrosoft365AuditLogs"
                    ]
                  },
                  {
                    "connectorId": "Office365",
                    "dataTypes": [
                      "OfficeActivity (Exchange)"
                    ]
                  }
                ],
                "tactics": [
                  "DefenseEvasion"
                ],
                "techniques": [
                  "T1562"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "UserId",
                        "identifier": "FullName"
                      },
                      {
                        "columnName": "AccountName",
                        "identifier": "Name"
                      },
                      {
                        "columnName": "AccountUPNSuffix",
                        "identifier": "UPNSuffix"
                      }
                    ],
                    "entityType": "Account"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "AccountNTDomain",
                        "identifier": "Name"
                      }
                    ],
                    "entityType": "Account"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "ClientIP",
                        "identifier": "Address"
                      }
                    ],
                    "entityType": "IP"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject3').analyticRuleId3,'/'))))]",
              "properties": {
                "description": "Global Secure Access Analytics Rule 3",
                "parentId": "[variables('analyticRuleObject3').analyticRuleId3]",
                "contentId": "[variables('analyticRuleObject3')._analyticRulecontentId3]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject3').analyticRuleVersion3]",
                "source": {
                  "kind": "Solution",
                  "name": "Global Secure Access",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Partner",
                  "name": "Microsoft Corporation",
                  "email": "GSASentinelSupport@microsoft.com",
                  "link": "https://learn.microsoft.com/en-us/entra/global-secure-access/overview-what-is-global-secure-access"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject3')._analyticRulecontentId3]",
        "contentKind": "AnalyticsRule",
        "displayName": "GSA - Exchange AuditLog Disabled",
        "contentProductId": "[variables('analyticRuleObject3')._analyticRulecontentProductId3]",
        "id": "[variables('analyticRuleObject3')._analyticRulecontentProductId3]",
        "version": "[variables('analyticRuleObject3').analyticRuleVersion3]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject4').analyticRuleTemplateSpecName4]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Office 365 - External User added to Team and immediately uploads file_AnalyticalRules Analytics Rule with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject4').analyticRuleVersion4]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject4')._analyticRulecontentId4]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This detection identifies when an external user is added to a Team or Teams chat and shares a file which is accessed by many users (>10) and the users is removed within short period of time. This might be an indicator of suspicious activity.",
                "displayName": "GSA - Accessed files shared by temporary external user",
                "enabled": false,
                "query": "let fileAccessThreshold = 10;\n// OfficeActivity Query\nlet OfficeEvents = OfficeActivity\n    | where OfficeWorkload =~ \"MicrosoftTeams\"\n    | where Operation =~ \"MemberAdded\"\n    | extend MemberAdded = tostring(parse_json(Members)[0].UPN)\n    | where MemberAdded contains \"#EXT#\"\n    | project TimeAdded = TimeGenerated, Operation, MemberAdded, UserWhoAdded = UserId, TeamName\n    | join kind=inner (\n        OfficeActivity\n        | where OfficeWorkload =~ \"MicrosoftTeams\"\n        | where Operation =~ \"MemberRemoved\"\n        | extend MemberAdded = tostring(parse_json(Members)[0].UPN)\n        | where MemberAdded contains \"#EXT#\"\n        | project TimeDeleted = TimeGenerated, Operation, MemberAdded, UserWhoDeleted = UserId, TeamName\n    ) on MemberAdded\n    | where TimeDeleted > TimeAdded\n    | join kind=inner (\n        OfficeActivity\n        | where RecordType == \"SharePointFileOperation\"\n        | where SourceRelativeUrl has \"Microsoft Teams Chat Files\"\n        | where Operation == \"FileUploaded\"\n        | extend MemberAdded = UserId\n        | join kind=inner (\n            OfficeActivity\n            | where RecordType == \"SharePointFileOperation\"\n            | where Operation == \"FileAccessed\"\n            | where SourceRelativeUrl has \"Microsoft Teams Chat Files\"\n            | summarize FileAccessCount = count() by OfficeObjectId\n            | where FileAccessCount > fileAccessThreshold\n        ) on OfficeObjectId\n    ) on MemberAdded\n    | project TimeAdded, TimeDeleted, MemberAdded, UserWhoAdded, UserWhoDeleted, TeamName;\n  // EnrichedMicrosoft365AuditLogs Query\n  let EnrichedEvents = EnrichedMicrosoft365AuditLogs\n  | where Workload =~ \"MicrosoftTeams\"\n  | where Operation =~ \"MemberAdded\"\n  | extend MemberAdded = tostring(parse_json(tostring(AdditionalProperties)).Members[0].UPN)\n  | where MemberAdded contains \"#EXT#\"\n  | project TimeAdded = TimeGenerated, Operation, MemberAdded, UserWhoAdded = UserId, TeamName = tostring(parse_json(tostring(AdditionalProperties)).TeamName)\n  | join kind=inner (\n      EnrichedMicrosoft365AuditLogs\n      | where Workload =~ \"MicrosoftTeams\"\n      | where Operation =~ \"MemberRemoved\"\n      | extend MemberAdded = tostring(parse_json(tostring(AdditionalProperties)).Members[0].UPN)\n      | where MemberAdded contains \"#EXT#\"\n      | project TimeDeleted = TimeGenerated, Operation, MemberAdded, UserWhoDeleted = UserId, TeamName = tostring(parse_json(tostring(AdditionalProperties)).TeamName)\n  ) on MemberAdded, TeamName\n  | where TimeDeleted > TimeAdded\n  | join kind=inner (\n      EnrichedMicrosoft365AuditLogs\n      | where RecordType == \"SharePointFileOperation\"\n      | where Operation == \"FileUploaded\"\n      | extend MemberAdded = UserId, SourceRelativeUrl = tostring(parse_json(tostring(AdditionalProperties)).SourceRelativeUrl), TeamName = tostring(parse_json(tostring(AdditionalProperties)).TeamName)\n      | where SourceRelativeUrl has \"Microsoft Teams Chat Files\"\n      | join kind=inner (\n          EnrichedMicrosoft365AuditLogs\n          | where RecordType == \"SharePointFileOperation\"\n          | where Operation == \"FileAccessed\"\n          | extend SourceRelativeUrl = tostring(parse_json(tostring(AdditionalProperties)).SourceRelativeUrl), TeamName = tostring(parse_json(tostring(AdditionalProperties)).TeamName)\n          | where SourceRelativeUrl has \"Microsoft Teams Chat Files\"\n          | summarize FileAccessCount = count() by ObjectId, TeamName\n          | where FileAccessCount > fileAccessThreshold\n      ) on ObjectId, TeamName\n  ) on MemberAdded, TeamName\n  | project TimeAdded, TimeDeleted, MemberAdded, UserWhoAdded, UserWhoDeleted, TeamName;\n  // Combine Office and Enriched Events and Deduplicate\n  let CombinedEvents = OfficeEvents\n  | union EnrichedEvents\n  | summarize arg_min(TimeAdded, *) by MemberAdded, UserWhoAdded, UserWhoDeleted, TeamName;\n  // Project Final Output\n  CombinedEvents\n| extend MemberAddedAccountName = tostring(split(MemberAdded, \"@\")[0]), MemberAddedAccountUPNSuffix = tostring(split(MemberAdded, \"@\")[1])\n| extend UserWhoAddedAccountName = tostring(split(UserWhoAdded, \"@\")[0]), UserWhoAddedAccountUPNSuffix = tostring(split(UserWhoAdded, \"@\")[1])\n| extend UserWhoDeletedAccountName = tostring(split(UserWhoDeleted, \"@\")[0]), UserWhoDeletedAccountUPNSuffix = tostring(split(UserWhoDeleted, \"@\")[1])\n| project TimeAdded, TimeDeleted, MemberAdded, UserWhoAdded, UserWhoDeleted, TeamName, MemberAddedAccountName, MemberAddedAccountUPNSuffix, UserWhoAddedAccountName, UserWhoAddedAccountUPNSuffix, UserWhoDeletedAccountName, UserWhoDeletedAccountUPNSuffix\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Low",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "AzureActiveDirectory",
                    "dataTypes": [
                      "EnrichedMicrosoft365AuditLogs"
                    ]
                  },
                  {
                    "connectorId": "Office365",
                    "dataTypes": [
                      "OfficeActivity (Teams)"
                    ]
                  },
                  {
                    "connectorId": "Office365",
                    "dataTypes": [
                      "OfficeActivity (SharePoint)"
                    ]
                  }
                ],
                "tactics": [
                  "InitialAccess"
                ],
                "techniques": [
                  "T1566"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "MemberAdded",
                        "identifier": "FullName"
                      },
                      {
                        "columnName": "MemberAddedAccountName",
                        "identifier": "Name"
                      },
                      {
                        "columnName": "MemberAddedAccountUPNSuffix",
                        "identifier": "UPNSuffix"
                      }
                    ],
                    "entityType": "Account"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "UserWhoAdded",
                        "identifier": "FullName"
                      },
                      {
                        "columnName": "UserWhoAddedAccountName",
                        "identifier": "Name"
                      },
                      {
                        "columnName": "UserWhoAddedAccountUPNSuffix",
                        "identifier": "UPNSuffix"
                      }
                    ],
                    "entityType": "Account"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "UserWhoDeleted",
                        "identifier": "FullName"
                      },
                      {
                        "columnName": "UserWhoDeletedAccountName",
                        "identifier": "Name"
                      },
                      {
                        "columnName": "UserWhoDeletedAccountUPNSuffix",
                        "identifier": "UPNSuffix"
                      }
                    ],
                    "entityType": "Account"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "ClientIP",
                        "identifier": "Address"
                      }
                    ],
                    "entityType": "IP"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject4').analyticRuleId4,'/'))))]",
              "properties": {
                "description": "Global Secure Access Analytics Rule 4",
                "parentId": "[variables('analyticRuleObject4').analyticRuleId4]",
                "contentId": "[variables('analyticRuleObject4')._analyticRulecontentId4]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject4').analyticRuleVersion4]",
                "source": {
                  "kind": "Solution",
                  "name": "Global Secure Access",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Partner",
                  "name": "Microsoft Corporation",
                  "email": "GSASentinelSupport@microsoft.com",
                  "link": "https://learn.microsoft.com/en-us/entra/global-secure-access/overview-what-is-global-secure-access"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject4')._analyticRulecontentId4]",
        "contentKind": "AnalyticsRule",
        "displayName": "GSA - Accessed files shared by temporary external user",
        "contentProductId": "[variables('analyticRuleObject4')._analyticRulecontentProductId4]",
        "id": "[variables('analyticRuleObject4')._analyticRulecontentProductId4]",
        "version": "[variables('analyticRuleObject4').analyticRuleVersion4]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject5').analyticRuleTemplateSpecName5]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Office 365 - ExternalUserAddedRemovedInTeams_AnalyticalRules Analytics Rule with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject5').analyticRuleVersion5]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject5')._analyticRulecontentId5]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This detection flags the occurrences of external user accounts that are added to a Team and then removed within one hour.",
                "displayName": "GSA - External User Added and Removed in Short Timeframe",
                "enabled": false,
                "query": "let TeamsAddDelOffice = (Op:string){\n  OfficeActivity\n  | where OfficeWorkload =~ \"MicrosoftTeams\"\n  | where Operation == Op\n  | where Members has (\"#EXT#\")\n  | mv-expand Members\n  | extend UPN = tostring(Members.UPN)\n  | where UPN has (\"#EXT#\")\n  | project TimeGenerated, Operation, UPN, UserId, TeamName, ClientIP\n};\nlet TeamsAddDelEnriched = (Op:string){\n  EnrichedMicrosoft365AuditLogs\n  | where Workload =~ \"MicrosoftTeams\"\n  | where Operation == Op\n  | where tostring(AdditionalProperties.Members) has (\"#EXT#\")\n  | mv-expand Members = parse_json(tostring(AdditionalProperties.Members))\n  | extend UPN = tostring(Members.UPN)\n  | where UPN has (\"#EXT#\")\n  | project TimeGenerated, Operation, UPN, UserId, TeamName = tostring(AdditionalProperties.TeamName), ClientIP = SourceIp\n};\nlet TeamsAddOffice = TeamsAddDelOffice(\"MemberAdded\")\n  | project TimeAdded = TimeGenerated, Operation, MemberAdded = UPN, UserWhoAdded = UserId, TeamName, ClientIP;\nlet TeamsDelOffice = TeamsAddDelOffice(\"MemberRemoved\")\n  | project TimeDeleted = TimeGenerated, Operation, MemberRemoved = UPN, UserWhoDeleted = UserId, TeamName, ClientIP;\nlet TeamsAddEnriched = TeamsAddDelEnriched(\"MemberAdded\")\n  | project TimeAdded = TimeGenerated, Operation, MemberAdded = UPN, UserWhoAdded = UserId, TeamName, ClientIP;\nlet TeamsDelEnriched = TeamsAddDelEnriched(\"MemberRemoved\")\n  | project TimeDeleted = TimeGenerated, Operation, MemberRemoved = UPN, UserWhoDeleted = UserId, TeamName, ClientIP;\nlet TeamsAdd = TeamsAddOffice\n  | union TeamsAddEnriched\n  | project TimeAdded, Operation, MemberAdded, UserWhoAdded, TeamName, ClientIP;\nlet TeamsDel = TeamsDelOffice\n  | union TeamsDelEnriched\n  | project TimeDeleted, Operation, MemberRemoved, UserWhoDeleted, TeamName, ClientIP;\nTeamsAdd\n| join kind=inner (TeamsDel) on $left.MemberAdded == $right.MemberRemoved\n| where TimeDeleted > TimeAdded\n| project TimeAdded, TimeDeleted, MemberAdded_Removed = MemberAdded, UserWhoAdded, UserWhoDeleted, TeamName, ClientIP\n| extend MemberAdded_RemovedAccountName = tostring(split(MemberAdded_Removed, \"@\")[0]), MemberAdded_RemovedAccountUPNSuffix = tostring(split(MemberAdded_Removed, \"@\")[1])\n| extend UserWhoAddedAccountName = tostring(split(UserWhoAdded, \"@\")[0]), UserWhoAddedAccountUPNSuffix = tostring(split(UserWhoAdded, \"@\")[1])\n| extend UserWhoDeletedAccountName = tostring(split(UserWhoDeleted, \"@\")[0]), UserWhoDeletedAccountUPNSuffix = tostring(split(UserWhoDeleted, \"@\")[1])\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Low",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "AzureActiveDirectory",
                    "dataTypes": [
                      "EnrichedMicrosoft365AuditLogs"
                    ]
                  },
                  {
                    "connectorId": "Office365",
                    "dataTypes": [
                      "OfficeActivity (Teams)"
                    ]
                  }
                ],
                "tactics": [
                  "Persistence"
                ],
                "techniques": [
                  "T1136"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "MemberAdded_Removed",
                        "identifier": "FullName"
                      },
                      {
                        "columnName": "MemberAdded_RemovedAccountName",
                        "identifier": "Name"
                      },
                      {
                        "columnName": "MemberAddedAccountUPNSuffix",
                        "identifier": "UPNSuffix"
                      }
                    ],
                    "entityType": "Account"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "UserWhoAdded",
                        "identifier": "FullName"
                      },
                      {
                        "columnName": "UserWhoAddedAccountName",
                        "identifier": "Name"
                      },
                      {
                        "columnName": "UserWhoAddedAccountUPNSuffix",
                        "identifier": "UPNSuffix"
                      }
                    ],
                    "entityType": "Account"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "UserWhoDeleted",
                        "identifier": "FullName"
                      },
                      {
                        "columnName": "UserWhoDeletedAccountName",
                        "identifier": "Name"
                      },
                      {
                        "columnName": "UserWhoDeletedAccountUPNSuffix",
                        "identifier": "UPNSuffix"
                      }
                    ],
                    "entityType": "Account"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "ClientIp",
                        "identifier": "Address"
                      }
                    ],
                    "entityType": "IP"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject5').analyticRuleId5,'/'))))]",
              "properties": {
                "description": "Global Secure Access Analytics Rule 5",
                "parentId": "[variables('analyticRuleObject5').analyticRuleId5]",
                "contentId": "[variables('analyticRuleObject5')._analyticRulecontentId5]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject5').analyticRuleVersion5]",
                "source": {
                  "kind": "Solution",
                  "name": "Global Secure Access",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Partner",
                  "name": "Microsoft Corporation",
                  "email": "GSASentinelSupport@microsoft.com",
                  "link": "https://learn.microsoft.com/en-us/entra/global-secure-access/overview-what-is-global-secure-access"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject5')._analyticRulecontentId5]",
        "contentKind": "AnalyticsRule",
        "displayName": "GSA - External User Added and Removed in Short Timeframe",
        "contentProductId": "[variables('analyticRuleObject5')._analyticRulecontentProductId5]",
        "id": "[variables('analyticRuleObject5')._analyticRulecontentProductId5]",
        "version": "[variables('analyticRuleObject5').analyticRuleVersion5]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject6').analyticRuleTemplateSpecName6]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Office 365 - Mail_redirect_via_ExO_transport_rule_AnalyticalRules Analytics Rule with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject6').analyticRuleVersion6]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject6')._analyticRulecontentId6]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Identifies when Exchange Online transport rule configured to forward emails.\nThis could be an adversary mailbox configured to collect mail from multiple user accounts.",
                "displayName": "GSA - Mail redirect via ExO transport rule",
                "enabled": false,
                "query": "EnrichedMicrosoft365AuditLogs\n| where Workload == \"Exchange\"\n| where Operation in~ (\"New-TransportRule\", \"Set-TransportRule\")\n| mv-apply DynamicParameters = todynamic(tostring(AdditionalProperties.Parameters)) on (\n    summarize ParsedParameters = make_bag(pack(tostring(DynamicParameters.Name), DynamicParameters.Value))\n  )\n| extend RuleName = case(\n    Operation =~ \"Set-TransportRule\", ObjectId,\n    Operation =~ \"New-TransportRule\", ParsedParameters.Name,\n    \"Unknown\"\n  )\n| mv-expand ExpandedParameters = todynamic(tostring(AdditionalProperties.Parameters))\n| where ExpandedParameters.Name in~ (\"BlindCopyTo\", \"RedirectMessageTo\") and isnotempty(ExpandedParameters.Value)\n| extend RedirectTo = ExpandedParameters.Value\n| extend ClientIPValues = extract_all(@'\\[?(::ffff:)?(?P<IPAddress>(\\d+\\.\\d+\\.\\d+\\.\\d+)|[^\\]]+)\\]?([-:](?P<Port>\\d+))?', dynamic([\"IPAddress\", \"Port\"]), ClientIp)[0]\n| extend From = ParsedParameters.From\n| project TimeGenerated, RedirectTo, IPAddress = tostring(ClientIPValues[0]), Port = tostring(ClientIPValues[1]), UserId, From, Operation, RuleName, Parameters = tostring(AdditionalProperties.Parameters)\n| extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1])\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "AzureActiveDirectory",
                    "dataTypes": [
                      "EnrichedMicrosoft365AuditLogs"
                    ]
                  },
                  {
                    "connectorId": "Office365",
                    "dataTypes": [
                      "OfficeActivity (Exchange)"
                    ]
                  }
                ],
                "tactics": [
                  "Collection",
                  "Exfiltration"
                ],
                "techniques": [
                  "T1114",
                  "T1020"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "UserId",
                        "identifier": "FullName"
                      },
                      {
                        "columnName": "AccountName",
                        "identifier": "Name"
                      },
                      {
                        "columnName": "AccountUPNSuffix",
                        "identifier": "UPNSuffix"
                      }
                    ],
                    "entityType": "Account"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "IPAddress",
                        "identifier": "Address"
                      }
                    ],
                    "entityType": "IP"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject6').analyticRuleId6,'/'))))]",
              "properties": {
                "description": "Global Secure Access Analytics Rule 6",
                "parentId": "[variables('analyticRuleObject6').analyticRuleId6]",
                "contentId": "[variables('analyticRuleObject6')._analyticRulecontentId6]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject6').analyticRuleVersion6]",
                "source": {
                  "kind": "Solution",
                  "name": "Global Secure Access",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Partner",
                  "name": "Microsoft Corporation",
                  "email": "GSASentinelSupport@microsoft.com",
                  "link": "https://learn.microsoft.com/en-us/entra/global-secure-access/overview-what-is-global-secure-access"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject6')._analyticRulecontentId6]",
        "contentKind": "AnalyticsRule",
        "displayName": "GSA - Mail redirect via ExO transport rule",
        "contentProductId": "[variables('analyticRuleObject6')._analyticRulecontentProductId6]",
        "id": "[variables('analyticRuleObject6')._analyticRulecontentProductId6]",
        "version": "[variables('analyticRuleObject6').analyticRuleVersion6]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject7').analyticRuleTemplateSpecName7]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Office 365 - Malicious_Inbox_Rule_AnalyticalRules Analytics Rule with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject7').analyticRuleVersion7]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject7')._analyticRulecontentId7]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Often times after the initial compromise the attackers create inbox rules to delete emails that contain certain keywords.\n This is done so as to limit ability to warn compromised users that they've been compromised. Below is a sample query that tries to detect this.\nReference: https://www.reddit.com/r/sysadmin/comments/7kyp0a/recent_phishing_attempts_my_experience_and_what/",
                "displayName": "GSA - Malicious Inbox Rule",
                "enabled": false,
                "query": "let Keywords = dynamic([\"helpdesk\", \"alert\", \"suspicious\", \"fake\", \"malicious\", \"phishing\", \"spam\", \"do not click\", \"do not open\", \"hijacked\", \"Fatal\"]);\n// OfficeActivity Query\nlet OfficeEvents = OfficeActivity\n| where OfficeWorkload =~ \"Exchange\" \n| where Operation =~ \"New-InboxRule\" and (ResultStatus =~ \"True\" or ResultStatus =~ \"Succeeded\")\n| where Parameters has \"Deleted Items\" or Parameters has \"Junk Email\"  or Parameters has \"DeleteMessage\"\n| extend Events = todynamic(Parameters)\n| parse Events  with * \"SubjectContainsWords\" SubjectContainsWords '}'*\n| parse Events  with * \"BodyContainsWords\" BodyContainsWords '}'*\n| parse Events  with * \"SubjectOrBodyContainsWords\" SubjectOrBodyContainsWords '}'*\n| where SubjectContainsWords has_any (Keywords)\n    or BodyContainsWords has_any (Keywords)\n    or SubjectOrBodyContainsWords has_any (Keywords)\n| extend ClientIPAddress = case(ClientIP has \".\", tostring(split(ClientIP, \":\")[0]), ClientIP has \"[\", tostring(trim_start(@'[[]', tostring(split(ClientIP, \"]\")[0]))), ClientIP)\n| extend Keyword = iff(isnotempty(SubjectContainsWords), SubjectContainsWords, iff(isnotempty(BodyContainsWords), BodyContainsWords, SubjectOrBodyContainsWords))\n| extend RuleDetail = case(OfficeObjectId contains '/', tostring(split(OfficeObjectId, '/')[-1]), tostring(split(OfficeObjectId, '\\\\')[-1]))\n| summarize count(), StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated) by Operation, UserId, ClientIPAddress, ResultStatus, Keyword, OriginatingServer, OfficeObjectId, RuleDetail\n| extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1])\n| extend OriginatingServerName = tostring(split(OriginatingServer, \" \")[0]);\n// EnrichedMicrosoft365AuditLogs Query\nlet EnrichedEvents = EnrichedMicrosoft365AuditLogs\n| where Workload =~ \"Exchange\"\n| where Operation =~ \"New-InboxRule\" and (ResultStatus =~ \"True\" or ResultStatus =~ \"Succeeded\")\n| where tostring(parse_json(tostring(AdditionalProperties)).Parameters) has \"Deleted Items\" or tostring(parse_json(tostring(AdditionalProperties)).Parameters) has \"Junk Email\" or tostring(parse_json(tostring(AdditionalProperties)).Parameters) has \"DeleteMessage\"\n| extend Events = parse_json(tostring(AdditionalProperties)).Parameters\n| extend SubjectContainsWords = tostring(Events.SubjectContainsWords), BodyContainsWords = tostring(Events.BodyContainsWords), SubjectOrBodyContainsWords = tostring(Events.SubjectOrBodyContainsWords)\n| where SubjectContainsWords has_any (Keywords) or BodyContainsWords has_any (Keywords) or SubjectOrBodyContainsWords has_any (Keywords)\n| extend ClientIPAddress = case(ClientIp has \".\", tostring(split(ClientIp, \":\")[0]), ClientIp has \"[\", tostring(trim_start(@'[[]', tostring(split(ClientIp, \"]\")[0]))), ClientIp)\n| extend Keyword = iff(isnotempty(SubjectContainsWords), SubjectContainsWords, iff(isnotempty(BodyContainsWords), BodyContainsWords, SubjectOrBodyContainsWords))\n| extend RuleDetail = case(ObjectId contains '/', tostring(split(ObjectId, '/')[-1]), tostring(split(ObjectId, '\\\\')[-1]))\n| summarize count(), StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated) by Operation, UserId, ClientIPAddress, ResultStatus, Keyword, ObjectId, RuleDetail\n| extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1]);\n// Combine and Deduplicate\nlet CombinedEvents = OfficeEvents\n| union EnrichedEvents\n| summarize arg_min(StartTimeUtc, *) by Operation, UserId, ClientIPAddress;\n// Final Output\nCombinedEvents\n| project StartTimeUtc, EndTimeUtc, Operation, UserId, ClientIPAddress, ResultStatus, Keyword, RuleDetail, AccountName, AccountUPNSuffix;\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "AzureActiveDirectory",
                    "dataTypes": [
                      "EnrichedMicrosoft365AuditLogs"
                    ]
                  },
                  {
                    "connectorId": "Office365",
                    "dataTypes": [
                      "OfficeActivity (Exchange)"
                    ]
                  }
                ],
                "tactics": [
                  "Persistence",
                  "DefenseEvasion"
                ],
                "techniques": [
                  "T1098",
                  "T1078"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "UserId",
                        "identifier": "FullName"
                      },
                      {
                        "columnName": "AccountName",
                        "identifier": "Name"
                      },
                      {
                        "columnName": "AccountUPNSuffix",
                        "identifier": "UPNSuffix"
                      }
                    ],
                    "entityType": "Account"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "OriginatingServer",
                        "identifier": "FullName"
                      }
                    ],
                    "entityType": "Host"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "ClientIPAddress",
                        "identifier": "Address"
                      }
                    ],
                    "entityType": "IP"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject7').analyticRuleId7,'/'))))]",
              "properties": {
                "description": "Global Secure Access Analytics Rule 7",
                "parentId": "[variables('analyticRuleObject7').analyticRuleId7]",
                "contentId": "[variables('analyticRuleObject7')._analyticRulecontentId7]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject7').analyticRuleVersion7]",
                "source": {
                  "kind": "Solution",
                  "name": "Global Secure Access",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Partner",
                  "name": "Microsoft Corporation",
                  "email": "GSASentinelSupport@microsoft.com",
                  "link": "https://learn.microsoft.com/en-us/entra/global-secure-access/overview-what-is-global-secure-access"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject7')._analyticRulecontentId7]",
        "contentKind": "AnalyticsRule",
        "displayName": "GSA - Malicious Inbox Rule",
        "contentProductId": "[variables('analyticRuleObject7')._analyticRulecontentProductId7]",
        "id": "[variables('analyticRuleObject7')._analyticRulecontentProductId7]",
        "version": "[variables('analyticRuleObject7').analyticRuleVersion7]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject8').analyticRuleTemplateSpecName8]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Office 365 - MultipleTeamsDeletes_AnalyticalRules Analytics Rule with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject8').analyticRuleVersion8]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject8')._analyticRulecontentId8]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This detection flags the occurrences of deleting multiple teams within an hour.\nThis data is a part of Office 365 Connector in Microsoft Sentinel.",
                "displayName": "GSA - Multiple Teams deleted by a single user",
                "enabled": false,
                "query": "// Set the maximum number of deleted teams to flag suspicious activity\nlet max_delete_count = 3;\n// EnrichedMicrosoft365AuditLogs Query\nlet EnrichedEvents = EnrichedMicrosoft365AuditLogs\n    | where Workload =~ \"MicrosoftTeams\"\n    | where Operation =~ \"TeamDeleted\"\n    | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), DeletedTeams = make_set(tostring(AdditionalProperties.TeamName), 1000) by UserId\n    | where array_length(DeletedTeams) > max_delete_count\n    | extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1]);\n// OfficeActivity Query\nlet OfficeEvents = OfficeActivity\n    | where OfficeWorkload =~ \"MicrosoftTeams\"\n    | where Operation =~ \"TeamDeleted\"\n    | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), DeletedTeams = make_set(TeamName, 1000) by UserId\n    | where array_length(DeletedTeams) > max_delete_count\n    | extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1]);\n// Combine and Deduplicate Office and Enriched Logs\nlet CombinedEvents = OfficeEvents\n    | union EnrichedEvents\n    | summarize arg_min(StartTime, *) by UserId;\n// Final Output\nCombinedEvents\n| project StartTime, EndTime, DeletedTeams, UserId, AccountName, AccountUPNSuffix\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Low",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "AzureActiveDirectory",
                    "dataTypes": [
                      "EnrichedMicrosoft365AuditLogs"
                    ]
                  },
                  {
                    "connectorId": "Office365",
                    "dataTypes": [
                      "OfficeActivity (Teams)"
                    ]
                  }
                ],
                "tactics": [
                  "Impact"
                ],
                "techniques": [
                  "T1485",
                  "T1489"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "UserId",
                        "identifier": "FullName"
                      },
                      {
                        "columnName": "AccountName",
                        "identifier": "Name"
                      },
                      {
                        "columnName": "AccountUPNSuffix",
                        "identifier": "UPNSuffix"
                      }
                    ],
                    "entityType": "Account"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject8').analyticRuleId8,'/'))))]",
              "properties": {
                "description": "Global Secure Access Analytics Rule 8",
                "parentId": "[variables('analyticRuleObject8').analyticRuleId8]",
                "contentId": "[variables('analyticRuleObject8')._analyticRulecontentId8]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject8').analyticRuleVersion8]",
                "source": {
                  "kind": "Solution",
                  "name": "Global Secure Access",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Partner",
                  "name": "Microsoft Corporation",
                  "email": "GSASentinelSupport@microsoft.com",
                  "link": "https://learn.microsoft.com/en-us/entra/global-secure-access/overview-what-is-global-secure-access"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject8')._analyticRulecontentId8]",
        "contentKind": "AnalyticsRule",
        "displayName": "GSA - Multiple Teams deleted by a single user",
        "contentProductId": "[variables('analyticRuleObject8')._analyticRulecontentProductId8]",
        "id": "[variables('analyticRuleObject8')._analyticRulecontentProductId8]",
        "version": "[variables('analyticRuleObject8').analyticRuleVersion8]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject9').analyticRuleTemplateSpecName9]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Office 365 - Office_MailForwarding_AnalyticalRules Analytics Rule with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject9').analyticRuleVersion9]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject9')._analyticRulecontentId9]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Identifies when multiple (more than one) users' mailboxes are configured to forward to the same destination. \nThis could be an attacker-controlled destination mailbox configured to collect mail from multiple compromised user accounts.",
                "displayName": "GSA - Multiple Users Email Forwarded to Same Destination",
                "enabled": false,
                "query": "// Set query parameters\n  let queryfrequency = 1d;\n  let queryperiod = 7d;\n  // EnrichedMicrosoft365AuditLogs Query\n  let EnrichedEvents = EnrichedMicrosoft365AuditLogs\n  | where TimeGenerated > ago(queryperiod)\n  | where Workload =~ \"Exchange\"\n  // Uncomment or adjust the following line based on actual field usage\n  // | where Operation in (\"Set-Mailbox\", \"New-InboxRule\", \"Set-InboxRule\")\n  | where tostring(AdditionalProperties.Parameters) has_any (\"ForwardTo\", \"RedirectTo\", \"ForwardingSmtpAddress\")\n  | mv-apply DynamicParameters = todynamic(tostring(AdditionalProperties.Parameters)) on (\n      summarize ParsedParameters = make_bag(bag_pack(tostring(DynamicParameters.Name), DynamicParameters.Value))\n    )\n  | evaluate bag_unpack(ParsedParameters, columnsConflict='replace_source')\n  | extend DestinationMailAddress = tolower(case(\n      isnotempty(column_ifexists(\"ForwardTo\", \"\")), column_ifexists(\"ForwardTo\", \"\"),\n      isnotempty(column_ifexists(\"RedirectTo\", \"\")), column_ifexists(\"RedirectTo\", \"\"),\n      isnotempty(column_ifexists(\"ForwardingSmtpAddress\", \"\")), trim_start(@\"smtp:\", column_ifexists(\"ForwardingSmtpAddress\", \"\")),\n      \"\"))\n  | where isnotempty(DestinationMailAddress)\n  | mv-expand split(DestinationMailAddress, \";\")\n  | extend ClientIPValues = extract_all(@'\\[?(::ffff:)?(?P<IPAddress>(\\d+\\.\\d+\\.\\d+\\.\\d+)|[^\\]]+)\\]?([-:](?P<Port>\\d+))?', dynamic([\"IPAddress\", \"Port\"]), ClientIp)[0]\n  | extend ClientIP = tostring(ClientIPValues[0]), Port = tostring(ClientIPValues[1])\n  | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), DistinctUserCount = dcount(UserId), UserId = make_set(UserId, 250), Ports = make_set(Port, 250), EventCount = count() by tostring(DestinationMailAddress), ClientIP\n  | where DistinctUserCount > 1 and EndTime > ago(queryfrequency)\n  | mv-expand UserId to typeof(string)\n  | extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1]);\n  // OfficeActivity Query\n  let OfficeEvents = OfficeActivity\n  | where TimeGenerated > ago(queryperiod)\n  | where OfficeWorkload =~ \"Exchange\"\n  // Uncomment or adjust the following line based on actual field usage\n  // | where Operation in (\"Set-Mailbox\", \"New-InboxRule\", \"Set-InboxRule\")\n  | where Parameters has_any (\"ForwardTo\", \"RedirectTo\", \"ForwardingSmtpAddress\")\n  | mv-apply DynamicParameters = todynamic(Parameters) on (\n      summarize ParsedParameters = make_bag(bag_pack(tostring(DynamicParameters.Name), DynamicParameters.Value))\n    )\n  | evaluate bag_unpack(ParsedParameters, columnsConflict='replace_source')\n  | extend DestinationMailAddress = tolower(case(\n      isnotempty(column_ifexists(\"ForwardTo\", \"\")), column_ifexists(\"ForwardTo\", \"\"),\n      isnotempty(column_ifexists(\"RedirectTo\", \"\")), column_ifexists(\"RedirectTo\", \"\"),\n      isnotempty(column_ifexists(\"ForwardingSmtpAddress\", \"\")), trim_start(@\"smtp:\", column_ifexists(\"ForwardingSmtpAddress\", \"\")),\n      \"\"))\n  | where isnotempty(DestinationMailAddress)\n  | mv-expand split(DestinationMailAddress, \";\")\n  | extend ClientIPValues = extract_all(@'\\[?(::ffff:)?(?P<IPAddress>(\\d+\\.\\d+\\.\\d+\\.\\d+)|[^\\]]+)\\]?([-:](?P<Port>\\d+))?', dynamic([\"IPAddress\", \"Port\"]), ClientIP)[0]\n  | extend ClientIP = tostring(ClientIPValues[0]), Port = tostring(ClientIPValues[1])\n  | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), DistinctUserCount = dcount(UserId), UserId = make_set(UserId, 250), Ports = make_set(Port, 250), EventCount = count() by tostring(DestinationMailAddress), ClientIP\n  | where DistinctUserCount > 1 and EndTime > ago(queryfrequency)\n  | mv-expand UserId to typeof(string)\n  | extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1]);\n  // Combine and Deduplicate Office and Enriched Logs\n  let CombinedEvents = OfficeEvents\n  | union EnrichedEvents\n  | summarize arg_min(StartTime, *) by tostring(DestinationMailAddress), ClientIP;\n  // Final Output\n  CombinedEvents\n  | project StartTime, EndTime, DestinationMailAddress, ClientIP, DistinctUserCount, UserId, Ports, EventCount, AccountName, AccountUPNSuffix\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P7D",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "AzureActiveDirectory",
                    "dataTypes": [
                      "EnrichedMicrosoft365AuditLogs"
                    ]
                  },
                  {
                    "connectorId": "Office365",
                    "dataTypes": [
                      "OfficeActivity (Exchange)"
                    ]
                  }
                ],
                "tactics": [
                  "Collection",
                  "Exfiltration"
                ],
                "techniques": [
                  "T1114",
                  "T1020"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "UserId",
                        "identifier": "FullName"
                      },
                      {
                        "columnName": "AccountName",
                        "identifier": "Name"
                      },
                      {
                        "columnName": "AccountUPNSuffix",
                        "identifier": "UPNSuffix"
                      }
                    ],
                    "entityType": "Account"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "ClientIP",
                        "identifier": "Address"
                      }
                    ],
                    "entityType": "IP"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject9').analyticRuleId9,'/'))))]",
              "properties": {
                "description": "Global Secure Access Analytics Rule 9",
                "parentId": "[variables('analyticRuleObject9').analyticRuleId9]",
                "contentId": "[variables('analyticRuleObject9')._analyticRulecontentId9]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject9').analyticRuleVersion9]",
                "source": {
                  "kind": "Solution",
                  "name": "Global Secure Access",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Partner",
                  "name": "Microsoft Corporation",
                  "email": "GSASentinelSupport@microsoft.com",
                  "link": "https://learn.microsoft.com/en-us/entra/global-secure-access/overview-what-is-global-secure-access"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject9')._analyticRulecontentId9]",
        "contentKind": "AnalyticsRule",
        "displayName": "GSA - Multiple Users Email Forwarded to Same Destination",
        "contentProductId": "[variables('analyticRuleObject9')._analyticRulecontentProductId9]",
        "id": "[variables('analyticRuleObject9')._analyticRulecontentProductId9]",
        "version": "[variables('analyticRuleObject9').analyticRuleVersion9]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject10').analyticRuleTemplateSpecName10]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Office 365 - office_policytampering_AnalyticalRules Analytics Rule with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject10').analyticRuleVersion10]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject10')._analyticRulecontentId10]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Identifies if any tampering is done to either audit log, ATP Safelink, SafeAttachment, AntiPhish, or Dlp policy. \nAn adversary may use this technique to evade detection or avoid other policy-based defenses.\nReferences: https://docs.microsoft.com/powershell/module/exchange/advanced-threat-protection/remove-antiphishrule?view=exchange-ps.",
                "displayName": "GSA - Office Policy Tampering",
                "enabled": false,
                "query": "let opList = EnrichedMicrosoft365AuditLogs \n  | summarize by Operation\n  | where Operation has_any (\"Remove\", \"Disable\")\n  | where Operation contains \"AntiPhish\" or Operation contains \"SafeAttachment\" or Operation contains \"SafeLinks\" or Operation contains \"Dlp\" or Operation contains \"Audit\"\n  | summarize make_set(Operation, 500);\nEnrichedMicrosoft365AuditLogs\n  | where RecordType == \"ExchangeAdmin\"\n  | where UserType in~ (\"Admin\", \"DcAdmin\")\n  | where Operation in~ (opList)\n  | extend ClientIPOnly = case( \n      ClientIp has \".\", tostring(split(ClientIp, \":\")[0]), \n      ClientIp has \"[\", tostring(trim_start(@'[[]', tostring(split(ClientIp, \"]\")[0]))),\n      ClientIp\n    )  \n  | extend Port = case(\n      ClientIp has \".\", tostring(split(ClientIp, \":\")[1]),\n      ClientIp has \"[\", tostring(split(ClientIp, \"]:\")[1]),\n      \"\"\n    )\n  | summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), OperationCount = count() by Operation, UserType, UserId, ClientIP = ClientIPOnly, Port, ResultStatus, Parameters = tostring(AdditionalProperties.Parameters)\n  | extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1])\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "AzureActiveDirectory",
                    "dataTypes": [
                      "EnrichedMicrosoft365AuditLogs"
                    ]
                  },
                  {
                    "connectorId": "Office365",
                    "dataTypes": [
                      "OfficeActivity (Exchange)"
                    ]
                  }
                ],
                "tactics": [
                  "Persistence",
                  "DefenseEvasion"
                ],
                "techniques": [
                  "T1098",
                  "T1562"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "UserId",
                        "identifier": "FullName"
                      },
                      {
                        "columnName": "AccountName",
                        "identifier": "Name"
                      },
                      {
                        "columnName": "AccountUPNSuffix",
                        "identifier": "UPNSuffix"
                      }
                    ],
                    "entityType": "Account"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "ClientIP",
                        "identifier": "Address"
                      }
                    ],
                    "entityType": "IP"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject10').analyticRuleId10,'/'))))]",
              "properties": {
                "description": "Global Secure Access Analytics Rule 10",
                "parentId": "[variables('analyticRuleObject10').analyticRuleId10]",
                "contentId": "[variables('analyticRuleObject10')._analyticRulecontentId10]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject10').analyticRuleVersion10]",
                "source": {
                  "kind": "Solution",
                  "name": "Global Secure Access",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Partner",
                  "name": "Microsoft Corporation",
                  "email": "GSASentinelSupport@microsoft.com",
                  "link": "https://learn.microsoft.com/en-us/entra/global-secure-access/overview-what-is-global-secure-access"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject10')._analyticRulecontentId10]",
        "contentKind": "AnalyticsRule",
        "displayName": "GSA - Office Policy Tampering",
        "contentProductId": "[variables('analyticRuleObject10')._analyticRulecontentProductId10]",
        "id": "[variables('analyticRuleObject10')._analyticRulecontentProductId10]",
        "version": "[variables('analyticRuleObject10').analyticRuleVersion10]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject11').analyticRuleTemplateSpecName11]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Office 365 - Office_Uploaded_Executables_AnalyticalRules Analytics Rule with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject11').analyticRuleVersion11]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject11')._analyticRulecontentId11]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Identifies when executable file types are uploaded to Office services such as SharePoint and OneDrive.\nList currently includes exe, inf, gzip, cmd, bat file extensions.\nAdditionally, identifies when a given user is uploading these files to another user's workspace.\nThis may be an indication of a staging location for malware or other malicious activity.",
                "displayName": "GSA - New Executable via Office FileUploaded Operation",
                "enabled": false,
                "query": "let threshold = 2;\nlet uploadOp = 'FileUploaded';\n// Extensions that are interesting. Add/Remove to this list as you see fit\nlet execExt = dynamic(['exe', 'inf', 'gzip', 'cmd', 'bat']);\nlet starttime = 8d;\nlet endtime = 1d;\n// OfficeActivity Query\nlet OfficeEvents = OfficeActivity\n    | where TimeGenerated >= ago(endtime)\n    | where Operation =~ uploadOp\n    | where SourceFileExtension has_any (execExt)\n    | extend RecordType = coalesce(tostring(RecordType), \"UnknownRecordType\")  // Ensure RecordType is a string\n    | project TimeGenerated, OfficeId, OfficeWorkload = OfficeWorkload, RecordType, Operation, UserType, UserKey, UserId, ClientIP, UserAgent, Site_Url, SourceRelativeUrl, SourceFileName\n    | join kind=leftanti (\n        OfficeActivity\n        | where TimeGenerated between (ago(starttime) .. ago(endtime))\n        | where Operation =~ uploadOp\n        | where SourceFileExtension has_any (execExt)\n        | summarize SourceRelativeUrl = make_set(SourceRelativeUrl, 100000), UserId = make_set(UserId, 100000), PrevSeenCount = count() by SourceFileName\n        // Uncomment the line below to enforce the threshold\n        //| where PrevSeenCount > threshold\n        | mvexpand SourceRelativeUrl, UserId\n        | extend SourceRelativeUrl = tostring(SourceRelativeUrl), UserId = tostring(UserId)  // Ensure consistent types for SourceRelativeUrl and UserId\n    ) on SourceFileName, SourceRelativeUrl, UserId\n    | extend SiteUrlUserFolder = tolower(split(Site_Url, '/')[-2])\n    | extend UserIdUserFolderFormat = tolower(replace_regex(UserId, '@|\\\\.', '_'))\n    | extend UserIdDiffThanUserFolder = iff(Site_Url has '/personal/' and SiteUrlUserFolder != UserIdUserFolderFormat, true, false)\n    | summarize TimeGenerated = make_list(TimeGenerated, 100000), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), UserAgents = make_list(UserAgent, 100000), OfficeIds = make_list(OfficeId, 100000), SourceRelativeUrls = make_list(SourceRelativeUrl, 100000), FileNames = make_list(tostring(SourceFileName), 100000)  // Cast FileNames to string\n    by OfficeWorkload, RecordType, Operation, UserType, UserKey, UserId, ClientIP, Site_Url, SiteUrlUserFolder, UserIdUserFolderFormat, UserIdDiffThanUserFolder\n    | extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1]);\n// EnrichedMicrosoft365AuditLogs Query\nlet EnrichedEvents = EnrichedMicrosoft365AuditLogs\n    | where TimeGenerated >= ago(endtime)\n    | where Operation == uploadOp\n    | extend SourceFileExtension = extract(@\"\\.([^\\./]+)$\", 1, tostring(parse_json(tostring(AdditionalProperties)).SourceFileName))  // Extract file extension\n    | where SourceFileExtension in (execExt)\n    | extend Site_Url = tostring(parse_json(tostring(AdditionalProperties)).SiteUrl)\n    | extend SourceRelativeUrl = tostring(parse_json(tostring(AdditionalProperties)).SourceRelativeUrl)\n    | extend SourceFileName = tostring(parse_json(tostring(AdditionalProperties)).SourceFileName)\n    | extend RecordType = coalesce(tostring(RecordType), \"UnknownRecordType\")  // Ensure RecordType is a string\n    | project TimeGenerated, Id, Workload, RecordType, Operation, UserType, UserKey, UserId, ClientIp, UserAgent = tostring(parse_json(tostring(AdditionalProperties)).UserAgent), Site_Url, SourceRelativeUrl, SourceFileName\n    | join kind=leftanti (\n        EnrichedMicrosoft365AuditLogs\n        | where TimeGenerated between (ago(starttime) .. ago(endtime))\n        | where Operation == uploadOp\n        | extend SourceFileExtension = extract(@\"\\.([^\\./]+)$\", 1, tostring(parse_json(tostring(AdditionalProperties)).SourceFileName))  // Extract file extension\n        | where SourceFileExtension in (execExt)\n        | extend SourceRelativeUrl = tostring(parse_json(tostring(AdditionalProperties)).SourceRelativeUrl)\n        | summarize SourceRelativeUrl = make_set(SourceRelativeUrl, 100000), UserId = make_set(UserId, 100000), PrevSeenCount = count() by SourceFileName = tostring(parse_json(tostring(AdditionalProperties)).SourceFileName)\n        // Uncomment the line below to enforce the threshold\n        //| where PrevSeenCount > threshold\n        | mvexpand SourceRelativeUrl, UserId\n        | extend SourceRelativeUrl = tostring(SourceRelativeUrl), UserId = tostring(UserId)  // Ensure consistent types for SourceRelativeUrl and UserId\n    ) on SourceFileName, SourceRelativeUrl, UserId\n    | extend SiteUrlUserFolder = tolower(split(Site_Url, '/')[-2])\n    | extend UserIdUserFolderFormat = tolower(replace_regex(UserId, '@|\\\\.', '_'))\n    | extend UserIdDiffThanUserFolder = iff(Site_Url has '/personal/' and SiteUrlUserFolder != UserIdUserFolderFormat, true, false)\n    | summarize TimeGenerated = make_list(TimeGenerated, 100000), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), UserAgents = make_list(UserAgent, 100000), Ids = make_list(Id, 100000), SourceRelativeUrls = make_list(tostring(SourceRelativeUrl), 100000), FileNames = make_list(tostring(SourceFileName), 100000)  // Cast FileNames to string\n    by Workload, RecordType, Operation, UserType, UserKey, UserId, ClientIp, Site_Url, SiteUrlUserFolder, UserIdUserFolderFormat, UserIdDiffThanUserFolder\n    | extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1]);\n// Combine Office and Enriched Logs\nlet CombinedEvents = EnrichedEvents\n    | union isfuzzy=true OfficeEvents\n    | summarize arg_min(StartTime, *) by tostring(FileNames), UserId, Site_Url, tostring(RecordType)  // Ensure FileNames and RecordType are strings\n    | order by StartTime desc;\nCombinedEvents\n| project StartTime, EndTime, Workload, RecordType, Operation, UserType, UserKey, UserId, ClientIp, Site_Url, SiteUrlUserFolder, UserIdUserFolderFormat, UserIdDiffThanUserFolder, FileNames, UserAgents, AccountName, AccountUPNSuffix;\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P8D",
                "severity": "Low",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "AzureActiveDirectory",
                    "dataTypes": [
                      "EnrichedMicrosoft365AuditLogs"
                    ]
                  },
                  {
                    "connectorId": "Office365",
                    "dataTypes": [
                      "OfficeActivity (SharePoint)"
                    ]
                  }
                ],
                "tactics": [
                  "CommandAndControl",
                  "LateralMovement"
                ],
                "techniques": [
                  "T1105",
                  "T1570"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "UserId",
                        "identifier": "FullName"
                      },
                      {
                        "columnName": "AccountName",
                        "identifier": "Name"
                      },
                      {
                        "columnName": "AccountUPNSuffix",
                        "identifier": "UPNSuffix"
                      }
                    ],
                    "entityType": "Account"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "ClientIp",
                        "identifier": "Address"
                      }
                    ],
                    "entityType": "IP"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "Site_Url",
                        "identifier": "Url"
                      }
                    ],
                    "entityType": "URL"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "FileNames",
                        "identifier": "Name"
                      }
                    ],
                    "entityType": "File"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject11').analyticRuleId11,'/'))))]",
              "properties": {
                "description": "Global Secure Access Analytics Rule 11",
                "parentId": "[variables('analyticRuleObject11').analyticRuleId11]",
                "contentId": "[variables('analyticRuleObject11')._analyticRulecontentId11]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject11').analyticRuleVersion11]",
                "source": {
                  "kind": "Solution",
                  "name": "Global Secure Access",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Partner",
                  "name": "Microsoft Corporation",
                  "email": "GSASentinelSupport@microsoft.com",
                  "link": "https://learn.microsoft.com/en-us/entra/global-secure-access/overview-what-is-global-secure-access"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject11')._analyticRulecontentId11]",
        "contentKind": "AnalyticsRule",
        "displayName": "GSA - New Executable via Office FileUploaded Operation",
        "contentProductId": "[variables('analyticRuleObject11')._analyticRulecontentProductId11]",
        "id": "[variables('analyticRuleObject11')._analyticRulecontentProductId11]",
        "version": "[variables('analyticRuleObject11').analyticRuleVersion11]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject12').analyticRuleTemplateSpecName12]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Office 365 - RareOfficeOperations_AnalyticalRules Analytics Rule with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject12').analyticRuleVersion12]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject12')._analyticRulecontentId12]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Identifies Office operations that are typically rare and can provide capabilities useful to attackers.",
                "displayName": "GSA - Rare and Potentially High-Risk Office Operations",
                "enabled": false,
                "query": "// OfficeActivity Query\nlet OfficeEvents = OfficeActivity\n    | where Operation in~ ( \"Add-MailboxPermission\", \"Add-MailboxFolderPermission\", \"Set-Mailbox\", \"New-ManagementRoleAssignment\", \"New-InboxRule\", \"Set-InboxRule\", \"Set-TransportRule\")\n    and not(UserId has_any ('NT AUTHORITY\\\\SYSTEM (Microsoft.Exchange.ServiceHost)', 'NT AUTHORITY\\\\SYSTEM (Microsoft.Exchange.AdminApi.NetCore)', 'NT AUTHORITY\\\\SYSTEM (w3wp)', 'devilfish-applicationaccount') and Operation in~ ( \"Add-MailboxPermission\", \"Set-Mailbox\"))\n    | extend ClientIPOnly = tostring(extract_all(@'\\[?(::ffff:)?(?P<IPAddress>(\\d+\\.\\d+\\.\\d+\\.\\d+)|[^\\]]+)\\]?', dynamic([\"IPAddress\"]), ClientIP)[0])\n    | extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1]);\n// EnrichedMicrosoft365AuditLogs Query\nlet EnrichedEvents = EnrichedMicrosoft365AuditLogs\n    | where Operation in~ ( \"Add-MailboxPermission\", \"Add-MailboxFolderPermission\", \"Set-Mailbox\", \"New-ManagementRoleAssignment\", \"New-InboxRule\", \"Set-InboxRule\", \"Set-TransportRule\")\n    and not(UserId has_any ('NT AUTHORITY\\\\SYSTEM (Microsoft.Exchange.ServiceHost)', 'NT AUTHORITY\\\\SYSTEM (Microsoft.Exchange.AdminApi.NetCore)', 'NT AUTHORITY\\\\SYSTEM (w3wp)', 'devilfish-applicationaccount') and Operation in~ ( \"Add-MailboxPermission\", \"Set-Mailbox\"))\n    | extend ClientIPOnly = tostring(extract_all(@'\\[?(::ffff:)?(?P<IPAddress>(\\d+\\.\\d+\\.\\d+\\.\\d+)|[^\\]]+)\\]?', dynamic([\"IPAddress\"]), ClientIp)[0])\n    | extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1]);\n// Combine and Deduplicate Office and Enriched Logs\nlet CombinedEvents = OfficeEvents\n    | union EnrichedEvents\n    | summarize arg_min(TimeGenerated, *) by Operation, UserId, ClientIPOnly;\n// Final Output\nCombinedEvents\n| project TimeGenerated, Operation, UserId, AccountName, AccountUPNSuffix, ClientIPOnly\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Low",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "AzureActiveDirectory",
                    "dataTypes": [
                      "EnrichedMicrosoft365AuditLogs"
                    ]
                  },
                  {
                    "connectorId": "Office365",
                    "dataTypes": [
                      "OfficeActivity"
                    ]
                  }
                ],
                "tactics": [
                  "Persistence",
                  "Collection"
                ],
                "techniques": [
                  "T1098",
                  "T1114"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "UserId",
                        "identifier": "FullName"
                      },
                      {
                        "columnName": "AccountName",
                        "identifier": "Name"
                      },
                      {
                        "columnName": "AccountUPNSuffix",
                        "identifier": "UPNSuffix"
                      }
                    ],
                    "entityType": "Account"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "ClientIPOnly",
                        "identifier": "Address"
                      }
                    ],
                    "entityType": "IP"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "AppId",
                        "identifier": "AppId"
                      }
                    ],
                    "entityType": "CloudApplication"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject12').analyticRuleId12,'/'))))]",
              "properties": {
                "description": "Global Secure Access Analytics Rule 12",
                "parentId": "[variables('analyticRuleObject12').analyticRuleId12]",
                "contentId": "[variables('analyticRuleObject12')._analyticRulecontentId12]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject12').analyticRuleVersion12]",
                "source": {
                  "kind": "Solution",
                  "name": "Global Secure Access",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Partner",
                  "name": "Microsoft Corporation",
                  "email": "GSASentinelSupport@microsoft.com",
                  "link": "https://learn.microsoft.com/en-us/entra/global-secure-access/overview-what-is-global-secure-access"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject12')._analyticRulecontentId12]",
        "contentKind": "AnalyticsRule",
        "displayName": "GSA - Rare and Potentially High-Risk Office Operations",
        "contentProductId": "[variables('analyticRuleObject12')._analyticRulecontentProductId12]",
        "id": "[variables('analyticRuleObject12')._analyticRulecontentProductId12]",
        "version": "[variables('analyticRuleObject12').analyticRuleVersion12]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject13').analyticRuleTemplateSpecName13]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Office 365 - SharePoint_Downloads_byNewIP_AnalyticalRules Analytics Rule with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject13').analyticRuleVersion13]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject13')._analyticRulecontentId13]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Identifies anomalies using user behavior by setting a threshold for significant changes in file upload/download activities from new IP addresses. It establishes a baseline of typical behavior, compares it to recent activity, and flags deviations exceeding a default threshold of 25.",
                "displayName": "GSA - SharePoint File Operation via Previously Unseen IPs",
                "enabled": false,
                "query": "let threshold = 25;\nlet szSharePointFileOperation = \"SharePointFileOperation\";\nlet szOperations = dynamic([\"FileDownloaded\", \"FileUploaded\"]);\nlet starttime = 14d;\nlet endtime = 1d;\n// Define a baseline of normal user behavior for OfficeActivity\nlet userBaselineOffice = OfficeActivity\n    | where TimeGenerated between(ago(starttime)..ago(endtime))\n    | where RecordType =~ szSharePointFileOperation\n    | where Operation in~ (szOperations)\n    | where isnotempty(UserAgent)\n    | summarize Count = count() by UserId, Operation, Site_Url, ClientIP\n    | summarize AvgCount = avg(Count) by UserId, Operation, Site_Url, ClientIP;\n// Get recent user activity for OfficeActivity\nlet recentUserActivityOffice = OfficeActivity\n    | where TimeGenerated > ago(endtime)\n    | where RecordType =~ szSharePointFileOperation\n    | where Operation in~ (szOperations)\n    | where isnotempty(UserAgent)\n    | summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), RecentCount = count() by UserId, UserType, Operation, Site_Url, ClientIP, OfficeObjectId, OfficeWorkload, UserAgent;\n// Define a baseline of normal user behavior for EnrichedMicrosoft365AuditLogs\nlet userBaselineEnriched = EnrichedMicrosoft365AuditLogs\n    | where TimeGenerated between(ago(starttime)..ago(endtime))\n    | where RecordType == szSharePointFileOperation\n    | where Operation in (szOperations)\n    | extend UserAgent = tostring(parse_json(tostring(AdditionalProperties)).UserAgent)\n    | extend Site_Url = tostring(parse_json(tostring(AdditionalProperties)).SiteUrl)\n    | where isnotempty(UserAgent)\n    | summarize Count = count() by UserId, Operation, Site_Url, ClientIp\n    | summarize AvgCount = avg(Count) by UserId, Operation, Site_Url, ClientIp;\n// Get recent user activity for EnrichedMicrosoft365AuditLogs\nlet recentUserActivityEnriched = EnrichedMicrosoft365AuditLogs\n    | where TimeGenerated > ago(endtime)\n    | where RecordType == szSharePointFileOperation\n    | where Operation in (szOperations)\n    | extend UserAgent = tostring(parse_json(tostring(AdditionalProperties)).UserAgent)\n    | extend Site_Url = tostring(parse_json(tostring(AdditionalProperties)).SiteUrl)\n    | where isnotempty(UserAgent)\n    | summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), RecentCount = count() by UserId, UserType, Operation, Site_Url, ClientIp, ObjectId, Workload, UserAgent;\n// Combine user baselines and recent activity, calculate deviation, and deduplicate\nlet UserBehaviorAnalysis = userBaselineOffice\n    | join kind=inner (recentUserActivityOffice) on UserId, Operation, Site_Url, ClientIP\n    | union (userBaselineEnriched | join kind=inner (recentUserActivityEnriched) on UserId, Operation, Site_Url, ClientIp)\n    | extend Deviation = abs(RecentCount - AvgCount) / AvgCount;\n// Filter for significant deviations\nUserBehaviorAnalysis\n    | where Deviation > threshold\n    | project StartTimeUtc, EndTimeUtc, UserId, UserType, Operation, ClientIP, Site_Url, ObjectId, OfficeObjectId, OfficeWorkload, Workload, UserAgent, Deviation, Count=RecentCount\n    | order by Count desc, ClientIP asc, Operation asc, UserId asc\n    | extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1]);\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P14D",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "AzureActiveDirectory",
                    "dataTypes": [
                      "EnrichedMicrosoft365AuditLogs"
                    ]
                  },
                  {
                    "connectorId": "Office365",
                    "dataTypes": [
                      "OfficeActivity (SharePoint)"
                    ]
                  }
                ],
                "tactics": [
                  "Exfiltration"
                ],
                "techniques": [
                  "T1030"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "UserId",
                        "identifier": "FullName"
                      },
                      {
                        "columnName": "AccountName",
                        "identifier": "Name"
                      },
                      {
                        "columnName": "AccountUPNSuffix",
                        "identifier": "UPNSuffix"
                      }
                    ],
                    "entityType": "Account"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "ClientIp",
                        "identifier": "Address"
                      }
                    ],
                    "entityType": "IP"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "Site_Url",
                        "identifier": "Url"
                      }
                    ],
                    "entityType": "URL"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject13').analyticRuleId13,'/'))))]",
              "properties": {
                "description": "Global Secure Access Analytics Rule 13",
                "parentId": "[variables('analyticRuleObject13').analyticRuleId13]",
                "contentId": "[variables('analyticRuleObject13')._analyticRulecontentId13]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject13').analyticRuleVersion13]",
                "source": {
                  "kind": "Solution",
                  "name": "Global Secure Access",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Partner",
                  "name": "Microsoft Corporation",
                  "email": "GSASentinelSupport@microsoft.com",
                  "link": "https://learn.microsoft.com/en-us/entra/global-secure-access/overview-what-is-global-secure-access"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject13')._analyticRulecontentId13]",
        "contentKind": "AnalyticsRule",
        "displayName": "GSA - SharePoint File Operation via Previously Unseen IPs",
        "contentProductId": "[variables('analyticRuleObject13')._analyticRulecontentProductId13]",
        "id": "[variables('analyticRuleObject13')._analyticRulecontentProductId13]",
        "version": "[variables('analyticRuleObject13').analyticRuleVersion13]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject14').analyticRuleTemplateSpecName14]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Office 365 - SharePoint_Downloads_byNewUserAgent_AnalyticalRules Analytics Rule with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject14').analyticRuleVersion14]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject14')._analyticRulecontentId14]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Identifies anomalies if the number of documents uploaded or downloaded from device(s) associated with a previously unseen user agent exceeds a threshold (default is 5) and deviation (default is 25%).",
                "displayName": "GSA - SharePointFileOperation via devices with previously unseen user agents",
                "enabled": false,
                "query": "let threshold = 5;\nlet szSharePointFileOperation = \"SharePointFileOperation\";\nlet szOperations = dynamic([\"FileDownloaded\", \"FileUploaded\"]);\nlet starttime = 14d;\nlet endtime = 1d;\n// OfficeActivity - Base Events\nlet BaseeventsOffice = OfficeActivity\n    | where TimeGenerated between (ago(starttime) .. ago(endtime))\n    | where RecordType =~ szSharePointFileOperation\n    | where Operation in~ (szOperations)\n    | where isnotempty(UserAgent);\n// OfficeActivity - Frequent User Agents\nlet FrequentUAOffice = BaseeventsOffice\n    | summarize FUACount = count() by UserAgent, RecordType, Operation\n    | where FUACount >= threshold\n    | distinct UserAgent;\n// OfficeActivity - User Baseline\nlet UserBaseLineOffice = BaseeventsOffice\n    | summarize Count = count() by UserId, Operation, Site_Url\n    | summarize AvgCount = avg(Count) by UserId, Operation, Site_Url;\n// OfficeActivity - Recent User Activity\nlet RecentActivityOffice = OfficeActivity\n    | where TimeGenerated > ago(endtime)\n    | where RecordType =~ szSharePointFileOperation\n    | where Operation in~ (szOperations)\n    | where isnotempty(UserAgent)\n    | where UserAgent in~ (FrequentUAOffice)\n    | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), OfficeObjectIdCount = dcount(OfficeObjectId), OfficeObjectIdList = make_set(OfficeObjectId), UserAgentSeenCount = count()\n    by RecordType, Operation, UserAgent, UserType, UserId, ClientIP, OfficeWorkload, Site_Url;\n// EnrichedMicrosoft365AuditLogs - Base Events\nlet BaseeventsEnriched = EnrichedMicrosoft365AuditLogs\n    | where TimeGenerated between (ago(starttime) .. ago(endtime))\n    | where RecordType == szSharePointFileOperation\n    | where Operation in (szOperations)\n    | extend UserAgent = tostring(parse_json(tostring(AdditionalProperties)).UserAgent)\n    | extend Site_Url = tostring(parse_json(tostring(AdditionalProperties)).SiteUrl)\n    | where isnotempty(UserAgent);\n// EnrichedMicrosoft365AuditLogs - Frequent User Agents\nlet FrequentUAEnriched = BaseeventsEnriched\n    | summarize FUACount = count() by UserAgent, RecordType, Operation\n    | where FUACount >= threshold\n    | distinct UserAgent;\n// EnrichedMicrosoft365AuditLogs - User Baseline\nlet UserBaseLineEnriched = BaseeventsEnriched\n    | summarize Count = count() by UserId, Operation, Site_Url\n    | summarize AvgCount = avg(Count) by UserId, Operation, Site_Url;\n// EnrichedMicrosoft365AuditLogs - Recent User Activity\nlet RecentActivityEnriched = EnrichedMicrosoft365AuditLogs\n    | where TimeGenerated > ago(endtime)\n    | where RecordType == szSharePointFileOperation\n    | where Operation in (szOperations)\n    | extend UserAgent = tostring(parse_json(tostring(AdditionalProperties)).UserAgent)\n    | extend Site_Url = tostring(parse_json(tostring(AdditionalProperties)).SiteUrl)\n    | where isnotempty(UserAgent)\n    | where UserAgent in (FrequentUAEnriched)\n    | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), ObjectIdCount = dcount(ObjectId), ObjectIdList = make_set(ObjectId), UserAgentSeenCount = count()\n    by RecordType, Operation, UserAgent, UserId, ClientIp, Site_Url;\n// Combine Baseline and Recent Activity, Calculate Deviation, and Deduplicate\nlet UserBehaviorAnalysisOffice = UserBaseLineOffice\n    | join kind=inner (RecentActivityOffice) on UserId, Operation, Site_Url\n    | extend Deviation = abs(UserAgentSeenCount - AvgCount) / AvgCount;\nlet UserBehaviorAnalysisEnriched = UserBaseLineEnriched\n    | join kind=inner (RecentActivityEnriched) on UserId, Operation, Site_Url\n    | extend Deviation = abs(UserAgentSeenCount - AvgCount) / AvgCount;\n// Combine Office and Enriched Logs\nlet CombinedUserBehaviorAnalysis = UserBehaviorAnalysisOffice\n    | union UserBehaviorAnalysisEnriched;\n// Filter and Format Final Results\nCombinedUserBehaviorAnalysis\n    | where Deviation > 0.25\n    | extend UserIdName = tostring(split(UserId, '@')[0]), UserIdUPNSuffix = tostring(split(UserId, '@')[1])\n    | project-reorder StartTime, EndTime, UserAgent, UserAgentSeenCount, UserId, ClientIP, Site_Url\n    | order by UserAgentSeenCount desc, UserAgent asc, UserId asc, Site_Url asc\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P14D",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "AzureActiveDirectory",
                    "dataTypes": [
                      "EnrichedMicrosoft365AuditLogs"
                    ]
                  },
                  {
                    "connectorId": "Office365",
                    "dataTypes": [
                      "OfficeActivity (SharePoint)"
                    ]
                  }
                ],
                "tactics": [
                  "Exfiltration"
                ],
                "techniques": [
                  "T1030"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "UserId",
                        "identifier": "FullName"
                      },
                      {
                        "columnName": "UserIdName",
                        "identifier": "Name"
                      },
                      {
                        "columnName": "UserIdUPNSuffix",
                        "identifier": "UPNSuffix"
                      }
                    ],
                    "entityType": "Account"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "ClientIp",
                        "identifier": "Address"
                      }
                    ],
                    "entityType": "IP"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "Site_Url",
                        "identifier": "Url"
                      }
                    ],
                    "entityType": "URL"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject14').analyticRuleId14,'/'))))]",
              "properties": {
                "description": "Global Secure Access Analytics Rule 14",
                "parentId": "[variables('analyticRuleObject14').analyticRuleId14]",
                "contentId": "[variables('analyticRuleObject14')._analyticRulecontentId14]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject14').analyticRuleVersion14]",
                "source": {
                  "kind": "Solution",
                  "name": "Global Secure Access",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Partner",
                  "name": "Microsoft Corporation",
                  "email": "GSASentinelSupport@microsoft.com",
                  "link": "https://learn.microsoft.com/en-us/entra/global-secure-access/overview-what-is-global-secure-access"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject14')._analyticRulecontentId14]",
        "contentKind": "AnalyticsRule",
        "displayName": "GSA - SharePointFileOperation via devices with previously unseen user agents",
        "contentProductId": "[variables('analyticRuleObject14')._analyticRulecontentProductId14]",
        "id": "[variables('analyticRuleObject14')._analyticRulecontentProductId14]",
        "version": "[variables('analyticRuleObject14').analyticRuleVersion14]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject15').analyticRuleTemplateSpecName15]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Office 365 - sharepoint_file_transfer_above_threshold_AnalyticalRules Analytics Rule with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject15').analyticRuleVersion15]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject15')._analyticRulecontentId15]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Identifies Office365 Sharepoint File Transfers above a certain threshold in a 15-minute time period.\nPlease note that entity mapping for arrays is not supported, so when there is a single value in an array, we will pull that value from the array as a single string to populate the entity to support entity mapping features within Sentinel. Additionally, if the array is multivalued, we will input a string to indicate this with a unique hash so that matching will not occur.",
                "displayName": "GSA - Office365 Sharepoint File Transfer Above Threshold",
                "enabled": false,
                "query": "let threshold = 5000;\n// EnrichedMicrosoft365AuditLogs Query\nlet EnrichedEvents = EnrichedMicrosoft365AuditLogs\n    | where Workload has_any(\"SharePoint\", \"OneDrive\") \n    | where Operation has_any(\"FileDownloaded\", \"FileSyncDownloadedFull\", \"FileSyncUploadedFull\", \"FileUploaded\")\n    | summarize count_distinct_ObjectId=dcount(ObjectId), fileslist=make_set(ObjectId, 10000) \n    by UserId, ClientIp, bin(TimeGenerated, 15m)\n    | where count_distinct_ObjectId >= threshold\n    | extend FileSample = iff(array_length(fileslist) == 1, tostring(fileslist[0]), strcat(\"SeeFilesListField\", \"_\", tostring(hash(tostring(fileslist)))))\n    | extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1]);\n// OfficeActivity Query\nlet OfficeEvents = OfficeActivity\n    | where EventSource == \"SharePoint\" \n    | where OfficeWorkload has_any(\"SharePoint\", \"OneDrive\") \n    | where Operation has_any(\"FileDownloaded\", \"FileSyncDownloadedFull\", \"FileSyncUploadedFull\", \"FileUploaded\")\n    | summarize count_distinct_OfficeObjectId=dcount(OfficeObjectId), fileslist=make_set(OfficeObjectId, 10000) \n    by UserId, ClientIP, bin(TimeGenerated, 15m)\n    | where count_distinct_OfficeObjectId >= threshold\n    | extend FileSample = iff(array_length(fileslist) == 1, tostring(fileslist[0]), strcat(\"SeeFilesListField\", \"_\", tostring(hash(tostring(fileslist)))))\n    | extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1]);\n// Combine Office and Enriched Logs\nlet CombinedEvents = OfficeEvents\n    | union EnrichedEvents\n    | summarize arg_min(TimeGenerated, *) by UserId, ClientIP;\n// Final Output\nCombinedEvents\n    | project TimeGenerated, UserId, ClientIP, AccountName, AccountUPNSuffix, FileSample, count_distinct_ObjectId\n    | order by TimeGenerated desc\n",
                "queryFrequency": "PT15M",
                "queryPeriod": "PT15M",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "AzureActiveDirectory",
                    "dataTypes": [
                      "EnrichedMicrosoft365AuditLogs"
                    ]
                  },
                  {
                    "connectorId": "Office365",
                    "dataTypes": [
                      "OfficeActivity (SharePoint)"
                    ]
                  }
                ],
                "tactics": [
                  "Exfiltration"
                ],
                "techniques": [
                  "T1020"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "UserId",
                        "identifier": "FullName"
                      },
                      {
                        "columnName": "AccountName",
                        "identifier": "Name"
                      },
                      {
                        "columnName": "AccountUPNSuffix",
                        "identifier": "UPNSuffix"
                      }
                    ],
                    "entityType": "Account"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "ClientIp",
                        "identifier": "Address"
                      }
                    ],
                    "entityType": "IP"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "FileSample",
                        "identifier": "Name"
                      }
                    ],
                    "entityType": "File"
                  }
                ],
                "customDetails": {
                  "TransferCount": "count_distinct_ObjectId",
                  "FilesList": "fileslist"
                },
                "incidentConfiguration": {
                  "groupingConfiguration": {
                    "groupByCustomDetails": [],
                    "enabled": true,
                    "reopenClosedIncident": false,
                    "matchingMethod": "Selected",
                    "lookbackDuration": "5h",
                    "groupByEntities": [
                      "Account"
                    ],
                    "groupByAlertDetails": []
                  },
                  "createIncident": true
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject15').analyticRuleId15,'/'))))]",
              "properties": {
                "description": "Global Secure Access Analytics Rule 15",
                "parentId": "[variables('analyticRuleObject15').analyticRuleId15]",
                "contentId": "[variables('analyticRuleObject15')._analyticRulecontentId15]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject15').analyticRuleVersion15]",
                "source": {
                  "kind": "Solution",
                  "name": "Global Secure Access",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Partner",
                  "name": "Microsoft Corporation",
                  "email": "GSASentinelSupport@microsoft.com",
                  "link": "https://learn.microsoft.com/en-us/entra/global-secure-access/overview-what-is-global-secure-access"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject15')._analyticRulecontentId15]",
        "contentKind": "AnalyticsRule",
        "displayName": "GSA - Office365 Sharepoint File Transfer Above Threshold",
        "contentProductId": "[variables('analyticRuleObject15')._analyticRulecontentProductId15]",
        "id": "[variables('analyticRuleObject15')._analyticRulecontentProductId15]",
        "version": "[variables('analyticRuleObject15').analyticRuleVersion15]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject16').analyticRuleTemplateSpecName16]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Office 365 - sharepoint_file_transfer_folders_above_threshold_AnalyticalRules Analytics Rule with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject16').analyticRuleVersion16]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject16')._analyticRulecontentId16]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Identifies Office365 Sharepoint File Transfers with a distinct folder count above a certain threshold in a 15-minute time period.\nPlease note that entity mapping for arrays is not supported, so when there is a single value in an array, we will pull that value from the array as a single string to populate the entity to support entity mapping features within Sentinel. Additionally, if the array is multivalued, we will input a string to indicate this with a unique hash so that matching will not occur.",
                "displayName": "GSA - Office365 Sharepoint File Transfer Above Threshold",
                "enabled": false,
                "query": "let threshold = 500;\n// OfficeActivity Query\nlet OfficeEvents = OfficeActivity\n    | where EventSource == \"SharePoint\" \n    | where OfficeWorkload has_any(\"SharePoint\", \"OneDrive\") \n    | where Operation has_any(\"FileDownloaded\", \"FileSyncDownloadedFull\", \"FileSyncUploadedFull\", \"FileUploaded\")\n    | summarize count_distinct_SourceRelativeUrl = dcount(SourceRelativeUrl), dirlist = make_set(SourceRelativeUrl, 10000)\n    by UserId, ClientIP, UserAgent, bin(TimeGenerated, 15m)\n    | where count_distinct_SourceRelativeUrl >= threshold\n    | extend DirSample = iff(array_length(dirlist) == 1, tostring(dirlist[0]), strcat(\"SeeDirListField\", \"_\", tostring(hash(tostring(dirlist)))))\n    | extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1]);\n// EnrichedMicrosoft365AuditLogs Query\nlet EnrichedEvents = EnrichedMicrosoft365AuditLogs\n    | where Workload has_any(\"SharePoint\", \"OneDrive\")\n    | where Operation has_any(\"FileDownloaded\", \"FileSyncDownloadedFull\", \"FileSyncUploadedFull\", \"FileUploaded\")\n    | extend EventSource = tostring(parse_json(tostring(AdditionalProperties)).EventSource)\n    | extend UserAgent = tostring(parse_json(tostring(AdditionalProperties)).UserAgent)\n    | summarize count_distinct_ObjectId = dcount(ObjectId), dirlist = make_set(ObjectId, 10000)\n    by UserId, ClientIp, UserAgent, bin(TimeGenerated, 15m)\n    | where count_distinct_ObjectId >= threshold\n    | extend DirSample = iff(array_length(dirlist) == 1, tostring(dirlist[0]), strcat(\"SeeDirListField\", \"_\", tostring(hash(tostring(dirlist)))))\n    | extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1]);\n// Combine Office and Enriched Logs\nlet CombinedEvents = OfficeEvents\n    | union EnrichedEvents\n    | summarize arg_min(TimeGenerated, *) by UserId, ClientIP, UserAgent;\n// Final Output\nCombinedEvents\n    | project TimeGenerated, UserId, ClientIP, UserAgent, AccountName, AccountUPNSuffix, DirSample, count_distinct_SourceRelativeUrl\n    | order by TimeGenerated desc\n",
                "queryFrequency": "PT15M",
                "queryPeriod": "PT15M",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "AzureActiveDirectory",
                    "dataTypes": [
                      "EnrichedMicrosoft365AuditLogs"
                    ]
                  },
                  {
                    "connectorId": "Office365",
                    "dataTypes": [
                      "OfficeActivity (SharePoint)"
                    ]
                  }
                ],
                "tactics": [
                  "Exfiltration"
                ],
                "techniques": [
                  "T1020"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "UserId",
                        "identifier": "FullName"
                      },
                      {
                        "columnName": "AccountName",
                        "identifier": "Name"
                      },
                      {
                        "columnName": "AccountUPNSuffix",
                        "identifier": "UPNSuffix"
                      }
                    ],
                    "entityType": "Account"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "ClientIp",
                        "identifier": "Address"
                      }
                    ],
                    "entityType": "IP"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "DirSample",
                        "identifier": "Name"
                      }
                    ],
                    "entityType": "File"
                  }
                ],
                "customDetails": {
                  "TransferCount": "count_distinct_ObjectId",
                  "FilesList": "dirlist"
                },
                "incidentConfiguration": {
                  "groupingConfiguration": {
                    "groupByCustomDetails": [],
                    "enabled": true,
                    "reopenClosedIncident": false,
                    "matchingMethod": "Selected",
                    "lookbackDuration": "5h",
                    "groupByEntities": [
                      "Account"
                    ],
                    "groupByAlertDetails": []
                  },
                  "createIncident": true
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject16').analyticRuleId16,'/'))))]",
              "properties": {
                "description": "Global Secure Access Analytics Rule 16",
                "parentId": "[variables('analyticRuleObject16').analyticRuleId16]",
                "contentId": "[variables('analyticRuleObject16')._analyticRulecontentId16]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject16').analyticRuleVersion16]",
                "source": {
                  "kind": "Solution",
                  "name": "Global Secure Access",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Partner",
                  "name": "Microsoft Corporation",
                  "email": "GSASentinelSupport@microsoft.com",
                  "link": "https://learn.microsoft.com/en-us/entra/global-secure-access/overview-what-is-global-secure-access"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject16')._analyticRulecontentId16]",
        "contentKind": "AnalyticsRule",
        "displayName": "GSA - Office365 Sharepoint File Transfer Above Threshold",
        "contentProductId": "[variables('analyticRuleObject16')._analyticRulecontentProductId16]",
        "id": "[variables('analyticRuleObject16')._analyticRulecontentProductId16]",
        "version": "[variables('analyticRuleObject16').analyticRuleVersion16]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject17').analyticRuleTemplateSpecName17]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "SWG - Abnormal Deny Rate_AnalyticalRules Analytics Rule with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject17').analyticRuleVersion17]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject17')._analyticRulecontentId17]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Identifies abnormal deny rate for specific source IP to destination IP based on the normal average and standard deviation learned during a configured period. This can indicate potential exfiltration, initial access, or C2, where an attacker tries to exploit the same vulnerability on machines in the organization but is being blocked by firewall rules.",
                "displayName": "Detect Abnormal Deny Rate for Source to Destination IP",
                "enabled": false,
                "query": "let NumOfStdsThreshold = 3;\nlet LearningPeriod = 5d;\nlet BinTime = 1h;\nlet MinThreshold = 5.0;\nlet MinLearningBuckets = 5;\nlet TrafficLogs = NetworkAccessTraffic\n  | where Action == 'Denied'\n  | where isnotempty(DestinationIp) and isnotempty(SourceIp);\nlet LearningSrcIpDenyRate = TrafficLogs\n  | where TimeGenerated between (ago(LearningPeriod + 1d) .. ago(1d))\n  | summarize count() by SourceIp, bin(TimeGenerated, BinTime), DestinationIp\n  | summarize LearningTimeSrcIpDenyRateAvg = avg(count_), LearningTimeSrcIpDenyRateStd = stdev(count_), LearningTimeBuckets = count() by SourceIp, DestinationIp\n  | where LearningTimeBuckets > MinLearningBuckets;\nlet AlertTimeSrcIpDenyRate = TrafficLogs\n  | where TimeGenerated between (ago(1h) .. now())\n  | summarize AlertTimeSrcIpDenyRateCount = count() by SourceIp, DestinationIp;\nAlertTimeSrcIpDenyRate\n  | join kind=leftouter (LearningSrcIpDenyRate) on SourceIp, DestinationIp\n  | extend LearningThreshold = max_of(LearningTimeSrcIpDenyRateAvg + NumOfStdsThreshold * LearningTimeSrcIpDenyRateStd, MinThreshold)\n  | where AlertTimeSrcIpDenyRateCount > LearningThreshold\n  | project SourceIp, DestinationIp, AlertTimeSrcIpDenyRateCount, LearningThreshold    \n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT25H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 1,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "AzureActiveDirectory",
                    "dataTypes": [
                      "NetworkAccessTrafficLogs"
                    ]
                  }
                ],
                "tactics": [
                  "InitialAccess",
                  "Exfiltration",
                  "CommandAndControl"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "SourceIp",
                        "identifier": "Address"
                      }
                    ],
                    "entityType": "IP"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "DestinationIp",
                        "identifier": "Url"
                      }
                    ],
                    "entityType": "URL"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject17').analyticRuleId17,'/'))))]",
              "properties": {
                "description": "Global Secure Access Analytics Rule 17",
                "parentId": "[variables('analyticRuleObject17').analyticRuleId17]",
                "contentId": "[variables('analyticRuleObject17')._analyticRulecontentId17]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject17').analyticRuleVersion17]",
                "source": {
                  "kind": "Solution",
                  "name": "Global Secure Access",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Partner",
                  "name": "Microsoft Corporation",
                  "email": "GSASentinelSupport@microsoft.com",
                  "link": "https://learn.microsoft.com/en-us/entra/global-secure-access/overview-what-is-global-secure-access"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject17')._analyticRulecontentId17]",
        "contentKind": "AnalyticsRule",
        "displayName": "Detect Abnormal Deny Rate for Source to Destination IP",
        "contentProductId": "[variables('analyticRuleObject17')._analyticRulecontentProductId17]",
        "id": "[variables('analyticRuleObject17')._analyticRulecontentProductId17]",
        "version": "[variables('analyticRuleObject17').analyticRuleVersion17]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject18').analyticRuleTemplateSpecName18]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "SWG - Abnormal Port to Protocol_AnalyticalRules Analytics Rule with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject18').analyticRuleVersion18]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject18')._analyticRulecontentId18]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Identifies changes in the protocol used for specific destination ports, comparing the current runtime with a learned baseline. This can indicate potential protocol misuse or configuration changes.",
                "displayName": "Detect Protocol Changes for Destination Ports",
                "enabled": false,
                "query": "let LearningPeriod = 7d;\nlet RunTime = 1d;\nlet StartLearningPeriod = ago(LearningPeriod + RunTime);\nlet EndRunTime = ago(RunTime);\nlet LearningPortToProtocol = \n  NetworkAccessTraffic\n  | where TimeGenerated between (StartLearningPeriod .. EndRunTime)\n  | where isnotempty(DestinationPort)\n  | summarize LearningTimeCount = count() by LearningTimeDstPort = DestinationPort, LearningTimeProtocol = TransportProtocol, SourceIp, DestinationFqdn;\nlet AlertTimePortToProtocol = \n  NetworkAccessTraffic\n  | where TimeGenerated between (EndRunTime .. now())\n  | where isnotempty(DestinationPort)\n  | summarize AlertTimeCount = count() by AlertTimeDstPort = DestinationPort, AlertTimeProtocol = TransportProtocol, SourceIp, DestinationFqdn;\nAlertTimePortToProtocol\n  | join kind=leftouter (LearningPortToProtocol) on $left.AlertTimeDstPort == $right.LearningTimeDstPort and $left.SourceIp == $right.SourceIp and $left.DestinationFqdn == $right.DestinationFqdn\n  | where isnull(LearningTimeProtocol) or LearningTimeProtocol != AlertTimeProtocol\n  | project AlertTimeDstPort, AlertTimeProtocol, LearningTimeProtocol, SourceIp, DestinationFqdn\n  | extend IPCustomEntity = SourceIp, FqdnCustomEntity = DestinationFqdn\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "P8D",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 1,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "AzureActiveDirectory",
                    "dataTypes": [
                      "EnrichedMicrosoft365AuditLogs"
                    ]
                  }
                ],
                "tactics": [
                  "DefenseEvasion",
                  "Exfiltration",
                  "CommandAndControl"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "IPCustomEntity",
                        "identifier": "Address"
                      }
                    ],
                    "entityType": "IP"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "FqdnCustomEntity",
                        "identifier": "Url"
                      }
                    ],
                    "entityType": "URL"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject18').analyticRuleId18,'/'))))]",
              "properties": {
                "description": "Global Secure Access Analytics Rule 18",
                "parentId": "[variables('analyticRuleObject18').analyticRuleId18]",
                "contentId": "[variables('analyticRuleObject18')._analyticRulecontentId18]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject18').analyticRuleVersion18]",
                "source": {
                  "kind": "Solution",
                  "name": "Global Secure Access",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Partner",
                  "name": "Microsoft Corporation",
                  "email": "GSASentinelSupport@microsoft.com",
                  "link": "https://learn.microsoft.com/en-us/entra/global-secure-access/overview-what-is-global-secure-access"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject18')._analyticRulecontentId18]",
        "contentKind": "AnalyticsRule",
        "displayName": "Detect Protocol Changes for Destination Ports",
        "contentProductId": "[variables('analyticRuleObject18')._analyticRulecontentProductId18]",
        "id": "[variables('analyticRuleObject18')._analyticRulecontentProductId18]",
        "version": "[variables('analyticRuleObject18').analyticRuleVersion18]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject19').analyticRuleTemplateSpecName19]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "SWG - Source IP Port Scan_AnalyticalRules Analytics Rule with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject19').analyticRuleVersion19]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject19')._analyticRulecontentId19]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Identifies a source IP scanning multiple open ports on Global Secure Access Firewall. This can indicate malicious scanning of ports by an attacker, trying to reveal open ports in the organization that can be compromised for initial access.",
                "displayName": "Detect Source IP Scanning Multiple Open Ports",
                "enabled": false,
                "query": "let port_scan_time = 30s;\nlet min_ports_threshold = 100;\nNetworkAccessTraffic\n| where TimeGenerated > ago(1d)\n| where Action == 'Allowed'\n| summarize PortsScanned = dcount(DestinationPort) by SourceIp, bin(TimeGenerated, port_scan_time)\n| where PortsScanned > min_ports_threshold\n| project SourceIp, PortsScanned, TimeGenerated\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 1,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "AzureActiveDirectory",
                    "dataTypes": [
                      "EnrichedMicrosoft365AuditLogs"
                    ]
                  }
                ],
                "tactics": [
                  "Discovery"
                ],
                "techniques": [
                  "T1046"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "SourceIp",
                        "identifier": "Address"
                      }
                    ],
                    "entityType": "IP"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "Fqdn",
                        "identifier": "Url"
                      }
                    ],
                    "entityType": "URL"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject19').analyticRuleId19,'/'))))]",
              "properties": {
                "description": "Global Secure Access Analytics Rule 19",
                "parentId": "[variables('analyticRuleObject19').analyticRuleId19]",
                "contentId": "[variables('analyticRuleObject19')._analyticRulecontentId19]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject19').analyticRuleVersion19]",
                "source": {
                  "kind": "Solution",
                  "name": "Global Secure Access",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Partner",
                  "name": "Microsoft Corporation",
                  "email": "GSASentinelSupport@microsoft.com",
                  "link": "https://learn.microsoft.com/en-us/entra/global-secure-access/overview-what-is-global-secure-access"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject19')._analyticRulecontentId19]",
        "contentKind": "AnalyticsRule",
        "displayName": "Detect Source IP Scanning Multiple Open Ports",
        "contentProductId": "[variables('analyticRuleObject19')._analyticRulecontentProductId19]",
        "id": "[variables('analyticRuleObject19')._analyticRulecontentProductId19]",
        "version": "[variables('analyticRuleObject19').analyticRuleVersion19]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject1').huntingQueryTemplateSpecName1]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "AnomolousUserAccessingOtherUsersMailbox_HuntingQueries Hunting Query with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject1').huntingQueryVersion1]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Global_Secure_Access_Hunting_Query_1",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "GSA - Anomalous access to other users' mailboxes",
                "category": "Hunting Queries",
                "query": "let starttime = todatetime('{{StartTimeISO}}');\nlet endtime = todatetime('{{EndTimeISO}}');\nlet lookback = totimespan((endtime - starttime) * 2);\nlet user_threshold = 1;    // Threshold for number of mailboxes accessed\nlet folder_threshold = 5;  // Threshold for number of mailbox folders accessed\n// OfficeActivity Query\nlet OfficeEvents = OfficeActivity\n    | where TimeGenerated between (ago(lookback)..starttime)\n    | where Operation =~ \"MailItemsAccessed\"\n    | where ResultStatus =~ \"Succeeded\"\n    | where tolower(MailboxOwnerUPN) != tolower(UserId)\n    | join kind=rightanti (\n        OfficeActivity\n        | where TimeGenerated between (starttime..endtime)\n        | where Operation =~ \"MailItemsAccessed\"\n        | where ResultStatus =~ \"Succeeded\"\n        | where tolower(MailboxOwnerUPN) != tolower(UserId)\n    ) on MailboxOwnerUPN, UserId\n    | where isnotempty(Folders)\n    | mv-expand parse_json(Folders)\n    | extend folders = tostring(Folders.Path)\n    | extend ClientIP = iif(Client_IPAddress startswith \"[\", extract(\"\\\\[([^\\\\]]*)\", 1, Client_IPAddress), Client_IPAddress)\n    | summarize StartTime = max(TimeGenerated), EndTime = min(TimeGenerated), set_folders = make_set(folders, 100000), set_ClientInfoString = make_set(ClientInfoString, 100000), set_ClientIP = make_set(ClientIP, 100000), set_MailboxGuid = make_set(MailboxGuid, 100000), set_MailboxOwnerUPN = make_set(MailboxOwnerUPN, 100000) by UserId\n    | extend folder_count = array_length(set_folders)\n    | extend user_count = array_length(set_MailboxGuid)\n    | where user_count > user_threshold or folder_count > folder_threshold\n    | extend Reason = case(user_count > user_threshold and folder_count > folder_threshold, \"Both User and Folder Threshold Exceeded\", folder_count > folder_threshold and user_count < user_threshold, \"Folder Count Threshold Exceeded\", \"User Threshold Exceeded\")\n    | sort by user_count desc\n    | project-reorder UserId, user_count, folder_count, set_MailboxOwnerUPN, set_ClientIP, set_ClientInfoString, set_folders\n    | extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1])\n    | extend Account_0_Name = AccountName\n    | extend Account_0_UPNSuffix = AccountUPNSuffix;\n// EnrichedMicrosoft365AuditLogs Query\nlet EnrichedEvents = EnrichedMicrosoft365AuditLogs\n    | where TimeGenerated between (ago(lookback)..starttime)\n    | where Operation =~ \"MailItemsAccessed\"\n    | where ResultStatus =~ \"Succeeded\"\n    | extend MailboxOwnerUPN = tostring(parse_json(AdditionalProperties).MailboxOwnerUPN)\n    | where tolower(MailboxOwnerUPN) != tolower(UserId)\n    | join kind=rightanti (\n        EnrichedMicrosoft365AuditLogs\n        | where TimeGenerated between (starttime..endtime)\n        | where Operation =~ \"MailItemsAccessed\"\n        | where ResultStatus =~ \"Succeeded\"\n        | extend MailboxOwnerUPN = tostring(parse_json(AdditionalProperties).MailboxOwnerUPN)\n        | where tolower(MailboxOwnerUPN) != tolower(UserId)\n    ) on MailboxOwnerUPN, UserId\n    | where isnotempty(tostring(parse_json(AdditionalProperties).Folders))\n    | mv-expand Folders = parse_json(AdditionalProperties).Folders\n    | extend folders = tostring(Folders.Path)\n    | extend ClientIP = iif(ClientIp startswith \"[\", extract(\"\\\\[([^\\\\]]*)\", 1, ClientIp), ClientIp)\n    | extend ClientInfoString = tostring(parse_json(AdditionalProperties).ClientInfoString)\n    | extend MailboxGuid = tostring(parse_json(AdditionalProperties).MailboxGuid)\n    | summarize StartTime = max(TimeGenerated), EndTime = min(TimeGenerated), set_folders = make_set(folders, 100000), set_ClientInfoString = make_set(ClientInfoString, 100000), set_ClientIP = make_set(ClientIP, 100000), set_MailboxGuid = make_set(MailboxGuid, 100000), set_MailboxOwnerUPN = make_set(MailboxOwnerUPN, 100000) by UserId\n    | extend folder_count = array_length(set_folders)\n    | extend user_count = array_length(set_MailboxGuid)\n    | where user_count > user_threshold or folder_count > folder_threshold\n    | extend Reason = case(user_count > user_threshold and folder_count > folder_threshold, \"Both User and Folder Threshold Exceeded\", folder_count > folder_threshold and user_count < user_threshold, \"Folder Count Threshold Exceeded\", \"User Threshold Exceeded\")\n    | sort by user_count desc\n    | project-reorder UserId, user_count, folder_count, set_MailboxOwnerUPN, set_ClientIP, set_ClientInfoString, set_folders\n    | extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1])\n    | extend Account_0_Name = AccountName\n    | extend Account_0_UPNSuffix = AccountUPNSuffix;\n// Combine Office and Enriched Logs\nlet CombinedEvents = OfficeEvents\n    | union EnrichedEvents\n    | summarize arg_min(StartTime, *) by UserId, ClientIP;\n// Final Output\nCombinedEvents\n    | project UserId, user_count, folder_count, set_MailboxOwnerUPN, set_ClientIP, set_ClientInfoString, set_folders, AccountName, AccountUPNSuffix\n    | order by user_count desc\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Looks for users accessing multiple other users' mailboxes or accessing multiple folders in another users mailbox."
                  },
                  {
                    "name": "tactics",
                    "value": "Collection"
                  },
                  {
                    "name": "techniques",
                    "value": "T1114.002"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject1')._huntingQuerycontentId1),'/'))))]",
              "properties": {
                "description": "Global Secure Access Hunting Query 1",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject1')._huntingQuerycontentId1)]",
                "contentId": "[variables('huntingQueryObject1')._huntingQuerycontentId1]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject1').huntingQueryVersion1]",
                "source": {
                  "kind": "Solution",
                  "name": "Global Secure Access",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Partner",
                  "name": "Microsoft Corporation",
                  "email": "GSASentinelSupport@microsoft.com",
                  "link": "https://learn.microsoft.com/en-us/entra/global-secure-access/overview-what-is-global-secure-access"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject1')._huntingQuerycontentId1]",
        "contentKind": "HuntingQuery",
        "displayName": "GSA - Anomalous access to other users' mailboxes",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject1')._huntingQuerycontentId1,'-', '2.0.2')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject1')._huntingQuerycontentId1,'-', '2.0.2')))]",
        "version": "2.0.2"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject2').huntingQueryTemplateSpecName2]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "ExternalUserAddedRemovedInTeams_HuntVersion_HuntingQueries Hunting Query with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject2').huntingQueryVersion2]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Global_Secure_Access_Hunting_Query_2",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "GSA - External User Added and Removed in a Short Timeframe",
                "category": "Hunting Queries",
                "query": "let time_delta = 1h;  // Timeframe to detect quick additions and removals of external users\n// EnrichedMicrosoft365AuditLogs Query\nlet EnrichedEvents = EnrichedMicrosoft365AuditLogs\n    | where Workload == \"MicrosoftTeams\"\n    | where Operation == \"MemberAdded\"\n    | extend UPN = tostring(parse_json(tostring(AdditionalProperties)).UPN)  // Extract UPN\n    | where UPN contains \"#EXT#\"\n    | project TimeAdded = TimeGenerated, Operation, UPN, UserWhoAdded = UserId, TeamName = tostring(parse_json(tostring(AdditionalProperties)).TeamName), TeamGuid = tostring(parse_json(tostring(AdditionalProperties)).TeamGuid)\n    | join kind=innerunique (\n        EnrichedMicrosoft365AuditLogs\n        | where Workload == \"MicrosoftTeams\"\n        | where Operation == \"MemberRemoved\"\n        | extend UPN = tostring(parse_json(tostring(AdditionalProperties)).UPN)  // Extract UPN\n        | where UPN contains \"#EXT#\"\n        | project TimeDeleted = TimeGenerated, Operation, UPN, UserWhoDeleted = UserId, TeamName = tostring(parse_json(tostring(AdditionalProperties)).TeamName), TeamGuid = tostring(parse_json(tostring(AdditionalProperties)).TeamGuid)\n    ) on UPN, TeamGuid\n    | where TimeDeleted < (TimeAdded + time_delta)  // Check if removed within the time_delta\n    | project TimeAdded, TimeDeleted, UPN, UserWhoAdded, UserWhoDeleted, TeamName, TeamGuid\n    | extend AccountName = tostring(split(UPN, \"@\")[0]), AccountUPNSuffix = tostring(split(UPN, \"@\")[1]);\n// OfficeActivity Query\nlet OfficeEvents = OfficeActivity\n    | where OfficeWorkload =~ \"MicrosoftTeams\"\n    | where Operation =~ \"MemberAdded\"\n    | extend UPN = tostring(parse_json(Members)[0].UPN)\n    | where UPN contains \"#EXT#\"\n    | project TimeAdded = TimeGenerated, Operation, UPN, UserWhoAdded = UserId, TeamName, TeamGuid\n    | join kind=innerunique (\n        OfficeActivity\n        | where OfficeWorkload =~ \"MicrosoftTeams\"\n        | where Operation =~ \"MemberRemoved\"\n        | extend UPN = tostring(parse_json(Members)[0].UPN)\n        | where UPN contains \"#EXT#\"\n        | project TimeDeleted = TimeGenerated, Operation, UPN, UserWhoDeleted = UserId, TeamName, TeamGuid\n    ) on UPN, TeamGuid\n    | where TimeDeleted < (TimeAdded + time_delta)  // Check if removed within the time_delta\n    | project TimeAdded, TimeDeleted, UPN, UserWhoAdded, UserWhoDeleted, TeamName, TeamGuid\n    | extend AccountName = tostring(split(UPN, \"@\")[0]), AccountUPNSuffix = tostring(split(UPN, \"@\")[1])\n    | extend Account_0_Name = AccountName, Account_0_UPNSuffix = AccountUPNSuffix;\n// Combine Office and Enriched Logs\nlet CombinedEvents = OfficeEvents\n    | union EnrichedEvents\n    | summarize arg_min(TimeAdded, *) by UPN, TeamGuid;\n// Final Output\nCombinedEvents\n    | project TimeAdded, TimeDeleted, UPN, UserWhoAdded, UserWhoDeleted, TeamName, TeamGuid, AccountName, AccountUPNSuffix\n    | order by TimeAdded desc\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This hunting query identifies external user accounts that are added to a Team and then removed within one hour."
                  },
                  {
                    "name": "tactics",
                    "value": "Persistence"
                  },
                  {
                    "name": "techniques",
                    "value": "T1136"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject2')._huntingQuerycontentId2),'/'))))]",
              "properties": {
                "description": "Global Secure Access Hunting Query 2",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject2')._huntingQuerycontentId2)]",
                "contentId": "[variables('huntingQueryObject2')._huntingQuerycontentId2]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject2').huntingQueryVersion2]",
                "source": {
                  "kind": "Solution",
                  "name": "Global Secure Access",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Partner",
                  "name": "Microsoft Corporation",
                  "email": "GSASentinelSupport@microsoft.com",
                  "link": "https://learn.microsoft.com/en-us/entra/global-secure-access/overview-what-is-global-secure-access"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject2')._huntingQuerycontentId2]",
        "contentKind": "HuntingQuery",
        "displayName": "GSA - External User Added and Removed in a Short Timeframe",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject2')._huntingQuerycontentId2,'-', '2.0.2')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject2')._huntingQuerycontentId2,'-', '2.0.2')))]",
        "version": "2.0.2"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject3').huntingQueryTemplateSpecName3]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "ExternalUserFromNewOrgAddedToTeams_HuntingQueries Hunting Query with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject3').huntingQueryVersion3]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Global_Secure_Access_Hunting_Query_3",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "GSA - External user from a new organisation added to Teams",
                "category": "Hunting Queries",
                "query": "let starttime = todatetime('{{StartTimeISO}}');\nlet endtime = todatetime('{{EndTimeISO}}');\nlet lookback = totimespan((endtime - starttime) * 7);\n// OfficeActivity Known Organizations\nlet known_orgs_office = (\n    OfficeActivity\n    | where TimeGenerated between(ago(lookback)..starttime)\n    | where OfficeWorkload =~ \"MicrosoftTeams\"\n    | where Operation =~ \"MemberAdded\" or Operation =~ \"TeamsSessionStarted\"\n    | extend UPN = iif(Operation == \"MemberAdded\", tostring(Members[0].UPN), UserId)\n    | extend Organization = tostring(split(split(UPN, \"_\")[1], \"#\")[0])\n    | where isnotempty(Organization)\n    | summarize by Organization\n);\n// OfficeActivity Query for New Organizations\nlet OfficeEvents = OfficeActivity\n    | where TimeGenerated between(starttime..endtime)\n    | where OfficeWorkload =~ \"MicrosoftTeams\"\n    | where Operation =~ \"MemberAdded\"\n    | extend UPN = tostring(parse_json(Members)[0].UPN)\n    | extend Organization = tostring(split(split(UPN, \"_\")[1], \"#\")[0])\n    | where isnotempty(Organization)\n    | where Organization !in (known_orgs_office)\n    | extend AccountName = tostring(split(UPN, \"@\")[0]), AccountUPNSuffix = tostring(split(UPN, \"@\")[1])\n    | extend Account_0_Name = AccountName, Account_0_UPNSuffix = AccountUPNSuffix;\n// EnrichedMicrosoft365AuditLogs Known Organizations\nlet known_orgs_enriched = (\n    EnrichedMicrosoft365AuditLogs\n    | where TimeGenerated between(ago(lookback)..starttime)\n    | where Workload == \"MicrosoftTeams\"\n    | where Operation in (\"MemberAdded\", \"TeamsSessionStarted\")\n    | extend Members = parse_json(tostring(AdditionalProperties.Members))\n    | extend UPN = iif(Operation == \"MemberAdded\", tostring(Members[0].UPN), UserId)\n    | extend Organization = tostring(split(split(UPN, \"_\")[1], \"#\")[0])\n    | where isnotempty(Organization)\n    | summarize by Organization\n);\n// EnrichedMicrosoft365AuditLogs Query for New Organizations\nlet EnrichedEvents = EnrichedMicrosoft365AuditLogs\n    | where TimeGenerated between(starttime..endtime)\n    | where Workload == \"MicrosoftTeams\"\n    | where Operation == \"MemberAdded\"\n    | extend Members = parse_json(tostring(AdditionalProperties.Members))\n    | extend UPN = tostring(Members[0].UPN)\n    | extend Organization = tostring(split(split(UPN, \"_\")[1], \"#\")[0])\n    | where isnotempty(Organization)\n    | where Organization !in (known_orgs_enriched)\n    | extend AccountName = tostring(split(UPN, \"@\")[0]), AccountUPNSuffix = tostring(split(UPN, \"@\")[1])\n    | extend Account_0_Name = AccountName, Account_0_UPNSuffix = AccountUPNSuffix;\n// Combine Office and Enriched Logs\nlet CombinedEvents = OfficeEvents\n    | union EnrichedEvents\n    | summarize arg_min(TimeGenerated, *) by Organization, UPN;\n// Final Output\nCombinedEvents\n    | project Organization, UPN, AccountName, AccountUPNSuffix\n    | order by Organization asc\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query identifies external users added to Teams where the user's domain is not one previously seen in Teams data."
                  },
                  {
                    "name": "tactics",
                    "value": "Persistence"
                  },
                  {
                    "name": "techniques",
                    "value": "T1136"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject3')._huntingQuerycontentId3),'/'))))]",
              "properties": {
                "description": "Global Secure Access Hunting Query 3",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject3')._huntingQuerycontentId3)]",
                "contentId": "[variables('huntingQueryObject3')._huntingQuerycontentId3]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject3').huntingQueryVersion3]",
                "source": {
                  "kind": "Solution",
                  "name": "Global Secure Access",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Partner",
                  "name": "Microsoft Corporation",
                  "email": "GSASentinelSupport@microsoft.com",
                  "link": "https://learn.microsoft.com/en-us/entra/global-secure-access/overview-what-is-global-secure-access"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject3')._huntingQuerycontentId3]",
        "contentKind": "HuntingQuery",
        "displayName": "GSA - External user from a new organisation added to Teams",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject3')._huntingQuerycontentId3,'-', '2.0.2')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject3')._huntingQuerycontentId3,'-', '2.0.2')))]",
        "version": "2.0.2"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject4').huntingQueryTemplateSpecName4]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Mail_redirect_via_ExO_transport_rule_hunting_HuntingQueries Hunting Query with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject4').huntingQueryVersion4]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Global_Secure_Access_Hunting_Query_4",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "GSA - Mail Redirect via EXO Transport Rule",
                "category": "Hunting Queries",
                "query": "// EnrichedMicrosoft365AuditLogs Query\nlet EnrichedEvents = EnrichedMicrosoft365AuditLogs\n    | where Workload == \"Exchange\"\n    | where Operation in (\"New-TransportRule\", \"Set-TransportRule\")\n    | mv-apply DynamicParameters = todynamic(AdditionalProperties.Parameters) on (\n        summarize ParsedParameters = make_bag(pack(tostring(DynamicParameters.Name), DynamicParameters.Value))\n    )\n    | extend RuleName = case(\n        Operation == \"Set-TransportRule\", ObjectId,\n        Operation == \"New-TransportRule\", ParsedParameters.Name,\n        \"Unknown\"\n    )\n    | mv-expand ExpandedParameters = todynamic(AdditionalProperties.Parameters)\n    | where ExpandedParameters.Name in (\"BlindCopyTo\", \"RedirectMessageTo\") and isnotempty(ExpandedParameters.Value)\n    | extend RedirectTo = ExpandedParameters.Value\n    | extend ClientIPValues = extract_all(@'\\[?(::ffff:)?(?P<IPAddress>(\\d+\\.\\d+\\.\\d+\\.\\d+)|[^\\]]+)\\]?([-:](?P<Port>\\d+))?', dynamic([\"IPAddress\", \"Port\"]), ClientIp)[0]\n    | project TimeGenerated, RedirectTo, IPAddress = tostring(ClientIPValues[0]), Port = tostring(ClientIPValues[1]), UserId, Operation, RuleName, AdditionalProperties\n    | extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1]);\n// OfficeActivity Query\nlet OfficeEvents = OfficeActivity\n    | where OfficeWorkload == \"Exchange\"\n    | where Operation in (\"New-TransportRule\", \"Set-TransportRule\")\n    | mv-apply DynamicParameters = todynamic(Parameters) on (\n        summarize ParsedParameters = make_bag(pack(tostring(DynamicParameters.Name), DynamicParameters.Value))\n    )\n    | extend RuleName = case(\n        Operation == \"Set-TransportRule\", OfficeObjectId,\n        Operation == \"New-TransportRule\", ParsedParameters.Name,\n        \"Unknown\"\n    )\n    | mv-expand ExpandedParameters = todynamic(Parameters)\n    | where ExpandedParameters.Name in (\"BlindCopyTo\", \"RedirectMessageTo\") and isnotempty(ExpandedParameters.Value)\n    | extend RedirectTo = ExpandedParameters.Value\n    | extend ClientIPValues = extract_all(@'\\[?(::ffff:)?(?P<IPAddress>(\\d+\\.\\d+\\.\\d+\\.\\d+)|[^\\]]+)\\]?([-:](?P<Port>\\d+))?', dynamic([\"IPAddress\", \"Port\"]), ClientIP)[0]\n    | project TimeGenerated, RedirectTo, IPAddress = tostring(ClientIPValues[0]), Port = tostring(ClientIPValues[1]), UserId, Operation, RuleName, Parameters\n    | extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1])\n    | extend Account_0_Name = AccountName, Account_0_UPNSuffix = AccountUPNSuffix, IP_0_Address = IPAddress;\n// Combine Office and Enriched Logs\nlet CombinedEvents = OfficeEvents\n    | union EnrichedEvents\n    | summarize arg_min(TimeGenerated, *) by RuleName, UserId;\n// Final Output\nCombinedEvents\n    | project TimeGenerated, RuleName, RedirectTo, IPAddress, Port, UserId, AccountName, AccountUPNSuffix\n    | order by TimeGenerated desc\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Identifies when Exchange Online transport rule is configured to forward emails.\nThis could be an adversary mailbox configured to collect mail from multiple user accounts."
                  },
                  {
                    "name": "tactics",
                    "value": "Collection,Exfiltration"
                  },
                  {
                    "name": "techniques",
                    "value": "T1114,T1020"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject4')._huntingQuerycontentId4),'/'))))]",
              "properties": {
                "description": "Global Secure Access Hunting Query 4",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject4')._huntingQuerycontentId4)]",
                "contentId": "[variables('huntingQueryObject4')._huntingQuerycontentId4]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject4').huntingQueryVersion4]",
                "source": {
                  "kind": "Solution",
                  "name": "Global Secure Access",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Partner",
                  "name": "Microsoft Corporation",
                  "email": "GSASentinelSupport@microsoft.com",
                  "link": "https://learn.microsoft.com/en-us/entra/global-secure-access/overview-what-is-global-secure-access"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject4')._huntingQuerycontentId4]",
        "contentKind": "HuntingQuery",
        "displayName": "GSA - Mail Redirect via EXO Transport Rule",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject4')._huntingQuerycontentId4,'-', '2.0.2')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject4')._huntingQuerycontentId4,'-', '2.0.2')))]",
        "version": "2.0.2"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject5').huntingQueryTemplateSpecName5]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "MultiTeamBot_HuntingQueries Hunting Query with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject5').huntingQueryVersion5]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Global_Secure_Access_Hunting_Query_5",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "GSA - Bots added to multiple teams",
                "category": "Hunting Queries",
                "query": "let threshold = 2;  // Adjust this threshold based on your environment\nlet time_threshold = timespan(5m);  // Adjust the time delta threshold\n// OfficeActivity Query\nlet OfficeEvents = OfficeActivity\n    | where OfficeWorkload =~ \"MicrosoftTeams\"\n    | where Operation =~ \"BotAddedToTeam\"\n    | summarize Start = max(TimeGenerated), End = min(TimeGenerated), Teams = make_set(TeamName, 10000) by UserId\n    | extend CountOfTeams = array_length(Teams)\n    | extend TimeDelta = End - Start\n    | where CountOfTeams > threshold\n    | where TimeDelta >= time_threshold\n    | project Start, End, Teams, CountOfTeams, UserId\n    | extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1])\n    | extend Account_0_Name = AccountName, Account_0_UPNSuffix = AccountUPNSuffix;\n// EnrichedMicrosoft365AuditLogs Query\nlet EnrichedEvents = EnrichedMicrosoft365AuditLogs\n    | where Workload == \"MicrosoftTeams\"\n    | where Operation == \"BotAddedToTeam\"\n    | extend TeamName = tostring(parse_json(tostring(AdditionalProperties)).TeamName)\n    | summarize Start = max(TimeGenerated), End = min(TimeGenerated), Teams = make_set(TeamName, 10000) by UserId\n    | extend CountOfTeams = array_length(Teams)\n    | extend TimeDelta = End - Start\n    | where CountOfTeams > threshold\n    | where TimeDelta <= time_threshold\n    | project Start, End, Teams, CountOfTeams, UserId\n    | extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1])\n    | extend Account_0_Name = AccountName, Account_0_UPNSuffix = AccountUPNSuffix;\n// Combine Office and Enriched Logs\nlet CombinedEvents = OfficeEvents\n    | union EnrichedEvents\n    | summarize arg_min(Start, *) by UserId;\n// Final Output\nCombinedEvents\n    | project Start, End, Teams, CountOfTeams, UserId, AccountName, AccountUPNSuffix\n    | order by Start desc\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This hunting query helps identify bots added to multiple Teams in a short space of time."
                  },
                  {
                    "name": "tactics",
                    "value": "Persistence,Collection"
                  },
                  {
                    "name": "techniques",
                    "value": "T1176,T1119"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject5')._huntingQuerycontentId5),'/'))))]",
              "properties": {
                "description": "Global Secure Access Hunting Query 5",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject5')._huntingQuerycontentId5)]",
                "contentId": "[variables('huntingQueryObject5')._huntingQuerycontentId5]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject5').huntingQueryVersion5]",
                "source": {
                  "kind": "Solution",
                  "name": "Global Secure Access",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Partner",
                  "name": "Microsoft Corporation",
                  "email": "GSASentinelSupport@microsoft.com",
                  "link": "https://learn.microsoft.com/en-us/entra/global-secure-access/overview-what-is-global-secure-access"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject5')._huntingQuerycontentId5]",
        "contentKind": "HuntingQuery",
        "displayName": "GSA - Bots added to multiple teams",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject5')._huntingQuerycontentId5,'-', '2.0.2')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject5')._huntingQuerycontentId5,'-', '2.0.2')))]",
        "version": "2.0.2"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject6').huntingQueryTemplateSpecName6]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "MultiTeamOwner_HuntingQueries Hunting Query with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject6').huntingQueryVersion6]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Global_Secure_Access_Hunting_Query_6",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "GSA - User made Owner of multiple teams",
                "category": "Hunting Queries",
                "query": "let max_owner_count = 3;  \n// Adjust this value to change how many teams a user is made owner of before detecting\n// OfficeActivity Query: Identify users who have been made owners of more than 'max_owner_count' teams\nlet high_owner_count_office = (\n    OfficeActivity\n    | where OfficeWorkload =~ \"MicrosoftTeams\"\n    | where Operation =~ \"MemberRoleChanged\"\n    | extend Member = tostring(parse_json(Members)[0].UPN) \n    | extend NewRole = toint(parse_json(Members)[0].Role)\n    | where NewRole == 2  // Role 2 corresponds to \"Owner\"\n    | summarize TeamCount = dcount(TeamName) by Member\n    | where TeamCount > max_owner_count\n    | project Member\n);\n// OfficeActivity Query: Fetch details for users with high ownership count\nlet OfficeEvents = OfficeActivity\n    | where OfficeWorkload =~ \"MicrosoftTeams\"\n    | where Operation =~ \"MemberRoleChanged\"\n    | extend Member = tostring(parse_json(Members)[0].UPN)\n    | extend NewRole = toint(parse_json(Members)[0].Role)\n    | where NewRole == 2  // Role 2 corresponds to \"Owner\"\n    | where Member in (high_owner_count_office)\n    | extend AccountName = tostring(split(Member, \"@\")[0]), AccountUPNSuffix = tostring(split(Member, \"@\")[1]);\n// EnrichedMicrosoft365AuditLogs Query: Identify users who have been made owners of more than 'max_owner_count' teams\nlet high_owner_count_enriched = (\n    EnrichedMicrosoft365AuditLogs\n    | where Workload == \"MicrosoftTeams\"\n    | where Operation == \"MemberRoleChanged\"\n    | extend Member = tostring(UserId)\n    | extend NewRole = toint(parse_json(tostring(AdditionalProperties)).Role)\n    | where NewRole == 2  // Role 2 corresponds to \"Owner\"\n    | summarize TeamCount = dcount(ObjectId) by Member\n    | where TeamCount > max_owner_count\n    | project Member\n);\n// EnrichedMicrosoft365AuditLogs Query: Fetch details for users with high ownership count\nlet EnrichedEvents = EnrichedMicrosoft365AuditLogs\n    | where Workload == \"MicrosoftTeams\"\n    | where Operation == \"MemberRoleChanged\"\n    | extend Member = tostring(UserId)\n    | extend NewRole = toint(parse_json(tostring(AdditionalProperties)).Role)\n    | where NewRole == 2  // Role 2 corresponds to \"Owner\"\n    | where Member in (high_owner_count_enriched)\n    | extend AccountName = tostring(split(Member, \"@\")[0]), AccountUPNSuffix = tostring(split(Member, \"@\")[1]);\n// Combine Office and Enriched Logs\nlet CombinedEvents = OfficeEvents\n    | union EnrichedEvents\n    | summarize by Member, AccountName, AccountUPNSuffix;\n// Final Output\nCombinedEvents\n| order by Member asc\n| project Member, AccountName, AccountUPNSuffix\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This hunting query identifies users who have been made Owner of multiple Teams."
                  },
                  {
                    "name": "tactics",
                    "value": "PrivilegeEscalation"
                  },
                  {
                    "name": "techniques",
                    "value": "T1078"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject6')._huntingQuerycontentId6),'/'))))]",
              "properties": {
                "description": "Global Secure Access Hunting Query 6",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject6')._huntingQuerycontentId6)]",
                "contentId": "[variables('huntingQueryObject6')._huntingQuerycontentId6]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject6').huntingQueryVersion6]",
                "source": {
                  "kind": "Solution",
                  "name": "Global Secure Access",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Partner",
                  "name": "Microsoft Corporation",
                  "email": "GSASentinelSupport@microsoft.com",
                  "link": "https://learn.microsoft.com/en-us/entra/global-secure-access/overview-what-is-global-secure-access"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject6')._huntingQuerycontentId6]",
        "contentKind": "HuntingQuery",
        "displayName": "GSA - User made Owner of multiple teams",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject6')._huntingQuerycontentId6,'-', '2.0.2')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject6')._huntingQuerycontentId6,'-', '2.0.2')))]",
        "version": "2.0.2"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject7').huntingQueryTemplateSpecName7]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "MultipleTeamsDeletes_HuntingQueries Hunting Query with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject7').huntingQueryVersion7]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Global_Secure_Access_Hunting_Query_7",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "GSA - Multiple Teams deleted by a single user",
                "category": "Hunting Queries",
                "query": "let max_delete = 3;  // Adjust this value to change how many Teams should be deleted before being included\n// EnrichedMicrosoft365AuditLogs - Users who deleted more than 'max_delete' Teams\nlet deleting_users_enriched = (\n    EnrichedMicrosoft365AuditLogs\n    | where Workload == \"MicrosoftTeams\"\n    | where Operation == \"TeamDeleted\"\n    | summarize count_ = count() by UserId\n    | where count_ > max_delete\n    | project UserId\n);\n// EnrichedMicrosoft365AuditLogs Query\nlet EnrichedEvents = EnrichedMicrosoft365AuditLogs\n    | where Workload == \"MicrosoftTeams\"\n    | where Operation == \"TeamDeleted\"\n    | where UserId in (deleting_users_enriched)\n    | extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1])\n    | extend Account_0_Name = AccountName, Account_0_UPNSuffix = AccountUPNSuffix\n    | project TimeGenerated, UserId, Account_0_Name, Account_0_UPNSuffix;\n// OfficeActivity - Users who deleted more than 'max_delete' Teams\nlet deleting_users_office = (\n    OfficeActivity\n    | where OfficeWorkload =~ \"MicrosoftTeams\"\n    | where Operation =~ \"TeamDeleted\"\n    | summarize count_ = count() by UserId\n    | where count_ > max_delete\n    | project UserId\n);\n// OfficeActivity Query\nlet OfficeEvents = OfficeActivity\n    | where OfficeWorkload =~ \"MicrosoftTeams\"\n    | where Operation =~ \"TeamDeleted\"\n    | where UserId in (deleting_users_office)\n    | extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1])\n    | extend Account_0_Name = AccountName, Account_0_UPNSuffix = AccountUPNSuffix\n    | project TimeGenerated, UserId, Account_0_Name, Account_0_UPNSuffix;\n// Combine Office and Enriched Logs\nlet CombinedEvents = OfficeEvents\n    | union EnrichedEvents\n    | summarize arg_min(TimeGenerated, *) by UserId;\n// Final Output\nCombinedEvents\n| project TimeGenerated, UserId, Account_0_Name, Account_0_UPNSuffix\n| order by TimeGenerated desc\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This hunting query identifies where multiple Teams have been deleted by a single user in a short timeframe."
                  },
                  {
                    "name": "tactics",
                    "value": "Impact"
                  },
                  {
                    "name": "techniques",
                    "value": "T1485,T1489"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject7')._huntingQuerycontentId7),'/'))))]",
              "properties": {
                "description": "Global Secure Access Hunting Query 7",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject7')._huntingQuerycontentId7)]",
                "contentId": "[variables('huntingQueryObject7')._huntingQuerycontentId7]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject7').huntingQueryVersion7]",
                "source": {
                  "kind": "Solution",
                  "name": "Global Secure Access",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Partner",
                  "name": "Microsoft Corporation",
                  "email": "GSASentinelSupport@microsoft.com",
                  "link": "https://learn.microsoft.com/en-us/entra/global-secure-access/overview-what-is-global-secure-access"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject7')._huntingQuerycontentId7]",
        "contentKind": "HuntingQuery",
        "displayName": "GSA - Multiple Teams deleted by a single user",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject7')._huntingQuerycontentId7,'-', '2.0.2')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject7')._huntingQuerycontentId7,'-', '2.0.2')))]",
        "version": "2.0.2"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject8').huntingQueryTemplateSpecName8]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "NewBotAddedToTeams_HuntingQueries Hunting Query with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject8').huntingQueryVersion8]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Global_Secure_Access_Hunting_Query_8",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "GSA - Previously Unseen Bot or Application Added to Teams",
                "category": "Hunting Queries",
                "query": "let starttime = todatetime('{{StartTimeISO}}');\nlet endtime = todatetime('{{EndTimeISO}}');\nlet lookback = starttime - 14d;\n// Historical bots from EnrichedMicrosoft365AuditLogs\nlet historical_bots_enriched = EnrichedMicrosoft365AuditLogs\n    | where TimeGenerated between (lookback .. starttime)\n    | where Workload == \"MicrosoftTeams\"\n    | extend AddonName = tostring(parse_json(tostring(AdditionalProperties)).AddonName)\n    | where isnotempty(AddonName)\n    | distinct AddonName;\n// Historical bots from OfficeActivity\nlet historical_bots_office = OfficeActivity\n    | where TimeGenerated between (lookback .. starttime)\n    | where OfficeWorkload == \"MicrosoftTeams\"\n    | where isnotempty(AddonName)\n    | distinct AddonName;\n// Find new bots in Enriched Logs\nlet new_bots_enriched = EnrichedMicrosoft365AuditLogs\n    | where TimeGenerated between (starttime .. endtime)\n    | where Workload == \"MicrosoftTeams\"\n    | extend AddonName = tostring(parse_json(tostring(AdditionalProperties)).AddonName)\n    | where AddonName !in (historical_bots_enriched)\n    | extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1]);\n// Find new bots in OfficeActivity\nlet new_bots_office = OfficeActivity\n    | where TimeGenerated between (starttime .. endtime)\n    | where OfficeWorkload == \"MicrosoftTeams\"\n    | where isnotempty(AddonName)\n    | where AddonName !in (historical_bots_office)\n    | extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1]);\n// Combine both new bots from Enriched Logs and OfficeActivity\nlet CombinedNewBots = new_bots_enriched\n    | union new_bots_office\n    | summarize arg_min(TimeGenerated, *) by AddonName, UserId;\n// Final output\nCombinedNewBots\n    | project TimeGenerated, AddonName, UserId, AccountName, AccountUPNSuffix\n    | order by TimeGenerated desc\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This hunting query helps identify new, and potentially unapproved applications or bots being added to Teams."
                  },
                  {
                    "name": "tactics",
                    "value": "Persistence,Collection"
                  },
                  {
                    "name": "techniques",
                    "value": "T1176,T1119"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject8')._huntingQuerycontentId8),'/'))))]",
              "properties": {
                "description": "Global Secure Access Hunting Query 8",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject8')._huntingQuerycontentId8)]",
                "contentId": "[variables('huntingQueryObject8')._huntingQuerycontentId8]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject8').huntingQueryVersion8]",
                "source": {
                  "kind": "Solution",
                  "name": "Global Secure Access",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Partner",
                  "name": "Microsoft Corporation",
                  "email": "GSASentinelSupport@microsoft.com",
                  "link": "https://learn.microsoft.com/en-us/entra/global-secure-access/overview-what-is-global-secure-access"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject8')._huntingQuerycontentId8]",
        "contentKind": "HuntingQuery",
        "displayName": "GSA - Previously Unseen Bot or Application Added to Teams",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject8')._huntingQuerycontentId8,'-', '2.0.2')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject8')._huntingQuerycontentId8,'-', '2.0.2')))]",
        "version": "2.0.2"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject9').huntingQueryTemplateSpecName9]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "New_WindowsReservedFileNamesOnOfficeFileServices_HuntingQueries Hunting Query with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject9').huntingQueryVersion9]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Global_Secure_Access_Hunting_Query_9",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "GSA - New Windows Reserved Filenames staged on Office file services",
                "category": "Hunting Queries",
                "query": "let starttime = todatetime('{{StartTimeISO}}');\nlet endtime = todatetime('{{EndTimeISO}}');\nlet lookback = totimespan((endtime - starttime) * 7);\n\n// Reserved file names and extensions for Windows\nlet Reserved = dynamic(['CON', 'PRN', 'AUX', 'NUL', 'COM1', 'COM2', 'COM3', 'COM4', 'COM5', 'COM6', 'COM7', 'COM8', 'COM9', 'LPT1', 'LPT2', 'LPT3', 'LPT4', 'LPT5', 'LPT6', 'LPT7', 'LPT8', 'LPT9']);\n\n// EnrichedMicrosoft365AuditLogs Query\nlet EnrichedEvents = EnrichedMicrosoft365AuditLogs\n    | where TimeGenerated between (starttime .. endtime)\n    | extend FileName = tostring(parse_json(tostring(AdditionalProperties)).SourceFileName)\n    | extend ClientUserAgent = tostring(parse_json(tostring(AdditionalProperties)).ClientUserAgent)\n    | extend SiteUrl = tostring(parse_json(tostring(AdditionalProperties)).SiteUrl)\n    | where isnotempty(ObjectId)\n    | where ObjectId !~ FileName\n    | where ObjectId in (Reserved) or FileName in (Reserved)\n    | where ClientUserAgent !has \"Mac OS\"\n    | join kind=leftanti (\n        EnrichedMicrosoft365AuditLogs\n        | where TimeGenerated between (ago(lookback) .. starttime)\n        | extend FileName = tostring(parse_json(tostring(AdditionalProperties)).SourceFileName)\n        | extend ClientUserAgent = tostring(parse_json(tostring(AdditionalProperties)).ClientUserAgent)\n        | extend SiteUrl = tostring(parse_json(tostring(AdditionalProperties)).SiteUrl)\n        | where isnotempty(ObjectId)\n        | where ObjectId !~ FileName\n        | where ObjectId in (Reserved) or FileName in (Reserved)\n        | where ClientUserAgent !has \"Mac OS\"\n        | summarize PrevSeenCount = count() by ObjectId, UserId, FileName\n    ) on ObjectId\n    | extend SiteUrlUserFolder = tolower(split(SiteUrl, '/')[-2])\n    | extend UserIdUserFolderFormat = tolower(replace_regex(UserId, '@|\\\\.', '_'))\n    | extend UserIdDiffThanUserFolder = iff(SiteUrl has '/personal/' and SiteUrlUserFolder != UserIdUserFolderFormat, true, false)\n    | summarize TimeGenerated = make_list(TimeGenerated, 100000), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), Operations = make_list(Operation, 100000), UserAgents = make_list(ClientUserAgent, 100000), Ids = make_list(Id, 100000),\n        SourceRelativeUrls = make_list(ObjectId, 100000), FileNames = make_list(FileName, 100000) by Workload, RecordType, UserType, UserKey, UserId, ClientIp, SiteUrl, ObjectId, SiteUrlUserFolder, UserIdUserFolderFormat, UserIdDiffThanUserFolder\n    | extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1])\n    | extend IP_0_Address = ClientIp\n    | extend Account_0_Name = AccountName, Account_0_UPNSuffix = AccountUPNSuffix, URL_0_Url = SiteUrl;\n// OfficeActivity Query\nlet OfficeEvents = OfficeActivity\n    | where TimeGenerated between (starttime .. endtime)\n    | where isnotempty(SourceFileExtension)\n    | where SourceFileName !~ SourceFileExtension\n    | where SourceFileExtension in (Reserved) or SourceFileName in (Reserved)\n    | where UserAgent !has \"Mac OS\"\n    | join kind=leftanti (\n        OfficeActivity\n        | where TimeGenerated between (ago(lookback) .. starttime)\n        | where isnotempty(SourceFileExtension)\n        | where SourceFileName !~ SourceFileExtension\n        | where SourceFileExtension in (Reserved) or SourceFileName in (Reserved)\n        | where UserAgent !has \"Mac OS\"\n        | summarize PrevSeenCount = count() by SourceFileExtension\n    ) on SourceFileExtension\n    | extend SiteUrlUserFolder = tolower(split(Site_Url, '/')[-2])\n    | extend UserIdUserFolderFormat = tolower(replace_regex(UserId, '@|\\\\.', '_'))\n    | extend UserIdDiffThanUserFolder = iff(Site_Url has '/personal/' and SiteUrlUserFolder != UserIdUserFolderFormat, true, false)\n    | summarize TimeGenerated = make_list(TimeGenerated, 100000), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), Operations = make_list(Operation, 100000), UserAgents = make_list(UserAgent, 100000), OfficeIds = make_list(OfficeId, 100000),\n        SourceRelativeUrls = make_list(SourceRelativeUrl, 100000), FileNames = make_list(SourceFileName, 100000) by OfficeWorkload, RecordType, UserType, UserKey, UserId, ClientIP, Site_Url, SourceFileExtension, SiteUrlUserFolder, UserIdUserFolderFormat, UserIdDiffThanUserFolder\n    | extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1])\n    | extend IP_0_Address = ClientIP\n    | extend Account_0_Name = AccountName, Account_0_UPNSuffix = AccountUPNSuffix, URL_0_Url = Site_Url;\n// Combine Office and Enriched Logs\nlet CombinedEvents = OfficeEvents\n    | union EnrichedEvents\n    | summarize arg_min(StartTime, *) by UserId, ClientIP;\n// Final Output\nCombinedEvents\n    | project StartTime, EndTime, Operations, UserAgents, IP_0_Address, Account_0_Name, Account_0_UPNSuffix, URL_0_Url\n    | order by StartTime desc\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This identifies new Windows Reserved Filenames on Office services like SharePoint and OneDrive in the past 7 days. It also detects when a user uploads these files to another user's workspace, which may indicate malicious activity."
                  },
                  {
                    "name": "tactics",
                    "value": "CommandAndControl"
                  },
                  {
                    "name": "techniques",
                    "value": "T1105"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject9')._huntingQuerycontentId9),'/'))))]",
              "properties": {
                "description": "Global Secure Access Hunting Query 9",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject9')._huntingQuerycontentId9)]",
                "contentId": "[variables('huntingQueryObject9')._huntingQuerycontentId9]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject9').huntingQueryVersion9]",
                "source": {
                  "kind": "Solution",
                  "name": "Global Secure Access",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Partner",
                  "name": "Microsoft Corporation",
                  "email": "GSASentinelSupport@microsoft.com",
                  "link": "https://learn.microsoft.com/en-us/entra/global-secure-access/overview-what-is-global-secure-access"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject9')._huntingQuerycontentId9]",
        "contentKind": "HuntingQuery",
        "displayName": "GSA - New Windows Reserved Filenames staged on Office file services",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject9')._huntingQuerycontentId9,'-', '2.0.2')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject9')._huntingQuerycontentId9,'-', '2.0.2')))]",
        "version": "2.0.2"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject10').huntingQueryTemplateSpecName10]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "OfficeMailForwarding_hunting_HuntingQueries Hunting Query with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject10').huntingQueryVersion10]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Global_Secure_Access_Hunting_Query_10",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "GSA - Office Mail Forwarding - Hunting Version",
                "category": "Hunting Queries",
                "query": "let starttime = todatetime('{{StartTimeISO}}');\nlet endtime = todatetime('{{EndTimeISO}}');\n\n// Enriched Logs Query for forwarding rule operations\nlet EnrichedForwardRules = EnrichedMicrosoft365AuditLogs\n    | where TimeGenerated between (starttime .. endtime)\n    | where Workload == \"Exchange\"\n    | where (Operation == \"Set-Mailbox\" and tostring(parse_json(tostring(AdditionalProperties))) contains 'ForwardingSmtpAddress') \n        or (Operation in ('New-InboxRule', 'Set-InboxRule') and (tostring(parse_json(tostring(AdditionalProperties))) contains 'ForwardTo' or tostring(parse_json(tostring(AdditionalProperties))) contains 'RedirectTo'))\n    | extend parsed = parse_json(tostring(AdditionalProperties))\n    | extend fwdingDestination_initial = iif(Operation == \"Set-Mailbox\", tostring(parsed.ForwardingSmtpAddress), coalesce(tostring(parsed.ForwardTo), tostring(parsed.RedirectTo)))\n    | where isnotempty(fwdingDestination_initial)\n    | extend fwdingDestination = iff(fwdingDestination_initial has \"smtp\", (split(fwdingDestination_initial, \":\")[1]), fwdingDestination_initial)\n    | parse fwdingDestination with * '@' ForwardedtoDomain \n    | parse UserId with * '@' UserDomain\n    | extend subDomain = ((split(strcat(tostring(split(UserDomain, '.')[-2]), '.', tostring(split(UserDomain, '.')[-1])), '.'))[0])\n    | where ForwardedtoDomain !contains subDomain\n    | extend Result = iff(ForwardedtoDomain != UserDomain, \"Mailbox rule created to forward to External Domain\", \"Forward rule for Internal domain\")\n    | extend ClientIPAddress = case(ClientIp has \".\", tostring(split(ClientIp, \":\")[0]), ClientIp has \"[\", tostring(trim_start(@'[[]', tostring(split(ClientIp, \"]\")[0]))), ClientIp)\n    | extend Port = case(ClientIp has \".\", (split(ClientIp, \":\")[1]), ClientIp has \"[\", tostring(split(ClientIp, \"]:\")[1]), ClientIp)\n    | extend Host = tostring(parse_json(tostring(AdditionalProperties)).OriginatingServer)\n    | extend HostName = tostring(split(Host, \".\")[0])\n    | extend DnsDomain = tostring(strcat_array(array_slice(split(Host, '.'), 1, -1), '.'))\n    | project TimeGenerated, UserId, UserDomain, subDomain, Operation, ForwardedtoDomain, ClientIPAddress, Result, Port, ObjectId, fwdingDestination, HostName, DnsDomain\n    | extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1])\n    | extend IP_0_Address = ClientIPAddress, Host_0_HostName = HostName, Host_0_DnsDomain = DnsDomain, Account_0_Name = AccountName, Account_0_UPNSuffix = AccountUPNSuffix;\n// Office Activity Query for forwarding rule operations\nlet OfficeForwardRules = OfficeActivity\n    | where TimeGenerated between (starttime .. endtime)\n    | where OfficeWorkload == \"Exchange\"\n    | where (Operation =~ \"Set-Mailbox\" and Parameters contains 'ForwardingSmtpAddress') \n        or (Operation in~ ('New-InboxRule', 'Set-InboxRule') and (Parameters contains 'ForwardTo' or Parameters contains 'RedirectTo'))\n    | extend parsed = parse_json(Parameters)\n    | extend fwdingDestination_initial = (iif(Operation =~ \"Set-Mailbox\", tostring(parsed[1].Value), tostring(parsed[2].Value)))\n    | where isnotempty(fwdingDestination_initial)\n    | extend fwdingDestination = iff(fwdingDestination_initial has \"smtp\", (split(fwdingDestination_initial, \":\")[1]), fwdingDestination_initial)\n    | parse fwdingDestination with * '@' ForwardedtoDomain \n    | parse UserId with * '@' UserDomain\n    | extend subDomain = ((split(strcat(tostring(split(UserDomain, '.')[-2]), '.', tostring(split(UserDomain, '.')[-1])), '.') [0]))\n    | where ForwardedtoDomain !contains subDomain\n    | extend Result = iff(ForwardedtoDomain != UserDomain, \"Mailbox rule created to forward to External Domain\", \"Forward rule for Internal domain\")\n    | extend ClientIPAddress = case(ClientIP has \".\", tostring(split(ClientIP, \":\")[0]), ClientIP has \"[\", tostring(trim_start(@'[[]', tostring(split(ClientIP, \"]\")[0]))), ClientIP)\n    | extend Port = case(ClientIP has \".\", (split(ClientIP, \":\")[1]), ClientIP has \"[\", tostring(split(ClientIP, \"]:\")[1]), ClientIP)\n    | extend Host = tostring(split(OriginatingServer, \" (\")[0])\n    | extend HostName = tostring(split(Host, \".\")[0])\n    | extend DnsDomain = tostring(strcat_array(array_slice(split(Host, '.'), 1, -1), '.'))\n    | project TimeGenerated, UserId, UserDomain, subDomain, Operation, ForwardedtoDomain, ClientIPAddress, Result, Port, HostName, DnsDomain\n    | extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1])\n    | extend IP_0_Address = ClientIPAddress, Host_0_HostName = HostName, Host_0_DnsDomain = DnsDomain, Account_0_Name = AccountName, Account_0_UPNSuffix = AccountUPNSuffix;\n// Combine the results from both Enriched and Office Activity logs\nlet CombinedForwardRules = EnrichedForwardRules\n    | union OfficeForwardRules\n    | summarize arg_min(TimeGenerated, *) by UserId, ForwardedtoDomain, Operation\n    | project TimeGenerated, UserId, UserDomain, subDomain, Operation, ForwardedtoDomain, ClientIPAddress, Result, Port, ObjectId, fwdingDestination, Host_0_HostName, Host_0_DnsDomain, IP_0_Address, Account_0_Name, Account_0_UPNSuffix;  \n// Final output\nCombinedForwardRules\n    | order by TimeGenerated desc;\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Adversaries often abuse email-forwarding rules to monitor victim activities, steal information, and gain intelligence on the victim or their organization. This query highlights cases where user mail is being forwarded, including to external domains."
                  },
                  {
                    "name": "tactics",
                    "value": "Collection,Exfiltration"
                  },
                  {
                    "name": "techniques",
                    "value": "T1114,T1020"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject10')._huntingQuerycontentId10),'/'))))]",
              "properties": {
                "description": "Global Secure Access Hunting Query 10",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject10')._huntingQuerycontentId10)]",
                "contentId": "[variables('huntingQueryObject10')._huntingQuerycontentId10]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject10').huntingQueryVersion10]",
                "source": {
                  "kind": "Solution",
                  "name": "Global Secure Access",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Partner",
                  "name": "Microsoft Corporation",
                  "email": "GSASentinelSupport@microsoft.com",
                  "link": "https://learn.microsoft.com/en-us/entra/global-secure-access/overview-what-is-global-secure-access"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject10')._huntingQuerycontentId10]",
        "contentKind": "HuntingQuery",
        "displayName": "GSA - Office Mail Forwarding - Hunting Version",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject10')._huntingQuerycontentId10,'-', '2.0.2')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject10')._huntingQuerycontentId10,'-', '2.0.2')))]",
        "version": "2.0.2"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject11').huntingQueryTemplateSpecName11]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "TeamsFilesUploaded_HuntingQueries Hunting Query with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject11').huntingQueryVersion11]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Global_Secure_Access_Hunting_Query_11",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "GSA - Files uploaded to teams and access summary",
                "category": "Hunting Queries",
                "query": "// Define the query for EnrichedMicrosoft365AuditLogs\nlet enrichedLogs = EnrichedMicrosoft365AuditLogs\n  | where RecordType == \"SharePointFileOperation\"\n  | where Operation == \"FileUploaded\"\n  | where UserId != \"app@sharepoint\"\n  | where ObjectId has \"Microsoft Teams Chat Files\"\n  | extend SourceFileName = tostring(parse_json(tostring(AdditionalProperties)).SourceFileName)\n  | join kind=leftouter (\n      EnrichedMicrosoft365AuditLogs\n      | where RecordType == \"SharePointFileOperation\"\n      | where Operation in (\"FileDownloaded\", \"FileAccessed\")\n      | where UserId != \"app@sharepoint\"\n      | where ObjectId has \"Microsoft Teams Chat Files\"\n      | extend UserId1 = UserId, ClientIp1 = ClientIp\n  ) on ObjectId\n  | extend userBag = bag_pack(\"UserId1\", UserId1, \"ClientIp1\", ClientIp1)\n  | summarize AccessedBy = make_bag(userBag), make_set(UserId1, 10000) by bin(TimeGenerated, 1h), UserId, ObjectId, SourceFileName\n  | extend NumberOfUsersAccessed = array_length(bag_keys(AccessedBy))\n  | project timestamp = TimeGenerated, UserId, FileLocation = ObjectId, FileName = SourceFileName, AccessedBy, NumberOfUsersAccessed\n  | extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1])\n  | extend Account_0_Name = AccountName\n  | extend Account_0_UPNSuffix = AccountUPNSuffix;\n// Define the query for OfficeActivity\nlet officeLogs = OfficeActivity\n  | where RecordType == \"SharePointFileOperation\"\n  | where Operation == \"FileUploaded\"\n  | where UserId != \"app@sharepoint\"\n  | where SourceRelativeUrl has \"Microsoft Teams Chat Files\"\n  | join kind=leftouter (\n      OfficeActivity\n      | where RecordType == \"SharePointFileOperation\"\n      | where Operation in (\"FileDownloaded\", \"FileAccessed\")\n      | where UserId != \"app@sharepoint\"\n      | where SourceRelativeUrl has \"Microsoft Teams Chat Files\"\n  ) on OfficeObjectId\n  | extend userBag = bag_pack(UserId1, ClientIP1)\n  | summarize AccessedBy = make_bag(userBag, 10000), make_set(UserId1, 10000) by TimeGenerated, UserId, OfficeObjectId, SourceFileName\n  | extend NumberUsers = array_length(bag_keys(AccessedBy))\n  | project timestamp = TimeGenerated, UserId, FileLocation = OfficeObjectId, FileName = SourceFileName, AccessedBy, NumberOfUsersAccessed = NumberUsers\n  | extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1])\n  | extend Account_0_Name = AccountName\n  | extend Account_0_UPNSuffix = AccountUPNSuffix;\n// Union both results\nenrichedLogs\n| union officeLogs\n| order by timestamp desc;\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This hunting query identifies files uploaded to SharePoint via a Teams chat and\nsummarizes users and IP addresses that have accessed these files. This allows for \nidentification of anomalous file sharing patterns."
                  },
                  {
                    "name": "tactics",
                    "value": "InitialAccess,Exfiltration"
                  },
                  {
                    "name": "techniques",
                    "value": "T1199,T1102,T1078"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject11')._huntingQuerycontentId11),'/'))))]",
              "properties": {
                "description": "Global Secure Access Hunting Query 11",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject11')._huntingQuerycontentId11)]",
                "contentId": "[variables('huntingQueryObject11')._huntingQuerycontentId11]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject11').huntingQueryVersion11]",
                "source": {
                  "kind": "Solution",
                  "name": "Global Secure Access",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Partner",
                  "name": "Microsoft Corporation",
                  "email": "GSASentinelSupport@microsoft.com",
                  "link": "https://learn.microsoft.com/en-us/entra/global-secure-access/overview-what-is-global-secure-access"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject11')._huntingQuerycontentId11]",
        "contentKind": "HuntingQuery",
        "displayName": "GSA - Files uploaded to teams and access summary",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject11')._huntingQuerycontentId11,'-', '2.0.2')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject11')._huntingQuerycontentId11,'-', '2.0.2')))]",
        "version": "2.0.2"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject12').huntingQueryTemplateSpecName12]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "UserAddToTeamsAndUploadsFile_HuntingQueries Hunting Query with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject12').huntingQueryVersion12]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Global_Secure_Access_Hunting_Query_12",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "GSA - User added to Teams and immediately uploads file",
                "category": "Hunting Queries",
                "query": "let threshold = 1m;\n// Define MemberAddedEvents for EnrichedMicrosoft365AuditLogs\nlet MemberAddedEvents_Enriched = EnrichedMicrosoft365AuditLogs\n  | where Workload == \"MicrosoftTeams\"\n  | where Operation == \"MemberAdded\"\n  | extend TeamName = tostring(parse_json(tostring(AdditionalProperties)).TeamName)\n  | project TimeGenerated, UploaderID = UserId, TeamName;\n// Define FileUploadEvents for EnrichedMicrosoft365AuditLogs\nlet FileUploadEvents_Enriched = EnrichedMicrosoft365AuditLogs\n  | where RecordType == \"SharePointFileOperation\"\n  | where ObjectId has \"Microsoft Teams Chat Files\"\n  | where Operation == \"FileUploaded\"\n  | extend SourceFileName = tostring(parse_json(tostring(AdditionalProperties)).SourceFileName)\n  | project UploadTime = TimeGenerated, UploaderID = UserId, FileLocation = ObjectId, SourceFileName;\n// Perform join for EnrichedMicrosoft365AuditLogs\nlet EnrichedResults = MemberAddedEvents_Enriched\n  | join kind=inner (FileUploadEvents_Enriched) on UploaderID\n  | where UploadTime > TimeGenerated and UploadTime < TimeGenerated + threshold\n  | extend timestamp = TimeGenerated, AccountCustomEntity = UploaderID;\n// Define MemberAddedEvents for OfficeActivity\nlet MemberAddedEvents_Office = OfficeActivity\n  | where OfficeWorkload == \"MicrosoftTeams\"\n  | where Operation == \"MemberAdded\"\n  | extend TeamName = iff(isempty(TeamName), Members[0].UPN, TeamName)\n  | project TimeGenerated, UploaderID = UserId, TeamName;\n// Define FileUploadEvents for OfficeActivity\nlet FileUploadEvents_Office = OfficeActivity\n  | where RecordType == \"SharePointFileOperation\"\n  | where SourceRelativeUrl has \"Microsoft Teams Chat Files\"\n  | where Operation == \"FileUploaded\"\n  | project UploadTime = TimeGenerated, UploaderID = UserId, FileLocation = OfficeObjectId, FileName = SourceFileName;\n// Perform join for OfficeActivity\nlet OfficeResults = MemberAddedEvents_Office\n  | join kind=inner (FileUploadEvents_Office) on UploaderID\n  | where UploadTime > TimeGenerated and UploadTime < TimeGenerated + threshold\n  | project-away UploaderID1\n  | extend timestamp = TimeGenerated, AccountCustomEntity = UploaderID;\n// Union both results\nEnrichedResults\n| union OfficeResults\n| order by timestamp desc;\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This hunting query identifies users who are added to a Teams Channel or Teams chat\nand within 1 minute of being added upload a file via the chat. This might be\nan indicator of suspicious activity."
                  },
                  {
                    "name": "tactics",
                    "value": "InitialAccess"
                  },
                  {
                    "name": "techniques",
                    "value": "T1566"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject12')._huntingQuerycontentId12),'/'))))]",
              "properties": {
                "description": "Global Secure Access Hunting Query 12",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject12')._huntingQuerycontentId12)]",
                "contentId": "[variables('huntingQueryObject12')._huntingQuerycontentId12]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject12').huntingQueryVersion12]",
                "source": {
                  "kind": "Solution",
                  "name": "Global Secure Access",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Partner",
                  "name": "Microsoft Corporation",
                  "email": "GSASentinelSupport@microsoft.com",
                  "link": "https://learn.microsoft.com/en-us/entra/global-secure-access/overview-what-is-global-secure-access"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject12')._huntingQuerycontentId12]",
        "contentKind": "HuntingQuery",
        "displayName": "GSA - User added to Teams and immediately uploads file",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject12')._huntingQuerycontentId12,'-', '2.0.2')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject12')._huntingQuerycontentId12,'-', '2.0.2')))]",
        "version": "2.0.2"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject13').huntingQueryTemplateSpecName13]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "WindowsReservedFileNamesOnOfficeFileServices_HuntingQueries Hunting Query with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject13').huntingQueryVersion13]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Global_Secure_Access_Hunting_Query_13",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "GSA - Windows Reserved Filenames Staged on Office File Services",
                "category": "Hunting Queries",
                "query": "let Reserved = dynamic(['CON', 'PRN', 'AUX', 'NUL', 'COM1', 'COM2', 'COM3', 'COM4', 'COM5', 'COM6', 'COM7', 'COM8', 'COM9', 'LPT1', 'LPT2', 'LPT3', 'LPT4', 'LPT5', 'LPT6', 'LPT7', 'LPT8', 'LPT9']);\n// Query for OfficeActivity\nlet OfficeActivityResults = OfficeActivity\n  | where isnotempty(SourceFileExtension)\n  | where SourceFileExtension in (Reserved) or SourceFileName in (Reserved)\n  | where UserAgent !has \"Mac OS\"\n  | extend SiteUrlUserFolder = tolower(split(Site_Url, '/')[-2])\n  | extend UserIdUserFolderFormat = tolower(replace_regex(UserId, '@|\\\\.', '_'))\n  | extend UserIdDiffThanUserFolder = iff(Site_Url has '/personal/' and SiteUrlUserFolder != UserIdUserFolderFormat, true, false)\n  | summarize TimeGenerated = make_list(TimeGenerated, 100000), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), Operations = make_list(Operation, 100000), UserAgents = make_list(UserAgent, 100000), OfficeIds = make_list(OfficeId, 100000), SourceRelativeUrls = make_list(SourceRelativeUrl, 100000), FileNames = make_list(SourceFileName, 100000)\n  by OfficeWorkload, RecordType, UserType, UserKey, UserId, ClientIP, Site_Url, SourceFileExtension, SiteUrlUserFolder, UserIdUserFolderFormat, UserIdDiffThanUserFolder\n  | extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1])\n  | extend IP_0_Address = ClientIP\n  | extend Account_0_Name = AccountName\n  | extend Account_0_UPNSuffix = AccountUPNSuffix\n  | extend URL_0_Url = Site_Url;\n// Query for EnrichedMicrosoft365AuditLogs\nlet EnrichedMicrosoft365Results = EnrichedMicrosoft365AuditLogs\n  | extend SourceFileName = tostring(parse_json(tostring(AdditionalProperties)).SourceFileName)\n  | extend UserAgent = tostring(parse_json(tostring(AdditionalProperties)).UserAgent)\n  | extend Site_Url = tostring(parse_json(tostring(AdditionalProperties)).SiteUrl)\n  | where isnotempty(ObjectId)\n  | where ObjectId in (Reserved) or SourceFileName in (Reserved)\n  | where UserAgent !has \"Mac OS\"\n  | extend SiteUrlUserFolder = tolower(split(Site_Url, '/')[-2])\n  | extend UserIdUserFolderFormat = tolower(replace_regex(UserId, '@|\\\\.', '_'))\n  | extend UserIdDiffThanUserFolder = iff(Site_Url has '/personal/' and SiteUrlUserFolder != UserIdUserFolderFormat, true, false)\n  | summarize TimeGenerated = make_list(TimeGenerated, 100000), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), Operations = make_list(Operation, 100000), UserAgents = make_list(UserAgent, 100000), ObjectIds = make_list(Id, 100000), SourceRelativeUrls = make_list(ObjectId, 100000), FileNames = make_list(SourceFileName, 100000)\n  by Workload, RecordType, UserType, UserKey, UserId, ClientIp, Site_Url, ObjectId, SiteUrlUserFolder, UserIdUserFolderFormat, UserIdDiffThanUserFolder\n  | extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1])\n  | extend IP_0_Address = ClientIp\n  | extend Account_0_Name = AccountName\n  | extend Account_0_UPNSuffix = AccountUPNSuffix\n  | extend URL_0_Url = Site_Url;\n// Combine both queries\nOfficeActivityResults\n| union EnrichedMicrosoft365Results\n| order by StartTime desc;\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This identifies Windows Reserved Filenames on Office services like SharePoint and OneDrive. It also detects when a user uploads these files to another user's workspace, which may indicate malicious activity."
                  },
                  {
                    "name": "tactics",
                    "value": "CommandAndControl"
                  },
                  {
                    "name": "techniques",
                    "value": "T1105"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject13')._huntingQuerycontentId13),'/'))))]",
              "properties": {
                "description": "Global Secure Access Hunting Query 13",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject13')._huntingQuerycontentId13)]",
                "contentId": "[variables('huntingQueryObject13')._huntingQuerycontentId13]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject13').huntingQueryVersion13]",
                "source": {
                  "kind": "Solution",
                  "name": "Global Secure Access",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Partner",
                  "name": "Microsoft Corporation",
                  "email": "GSASentinelSupport@microsoft.com",
                  "link": "https://learn.microsoft.com/en-us/entra/global-secure-access/overview-what-is-global-secure-access"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject13')._huntingQuerycontentId13]",
        "contentKind": "HuntingQuery",
        "displayName": "GSA - Windows Reserved Filenames Staged on Office File Services",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject13')._huntingQuerycontentId13,'-', '2.0.3')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject13')._huntingQuerycontentId13,'-', '2.0.3')))]",
        "version": "2.0.3"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject14').huntingQueryTemplateSpecName14]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "new_sharepoint_downloads_by_IP_HuntingQueries Hunting Query with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject14').huntingQueryVersion14]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Global_Secure_Access_Hunting_Query_14",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "GSA - SharePointFileOperation via previously unseen IPs",
                "category": "Hunting Queries",
                "query": "let starttime = todatetime('{{StartTimeISO}}');\nlet endtime = todatetime('{{EndTimeISO}}');\nlet lookback = starttime - 14d;\nlet BLOCK_THRESHOLD = 1.0;\n// Identify Autonomous System Numbers (ASNs) with a high block rate in Sign-in Logs\nlet HighBlockRateASNs = SigninLogs\n    | where TimeGenerated > lookback\n    | where isnotempty(AutonomousSystemNumber)\n    | summarize make_set(IPAddress), TotalIps = dcount(IPAddress), BlockedSignins = countif(ResultType == \"50053\"), TotalSignins = count() by AutonomousSystemNumber\n    | extend BlockRatio = 1.00 * BlockedSignins / TotalSignins\n    | where BlockRatio >= BLOCK_THRESHOLD\n    | distinct AutonomousSystemNumber;\n// Retrieve IP addresses from these high block rate ASNs\nlet ASNIPs = SigninLogs\n    | where TimeGenerated > lookback\n    | where AutonomousSystemNumber in (HighBlockRateASNs)\n    | distinct IPAddress, AutonomousSystemNumber;\n// OfficeActivity Query: File activities from identified ASN IPs\nlet OfficeEvents = OfficeActivity\n    | where TimeGenerated between(starttime .. endtime)\n    | where RecordType == \"SharePointFileOperation\"\n    | where Operation in (\"FileDownloaded\", \"FileUploaded\")\n    | where ClientIP in (ASNIPs)\n    | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), RecentFileActivities = count() by ClientIP\n    | extend IP_0_Address = ClientIP;\n// EnrichedMicrosoft365AuditLogs Query: File activities from identified ASN IPs\nlet EnrichedEvents = EnrichedMicrosoft365AuditLogs\n    | where TimeGenerated between (starttime .. endtime)\n    | where RecordType == \"SharePointFileOperation\"\n    | where Operation in (\"FileDownloaded\", \"FileUploaded\")\n    | where ClientIp in (ASNIPs)\n    | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), RecentFileActivities = count() by ClientIp\n    | extend IP_0_Address = ClientIp;\n// Combine Office and Enriched Logs\nlet CombinedEvents = OfficeEvents\n    | union EnrichedEvents\n    | summarize arg_min(StartTime, *) by ClientIP;\n// Final Output\nCombinedEvents\n    | project StartTime, EndTime, RecentFileActivities, IP_0_Address\n    | order by StartTime desc\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Shows SharePoint upload/download volume by IPs with high-risk ASNs. New IPs with volume spikes may be unauthorized and exfiltrating documents."
                  },
                  {
                    "name": "tactics",
                    "value": "Exfiltration"
                  },
                  {
                    "name": "techniques",
                    "value": "T1030"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject14')._huntingQuerycontentId14),'/'))))]",
              "properties": {
                "description": "Global Secure Access Hunting Query 14",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject14')._huntingQuerycontentId14)]",
                "contentId": "[variables('huntingQueryObject14')._huntingQuerycontentId14]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject14').huntingQueryVersion14]",
                "source": {
                  "kind": "Solution",
                  "name": "Global Secure Access",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Partner",
                  "name": "Microsoft Corporation",
                  "email": "GSASentinelSupport@microsoft.com",
                  "link": "https://learn.microsoft.com/en-us/entra/global-secure-access/overview-what-is-global-secure-access"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject14')._huntingQuerycontentId14]",
        "contentKind": "HuntingQuery",
        "displayName": "GSA - SharePointFileOperation via previously unseen IPs",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject14')._huntingQuerycontentId14,'-', '2.0.2')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject14')._huntingQuerycontentId14,'-', '2.0.2')))]",
        "version": "2.0.2"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject15').huntingQueryTemplateSpecName15]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "new_sharepoint_downloads_by_UserAgent_HuntingQueries Hunting Query with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject15').huntingQueryVersion15]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Global_Secure_Access_Hunting_Query_15",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "GSA - SharePointFileOperation via devices with previously unseen user agents",
                "category": "Hunting Queries",
                "query": "let starttime = todatetime('{{StartTimeISO}}');\nlet endtime = todatetime('{{EndTimeISO}}');\nlet lookback = starttime - 14d;\nlet MINIMUM_BLOCKS = 10;\nlet SUCCESS_THRESHOLD = 0.2;\n// Identify user agents or client apps with a low success-to-block ratio in Sign-in Logs\nlet HistoricalActivity = SigninLogs\n    | where TimeGenerated > lookback\n    | where isnotempty(UserAgent)\n    | summarize SuccessfulSignins = countif(ResultType == \"0\"), BlockedSignins = countif(ResultType == \"50053\") by UserAgent\n    | extend SuccessBlockRatio = 1.00 * SuccessfulSignins / BlockedSignins\n    | where SuccessBlockRatio < SUCCESS_THRESHOLD\n    | where BlockedSignins > MINIMUM_BLOCKS;\n// OfficeActivity Query: File operations by matching user agents\nlet OfficeEvents = OfficeActivity\n    | where TimeGenerated between (starttime .. endtime)\n    | where RecordType == \"SharePointFileOperation\"\n    | where Operation in (\"FileDownloaded\", \"FileUploaded\")\n    | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), RecentFileActivities = count() by UserAgent, UserId, ClientIP, Site_Url\n    | join kind=innerunique (HistoricalActivity) on UserAgent\n    | extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1])\n    | extend IP_0_Address = ClientIP, Account_0_Name = AccountName, Account_0_UPNSuffix = AccountUPNSuffix, URL_0_Url = Site_Url;\n// EnrichedMicrosoft365AuditLogs Query: File operations by matching client apps (UserAgent)\nlet EnrichedEvents = EnrichedMicrosoft365AuditLogs\n    | where TimeGenerated between (starttime .. endtime)\n    | where RecordType == \"SharePointFileOperation\"\n    | where Operation in (\"FileDownloaded\", \"FileUploaded\")\n    | extend UserAgent = tostring(parse_json(tostring(AdditionalProperties)).UserAgent)  // Ensure matching with UserAgent column\n    | extend SiteUrl = tostring(parse_json(tostring(AdditionalProperties)).SiteUrl)\n    | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), RecentFileActivities = count() by UserAgent, UserId, ClientIp, SiteUrl\n    | join kind=innerunique (HistoricalActivity) on UserAgent\n    | extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1])\n    | extend IP_0_Address = ClientIp, Account_0_Name = AccountName, Account_0_UPNSuffix = AccountUPNSuffix, URL_0_Url = SiteUrl;\n// Combine Office and Enriched Logs\nlet CombinedEvents = OfficeEvents\n    | union EnrichedEvents\n    | summarize arg_min(StartTime, *) by UserId, ClientIP;\n// Final Output\nCombinedEvents\n    | project StartTime, EndTime, RecentFileActivities, IP_0_Address, Account_0_Name, Account_0_UPNSuffix, URL_0_Url\n    | order by StartTime desc;\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Tracking via user agent is one way to differentiate between types of connecting device.\nIn homogeneous enterprise environments the user agent associated with an attacker device may stand out as unusual."
                  },
                  {
                    "name": "tactics",
                    "value": "Exfiltration"
                  },
                  {
                    "name": "techniques",
                    "value": "T1030"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject15')._huntingQuerycontentId15),'/'))))]",
              "properties": {
                "description": "Global Secure Access Hunting Query 15",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject15')._huntingQuerycontentId15)]",
                "contentId": "[variables('huntingQueryObject15')._huntingQuerycontentId15]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject15').huntingQueryVersion15]",
                "source": {
                  "kind": "Solution",
                  "name": "Global Secure Access",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Partner",
                  "name": "Microsoft Corporation",
                  "email": "GSASentinelSupport@microsoft.com",
                  "link": "https://learn.microsoft.com/en-us/entra/global-secure-access/overview-what-is-global-secure-access"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject15')._huntingQuerycontentId15]",
        "contentKind": "HuntingQuery",
        "displayName": "GSA - SharePointFileOperation via devices with previously unseen user agents",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject15')._huntingQuerycontentId15,'-', '2.0.2')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject15')._huntingQuerycontentId15,'-', '2.0.2')))]",
        "version": "2.0.2"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject16').huntingQueryTemplateSpecName16]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "nonowner_MailboxLogin_HuntingQueries Hunting Query with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject16').huntingQueryVersion16]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Global_Secure_Access_Hunting_Query_16",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "GSA - Non-owner mailbox login activity",
                "category": "Hunting Queries",
                "query": "let starttime = todatetime('{{StartTimeISO}}');\nlet endtime = todatetime('{{EndTimeISO}}');\n// Enriched Logs Query for Mailbox Logins (non-owner)\nlet EnrichedMailboxLogins = EnrichedMicrosoft365AuditLogs\n    | where TimeGenerated between (starttime .. endtime)\n    | where Workload == \"Exchange\"\n    | where Operation == \"MailboxLogin\"\n    | extend Logon_Type = tostring(parse_json(tostring(AdditionalProperties)).LogonType)\n    | extend MailboxOwnerUPN = tostring(parse_json(tostring(AdditionalProperties)).MailboxOwnerUPN)\n    | where Logon_Type != \"Owner\"\n    | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), count() by Operation, UserType, UserId, MailboxOwnerUPN, Logon_Type, ClientIp\n    | extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1])\n    | extend IP_0_Address = ClientIp\n    | extend Account_0_Name = AccountName, Account_0_UPNSuffix = AccountUPNSuffix;\n// Office Activity Query for Mailbox Logins (non-owner)\nlet OfficeMailboxLogins = OfficeActivity\n    | where TimeGenerated between (starttime .. endtime)\n    | where OfficeWorkload == \"Exchange\"\n    | where Operation == \"MailboxLogin\" and Logon_Type != \"Owner\"\n    | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), count() by Operation, OrganizationName, UserType, UserId, MailboxOwnerUPN, Logon_Type, ClientIP\n    | extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1])\n    | extend IP_0_Address = ClientIP\n    | extend Account_0_Name = AccountName, Account_0_UPNSuffix = AccountUPNSuffix;\n// Combine both results\nlet CombinedMailboxLogins = EnrichedMailboxLogins\n    | union OfficeMailboxLogins\n    | summarize arg_min(StartTime, *) by UserId, MailboxOwnerUPN, Logon_Type;\n// Final output\nCombinedMailboxLogins\n    | project StartTime, EndTime, Operation, UserId, MailboxOwnerUPN, Logon_Type, Account_0_Name, Account_0_UPNSuffix, IP_0_Address\n    | order by StartTime desc\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Finds non-owner mailbox access by admin/delegate permissions. Whitelist valid users and check others for unauthorized access."
                  },
                  {
                    "name": "tactics",
                    "value": "Collection,Exfiltration"
                  },
                  {
                    "name": "techniques",
                    "value": "T1114,T1020"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject16')._huntingQuerycontentId16),'/'))))]",
              "properties": {
                "description": "Global Secure Access Hunting Query 16",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject16')._huntingQuerycontentId16)]",
                "contentId": "[variables('huntingQueryObject16')._huntingQuerycontentId16]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject16').huntingQueryVersion16]",
                "source": {
                  "kind": "Solution",
                  "name": "Global Secure Access",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Partner",
                  "name": "Microsoft Corporation",
                  "email": "GSASentinelSupport@microsoft.com",
                  "link": "https://learn.microsoft.com/en-us/entra/global-secure-access/overview-what-is-global-secure-access"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject16')._huntingQuerycontentId16]",
        "contentKind": "HuntingQuery",
        "displayName": "GSA - Non-owner mailbox login activity",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject16')._huntingQuerycontentId16,'-', '2.0.2')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject16')._huntingQuerycontentId16,'-', '2.0.2')))]",
        "version": "2.0.2"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject17').huntingQueryTemplateSpecName17]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "powershell_or_nonbrowser_MailboxLogin_HuntingQueries Hunting Query with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject17').huntingQueryVersion17]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Global_Secure_Access_Hunting_Query_17",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "GSA - PowerShell or non-browser mailbox login activity",
                "category": "Hunting Queries",
                "query": "let starttime = todatetime('{{StartTimeISO}}');\nlet endtime = todatetime('{{EndTimeISO}}');\n// EnrichedMicrosoft365AuditLogs query\nlet EnrichedMailboxLogin = EnrichedMicrosoft365AuditLogs\n    | where TimeGenerated between (starttime .. endtime)\n    | where Workload == \"Exchange\" and Operation == \"MailboxLogin\"\n    | extend ClientApplication = tostring(parse_json(AdditionalProperties).ClientInfoString)\n    | where ClientApplication == \"Client=Microsoft.Exchange.Powershell; Microsoft WinRM Client\"\n    | extend TenantName = tostring(parse_json(AdditionalProperties).TenantName)\n    | extend MailboxOwner = tostring(parse_json(AdditionalProperties).MailboxOwnerUPN)\n    | extend LogonType = tostring(parse_json(AdditionalProperties).LogonType)\n    | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), Count = count() by Operation, TenantName, UserType, UserId, MailboxOwner, LogonType, ClientApplication\n    | extend AccountName = iff(UserId contains '@', tostring(split(UserId, '@')[0]), UserId)\n    | extend AccountUPNSuffix = iff(UserId contains '@', tostring(split(UserId, '@')[1]), '')\n    | extend AccountName = iff(UserId contains '\\\\', tostring(split(UserId, '\\\\')[1]), AccountName)\n    | extend AccountNTDomain = iff(UserId contains '\\\\', tostring(split(UserId, '\\\\')[0]), '');\n// OfficeActivity query\nlet OfficeMailboxLogin = OfficeActivity\n    | where TimeGenerated between (starttime .. endtime)\n    | where OfficeWorkload == \"Exchange\" and Operation == \"MailboxLogin\"\n    | where ClientInfoString == \"Client=Microsoft.Exchange.Powershell; Microsoft WinRM Client\"\n    | extend LogonType = \"Unknown\"  // If LogonType does not exist, create a placeholder\n    | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), Count = count() by Operation, OrganizationName, UserType, UserId, MailboxOwnerUPN, LogonType, ClientInfoString\n    | extend AccountName = iff(UserId contains '@', tostring(split(UserId, '@')[0]), UserId)\n    | extend AccountUPNSuffix = iff(UserId contains '@', tostring(split(UserId, '@')[1]), '')\n    | extend AccountName = iff(UserId contains '\\\\', tostring(split(UserId, '\\\\')[1]), AccountName)\n    | extend AccountNTDomain = iff(UserId contains '\\\\', tostring(split(UserId, '\\\\')[0]), '');\n// Combine Enriched and Office queries\nlet CombinedMailboxLogin = EnrichedMailboxLogin\n    | union OfficeMailboxLogin\n    | summarize arg_min(StartTime, *) by UserId, Operation\n    | project StartTime, EndTime, Operation, TenantName, OrganizationName, UserType, UserId, MailboxOwner, LogonType, ClientApplication, ClientInfoString, Count, AccountName, AccountUPNSuffix, AccountNTDomain;\n// Final output\nCombinedMailboxLogin\n    | order by StartTime desc;\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Detects mailbox login from Exchange PowerShell. All accounts can use it by default, but admins can change it. Whitelist benign activities."
                  },
                  {
                    "name": "tactics",
                    "value": "Execution,Persistence,Collection"
                  },
                  {
                    "name": "techniques",
                    "value": "T1059,T1098,T1114"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject17')._huntingQuerycontentId17),'/'))))]",
              "properties": {
                "description": "Global Secure Access Hunting Query 17",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject17')._huntingQuerycontentId17)]",
                "contentId": "[variables('huntingQueryObject17')._huntingQuerycontentId17]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject17').huntingQueryVersion17]",
                "source": {
                  "kind": "Solution",
                  "name": "Global Secure Access",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Partner",
                  "name": "Microsoft Corporation",
                  "email": "GSASentinelSupport@microsoft.com",
                  "link": "https://learn.microsoft.com/en-us/entra/global-secure-access/overview-what-is-global-secure-access"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject17')._huntingQuerycontentId17]",
        "contentKind": "HuntingQuery",
        "displayName": "GSA - PowerShell or non-browser mailbox login activity",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject17')._huntingQuerycontentId17,'-', '2.0.2')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject17')._huntingQuerycontentId17,'-', '2.0.2')))]",
        "version": "2.0.2"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject18').huntingQueryTemplateSpecName18]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "sharepoint_downloads_HuntingQueries Hunting Query with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject18').huntingQueryVersion18]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Global_Secure_Access_Hunting_Query_18",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "GSA - SharePoint File Operation via Client IP with Previously Unseen User Agents",
                "category": "Hunting Queries",
                "query": "let starttime = todatetime('{{StartTimeISO}}');\nlet endtime = todatetime('{{EndTimeISO}}');\nlet lookback = starttime - 14d;\n// Historical user agents in EnrichedMicrosoft365AuditLogs\nlet historicalUA_Enriched = EnrichedMicrosoft365AuditLogs\n  | where RecordType == \"SharePointFileOperation\"\n  | where Operation in (\"FileDownloaded\", \"FileUploaded\")\n  | where TimeGenerated between (lookback .. starttime)\n  | extend ClientApplication = tostring(parse_json(AdditionalProperties).UserAgent)\n  | summarize by ClientIp, ClientApplication;\n// Recent user agents in EnrichedMicrosoft365AuditLogs\nlet recentUA_Enriched = EnrichedMicrosoft365AuditLogs\n  | where RecordType == \"SharePointFileOperation\"\n  | where Operation in (\"FileDownloaded\", \"FileUploaded\")\n  | where TimeGenerated between (starttime .. endtime)\n  | extend ClientApplication = tostring(parse_json(AdditionalProperties).UserAgent)\n  | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by ClientIp, ClientApplication;\n// Combine historical and recent user agents from EnrichedMicrosoft365AuditLogs\nlet Enriched_UA = recentUA_Enriched\n  | join kind=leftanti (historicalUA_Enriched) on ClientIp, ClientApplication\n  | where not(isempty(ClientIp))\n  | extend IP_0_Address = ClientIp;\n// Historical user agents in OfficeActivity\nlet historicalUA_Office = OfficeActivity\n  | where RecordType == \"SharePointFileOperation\"\n  | where Operation in (\"FileDownloaded\", \"FileUploaded\")\n  | where TimeGenerated between (lookback .. starttime)\n  | summarize by ClientIP, UserAgent;\n// Recent user agents in OfficeActivity\nlet recentUA_Office = OfficeActivity\n  | where RecordType == \"SharePointFileOperation\"\n  | where Operation in (\"FileDownloaded\", \"FileUploaded\")\n  | where TimeGenerated between (starttime .. endtime)\n  | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by ClientIP, UserAgent;\n// Combine historical and recent user agents from OfficeActivity\nlet Office_UA = recentUA_Office\n  | join kind=leftanti (historicalUA_Office) on ClientIP, UserAgent\n  | where not(isempty(ClientIP))\n  | extend IP_0_Address = ClientIP;\n// Final combined result\nEnriched_UA\n| union Office_UA\n| project StartTime, EndTime, ClientIp, ClientApplication, IP_0_Address;\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "New user agents associated with a client IP for SharePoint file uploads/downloads."
                  },
                  {
                    "name": "tactics",
                    "value": "Exfiltration"
                  },
                  {
                    "name": "techniques",
                    "value": "T1030"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject18')._huntingQuerycontentId18),'/'))))]",
              "properties": {
                "description": "Global Secure Access Hunting Query 18",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject18')._huntingQuerycontentId18)]",
                "contentId": "[variables('huntingQueryObject18')._huntingQuerycontentId18]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject18').huntingQueryVersion18]",
                "source": {
                  "kind": "Solution",
                  "name": "Global Secure Access",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Partner",
                  "name": "Microsoft Corporation",
                  "email": "GSASentinelSupport@microsoft.com",
                  "link": "https://learn.microsoft.com/en-us/entra/global-secure-access/overview-what-is-global-secure-access"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject18')._huntingQuerycontentId18]",
        "contentKind": "HuntingQuery",
        "displayName": "GSA - SharePoint File Operation via Client IP with Previously Unseen User Agents",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject18')._huntingQuerycontentId18,'-', '2.0.2')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject18')._huntingQuerycontentId18,'-', '2.0.2')))]",
        "version": "2.0.2"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject19').huntingQueryTemplateSpecName19]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "MultipleUsersEmailForwardedToSameDestination_HuntingQueries Hunting Query with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject19').huntingQueryVersion19]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Global_Secure_Access_Hunting_Query_19",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "GSA - Multiple Users Email Forwarded to Same Destination",
                "category": "Hunting Queries",
                "query": "let queryfrequency = 1d;\nlet queryperiod = 7d;\n// EnrichedMicrosoft365AuditLogs Query\nlet EnrichedEvents = EnrichedMicrosoft365AuditLogs\n    | where TimeGenerated > ago(queryperiod)\n    | where Workload == \"Exchange\"\n    | where AdditionalProperties has_any (\"ForwardTo\", \"RedirectTo\", \"ForwardingSmtpAddress\")\n    | mv-apply DynamicParameters = todynamic(AdditionalProperties) on (\n        summarize ParsedParameters = make_bag(bag_pack(tostring(DynamicParameters.Name), DynamicParameters.Value))\n    )\n    | evaluate bag_unpack(ParsedParameters, columnsConflict='replace_source')\n    | extend DestinationMailAddress = tolower(case(\n        isnotempty(column_ifexists(\"ForwardTo\", \"\")), column_ifexists(\"ForwardTo\", \"\"),\n        isnotempty(column_ifexists(\"RedirectTo\", \"\")), column_ifexists(\"RedirectTo\", \"\"),\n        isnotempty(column_ifexists(\"ForwardingSmtpAddress\", \"\")), trim_start(@\"smtp:\", column_ifexists(\"ForwardingSmtpAddress\", \"\")),\n        \"\"\n    ))\n    | where isnotempty(DestinationMailAddress)\n    | mv-expand split(DestinationMailAddress, \";\")\n    | extend ClientIPValues = extract_all(@'\\[?(::ffff:)?(?P<IPAddress>(\\d+\\.\\d+\\.\\d+\\.\\d+)|[^\\]]+)\\]?([-:](?P<Port>\\d+))?', dynamic([\"IPAddress\", \"Port\"]), ClientIp)[0]\n    | extend ClientIp = tostring(ClientIPValues[0]), Port = tostring(ClientIPValues[1])\n    | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), DistinctUserCount = dcount(UserId), UserId = make_set(UserId, 250), Ports = make_set(Port, 250), EventCount = count() by tostring(DestinationMailAddress), ClientIp\n    | where DistinctUserCount > 1 and EndTime > ago(queryfrequency)\n    | mv-expand UserId to typeof(string)\n    | extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1]);\n// OfficeActivity Query\nlet OfficeEvents = OfficeActivity\n    | where TimeGenerated > ago(queryperiod)\n    | where OfficeWorkload =~ \"Exchange\"\n    | where Parameters has_any (\"ForwardTo\", \"RedirectTo\", \"ForwardingSmtpAddress\")\n    | mv-apply DynamicParameters = todynamic(Parameters) on (\n        summarize ParsedParameters = make_bag(bag_pack(tostring(DynamicParameters.Name), DynamicParameters.Value))\n    )\n    | evaluate bag_unpack(ParsedParameters, columnsConflict='replace_source')\n    | extend DestinationMailAddress = tolower(case(\n        isnotempty(column_ifexists(\"ForwardTo\", \"\")), column_ifexists(\"ForwardTo\", \"\"),\n        isnotempty(column_ifexists(\"RedirectTo\", \"\")), column_ifexists(\"RedirectTo\", \"\"),\n        isnotempty(column_ifexists(\"ForwardingSmtpAddress\", \"\")), trim_start(@\"smtp:\", column_ifexists(\"ForwardingSmtpAddress\", \"\")),\n        \"\"\n    ))\n    | where isnotempty(DestinationMailAddress)\n    | mv-expand split(DestinationMailAddress, \";\")\n    | extend ClientIPValues = extract_all(@'\\[?(::ffff:)?(?P<IPAddress>(\\d+\\.\\d+\\.\\d+\\.\\d+)|[^\\]]+)\\]?([-:](?P<Port>\\d+))?', dynamic([\"IPAddress\", \"Port\"]), ClientIP)[0]\n    | extend ClientIP = tostring(ClientIPValues[0]), Port = tostring(ClientIPValues[1])\n    | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), DistinctUserCount = dcount(UserId), UserId = make_set(UserId, 250), Ports = make_set(Port, 250), EventCount = count() by tostring(DestinationMailAddress), ClientIP\n    | where DistinctUserCount > 1 and EndTime > ago(queryfrequency)\n    | mv-expand UserId to typeof(string)\n    | extend AccountName = tostring(split(UserId, \"@\")[0]), AccountUPNSuffix = tostring(split(UserId, \"@\")[1])\n    | extend Account_0_Name = AccountName, Account_0_UPNSuffix = AccountUPNSuffix, IP_0_Address = ClientIP;\n// Combine Office and Enriched Logs\nlet CombinedEvents = OfficeEvents\n    | union EnrichedEvents\n    | summarize arg_min(StartTime, *) by DestinationMailAddress, ClientIp;\n// Final Output\nCombinedEvents\n    | project StartTime, EndTime, DestinationMailAddress, ClientIp, Ports, UserId, AccountName, AccountUPNSuffix\n    | order by StartTime desc\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Identifies when multiple (more than one) users' mailboxes are configured to forward to the same destination. \nThis could be an attacker-controlled destination mailbox configured to collect mail from multiple compromised user accounts."
                  },
                  {
                    "name": "tactics",
                    "value": "Collection,Exfiltration"
                  },
                  {
                    "name": "techniques",
                    "value": "T1114,T1020"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject19')._huntingQuerycontentId19),'/'))))]",
              "properties": {
                "description": "Global Secure Access Hunting Query 19",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject19')._huntingQuerycontentId19)]",
                "contentId": "[variables('huntingQueryObject19')._huntingQuerycontentId19]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject19').huntingQueryVersion19]",
                "source": {
                  "kind": "Solution",
                  "name": "Global Secure Access",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Partner",
                  "name": "Microsoft Corporation",
                  "email": "GSASentinelSupport@microsoft.com",
                  "link": "https://learn.microsoft.com/en-us/entra/global-secure-access/overview-what-is-global-secure-access"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject19')._huntingQuerycontentId19]",
        "contentKind": "HuntingQuery",
        "displayName": "GSA - Multiple Users Email Forwarded to Same Destination",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject19')._huntingQuerycontentId19,'-', '2.0.2')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject19')._huntingQuerycontentId19,'-', '2.0.2')))]",
        "version": "2.0.2"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentPackages",
      "apiVersion": "2023-04-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "3.0.0",
        "kind": "Solution",
        "contentSchemaVersion": "3.0.0",
        "displayName": "Global Secure Access",
        "publisherDisplayName": "Microsoft Corporation",
        "descriptionHtml": "<p><strong>Note:</strong> Please refer to the following before installing the solution:</p>\n<p>• Review the solution <a href=\"https://github.com/Azure/Azure-Sentinel/tree/master/Solutions/Global%20Secure%20Access/ReleaseNotes.md\">Release Notes</a></p>\n<p>• There may be <a href=\"https://aka.ms/sentinelsolutionsknownissues\">known issues</a> pertaining to this Solution, please refer to them before installing.</p>\n<p><a href=\"https://aka.ms/GlobalSecureAccess\">Global Secure Access</a> is a <a href=\"https://learn.microsoft.com/en-us/azure/sentinel/sentinel-solutions-catalog#domain-solutions\">domain solution</a> and does not include any data connectors. The content in this solution requires one of the product solutions below.</p>\n<p><strong>Prerequisite:</strong></p>\n<p>Install one or more of the listed solutions to unlock the value provided by this solution.</p>\n<ol>\n<li>Microsoft Entra ID</li>\n</ol>\n<p><strong>Underlying Microsoft Technologies used:</strong></p>\n<p>This solution depends on the following technologies, and some of these dependencies may either be in Preview state or might result in additional ingestion or operational costs:</p>\n<ol>\n<li>Product solutions as described above</li>\n</ol>\n<p><strong>Workbooks:</strong> 2, <strong>Analytic Rules:</strong> 19, <strong>Hunting Queries:</strong> 19</p>\n<p><a href=\"https://aka.ms/azuresentinel\">Learn more about Microsoft Sentinel</a> | <a href=\"https://aka.ms/azuresentinelsolutionsdoc\">Learn more about Solutions</a></p>\n",
        "contentKind": "Solution",
        "contentProductId": "[variables('_solutioncontentProductId')]",
        "id": "[variables('_solutioncontentProductId')]",
        "icon": "<img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Logos/gsa.svg\" width=\"75px\" height=\"75px\">",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "Global Secure Access",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "GSASentinelSupport@microsoft.com",
          "tier": "Partner",
          "link": "https://learn.microsoft.com/en-us/entra/global-secure-access/overview-what-is-global-secure-access"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "Workbook",
              "contentId": "[variables('_workbookContentId1')]",
              "version": "[variables('workbookVersion1')]"
            },
            {
              "kind": "Workbook",
              "contentId": "[variables('_workbookContentId2')]",
              "version": "[variables('workbookVersion2')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
              "version": "[variables('analyticRuleObject1').analyticRuleVersion1]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
              "version": "[variables('analyticRuleObject2').analyticRuleVersion2]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject3')._analyticRulecontentId3]",
              "version": "[variables('analyticRuleObject3').analyticRuleVersion3]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject4')._analyticRulecontentId4]",
              "version": "[variables('analyticRuleObject4').analyticRuleVersion4]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject5')._analyticRulecontentId5]",
              "version": "[variables('analyticRuleObject5').analyticRuleVersion5]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject6')._analyticRulecontentId6]",
              "version": "[variables('analyticRuleObject6').analyticRuleVersion6]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject7')._analyticRulecontentId7]",
              "version": "[variables('analyticRuleObject7').analyticRuleVersion7]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject8')._analyticRulecontentId8]",
              "version": "[variables('analyticRuleObject8').analyticRuleVersion8]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject9')._analyticRulecontentId9]",
              "version": "[variables('analyticRuleObject9').analyticRuleVersion9]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject10')._analyticRulecontentId10]",
              "version": "[variables('analyticRuleObject10').analyticRuleVersion10]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject11')._analyticRulecontentId11]",
              "version": "[variables('analyticRuleObject11').analyticRuleVersion11]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject12')._analyticRulecontentId12]",
              "version": "[variables('analyticRuleObject12').analyticRuleVersion12]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject13')._analyticRulecontentId13]",
              "version": "[variables('analyticRuleObject13').analyticRuleVersion13]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject14')._analyticRulecontentId14]",
              "version": "[variables('analyticRuleObject14').analyticRuleVersion14]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject15')._analyticRulecontentId15]",
              "version": "[variables('analyticRuleObject15').analyticRuleVersion15]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject16')._analyticRulecontentId16]",
              "version": "[variables('analyticRuleObject16').analyticRuleVersion16]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject17')._analyticRulecontentId17]",
              "version": "[variables('analyticRuleObject17').analyticRuleVersion17]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject18')._analyticRulecontentId18]",
              "version": "[variables('analyticRuleObject18').analyticRuleVersion18]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject19')._analyticRulecontentId19]",
              "version": "[variables('analyticRuleObject19').analyticRuleVersion19]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject1')._huntingQuerycontentId1]",
              "version": "[variables('huntingQueryObject1').huntingQueryVersion1]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject2')._huntingQuerycontentId2]",
              "version": "[variables('huntingQueryObject2').huntingQueryVersion2]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject3')._huntingQuerycontentId3]",
              "version": "[variables('huntingQueryObject3').huntingQueryVersion3]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject4')._huntingQuerycontentId4]",
              "version": "[variables('huntingQueryObject4').huntingQueryVersion4]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject5')._huntingQuerycontentId5]",
              "version": "[variables('huntingQueryObject5').huntingQueryVersion5]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject6')._huntingQuerycontentId6]",
              "version": "[variables('huntingQueryObject6').huntingQueryVersion6]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject7')._huntingQuerycontentId7]",
              "version": "[variables('huntingQueryObject7').huntingQueryVersion7]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject8')._huntingQuerycontentId8]",
              "version": "[variables('huntingQueryObject8').huntingQueryVersion8]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject9')._huntingQuerycontentId9]",
              "version": "[variables('huntingQueryObject9').huntingQueryVersion9]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject10')._huntingQuerycontentId10]",
              "version": "[variables('huntingQueryObject10').huntingQueryVersion10]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject11')._huntingQuerycontentId11]",
              "version": "[variables('huntingQueryObject11').huntingQueryVersion11]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject12')._huntingQuerycontentId12]",
              "version": "[variables('huntingQueryObject12').huntingQueryVersion12]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject13')._huntingQuerycontentId13]",
              "version": "[variables('huntingQueryObject13').huntingQueryVersion13]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject14')._huntingQuerycontentId14]",
              "version": "[variables('huntingQueryObject14').huntingQueryVersion14]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject15')._huntingQuerycontentId15]",
              "version": "[variables('huntingQueryObject15').huntingQueryVersion15]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject16')._huntingQuerycontentId16]",
              "version": "[variables('huntingQueryObject16').huntingQueryVersion16]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject17')._huntingQuerycontentId17]",
              "version": "[variables('huntingQueryObject17').huntingQueryVersion17]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject18')._huntingQuerycontentId18]",
              "version": "[variables('huntingQueryObject18').huntingQueryVersion18]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject19')._huntingQuerycontentId19]",
              "version": "[variables('huntingQueryObject19').huntingQueryVersion19]"
            }
          ]
        },
        "firstPublishDate": "2024-04-08",
        "providers": [
          "Microsoft"
        ],
        "categories": {
          "domains": [
            "Identity"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
