id: 723c5f46-133f-4f1e-ada6-5c138f811d75
name: New Admin Account Activity Seen Which Was Not Seen Historically
description: |
  This will help you discover any new admin account activity which was seen and were not seen historically.
  Any new accounts seen in the results can be validated and investigated for any suspicious activities.
severity: Medium
requiredDataConnectors:
  - connectorId: AzureActiveDirectory
    dataTypes:
      - EnrichedMicrosoft365AuditLogs
tactics:
  - PrivilegeEscalation
  - Collection
relevantTechniques:
  - T1078
  - T1114
query: |
  let starttime = todatetime('{{StartTimeISO}}');
  let endtime = todatetime('{{EndTimeISO}}');
  let lookback = starttime - 14d;
  // Historical Admin Activity in the Lookback Period
  let historicalActivity = OfficeActivity
      | where TimeGenerated between(lookback..starttime)
      | where RecordType == "ExchangeAdmin"
      | where UserType in ("Admin", "DcAdmin")
      | summarize historicalCount = count() by UserId;
  // Recent Admin Activity in the Target Period
  let recentActivity = OfficeActivity
      | where TimeGenerated between(starttime..endtime)
      | where UserType in ("Admin", "DcAdmin")
      | summarize recentCount = count() by UserId;
  // Filter for Recent Activity Not Found in Historical Activity
  let newRecentActivity = recentActivity
      | join kind = leftanti (historicalActivity) on UserId
      | project UserId, recentCount
      | order by recentCount asc, UserId;
  // Join Recent Exchange Admin Activity Details for the Identified Users
  let recentAdminActivity = OfficeActivity
      | where TimeGenerated between(starttime..endtime)
      | where RecordType == "ExchangeAdmin"
      | where UserType in ("Admin", "DcAdmin")
      | join kind = rightsemi (newRecentActivity) on UserId
      | summarize StartTime = max(TimeGenerated), EndTime = min(TimeGenerated), count() by RecordType, Operation, UserType, UserId, OriginatingServer, ResultStatus;
  // Format the Output with Account Information
  recentAdminActivity
      | extend AccountName = iff(UserId contains '@', tostring(split(UserId, '@')[0]), UserId)
      | extend AccountUPNSuffix = iff(UserId contains '@', tostring(split(UserId, '@')[1]), '')
      | extend AccountName = iff(UserId contains '\\', tostring(split(UserId, '\\')[1]), AccountName)
      | extend AccountNTDomain = iff(UserId contains '\\', tostring(split(UserId, '\\')[0]), '')
      | extend Account_0_Name = AccountName, Account_0_UPNSuffix = AccountUPNSuffix, Account_0_NTDomain = AccountNTDomain
entityMappings:
  - entityType: Account
    fieldMappings:
      - identifier: Name
        columnName: AccountName
      - identifier: UPNSuffix
        columnName: AccountUPNSuffix
      - identifier: NTDomain
        columnName: AccountNTDomain
version: 2.0.2
