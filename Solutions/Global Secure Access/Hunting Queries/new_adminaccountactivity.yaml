id: 723c5f46-133f-4f1e-ada6-5c138f811d75
name: New Admin Account Activity Seen Which Was Not Seen Historically
description: |
  This will help you discover any new admin account activity which was seen and were not seen historically.
  Any new accounts seen in the results can be validated and investigated for any suspicious activities.
severity: Medium
requiredDataConnectors:
  - connectorId: AzureActiveDirectory
    dataTypes:
      - EnrichedMicrosoft365AuditLogs
  - connectorId: Office365
    dataTypes:
      - OfficeActivity (Exchange)
tactics:
  - PrivilegeEscalation
  - Collection
relevantTechniques:
  - T1078
  - T1114
query: |
    let starttime = todatetime('{{StartTimeISO}}');
    let endtime = todatetime('{{EndTimeISO}}');
    let lookback = starttime - 14d;
    // Check column existence in EnrichedMicrosoft365AuditLogs
    let EnrichedColumns = EnrichedMicrosoft365AuditLogs
    | limit 1
    | project TimeGenerated, RecordType, Operation, UserType, UserId, ResultStatus
    | extend Source = "EnrichedMicrosoft365AuditLogs"
    | project-away *;
    // Check column existence in OfficeActivity
    let OfficeColumns = OfficeActivity
    | limit 1
    | project TimeGenerated, RecordType, Operation, UserType, UserId, ResultStatus
    | extend Source = "OfficeActivity"
    | project-away *;
    // Display column information
    union EnrichedColumns, OfficeColumns
    | project Source, column_name = pack_all()
    | mv-expand column_name
    | project Source, column_name;
    // Historical activity
    let historicalActivity = 
        union isfuzzy=true
        (
            EnrichedMicrosoft365AuditLogs
            | where TimeGenerated between (lookback..starttime)
            | where RecordType == "ExchangeAdmin" and UserType in ("Admin", "DcAdmin")
            | extend SourceType = "EnrichedLogs"
            | project-keep TimeGenerated, RecordType, UserType, UserId, ResultStatus, SourceType
        ),
        (
            OfficeActivity
            | where TimeGenerated between (lookback..starttime)
            | where RecordType == "ExchangeAdmin" and UserType in ("Admin", "DcAdmin")
            | extend SourceType = "OfficeActivity"
            | project-keep TimeGenerated, RecordType, UserType, UserId, ResultStatus, SourceType
        )
        | summarize historicalCount = count() by UserId;
    // Recent activity
    let recentActivity = 
        union isfuzzy=true
        (
            EnrichedMicrosoft365AuditLogs
            | where TimeGenerated between (starttime..endtime)
            | where UserType in ("Admin", "DcAdmin")
            | extend SourceType = "EnrichedLogs"
            | project-keep TimeGenerated, RecordType, Operation, UserType, UserId, ResultStatus, SourceType
        ),
        (
            OfficeActivity
            | where TimeGenerated between (starttime..endtime)
            | where UserType in ("Admin", "DcAdmin")
            | extend SourceType = "OfficeActivity"
            | project-keep TimeGenerated, RecordType, Operation, UserType, UserId, ResultStatus, SourceType
        );
    // Join recent activity with historical activity, exclude users from historical activity
    let recentWithoutHistorical = recentActivity
        | summarize recentCount = count() by UserId
        | join kind=leftanti (historicalActivity) on UserId
        | project UserId, recentCount;
    // Ensure we only include users from recent activity in the final output
    let combinedActivity = recentActivity
        | join kind=rightsemi (recentWithoutHistorical) on UserId;
    // Display the schema of combinedActivity
    combinedActivity
    | limit 1
    | project column_name = pack_all()
    | mv-expand column_name
    | project column_name;
    // Final summarization of activity data
    combinedActivity
    | summarize StartTime = min(TimeGenerated), 
                EndTime = max(TimeGenerated), 
                ActivityCount = count(),
                UserTypes = make_set(UserType),
                RecordTypes = make_set(RecordType),
                Operations = make_set(Operation),
                ResultStatuses = make_set(ResultStatus),
                SourceTypes = make_set(SourceType)
      by UserId
    // Format user account details consistently
    | extend AccountName = iff(UserId contains '@', tostring(split(UserId, '@')[0]), UserId)
    | extend AccountUPNSuffix = iff(UserId contains '@', tostring(split(UserId, '@')[1]), '')
    | extend AccountName = iff(UserId contains '\\', tostring(split(UserId, '\\')[1]), AccountName)
    | extend AccountNTDomain = iff(UserId contains '\\', tostring(split(UserId, '\\')[0]), '')
    | extend Account_0_Name = AccountName,
             Account_0_UPNSuffix = AccountUPNSuffix,
             Account_0_NTDomain = AccountNTDomain
    | project StartTime, EndTime, ActivityCount, UserId, 
              UserTypes, RecordTypes, Operations, ResultStatuses, SourceTypes,
              Account_0_Name, Account_0_UPNSuffix, Account_0_NTDomain
entityMappings:
  - entityType: Account
    fieldMappings:
      - identifier: Name
        columnName: AccountName
      - identifier: UPNSuffix
        columnName: AccountUPNSuffix
      - identifier: NTDomain
        columnName: AccountNTDomain
version: 2.0.2
