id: ae0e8ccf-cd9d-47c1-afe2-6ad4e74e9213
name: GSA - EXEes with double file extension and access summary
description: |
  'Provides a summary of executable files with double file extensions in SharePoint 
   and the users and IP addresses that have accessed them.'
requiredDataConnectors:
  - connectorId: AzureActiveDirectory
    dataTypes:
      - EnrichedMicrosoft365AuditLogs
  - connectorId: Office365
    dataTypes:
      - OfficeActivity (SharePoint)
tactics:
  - DefenseEvasion
relevantTechniques:
  - T1036
query: |
    let known_ext = dynamic(["lnk", "log", "option", "config", "manifest", "partial"]);
    let excluded_users = dynamic(["app@sharepoint"]);
    // OfficeActivity Query
    let OfficeEvents = OfficeActivity
        | where RecordType =~ "SharePointFileOperation" and isnotempty(SourceFileName)
        | where OfficeObjectId has ".exe." and SourceFileExtension !in~ (known_ext)
        | extend Extension = extract("[^.]*\\.[^.]*$", 0, OfficeObjectId)
        | join kind=leftouter (
            OfficeActivity
            | where RecordType =~ "SharePointFileOperation" and (Operation =~ "FileDownloaded" or Operation =~ "FileAccessed")
            | where SourceFileExtension !in~ (known_ext)
        ) on OfficeObjectId
        | where UserId1 !in (excluded_users)
        | extend userBag = pack(UserId1, ClientIP1)
        | summarize make_set(UserId1, 10000), userBag = make_bag(userBag), Start = max(TimeGenerated), End = min(TimeGenerated)
        by UserId, OfficeObjectId, SourceFileName, Extension
        | extend NumberOfUsers = array_length(bag_keys(userBag))
        | project UploadTime = Start, Uploader = UserId, FileLocation = OfficeObjectId, FileName = SourceFileName, AccessedBy = userBag, Extension, NumberOfUsers
        | extend UploaderName = tostring(split(Uploader, "@")[0]), UploaderUPNSuffix = tostring(split(Uploader, "@")[1])
        | extend Account_0_Name = UploaderName, Account_0_UPNSuffix = UploaderUPNSuffix;
    // EnrichedMicrosoft365AuditLogs Query
    let EnrichedEvents = EnrichedMicrosoft365AuditLogs
        | where RecordType == "SharePointFileOperation" and isnotempty(ObjectId)
        | where ObjectId has ".exe." 
            and not(ObjectId endswith ".lnk") 
            and not(ObjectId endswith ".log")
            and not(ObjectId endswith ".option") 
            and not(ObjectId endswith ".config")
            and not(ObjectId endswith ".manifest") 
            and not(ObjectId endswith ".partial")
        | extend Extension = extract("[^.]*\\.[^.]*$", 0, ObjectId)
        | extend SourceFileName = tostring(parse_json(tostring(AdditionalProperties)).SourceFileName)
        | join kind=leftouter (
            EnrichedMicrosoft365AuditLogs
            | where RecordType == "SharePointFileOperation" and (Operation == "FileDownloaded" or Operation == "FileAccessed")
            | where not(ObjectId endswith ".lnk") 
                and not(ObjectId endswith ".log")
                and not(ObjectId endswith ".option") 
                and not(ObjectId endswith ".config")
                and not(ObjectId endswith ".manifest") 
                and not(ObjectId endswith ".partial")
        ) on ObjectId
        | where UserId1 !in (excluded_users)
        | extend userBag = pack("UserId", UserId1, "ClientIp", ClientIp1)
        | summarize make_set(UserId1, 10000), userBag = make_bag(userBag), UploadTime = max(TimeGenerated)
        by UserId, ObjectId, SourceFileName, Extension
        | extend NumberOfUsers = array_length(bag_keys(userBag))
        | project UploadTime, Uploader = UserId, FileLocation = ObjectId, FileName = SourceFileName, AccessedBy = userBag, Extension, NumberOfUsers
        | extend UploaderName = tostring(split(Uploader, "@")[0]), UploaderUPNSuffix = tostring(split(Uploader, "@")[1]);
    // Combine Office and Enriched Logs
    let CombinedEvents = EnrichedEvents
        | union OfficeEvents
        | summarize arg_min(UploadTime, *) by FileLocation, Uploader;
    // Final Output
    CombinedEvents
    | project UploadTime, Uploader, FileLocation, FileName, AccessedBy, Extension, NumberOfUsers, UploaderName, UploaderUPNSuffix
    | order by UploadTime desc
entityMappings:
  - entityType: Account
    fieldMappings:
      - identifier: Name
        columnName: UploaderName
      - identifier: UPNSuffix
        columnName: UploaderUPNSuffix
version: 2.0.2
kind: Scheduled
