{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 1,
      "content": {
        "json": "# Data Security – Sensitive data Impact Assessment\r\nUse this Workbook to accelerate the investigation and impact assessment of incidents that involve sensitive data such as PII, PCI, PHI, or Intellectual Property present in Azure Blob Storage data source.\r\nThis solution is in its Private Preview stage and will correlate Azure Blob Storage resource audit logs and data sensitivity logs from Azure Purview - to create sensitive data impact assessment report (i.e. Who accessed, What sensitive data, from Where and When).\r\n\r\n<svg viewBox=\"0 0 19 19\" width=\"20\" class=\"fxt-escapeShadow\" role=\"presentation\" focusable=\"false\" xmlns:svg=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-hidden=\"true\"><g><path fill=\"#1b93eb\" d=\"M16.82 8.886c0 4.81-5.752 8.574-7.006 9.411a.477.477 0 01-.523 0C8.036 17.565 2.18 13.7 2.18 8.886V3.135a.451.451 0 01.42-.419C7.2 2.612 6.154.625 9.5.625s2.3 1.987 6.8 2.091a.479.479 0 01.523.419z\"></path><path fill=\"url(#0024423711759027356)\" d=\"M16.192 8.99c0 4.392-5.333 7.947-6.483 8.575a.319.319 0 01-.418 0c-1.15-.732-6.483-4.183-6.483-8.575V3.762a.575.575 0 01.313-.523C7.2 3.135 6.258 1.357 9.4 1.357s2.2 1.882 6.274 1.882a.45.45 0 01.419.418z\"></path><path d=\"M9.219 5.378a.313.313 0 01.562 0l.875 1.772a.314.314 0 00.236.172l1.957.284a.314.314 0 01.174.535l-1.416 1.38a.312.312 0 00-.09.278l.334 1.949a.313.313 0 01-.455.33l-1.75-.92a.314.314 0 00-.292 0l-1.75.92a.313.313 0 01-.455-.33L7.483 9.8a.312.312 0 00-.09-.278L5.977 8.141a.314.314 0 01.174-.535l1.957-.284a.314.314 0 00.236-.172z\" class=\"msportalfx-svg-c01\"></path></g></svg>&nbsp;<span style=\"font-family: Open Sans; font-weight: 620; font-size: 14px;font-style: bold;margin:-10px 0px 0px 0px;position: relative;top:-3px;left:-4px;\"> Please take time to answer a quick survey,\r\n</span>[<span style=\"font-family: Open Sans; font-weight: 620; font-size: 14px;font-style: bold;margin:-10px 0px 0px 0px;position: relative;top:-3px;left:-4px;\"> click here. </span>]()\r\n\r\n"
      },
      "customWidth": "0",
      "name": "text - 16",
      "styleSettings": {
        "padding": "0px 30px",
        "maxWidth": "70%"
      }
    },
    {
      "type": 1,
      "content": {
        "json": "![Image Name](https://azure.microsoft.com/svghandler/security-center?width=200&height=200) "
      },
      "customWidth": "0",
      "name": "text - 17",
      "styleSettings": {
        "maxWidth": "20%"
      }
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "5e28d027-8f7a-40c4-a1ee-0424648c6f94",
            "cellValue": "TabName",
            "linkTarget": "parameter",
            "linkLabel": "Summary",
            "subTarget": "Summary",
            "style": "link"
          },
          {
            "id": "e09caa82-1657-4927-b776-916bcb7918dd",
            "cellValue": "TabName",
            "linkTarget": "parameter",
            "linkLabel": "User account",
            "subTarget": "UserAccount",
            "style": "link"
          },
          {
            "id": "bc68a7f4-0783-4ec2-ae6c-052cafcbed05",
            "cellValue": "TabName",
            "linkTarget": "parameter",
            "linkLabel": "IP address",
            "subTarget": "IPAddress",
            "style": "link"
          }
        ]
      },
      "name": "Tabs",
      "styleSettings": {
        "margin": "0px 30px"
      }
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "c5d3cca3-1c66-4dc7-8ef3-5986c66b3bff",
            "version": "KqlParameterItem/1.0",
            "name": "LinkName",
            "type": 1,
            "isGlobal": true,
            "query": "print('default')",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces",
            "value": "Anomalies"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "name": "parameters - LinkName"
    },
    {
      "type": 1,
      "content": {
        "json": "----\r\n## Investigation scope"
      },
      "name": "break  - Copy",
      "styleSettings": {
        "margin": "0px 30px"
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "8957770d-ea80-4383-8fda-e7a3ac4a45aa",
                  "version": "KqlParameterItem/1.0",
                  "name": "TimeRange_IS",
                  "label": "During",
                  "type": 4,
                  "isRequired": true,
                  "value": {
                    "durationMs": 5184000000
                  },
                  "typeSettings": {
                    "selectableValues": [
                      {
                        "durationMs": 86400000
                      },
                      {
                        "durationMs": 604800000
                      },
                      {
                        "durationMs": 2592000000
                      },
                      {
                        "durationMs": 5184000000
                      },
                      {
                        "durationMs": 7776000000
                      }
                    ],
                    "allowCustom": true
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "96377586-679c-4081-b68d-119b06380ade",
                  "version": "KqlParameterItem/1.0",
                  "name": "Subcriptions_IS",
                  "label": "Subscription",
                  "type": 6,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "//drop down parameter, list of subscriptions.\r\nDSTIMAccess_CL\r\n| where AggregationLastEventTime_t {TimeRange_IS} or TimeDiscovered_t {TimeRange_IS}\r\n| project ResourceSubscriptionId = ResourceSubscriptionId_g, AggregationLastEventTime = AggregationLastEventTime_t, TimeGenerated = TimeDiscovered_t\r\n| distinct ResourceSubscriptionId\r\n",
                  "crossComponentResources": [
                    "value::selected"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*",
                    "showDefault": false
                  },
                  "defaultValue": "value::all",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "db2fcd85-cd0a-4ae5-a2fc-0c8d43eedec9",
                  "version": "KqlParameterItem/1.0",
                  "name": "ResourceGroup_IS",
                  "label": "Resource group",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "//dropdown parameter, list of Resource groups according to Subscriptions_IS parameter\r\nDSTIMAccess_CL | project ResourceSubscriptionId_g, ResourceGroup, AggregationLastEventTime_t, TimeDiscovered_t \r\n| where AggregationLastEventTime_t {TimeRange_IS} or TimeDiscovered_t {TimeRange_IS}\r\n| where \"{Subcriptions_IS}\" == \"'*'\" or '{Subcriptions_IS:id}' has ResourceSubscriptionId_g\r\n| distinct ResourceGroup",
                  "crossComponentResources": [
                    "value::selected"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*",
                    "showDefault": false
                  },
                  "defaultValue": "value::all",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "15fe75b2-3ebc-417a-8c65-0216d32ceef6",
                  "version": "KqlParameterItem/1.0",
                  "name": "UserAccount_IS",
                  "label": "User account",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "//union between mailAdress acounts and app id's. (might change after normelizing the user account info we get from accesslogs).\r\n//dropdown parameter, list of Resource groups according to Subscriptions_IS parameter\r\nlet filteredLogs = DSTIMAccess_CL \r\n| project ResourceSubscriptionId = ResourceSubscriptionId_g, ResourceGroup, AggregationLastEventTime = AggregationLastEventTime_t, TimeGenerated = TimeDiscovered_t, RequesterUpn = RequesterUpn_s, RequesterAppId = RequesterAppId_s, AuthenticationType = AuthenticationType_s\r\n| where AggregationLastEventTime {TimeRange_IS} or TimeGenerated {TimeRange_IS}\r\n| where \"{Subcriptions_IS}\" == \"'*'\" or '{Subcriptions_IS:id}' has ResourceSubscriptionId\r\n| where \"{ResourceGroup_IS}\" == \"'*'\" or ResourceGroup in ({ResourceGroup_IS}) ;\r\n\r\nfilteredLogs | where isnotempty(RequesterUpn)\r\n| distinct RequesterUpn, AuthenticationType\r\n| join kind = leftouter (IdentityInfo) on $left.RequesterUpn == $right.MailAddress\r\n| project AccountId = RequesterUpn, AccountDisplayName = iff(isempty(AccountDisplayName), RequesterUpn, AccountDisplayName), selected = true, group = AuthenticationType\r\n| distinct AccountId, AccountDisplayName, selected, group\r\n| union (filteredLogs\r\n| where isnotempty(RequesterAppId)  | project AccountDisplayName = RequesterAppId, AccountId = RequesterAppId, selected = true, group = AuthenticationType\r\n | distinct AccountId, AccountDisplayName, selected, group )\r\n",
                  "crossComponentResources": [
                    "value::selected"
                  ],
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*",
                    "showDefault": false
                  },
                  "defaultValue": "value::all",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "e652cebc-d5ee-49c2-95dd-d00d18cc7ee7",
                  "version": "KqlParameterItem/1.0",
                  "name": "Classification_IS",
                  "label": "Classification",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "GetClassificationList({TimeRange_IS:start}, {TimeRange_IS:end}, '{Subcriptions_IS:id}', dynamic([{ResourceGroup_IS}]) , dynamic([{UserAccount_IS}]))",
                  "crossComponentResources": [
                    "value::selected"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*",
                    "showDefault": false
                  },
                  "defaultValue": "value::all",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "value": [
                    "value::all"
                  ]
                },
                {
                  "id": "91768aeb-8cad-411b-bfcb-7012011468c0",
                  "version": "KqlParameterItem/1.0",
                  "name": "SensitivityLabel_IS",
                  "label": "Sensitivity label",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "//list of sensitivityLabels accoding to all investigation scope parameters.\r\nDSTIMCorrelatedLogs({TimeRange_IS:start}, {TimeRange_IS:end}, '{Subcriptions_IS:id}', dynamic([{ResourceGroup_IS}]) , dynamic([{UserAccount_IS}]))\r\n| where \"{Classification_IS}\" == \"'*'\" or Classification has_any({Classification_IS})\r\n| project LabelName = iff(isempty(SensitivityLabelName), \"no label\", SensitivityLabelName)\r\n| distinct LabelName",
                  "crossComponentResources": [
                    "value::selected"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*",
                    "showDefault": false
                  },
                  "defaultValue": "value::all",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "2318320d-70d3-4dad-a930-10fc51dfe62e",
                  "version": "KqlParameterItem/1.0",
                  "name": "IPAddress_IS",
                  "label": "IP address",
                  "type": 10,
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n    {\"value\": \"contains\", \"label\": \"contains\", \"selected\":true},\r\n    {\"value\": \"not contains\", \"label\": \"not contains\"}\r\n]"
                },
                {
                  "id": "2987875a-e179-431d-93c1-b8540af04fcd",
                  "version": "KqlParameterItem/1.0",
                  "name": "IPRange_IS",
                  "label": "IP range",
                  "type": 1,
                  "typeSettings": {
                    "paramValidationRules": [
                      {
                        "regExp": "(^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}(\\/[0-9][0-9]?)?$)|^(?![\\s\\S])$",
                        "match": true,
                        "message": "please enter a valid ip range"
                      }
                    ]
                  }
                },
                {
                  "id": "a1470529-ff31-4723-a048-b73a0935805b",
                  "version": "KqlParameterItem/1.0",
                  "name": "AssetPath_IS",
                  "label": "Asset path",
                  "type": 10,
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n    {\"value\": \"contains\", \"label\": \"contains\", \"selected\":true},\r\n    {\"value\": \"not contains\", \"label\": \"not contains\"}\r\n]"
                },
                {
                  "id": "f136c461-4943-47c1-b67c-7bf0cd679d08",
                  "version": "KqlParameterItem/1.0",
                  "name": "Path_IS",
                  "label": "path",
                  "type": 1,
                  "value": ""
                }
              ],
              "style": "above",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "customWidth": "0",
            "name": "InvestigationScope",
            "styleSettings": {
              "maxWidth": "60"
            }
          }
        ],
        "exportParameters": true
      },
      "name": "Investigation scope",
      "styleSettings": {
        "margin": "0px 30px",
        "padding": "-30px 0px"
      }
    },
    {
      "type": 1,
      "content": {
        "json": "----\r\n## General Investigation Information"
      },
      "name": "break ",
      "styleSettings": {
        "margin": "0px 30px"
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "value::selected"
              ],
              "parameters": [
                {
                  "id": "789877b3-4d79-4403-bb7e-0dff8e3d8aad",
                  "version": "KqlParameterItem/1.0",
                  "name": "WatchListEntities",
                  "type": 1,
                  "query": "DSTIMCorrelatedLogs({TimeRange_IS:start}, {TimeRange_IS:end}, '{Subcriptions_IS:id}', dynamic([{ResourceGroup_IS}]) , dynamic([{UserAccount_IS}]))\r\n| project Classification, SensitivityLabelName, RequesterUpn\r\n| where \"'*'\" == \"{Classification_IS}\" or Classification has_any({Classification_IS})\r\n| where \"'*'\" == \"{SensitivityLabel_IS}\" or SensitivityLabelName in ({SensitivityLabel_IS})\r\n| where isnotempty(RequesterUpn)\r\n| join kind=inner (_GetWatchlist(\"VIPUsers\") | distinct SearchKey | union (_GetWatchlist(\"TerminatedEmployees\") | distinct SearchKey ) | union (_GetWatchlist(\"HighValueAssets\") | distinct SearchKey))\r\non $left.RequesterUpn == $right.SearchKey\r\n| distinct RequesterUpn",
                  "isHiddenWhenLocked": true,
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "56682599-5018-4d5b-8139-57ac8703838d",
                  "version": "KqlParameterItem/1.0",
                  "name": "WatchListCount",
                  "type": 1,
                  "query": "print(iff(isempty('{WatchListEntities}'), 'no', tostring(array_length(parse_json(split('{WatchListEntities}', ','))))))",
                  "crossComponentResources": [
                    "value::selected"
                  ],
                  "isHiddenWhenLocked": true,
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "904c8770-9e80-4d0b-825b-f8f7a917218e",
                  "version": "KqlParameterItem/1.0",
                  "name": "TIIPEntities",
                  "type": 1,
                  "query": "//query purpose - get count of IP addresses that are part of threat inteligenceIndicator list.\r\nDSTIMCorrelatedLogs({TimeRange_IS:start}, {TimeRange_IS:end}, '{Subcriptions_IS:id}', dynamic([{ResourceGroup_IS}]) , dynamic([{UserAccount_IS}]))\r\n| project Classification, SensitivityLabelName, CallerIPAddress\r\n| where \"'*'\" == \"{Classification_IS}\" or Classification has_any({Classification_IS})\r\n| where \"'*'\" == \"{SensitivityLabel_IS}\" or SensitivityLabelName in ({SensitivityLabel_IS})\r\n| join kind=inner (ThreatIntelligenceIndicator | where TimeGenerated {TimeRange_IS} | project NetworkSourceIP)  on $right.NetworkSourceIP == $left.CallerIPAddress\r\n| distinct CallerIPAddress",
                  "crossComponentResources": [
                    "value::selected"
                  ],
                  "isHiddenWhenLocked": true,
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "b43321b8-99d1-4a2b-891d-02374da17074",
                  "version": "KqlParameterItem/1.0",
                  "name": "TIIPCount",
                  "type": 1,
                  "isRequired": true,
                  "query": "print(iff(isempty('{TIIPEntities}'), 'no', \r\ntostring(array_length(parse_json(split('{TIIPEntities}', ','))))))\r\n\r\n",
                  "crossComponentResources": [
                    "value::selected"
                  ],
                  "isHiddenWhenLocked": true,
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "70277b70-a538-4d81-b60f-1d73cfdc0bb6",
                  "version": "KqlParameterItem/1.0",
                  "name": "assetCounts",
                  "type": 1,
                  "query": "//Query purpose - present the num of unique assets that were accessed by an IP addres that is part of Threat Inteligence table\r\nDSTIMCorrelatedLogs({TimeRange_IS:start}, {TimeRange_IS:end}, '{Subcriptions_IS:id}', dynamic([{ResourceGroup_IS}]) , dynamic([{UserAccount_IS}]))\r\n| project Classification, SensitivityLabelName, CallerIPAddress, Uri\r\n| where \"'*'\" == \"{Classification_IS}\" or Classification has_any({Classification_IS})\r\n| where \"'*'\" == \"{SensitivityLabel_IS}\" or SensitivityLabelName in ({SensitivityLabel_IS})\r\n| join kind=inner (ThreatIntelligenceIndicator | where TimeGenerated {TimeRange_IS} | project NetworkSourceIP)  on $right.NetworkSourceIP == $left.CallerIPAddress\r\n| distinct Uri\r\n| summarize Count = count()\r\n| project Count = iff(Count == 0, \"no\", tostring(Count))",
                  "crossComponentResources": [
                    "value::selected"
                  ],
                  "isHiddenWhenLocked": true,
                  "defaultValue": "value::all",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "3b3341df-a8fe-42ba-94ee-4d1f4375babb",
                  "version": "KqlParameterItem/1.0",
                  "name": "UserAnomalies",
                  "type": 1,
                  "query": "//Get number of anomalies from Anomalies table that were matching to upn entities in accessLogs\r\nDSTIMCorrelatedLogs({TimeRange_IS:start}, {TimeRange_IS:end}, '{Subcriptions_IS:id}', dynamic([{ResourceGroup_IS}]) , dynamic([{UserAccount_IS}]))\r\n| project Classification, SensitivityLabelName, RequesterUpn\r\n| where \"'*'\" == \"{Classification_IS}\" or Classification has_any({Classification_IS})\r\n| where \"'*'\" == \"{SensitivityLabel_IS}\" or SensitivityLabelName in ({SensitivityLabel_IS})\r\n| where isnotempty(RequesterUpn)\r\n| join kind=inner (Anomalies | where TimeGenerated between(datetime_add(\"day\", -5, {TimeRange_IS:start}) .. {TimeRange_IS:end}) | project AadUserId = UserPrincipalName, AnomalyTemplateId | where isnotempty(AadUserId)) on $left.RequesterUpn == $right.AadUserId\r\n| distinct RequesterUpn, AnomalyTemplateId\r\n| summarize countPerUser = count(AnomalyTemplateId) by RequesterUpn\r\n| summarize sum = sum(countPerUser)\r\n| project TotalSum = iff(sum == 0, \"no\", tostring(sum))",
                  "crossComponentResources": [
                    "value::selected"
                  ],
                  "isHiddenWhenLocked": true,
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "81217188-4340-4281-81bb-8b39b6905493",
                  "version": "KqlParameterItem/1.0",
                  "name": "IPAnomalies",
                  "type": 1,
                  "query": "//Get number of anomalies from Anomalies table that were matching to IP entities in accessLogs\r\nDSTIMCorrelatedLogs({TimeRange_IS:start}, {TimeRange_IS:end}, '{Subcriptions_IS:id}', dynamic([{ResourceGroup_IS}]) , dynamic([{UserAccount_IS}]))\r\n| project Classification, SensitivityLabelName, CallerIPAddress\r\n| where \"'*'\" == \"{Classification_IS}\" or Classification has_any({Classification_IS})\r\n| where \"'*'\" == \"{SensitivityLabel_IS}\" or SensitivityLabelName in ({SensitivityLabel_IS})\r\n| where isnotempty(CallerIPAddress)\r\n| join kind=inner (Anomalies | where TimeGenerated between(datetime_add(\"day\", -5, {TimeRange_IS:start}) .. {TimeRange_IS:end}) | project Address = SourceIpAddress, AnomalyTemplateId | where isnotempty(Address)) on $left.CallerIPAddress == $right.Address\r\n| distinct CallerIPAddress, AnomalyTemplateId\r\n| summarize countPerIP = count(AnomalyTemplateId) by CallerIPAddress\r\n| summarize sum = sum(countPerIP)\r\n| project TotalSum = iff(sum == 0, \"no\", tostring(sum))",
                  "crossComponentResources": [
                    "value::selected"
                  ],
                  "isHiddenWhenLocked": true,
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "8a446749-7b6a-4aab-9818-7d4d75d34e0b",
                  "version": "KqlParameterItem/1.0",
                  "name": "TotalAnomalies",
                  "type": 1,
                  "isHiddenWhenLocked": true,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "expression",
                        "resultVal": "{UserAnomalies} + {IPAnomalies}"
                      }
                    }
                  ]
                },
                {
                  "id": "b37715cd-5cde-4146-8fa8-3028e9fb7a16",
                  "version": "KqlParameterItem/1.0",
                  "name": "AnomaliesUserEntities",
                  "type": 1,
                  "query": "//Get unique count of user entities that are oart of the Anomalies table.  Quering 5 days before the time range as recommended by Anomalies team\r\nDSTIMCorrelatedLogs({TimeRange_IS:start}, {TimeRange_IS:end}, '{Subcriptions_IS:id}', dynamic([{ResourceGroup_IS}]) , dynamic([{UserAccount_IS}]))\r\n| project Classification, SensitivityLabelName, RequesterUpn\r\n| where \"'*'\" == \"{Classification_IS}\" or Classification has_any({Classification_IS})\r\n| where \"'*'\" == \"{SensitivityLabel_IS}\" or SensitivityLabelName in ({SensitivityLabel_IS})\r\n| where isnotempty(RequesterUpn)\r\n| join kind=inner (Anomalies | where TimeGenerated between(datetime_add(\"day\", -5, {TimeRange_IS:start}) .. {TimeRange_IS:end}) | project AadUserId = UserPrincipalName | where isnotempty(AadUserId)) on $left.RequesterUpn == $right.AadUserId\r\n| distinct RequesterUpn",
                  "crossComponentResources": [
                    "value::selected"
                  ],
                  "isHiddenWhenLocked": true,
                  "defaultValue": "value::all",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "c90199c6-e62d-4222-b0f5-1c5d645a3339",
                  "version": "KqlParameterItem/1.0",
                  "name": "AnomaliesIPEntities",
                  "type": 1,
                  "query": "//Get unique count of ip entities that are part of the Anomalies table. Quering 5 days before the time range as recommended by Anomalies team\r\nDSTIMCorrelatedLogs({TimeRange_IS:start}, {TimeRange_IS:end}, '{Subcriptions_IS:id}', dynamic([{ResourceGroup_IS}]) , dynamic([{UserAccount_IS}]))\r\n| project Classification, SensitivityLabelName, CallerIPAddress\r\n| where \"'*'\" == \"{Classification_IS}\" or Classification has_any({Classification_IS})\r\n| where \"'*'\" == \"{SensitivityLabel_IS}\" or SensitivityLabelName in ({SensitivityLabel_IS})\r\n| where isnotempty(CallerIPAddress)\r\n| join kind=inner (Anomalies | where TimeGenerated between(datetime_add(\"day\", -5, {TimeRange_IS:start}) .. {TimeRange_IS:end})| project Address = SourceIpAddress | where isnotempty(Address)) on $left.CallerIPAddress == $right.Address\r\n| distinct CallerIPAddress",
                  "isHiddenWhenLocked": true,
                  "defaultValue": "value::all",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "version": "KqlParameterItem/1.0",
                  "name": "AnomaliesUserEntitiesCount",
                  "type": 1,
                  "query": "print(iff(isempty('{AnomaliesUserEntities}'), '0', tostring(array_length(parse_json(split('{AnomaliesUserEntities}', ','))))))",
                  "crossComponentResources": [
                    "value::selected"
                  ],
                  "isHiddenWhenLocked": true,
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "id": "933924e5-2e79-4e1d-8cb3-bafbc937d8e0"
                },
                {
                  "version": "KqlParameterItem/1.0",
                  "name": "AnomaliesIPEntitiesCount",
                  "type": 1,
                  "query": "print(iff(isempty('{AnomaliesIPEntities}'), '0', tostring(array_length(parse_json(split('{AnomaliesIPEntities}', ','))))))",
                  "crossComponentResources": [
                    "value::selected"
                  ],
                  "isHiddenWhenLocked": true,
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "id": "27fcedd6-dd33-4353-9df3-7c63ed204b73"
                },
                {
                  "id": "7a53c97b-2715-4f39-99dd-f6b452a4ff50",
                  "version": "KqlParameterItem/1.0",
                  "name": "TotalAnomaliesEntitiesCount",
                  "type": 1,
                  "isHiddenWhenLocked": true,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "expression",
                        "resultVal": "{AnomaliesUserEntitiesCount} + {AnomaliesIPEntitiesCount}"
                      }
                    }
                  ]
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "conditionalVisibility": {
              "parameterName": "TabName",
              "comparison": "isEqualTo",
              "value": "default"
            },
            "name": "Insightsparameters "
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "//Query purpose = represent KPI cards with data about the access logs.\r\n//Unique count of:Subscriptions, Resource Groups, Sensitive data sources accessed, Sensitive data assets accessed, Classifications accessed, Labels accessed and User Accounts.\r\n\r\nlet totalClassificationCount = GetClassificationList({TimeRange_IS:start}, {TimeRange_IS:end}, '{Subcriptions_IS:id}', dynamic([{ResourceGroup_IS}]) , dynamic([{UserAccount_IS}]))\r\n| count;\r\n\r\nlet ExtraTiles = datatable(TableName: string, Count: string, tabName: string, expectedTab: string) \r\n[\r\n \"Watchlist(s) match\",  '{WatchListCount}', '{TabName}', 'UserAccount',\r\n \"User Anomalies match\",  '{AnomaliesUserEntitiesCount}', '{TabName}', 'UserAccount',\r\n \"IP Anomalies match\", '{AnomaliesIPEntitiesCount}','{TabName}', 'IPAddress',\r\n \"TI match\", '{TIIPCount}','{TabName}', 'IPAddress'\r\n]\r\n| where tabName == expectedTab | project TableName, Count;\r\n\r\nlet basicTiles = DSTIMCorrelatedLogs({TimeRange_IS:start}, {TimeRange_IS:end}, '{Subcriptions_IS:id}', dynamic([{ResourceGroup_IS}]) , dynamic([{UserAccount_IS}]))\r\n| summarize dcount(ResourceSubscriptionId), dcount(ResourceGroup), dcount(StorageAccountName),dcount(Uri), dcount(SensitivityLabelName), dcount(RequesterUpn), dcount(RequesterAppId)\r\n| project  [\"Subscriptions\"]  = dcount_ResourceSubscriptionId , [\"Resource Groups\"] = dcount_ResourceGroup , [\"Sensitive data sources accessed\"] = dcount_StorageAccountName, [\"Sensitive data assets accessed\"] = dcount_Uri, [\"User accounts\"] = iff(\"{UserAccount_IS}\" != \"'*'\", array_length(dynamic([{UserAccount_IS}])),(dcount_RequesterUpn + dcount_RequesterAppId)) , [\"Classifications accessed\"] = toscalar(totalClassificationCount), [\"Labels accessed\"] = dcount_SensitivityLabelName\r\n| evaluate narrow()\r\n| extend TableName = replace(@\"\\[|\\]|\\'\", @'',Column)\r\n| extend Count = Value\r\n| project TableName, Count\r\n| union ExtraTiles;\r\n\r\nbasicTiles",
                    "size": 3,
                    "color": "blue",
                    "exportFieldName": "TableName",
                    "exportParameterName": "TableName",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "tiles",
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "TableName",
                        "formatter": 1
                      },
                      "subtitleContent": {
                        "columnMatch": "Count",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        }
                      },
                      "showBorder": true,
                      "sortOrderField": 1,
                      "size": "auto"
                    },
                    "graphSettings": {
                      "type": 2,
                      "topContent": {
                        "columnMatch": "Subscriptions",
                        "formatter": 1,
                        "numberFormat": {
                          "unit": 0,
                          "options": {
                            "style": "decimal"
                          }
                        },
                        "tooltipFormat": {
                          "tooltip": "Subscriptions"
                        }
                      },
                      "centerContent": {
                        "columnMatch": "Subscriptions",
                        "formatter": 1
                      },
                      "nodeIdField": "Subscriptions",
                      "sourceIdField": "Subscriptions",
                      "targetIdField": "Subscriptions",
                      "graphOrientation": 3,
                      "showOrientationToggles": false,
                      "edgeLabel": "Subscriptions",
                      "nodeSize": null,
                      "staticNodeSize": 100,
                      "colorSettings": null,
                      "hivesMargin": 5
                    },
                    "mapSettings": {
                      "locInfo": "LatLong",
                      "sizeSettings": "Subscriptions",
                      "sizeAggregation": "Sum",
                      "legendMetric": "Subscriptions",
                      "legendAggregation": "Sum",
                      "itemColorSettings": {
                        "type": "heatmap",
                        "colorAggregation": "Sum",
                        "nodeColorField": "Subscriptions",
                        "heatmapPalette": "greenRed"
                      }
                    },
                    "textSettings": {
                      "style": "header"
                    }
                  },
                  "customWidth": "0",
                  "showPin": true,
                  "name": "KPI cards",
                  "styleSettings": {
                    "maxWidth": "100"
                  }
                }
              ],
              "exportParameters": true
            },
            "customWidth": "100",
            "name": "Tiles"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "DSTIMAccess_CL \r\n| project ResourceSubscriptionId = ResourceSubscriptionId_g, ResourceGroup, AggregationLastEventTime = AggregationLastEventTime_t, TimeGenerated = TimeDiscovered_t, RequesterUpn = RequesterUpn_s, RequesterAppId = RequesterAppId_s\r\n| where TimeGenerated {TimeRange_IS} or AggregationLastEventTime {TimeRange_IS}\r\n| where '{Subcriptions_IS:id}' == '*' or '{Subcriptions_IS:id}' has ResourceSubscriptionId\r\n| where \"'*'\" == \"{ResourceGroup_IS}\" or ResourceGroup in ({ResourceGroup_IS}) \r\n| where  \"'*'\" == \"{UserAccount_IS}\" or RequesterUpn in ({UserAccount_IS}) or RequesterAppId in ({UserAccount_IS})\r\n| distinct ResourceSubscriptionId",
                    "size": 0,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "conditionalVisibility": {
                    "parameterName": "TableName",
                    "comparison": "isEqualTo",
                    "value": "Nothing"
                  },
                  "name": "DSTIMSubscriptions"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resourcecontainers\r\n| project id, subscriptionId, type, tags\r\n| where '{Subcriptions_IS:id}' == '*' or '{Subcriptions_IS:id}' has subscriptionId\r\n| where type == \"microsoft.resources/subscriptions\"",
                    "size": 0,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "value::selected"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "SubscriptionName",
                          "formatter": 15,
                          "formatOptions": {
                            "linkTarget": null,
                            "showIcon": true
                          }
                        }
                      ]
                    },
                    "sortBy": []
                  },
                  "conditionalVisibility": {
                    "parameterName": "TableName",
                    "comparison": "isEqualTo",
                    "value": "nothing"
                  },
                  "name": "ResourceSubscriptions"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"74022f16-9973-482c-a7df-962934df00a4\",\"mergeType\":\"innerunique\",\"leftTable\":\"DSTIMSubscriptions\",\"rightTable\":\"ResourceSubscriptions\",\"leftColumn\":\"ResourceSubscriptionId\",\"rightColumn\":\"subscriptionId\"}],\"projectRename\":[{\"originalName\":\"[ResourceSubscriptions].id\",\"mergedName\":\"id\",\"fromId\":\"74022f16-9973-482c-a7df-962934df00a4\"},{\"originalName\":\"[DSTIMSubscriptions].ResourceSubscriptionId\",\"mergedName\":\"ResourceSubscriptionId\",\"fromId\":\"74022f16-9973-482c-a7df-962934df00a4\"},{\"originalName\":\"[ResourceSubscriptions].tags\",\"mergedName\":\"tags\",\"fromId\":\"74022f16-9973-482c-a7df-962934df00a4\"},{\"originalName\":\"[ResourceSubscriptions].name\"},{\"originalName\":\"[ResourceSubscriptions].type\"},{\"originalName\":\"[ResourceSubscriptions].kind\"},{\"originalName\":\"[ResourceSubscriptions].location\"},{\"originalName\":\"[ResourceSubscriptions].resourceGroup\"},{\"originalName\":\"[ResourceSubscriptions].subscriptionId\"},{\"originalName\":\"[ResourceSubscriptions].sku\"},{\"originalName\":\"[ResourceSubscriptions].plan\"},{\"originalName\":\"[ResourceSubscriptions].identity\"},{\"originalName\":\"[ResourceSubscriptions].zones\"},{\"originalName\":\"[ResourceSubscriptions].tenantId\"},{\"originalName\":\"[ResourceSubscriptions].managedBy\"},{\"originalName\":\"[ResourceSubscriptions].properties\"},{\"originalName\":\"[ResourceSubscriptions].extendedLocation\"}]}",
                    "size": 4,
                    "title": "Subscription Details",
                    "showRefreshButton": true,
                    "queryType": 7,
                    "gridSettings": {
                      "labelSettings": [
                        {
                          "columnId": "id",
                          "label": "Name"
                        },
                        {
                          "columnId": "ResourceSubscriptionId",
                          "label": "Id"
                        }
                      ]
                    }
                  },
                  "customWidth": "0",
                  "conditionalVisibility": {
                    "parameterName": "TableName",
                    "comparison": "isEqualTo",
                    "value": "Subscriptions"
                  },
                  "name": "SubscriptionsView",
                  "styleSettings": {
                    "maxWidth": "50"
                  }
                }
              ]
            },
            "customWidth": "0",
            "conditionalVisibility": {
              "parameterName": "TableName",
              "comparison": "isEqualTo",
              "value": "Subscriptions"
            },
            "name": "SubscriptionViewGroup",
            "styleSettings": {
              "maxWidth": "50"
            }
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resourcecontainers\r\n| project id, name, type, subscriptionId, location, tags\r\n| where \"'*'\" == \"{ResourceGroup_IS}\" or name in ({ResourceGroup_IS})\r\n| where type == \"microsoft.resources/subscriptions/resourcegroups\"\r\n\r\n",
                    "size": 0,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "value::selected"
                    ],
                    "sortBy": []
                  },
                  "conditionalVisibility": {
                    "parameterName": "TableName",
                    "comparison": "isEqualTo",
                    "value": "nothing"
                  },
                  "name": "Resourcegroups"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "DSTIMAccess_CL \r\n| project ResourceSubscriptionId = ResourceSubscriptionId_g, ResourceGroup, AggregationLastEventTime = AggregationLastEventTime_t, TimeGenerated = TimeDiscovered_t, RequesterUpn = RequesterUpn_s, RequesterAppId = RequesterAppId_s\r\n| where TimeGenerated {TimeRange_IS} or AggregationLastEventTime {TimeRange_IS}\r\n| where '{Subcriptions_IS:id}' == '*' or '{Subcriptions_IS:id}' has ResourceSubscriptionId\r\n| where \"'*'\" == \"{ResourceGroup_IS}\" or ResourceGroup in ({ResourceGroup_IS}) \r\n| where  \"'*'\" == \"{UserAccount_IS}\" or RequesterUpn in ({UserAccount_IS}) or RequesterAppId in ({UserAccount_IS})\r\n| distinct ResourceGroup",
                    "size": 0,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "conditionalVisibility": {
                    "parameterName": "TableName",
                    "comparison": "isEqualTo",
                    "value": "nothing"
                  },
                  "name": "DSTIMResourcegroups"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"c7ec72da-8ab1-489f-a46b-d79d6489c082\",\"mergeType\":\"innerunique\",\"leftTable\":\"DSTIMResourcegroups\",\"rightTable\":\"Resourcegroups\",\"leftColumn\":\"ResourceGroup\",\"rightColumn\":\"name\"}],\"projectRename\":[{\"originalName\":\"[Resourcegroups].id\",\"mergedName\":\"Resource Group Name\",\"fromId\":\"c7ec72da-8ab1-489f-a46b-d79d6489c082\"},{\"originalName\":\"[Resourcegroups].subscriptionId\",\"mergedName\":\"subscriptionId\",\"fromId\":\"c7ec72da-8ab1-489f-a46b-d79d6489c082\"},{\"originalName\":\"[Resourcegroups].location\",\"mergedName\":\"location\",\"fromId\":\"c7ec72da-8ab1-489f-a46b-d79d6489c082\"},{\"originalName\":\"[Resourcegroups].tags\",\"mergedName\":\"tags\",\"fromId\":\"c7ec72da-8ab1-489f-a46b-d79d6489c082\"},{\"originalName\":\"[DSTIMResourcegroups].ResourceGroup\"},{\"originalName\":\"[Resourcegroups].name\"},{\"originalName\":\"[Resourcegroups].type\"},{\"originalName\":\"[Resourcegroups].tenantId\"},{\"originalName\":\"[Resourcegroups].kind\"},{\"originalName\":\"[Resourcegroups].resourceGroup\"},{\"originalName\":\"[Resourcegroups].managedBy\"},{\"originalName\":\"[Resourcegroups].sku\"},{\"originalName\":\"[Resourcegroups].plan\"},{\"originalName\":\"[Resourcegroups].properties\"},{\"originalName\":\"[Resourcegroups].identity\"},{\"originalName\":\"[Resourcegroups].zones\"},{\"originalName\":\"[Resourcegroups].extendedLocation\"}]}",
                    "size": 4,
                    "title": "Resource Group Details",
                    "showRefreshButton": true,
                    "queryType": 7,
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "subscriptionId",
                          "formatter": 15,
                          "formatOptions": {
                            "linkTarget": null,
                            "showIcon": true
                          }
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "subscriptionId",
                          "label": "Subscription Name"
                        },
                        {
                          "columnId": "location",
                          "label": "Location"
                        },
                        {
                          "columnId": "tags",
                          "label": "Tags"
                        }
                      ]
                    }
                  },
                  "customWidth": "0",
                  "conditionalVisibility": {
                    "parameterName": "TableName",
                    "comparison": "isEqualTo",
                    "value": "Resource Groups"
                  },
                  "name": "ResourceGroupView",
                  "styleSettings": {
                    "maxWidth": "50"
                  }
                }
              ],
              "exportParameters": true
            },
            "customWidth": "0",
            "conditionalVisibility": {
              "parameterName": "TableName",
              "comparison": "isEqualTo",
              "value": "Resource Groups"
            },
            "name": "ResourceGroupViewGroup",
            "styleSettings": {
              "maxWidth": "50"
            }
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "Resources\r\n| project id, name, subscriptionId, resourceGroup, type, tags, location\r\n| where  '*' == '{Subcriptions_IS:id}' or '{Subcriptions_IS:id}' has subscriptionId\r\n| where \"'*'\" == \"{ResourceGroup_IS}\" or resourceGroup in~ ({ResourceGroup_IS})\r\n| where type =~ 'Microsoft.Storage/storageAccounts'\r\n",
                    "size": 0,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "value::selected"
                    ],
                    "gridSettings": {
                      "filter": true,
                      "sortBy": [
                        {
                          "itemKey": "subscriptionId",
                          "sortOrder": 1
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "subscriptionId",
                        "sortOrder": 1
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "TableName",
                    "comparison": "isEqualTo",
                    "value": "nothing"
                  },
                  "name": "StorageAccounts"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "DSTIMAccess_CL \r\n| project ResourceSubscriptionId = ResourceSubscriptionId_g, ResourceGroup, AggregationLastEventTime = AggregationLastEventTime_t, TimeGenerated = TimeDiscovered_t, RequesterUpn = RequesterUpn_s, RequesterAppId = RequesterAppId_s, StorageAccountName = StorageAccountName_s\r\n| where TimeGenerated {TimeRange_IS} or AggregationLastEventTime {TimeRange_IS}\r\n| where '{Subcriptions_IS:id}' == '*' or '{Subcriptions_IS:id}' has ResourceSubscriptionId\r\n| where \"'*'\" == \"{ResourceGroup_IS}\" or ResourceGroup in ({ResourceGroup_IS}) \r\n| where  \"'*'\" == \"{UserAccount_IS}\" or RequesterUpn in ({UserAccount_IS}) or RequesterAppId in ({UserAccount_IS})\r\n| distinct StorageAccountName",
                    "size": 0,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "conditionalVisibility": {
                    "parameterName": "TableName",
                    "comparison": "isEqualTo",
                    "value": "nothing"
                  },
                  "name": "DSTIMStorageAccounts"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"131846c4-cbc1-4e64-a5db-b914d56ed094\",\"mergeType\":\"innerunique\",\"leftTable\":\"DSTIMStorageAccounts\",\"rightTable\":\"StorageAccounts\",\"leftColumn\":\"StorageAccountName\",\"rightColumn\":\"name\"}],\"projectRename\":[{\"originalName\":\"[StorageAccounts].id\",\"mergedName\":\"Name\",\"fromId\":\"131846c4-cbc1-4e64-a5db-b914d56ed094\"},{\"originalName\":\"[StorageAccounts].location\",\"mergedName\":\"Location\",\"fromId\":\"131846c4-cbc1-4e64-a5db-b914d56ed094\"},{\"originalName\":\"[StorageAccounts].tags\",\"mergedName\":\"Tags\",\"fromId\":\"131846c4-cbc1-4e64-a5db-b914d56ed094\"},{\"originalName\":\"[StorageAccounts].subscriptionId\",\"mergedName\":\"Subscription Name\",\"fromId\":\"131846c4-cbc1-4e64-a5db-b914d56ed094\"},{\"originalName\":\"[StorageAccounts].resourceGroup\",\"mergedName\":\"Resource Group\",\"fromId\":\"131846c4-cbc1-4e64-a5db-b914d56ed094\"},{\"originalName\":\"[StorageAccounts].extendedLocation\"},{\"originalName\":\"[StorageAccounts].zones\"},{\"originalName\":\"[StorageAccounts].identity\"},{\"originalName\":\"[StorageAccounts].properties\"},{\"originalName\":\"[StorageAccounts].plan\"},{\"originalName\":\"[StorageAccounts].sku\"},{\"originalName\":\"[StorageAccounts].managedBy\"},{\"originalName\":\"[StorageAccounts].kind\"},{\"originalName\":\"[StorageAccounts].tenantId\"},{\"originalName\":\"[StorageAccounts].type\"},{\"originalName\":\"[StorageAccounts].name\"},{\"originalName\":\"[DSTIMStorageAccounts].StorageAccountName\"}]}",
                    "size": 4,
                    "title": "Data Source Details",
                    "showRefreshButton": true,
                    "queryType": 7,
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Subscription Name",
                          "formatter": 15,
                          "formatOptions": {
                            "linkTarget": null,
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "Resource Group",
                          "formatter": 14,
                          "formatOptions": {
                            "linkTarget": null,
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "subscriptionId",
                          "formatter": 15,
                          "formatOptions": {
                            "linkTarget": null,
                            "showIcon": true
                          }
                        }
                      ]
                    }
                  },
                  "customWidth": "0",
                  "conditionalVisibility": {
                    "parameterName": "TableName",
                    "comparison": "isEqualTo",
                    "value": "Sensitive data sources accessed"
                  },
                  "name": "StorageAccountsView",
                  "styleSettings": {
                    "maxWidth": "50"
                  }
                }
              ],
              "exportParameters": true
            },
            "customWidth": "0",
            "conditionalVisibility": {
              "parameterName": "TableName",
              "comparison": "isEqualTo",
              "value": "Sensitive data sources accessed"
            },
            "name": "StorageAccountViewGroup",
            "styleSettings": {
              "maxWidth": "50"
            }
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "DSTIMAccess_CL \r\n| project ResourceSubscriptionId = ResourceSubscriptionId_g, ResourceGroup, AggregationLastEventTime = AggregationLastEventTime_t, TimeGenerated = TimeDiscovered_t, RequesterUpn = RequesterUpn_s, RequesterAppId = RequesterAppId_s, AuthenticationType = AuthenticationType_s\r\n| where TimeGenerated {TimeRange_IS} or AggregationLastEventTime {TimeRange_IS}\r\n| where '{Subcriptions_IS:id}' == '*' or '{Subcriptions_IS:id}' has ResourceSubscriptionId\r\n| where \"'*'\" == \"{ResourceGroup_IS}\" or ResourceGroup in ({ResourceGroup_IS}) \r\n| where  \"'*'\" == \"{UserAccount_IS}\" or RequesterUpn in ({UserAccount_IS})\r\n| where isnotempty(RequesterUpn)\r\n| join kind = leftouter (IdentityInfo) on $left.RequesterUpn == $right.MailAddress\r\n| project AccountDisplayName = iff(isempty(AccountDisplayName), RequesterUpn, AccountDisplayName), AccountID = RequesterUpn, AuthenticationType\r\n| distinct AccountID, AccountDisplayName, AuthenticationType\r\n| union (DSTIMAccess_CL \r\n| project ResourceSubscriptionId = ResourceSubscriptionId_g, ResourceGroup, AggregationLastEventTime = AggregationLastEventTime_t, TimeGenerated = TimeDiscovered_t, RequesterUpn = RequesterUpn_s, RequesterAppId = RequesterAppId_s, AuthenticationType = AuthenticationType_s\r\n| where TimeGenerated {TimeRange_IS} or AggregationLastEventTime {TimeRange_IS}\r\n| where '{Subcriptions_IS:id}' == '*' or '{Subcriptions_IS:id}' has ResourceSubscriptionId\r\n| where \"'*'\" == \"{ResourceGroup_IS}\" or ResourceGroup in ({ResourceGroup_IS}) \r\n| where  \"'*'\" == \"{UserAccount_IS}\" or RequesterAppId in ({UserAccount_IS})\r\n| where isnotempty(RequesterAppId)  | project AccountDisplayName = RequesterAppId, AccountID = RequesterAppId, AuthenticationType | distinct AccountID, AccountDisplayName, AuthenticationType)\r\n",
                    "size": 4,
                    "title": "User Account Details",
                    "showRefreshButton": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "value::selected"
                    ],
                    "gridSettings": {
                      "labelSettings": [
                        {
                          "columnId": "AccountID",
                          "label": "Account ID"
                        },
                        {
                          "columnId": "AccountDisplayName",
                          "label": "Display Name"
                        },
                        {
                          "columnId": "AuthenticationType",
                          "label": "Authentication Type"
                        }
                      ]
                    }
                  },
                  "customWidth": "0",
                  "conditionalVisibility": {
                    "parameterName": "TableName",
                    "comparison": "isEqualTo",
                    "value": "User accounts"
                  },
                  "name": "StorageAccountView",
                  "styleSettings": {
                    "maxWidth": "50"
                  }
                }
              ],
              "exportParameters": true
            },
            "customWidth": "0",
            "conditionalVisibility": {
              "parameterName": "TableName",
              "comparison": "isEqualTo",
              "value": "User accounts"
            },
            "name": "UserAccountViewGroup",
            "styleSettings": {
              "maxWidth": "50"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let TIIP = DSTIMCorrelatedLogs({TimeRange_IS:start}, {TimeRange_IS:end}, '{Subcriptions_IS:id}', dynamic([{ResourceGroup_IS}]) , dynamic([{UserAccount_IS}]))\r\n| project Classification, SensitivityLabelName, CallerIPAddress, RequesterUpn, Uri\r\n| where \"'*'\" == \"{Classification_IS}\" or Classification has_any({Classification_IS})\r\n| where \"'*'\" == \"{SensitivityLabel_IS}\" or SensitivityLabelName in ({SensitivityLabel_IS})\r\n| join kind=inner (ThreatIntelligenceIndicator | where TimeGenerated {TimeRange_IS} | project NetworkSourceIP, ThreatType, ConfidenceScore, DomainName, SourceSystem)  on $right.NetworkSourceIP == $left.CallerIPAddress\r\n| join kind=leftouter (SigninLogs) on $left.CallerIPAddress == $right.IPAddress\r\n| extend Geolocation = tostring(LocationDetails.countryOrRegion), Latitude = tostring(LocationDetails.geoCoordinates.latitude), Longitude = tostring(LocationDetails.geoCoordinates.longitude)\r\n| extend Latitude = tostring(LocationDetails.geoCoordinates.latitude)\r\n| extend Longitude = tostring(LocationDetails.geoCoordinates.longitude)\r\n| distinct NetworkSourceIP, Geolocation, Latitude, Longitude, DomainName, ThreatType, ConfidenceScore, SourceSystem;\r\n\r\nTIIP",
              "size": 4,
              "title": "Sensitive data access done by IP address with TI match",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "value::selected"
              ],
              "gridSettings": {
                "sortBy": [
                  {
                    "itemKey": "SourceSystem",
                    "sortOrder": 1
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "NetworkSourceIP",
                    "label": "IP Address"
                  },
                  {
                    "columnId": "DomainName",
                    "label": "Domain"
                  },
                  {
                    "columnId": "ThreatType",
                    "label": "Threat type"
                  },
                  {
                    "columnId": "ConfidenceScore",
                    "label": "Confidence"
                  },
                  {
                    "columnId": "SourceSystem",
                    "label": "Source"
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "SourceSystem",
                  "sortOrder": 1
                }
              ]
            },
            "customWidth": "0",
            "conditionalVisibilities": [
              {
                "parameterName": "TableName",
                "comparison": "isEqualTo",
                "value": "TI match"
              },
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "IPAddress"
              }
            ],
            "name": "TIIPExtendedInfo",
            "styleSettings": {
              "maxWidth": "50"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "//Query purpose - get the list of entities that are part of one or more of this watchlists: \"VIPUsers\", \"TerminatedEmployees\", \"HighValueAssets\"\r\nlet watchList = DSTIMCorrelatedLogs({TimeRange_IS:start}, {TimeRange_IS:end}, '{Subcriptions_IS:id}', dynamic([{ResourceGroup_IS}]) , parse_json(split('{WatchListEntities}', ',')))\r\n| project Classification, SensitivityLabelName, CallerIPAddress, RequesterUpn, Uri\r\n| where \"'*'\" == \"{Classification_IS}\" or Classification has_any({Classification_IS})\r\n| where \"'*'\" == \"{SensitivityLabel_IS}\" or SensitivityLabelName in ({SensitivityLabel_IS})\r\n| where isnotempty(RequesterUpn)\r\n| join kind=inner (_GetWatchlist(\"VIPUsers\") | distinct SearchKey | extend watchList = \"VIP Users\" | union (_GetWatchlist(\"TerminatedEmployees\") | distinct SearchKey | extend watchList = \"Terminated Employees\" ) | union (_GetWatchlist(\"HighValueAssets\") | distinct SearchKey | extend watchList = \"High //Value Assets\" ))\r\non $left.RequesterUpn == $right.SearchKey\r\n| join kind=leftouter (Anomalies | where TimeGenerated {TimeRange_IS} | project AadUserId = UserPrincipalName, AnomalyTemplateId | where isnotempty(AadUserId)) on $left.RequesterUpn == $right.AadUserId\r\n| join kind=leftouter (SecurityAlert | where TimeGenerated {TimeRange_IS}| mv-expand entities = todynamic(Entities) | project AlertUser = tostring(entities.['DisplayName']), SystemAlertId, IsIncident) on $left.RequesterUpn == $right.AlertUser\r\n| distinct RequesterUpn, Uri, Classification, watchList, AnomalyTemplateId, AlertUser, SystemAlertId, IsIncident\r\n| mv-expand classification = todynamic(Classification)\r\n| where isnotempty( classification.['Name'])\r\n| extend clasType = tostring(classification.['Name']), clasCount = toint(classification.['UniqueCount'])\r\n| summarize Instances = sum(clasCount), class_list = make_set_if(clasType, isnotempty(clasType)), watchListNames = make_set_if(watchList, isnotempty(watchList)), Anomalies = countif(isnotempty(AnomalyTemplateId)), Alerts = countif(isnotempty(SystemAlertId) and IsIncident == false), Incidents = countif(isnotempty(SystemAlertId) and IsIncident == true) by RequesterUpn\r\n| project Entity = RequesterUpn, EntityType = \"User Account\", Instances, Classifications = trim(@'[\\[ \\]]', iff(isempty(class_list), 'N/A', class_list)), Watchlist =  trim(@'[\\[ \\]]', iff(watchListNames == '[\"\"]', 'N/A', watchListNames)), ThreatType = 'N/A', Anomalies, Alerts, Incidents; \r\n\r\nwatchList;",
              "size": 4,
              "title": "Watchlist(s) user entities details",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "customWidth": "0",
            "conditionalVisibilities": [
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "UserAccount"
              },
              {
                "parameterName": "TableName",
                "comparison": "isEqualTo",
                "value": "Watchlist(s) match"
              }
            ],
            "name": "UserWatchList",
            "styleSettings": {
              "maxWidth": "50"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "//Query purpose - get the list of entities that are part Anomalies table\r\nlet CorrelatedLogs = DSTIMCorrelatedLogs({TimeRange_IS:start}, {TimeRange_IS:end}, '{Subcriptions_IS:id}', dynamic([{ResourceGroup_IS}]) , dynamic([{UserAccount_IS}]))\r\n| project Classification, SensitivityLabelName, CallerIPAddress, RequesterUpn, Uri\r\n| where \"'*'\" == \"{Classification_IS}\" or Classification has_any({Classification_IS})\r\n| where \"'*'\" == \"{SensitivityLabel_IS}\" or SensitivityLabelName in ({SensitivityLabel_IS});\r\n\r\nlet UserAnomalies = CorrelatedLogs\r\n| join kind=inner (Anomalies | where TimeGenerated {TimeRange_IS} | project AadUserId = UserPrincipalName, AnomalyTemplateId | where isnotempty(AadUserId)) on $left.RequesterUpn == $right.AadUserId\r\n| join kind=leftouter (_GetWatchlist(\"VIPUsers\") | distinct SearchKey | extend watchList = \"VIP Users\" | union (_GetWatchlist(\"TerminatedEmployees\") | distinct SearchKey | extend watchList = \"Terminated Employees\" ) | union (_GetWatchlist(\"HighValueAssets\") | distinct SearchKey | extend watchList = \"High Value Assets\" ))\r\non $left.RequesterUpn == $right.SearchKey\r\n| join kind=leftouter (SecurityAlert | where TimeGenerated {TimeRange_IS}| mv-expand entities = todynamic(Entities) | project AlertUser = tostring(entities.['DisplayName']), SystemAlertId, IsIncident) on $left.RequesterUpn == $right.AlertUser\r\n| distinct RequesterUpn, Uri, Classification, watchList, AnomalyTemplateId, SystemAlertId, IsIncident\r\n| mv-expand classification = todynamic(Classification)\r\n| where isnotempty( classification.['Name'])\r\n| extend clasType = tostring(classification.['Name']), clasCount = toint(classification.['UniqueCount'])\r\n| summarize Instances = sum(clasCount), class_list = make_set_if(clasType, isnotempty(clasType)), watchListNames = make_set_if(watchList, isnotempty(watchList)), Anomalies = dcount(AnomalyTemplateId), Alerts = countif(isnotempty(SystemAlertId) and IsIncident == false), Incidents = countif(isnotempty(SystemAlertId) and IsIncident == true) by RequesterUpn\r\n| project Entity = RequesterUpn, EntityType = \"User Account\", Instances, Classifications = trim(@'[\\[ \\]]', iff(isempty(class_list), 'N/A', class_list)), Watchlist =  trim(@'[\\[ \\]]', iff(watchListNames == '[]', 'N/A', watchListNames)), ThreatType = 'N/A', Anomalies, Alerts, Incidents; \r\n\r\nUserAnomalies",
              "size": 4,
              "title": "Anomalies user entities details",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "value::selected"
              ]
            },
            "customWidth": "0",
            "conditionalVisibilities": [
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "UserAccount"
              },
              {
                "parameterName": "TableName",
                "comparison": "isEqualTo",
                "value": "User Anomalies match"
              }
            ],
            "name": "UserAnomaliesDetails",
            "styleSettings": {
              "maxWidth": "50"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "//Query purpose - get the list of IP entities that are part Anomalies table\r\nlet CorrelatedLogs = DSTIMCorrelatedLogs({TimeRange_IS:start}, {TimeRange_IS:end}, '{Subcriptions_IS:id}', dynamic([{ResourceGroup_IS}]) , dynamic([{UserAccount_IS}]))\r\n| project Classification, SensitivityLabelName, CallerIPAddress, RequesterUpn, Uri\r\n| where \"'*'\" == \"{Classification_IS}\" or Classification has_any({Classification_IS})\r\n| where \"'*'\" == \"{SensitivityLabel_IS}\" or SensitivityLabelName in ({SensitivityLabel_IS});\r\n\r\nlet IPAnomalies = CorrelatedLogs\r\n| join kind=inner (Anomalies | where TimeGenerated between(datetime_add(\"day\", -5, {TimeRange_IS:start}) .. {TimeRange_IS:end})| project Address = SourceIpAddress, AnomalyTemplateId | where isnotempty(Address)) on $left.CallerIPAddress == $right.Address\r\n| join kind=leftouter (SecurityAlert | where TimeGenerated {TimeRange_IS}| project IpAddress = tostring(todynamic(ExtendedProperties).['IpAddress']), SystemAlertId, IsIncident) on $left.CallerIPAddress == $right.IpAddress\r\n| distinct CallerIPAddress, Uri, Classification, AnomalyTemplateId, SystemAlertId, IsIncident\r\n| mv-expand classification = todynamic(Classification)\r\n| where isnotempty( classification.['Name'])\r\n| extend clasType = tostring(classification.['Name']), clasCount = toint(classification.['UniqueCount'])\r\n| summarize Instances = sum(clasCount), class_list = make_set_if(clasType, isnotempty(clasType)), Anomalies = dcount(AnomalyTemplateId), Alerts = countif(isnotempty(SystemAlertId) and IsIncident == false), Incidents = countif(isnotempty(SystemAlertId) and IsIncident == true) by CallerIPAddress\r\n| project Entity = CallerIPAddress, EntityType = \"IP Address\", Instances, Classifications = trim(@'[\\[ \\]]', iff(isempty(class_list), 'N/A', class_list)), Anomalies, Alerts, Incidents; \r\n\r\nIPAnomalies",
              "size": 4,
              "title": "IP entities matching anomalies",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "value::selected"
              ]
            },
            "customWidth": "0",
            "conditionalVisibilities": [
              {
                "parameterName": "TableName",
                "comparison": "isEqualTo",
                "value": "IP Anomalies match"
              },
              {
                "parameterName": "TabName",
                "comparison": "isEqualTo",
                "value": "IPAddress"
              }
            ],
            "name": "IpAnomaliesDetails",
            "styleSettings": {
              "maxWidth": "50"
            }
          }
        ],
        "exportParameters": true
      },
      "customWidth": "0",
      "name": "KPI Cards",
      "styleSettings": {
        "margin": "0px",
        "padding": "0px 30px",
        "maxWidth": "100%"
      }
    },
    {
      "type": 1,
      "content": {
        "json": "----\r\n## Insights"
      },
      "name": "break  - Copy",
      "styleSettings": {
        "margin": "0px 30px"
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "#### ![Image Name](https://azure.microsoft.com/svghandler/insights?width=20&height=20)  Insights based on investigation scope"
                  },
                  "name": "text - 1",
                  "styleSettings": {
                    "padding": "0px 10px"
                  }
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 11,
                        "content": {
                          "version": "LinkItem/1.0",
                          "style": "paragraph",
                          "links": [
                            {
                              "id": "28f5ce79-5c16-4482-88b9-298e5377d293",
                              "cellValue": "LinkName",
                              "linkTarget": "parameter",
                              "linkLabel": "{TotalAnomaliesEntitiesCount}",
                              "subTarget": "Anomalies",
                              "preText": "{TotalAnomalies} anomalies were found pertaining to ",
                              "postText": "entities",
                              "style": "link"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "TabName",
                          "comparison": "isEqualTo",
                          "value": "Summary"
                        },
                        "name": "TotalAnomalies",
                        "styleSettings": {
                          "margin": "5px"
                        }
                      },
                      {
                        "type": 11,
                        "content": {
                          "version": "LinkItem/1.0",
                          "style": "paragraph",
                          "links": [
                            {
                              "id": "18fc1e15-b469-470d-9144-284e622c9468",
                              "cellValue": "LinkName",
                              "linkTarget": "parameter",
                              "linkLabel": "{AnomaliesUserEntitiesCount}",
                              "subTarget": "Anomalies",
                              "preText": "{UserAnomalies} anomalies were found pertaining to ",
                              "postText": "entities",
                              "style": "link"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "TabName",
                          "comparison": "isEqualTo",
                          "value": "UserAccount"
                        },
                        "name": "UserAccountAnomalies",
                        "styleSettings": {
                          "margin": "5px"
                        }
                      },
                      {
                        "type": 11,
                        "content": {
                          "version": "LinkItem/1.0",
                          "style": "paragraph",
                          "links": [
                            {
                              "id": "99ec4f7a-0b38-4abd-8b62-e88b28ed9b00",
                              "cellValue": "LinkName",
                              "linkTarget": "parameter",
                              "linkLabel": "{AnomaliesIPEntitiesCount}",
                              "subTarget": "Anomalies",
                              "preText": "{IPAnomalies} anomalies were found pertaining to ",
                              "postText": "entities",
                              "style": "link"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "TabName",
                          "comparison": "isEqualTo",
                          "value": "IPAddress"
                        },
                        "name": "IPAnomalies",
                        "styleSettings": {
                          "margin": "5px"
                        }
                      },
                      {
                        "type": 11,
                        "content": {
                          "version": "LinkItem/1.0",
                          "style": "paragraph",
                          "links": [
                            {
                              "id": "55522733-e216-493b-b05b-0394257bb829",
                              "cellValue": "LinkName",
                              "linkTarget": "parameter",
                              "linkLabel": "{TIIPCount}",
                              "subTarget": "TIIP",
                              "preText": "{assetCounts} sensitive files were accessed from ",
                              "postText": "IP addreses with TI match.",
                              "style": "link"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "TabName",
                          "comparison": "isNotEqualTo",
                          "value": "UserAccount"
                        },
                        "name": "TIInsights",
                        "styleSettings": {
                          "margin": "5px"
                        }
                      },
                      {
                        "type": 11,
                        "content": {
                          "version": "LinkItem/1.0",
                          "style": "paragraph",
                          "links": [
                            {
                              "id": "cf73b9da-13bd-4597-905e-6f089cb2aa76",
                              "cellValue": "LinkName",
                              "linkTarget": "parameter",
                              "linkLabel": "{WatchListCount}",
                              "subTarget": "WatchList",
                              "preText": "",
                              "postText": " entities are part of Built-in Watchlist(s).",
                              "style": "link"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "TabName",
                          "comparison": "isNotEqualTo",
                          "value": "IPAddress"
                        },
                        "name": "WatchListLink",
                        "styleSettings": {
                          "margin": "5px"
                        }
                      },
                      {
                        "type": 11,
                        "content": {
                          "version": "LinkItem/1.0",
                          "style": "paragraph",
                          "links": [
                            {
                              "id": "0391b466-1c76-4987-beb2-02253d0d2e13",
                              "cellValue": "LinkName",
                              "linkTarget": "parameter",
                              "linkLabel": "Click here to reset insights filters",
                              "subTarget": "default",
                              "style": "secondary"
                            }
                          ]
                        },
                        "name": "links - 5",
                        "styleSettings": {
                          "margin": "5px"
                        }
                      }
                    ],
                    "exportParameters": true
                  },
                  "customWidth": "0",
                  "name": "InsightsLinks",
                  "styleSettings": {
                    "padding": "0px 10px",
                    "maxWidth": "100"
                  }
                }
              ],
              "exportParameters": true
            },
            "customWidth": "0",
            "name": "InsightsView",
            "styleSettings": {
              "padding": "0px",
              "maxWidth": "40%"
            }
          },
          {
            "type": 1,
            "content": {
              "json": "To get insights details view, select a link in the Entities insights section shown on the left.",
              "style": "info"
            },
            "customWidth": "0",
            "conditionalVisibilities": [
              {
                "parameterName": "LinkName",
                "comparison": "isNotEqualTo",
                "value": "Anomalies"
              },
              {
                "parameterName": " WatchListVisible",
                "comparison": "isNotEqualTo",
                "value": "true"
              },
              {
                "parameterName": "LinkName",
                "comparison": "isNotEqualTo",
                "value": "TIIP"
              },
              {
                "parameterName": "LinkName",
                "comparison": "isNotEqualTo",
                "value": "WatchList"
              }
            ],
            "name": "noInfoText",
            "styleSettings": {
              "maxWidth": "60%"
            }
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "//Query purpose - get the list of entities that are part of one or more of this watchlists: \"VIPUsers\", \"TerminatedEmployees\", \"HighValueAssets\"\r\nlet watchList = DSTIMCorrelatedLogs({TimeRange_IS:start}, {TimeRange_IS:end}, '{Subcriptions_IS:id}', dynamic([{ResourceGroup_IS}]) , parse_json(split('{WatchListEntities}', ',')))\r\n| project Classification, SensitivityLabelName, CallerIPAddress, RequesterUpn, Uri\r\n| where \"'*'\" == \"{Classification_IS}\" or Classification has_any({Classification_IS})\r\n| where \"'*'\" == \"{SensitivityLabel_IS}\" or SensitivityLabelName in ({SensitivityLabel_IS})\r\n| where isnotempty(RequesterUpn)\r\n| join kind=inner (_GetWatchlist(\"VIPUsers\") | distinct SearchKey | extend watchList = \"VIP Users\" | union (_GetWatchlist(\"TerminatedEmployees\") | distinct SearchKey | extend watchList = \"Terminated Employees\" ) | union (_GetWatchlist(\"HighValueAssets\") | distinct SearchKey | extend watchList = \"High //Value Assets\" ))\r\non $left.RequesterUpn == $right.SearchKey\r\n| join kind=leftouter (Anomalies | where TimeGenerated between(datetime_add(\"day\", -5, {TimeRange_IS:start}) .. {TimeRange_IS:end})  | project AadUserId = UserPrincipalName, AnomalyTemplateId | where isnotempty(AadUserId)) on $left.RequesterUpn == $right.AadUserId\r\n| join kind=leftouter (SecurityAlert | where TimeGenerated {TimeRange_IS}| mv-expand entities = todynamic(Entities) | project AlertUser = tostring(entities.['DisplayName']), SystemAlertId, IsIncident) on $left.RequesterUpn == $right.AlertUser\r\n| distinct RequesterUpn, Uri, Classification, watchList, AnomalyTemplateId, AlertUser, SystemAlertId, IsIncident\r\n| mv-expand classification = todynamic(Classification)\r\n| where isnotempty( classification.['Name'])\r\n| extend clasType = tostring(classification.['Name']), clasCount = toint(classification.['UniqueCount'])\r\n| summarize Instances = sum(clasCount), class_list = make_set_if(clasType, isnotempty(clasType)), watchListNames = make_set_if(watchList, isnotempty(watchList)), Anomalies = countif(isnotempty(AnomalyTemplateId)), Alerts = countif(isnotempty(SystemAlertId) and IsIncident == false), Incidents = countif(isnotempty(SystemAlertId) and IsIncident == true) by RequesterUpn\r\n| project Entity = RequesterUpn, EntityType = \"User Account\", Instances, Classifications = trim(@'[\\[ \\]]', iff(isempty(class_list), 'N/A', class_list)), Watchlist =  trim(@'[\\[ \\]]', iff(watchListNames == '[\"\"]', 'N/A', watchListNames)), ThreatType = 'N/A', Anomalies, Alerts, Incidents; \r\n\r\nwatchList;",
                    "size": 1,
                    "title": "Watchlists Entities Details",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Classifications",
                          "formatter": 7,
                          "formatOptions": {
                            "linkTarget": "CellDetails",
                            "linkIsContextBlade": true
                          }
                        }
                      ]
                    }
                  },
                  "customWidth": "0",
                  "conditionalVisibility": {
                    "parameterName": "LinkName",
                    "comparison": "isEqualTo",
                    "value": "WatchList"
                  },
                  "name": "WatchListQuery"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "//Query purpose - get the list of entities that are part Anomalies table, for both user entities and IP entities.Correlate with matching watchlist, threatIntelligence, alerts and incident.\r\nlet CorrelatedLogs = DSTIMCorrelatedLogs({TimeRange_IS:start}, {TimeRange_IS:end}, '{Subcriptions_IS:id}', dynamic([{ResourceGroup_IS}]) , dynamic([{UserAccount_IS}]))\r\n| project Classification, SensitivityLabelName, CallerIPAddress, RequesterUpn, Uri\r\n| where \"'*'\" == \"{Classification_IS}\" or Classification has_any({Classification_IS})\r\n| where \"'*'\" == \"{SensitivityLabel_IS}\" or SensitivityLabelName in ({SensitivityLabel_IS});\r\n\r\nlet UserAnomalies = CorrelatedLogs\r\n| join kind=inner (Anomalies | where TimeGenerated between(datetime_add(\"day\", -5, {TimeRange_IS:start}) .. {TimeRange_IS:end})  | project AadUserId = UserPrincipalName, AnomalyTemplateId | where isnotempty(AadUserId)) on $left.RequesterUpn == $right.AadUserId\r\n| join kind=leftouter (_GetWatchlist(\"VIPUsers\") | distinct SearchKey | extend watchList = \"VIP Users\" | union (_GetWatchlist(\"TerminatedEmployees\") | distinct SearchKey | extend watchList = \"Terminated Employees\" ) | union (_GetWatchlist(\"HighValueAssets\") | distinct SearchKey | extend watchList = \"High Value Assets\" ))\r\non $left.RequesterUpn == $right.SearchKey\r\n| join kind=leftouter (SecurityAlert | where TimeGenerated {TimeRange_IS}| mv-expand entities = todynamic(Entities) | project AlertUser = tostring(entities.['DisplayName']), SystemAlertId, IsIncident) on $left.RequesterUpn == $right.AlertUser\r\n| distinct RequesterUpn, Uri, Classification, watchList, AnomalyTemplateId, SystemAlertId, IsIncident\r\n| mv-expand classification = todynamic(Classification)\r\n| where isnotempty( classification.['Name'])\r\n| extend clasType = tostring(classification.['Name']), clasCount = toint(classification.['UniqueCount'])\r\n| summarize Instances = sum(clasCount), class_list = make_set_if(clasType, isnotempty(clasType)), watchListNames = make_set_if(watchList, isnotempty(watchList)), Anomalies = dcount(AnomalyTemplateId), Alerts = countif(isnotempty(SystemAlertId) and IsIncident == false), Incidents = countif(isnotempty(SystemAlertId) and IsIncident == true) by RequesterUpn\r\n| project Entity = RequesterUpn, EntityType = \"User Account\", Instances, Classifications = trim(@'[\\[ \\]]', iff(isempty(class_list), 'N/A', class_list)), Watchlist =  trim(@'[\\[ \\]]', iff(watchListNames == '[\"\"]', 'N/A', watchListNames)), ThreatType = 'N/A', Anomalies, Alerts, Incidents; \r\n\r\nlet IPAnomalies = CorrelatedLogs\r\n| join kind=inner (Anomalies | where TimeGenerated between(datetime_add(\"day\", -5, {TimeRange_IS:start}) .. {TimeRange_IS:end})| project Address = SourceIpAddress, AnomalyTemplateId | where isnotempty(Address)) on $left.CallerIPAddress == $right.Address\r\n| join kind=leftouter (ThreatIntelligenceIndicator | where TimeGenerated {TimeRange_IS} | project NetworkSourceIP, ThreatType)  on $right.NetworkSourceIP == $left.CallerIPAddress\r\n| join kind=leftouter (SecurityAlert | where TimeGenerated {TimeRange_IS}| project IpAddress = tostring(todynamic(ExtendedProperties).['IpAddress']), SystemAlertId, IsIncident) on $left.CallerIPAddress == $right.IpAddress\r\n| distinct CallerIPAddress, Uri, Classification, ThreatType, AnomalyTemplateId, SystemAlertId, IsIncident\r\n| mv-expand classification = todynamic(Classification)\r\n| where isnotempty( classification.['Name'])\r\n| extend clasType = tostring(classification.['Name']), clasCount = toint(classification.['UniqueCount'])\r\n| summarize Instances = sum(clasCount), class_list = make_set_if(clasType, isnotempty(clasType)), ThreatType = make_set_if(ThreatType, isnotempty(ThreatType)), Anomalies = dcount(AnomalyTemplateId), Alerts = countif(isnotempty(SystemAlertId) and IsIncident == false), Incidents = countif(isnotempty(SystemAlertId) and IsIncident == true) by CallerIPAddress\r\n| project Entity = CallerIPAddress, EntityType = \"IP Address\", Instances, Classifications = trim(@'[\\[ \\]]', iff(isempty(class_list), 'N/A', class_list)), Watchlist =  'N/A', ThreatType = trim(@'[\\[ \\]]', iff(ThreatType =='[\"\"]', 'N/A', ThreatType)), Anomalies, Alerts, Incidents; \r\n\r\nUserAnomalies\r\n| union IPAnomalies",
                    "size": 1,
                    "title": "Anomalies Entities Details",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "value::selected"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Classifications",
                          "formatter": 7,
                          "formatOptions": {
                            "linkTarget": "CellDetails",
                            "linkIsContextBlade": true
                          }
                        }
                      ]
                    }
                  },
                  "customWidth": "0",
                  "conditionalVisibility": {
                    "parameterName": "LinkName",
                    "comparison": "isEqualTo",
                    "value": "Anomalies"
                  },
                  "name": "AnomaliesQuery"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "//Query purpose - get the list of IP entities that are part of ThreatInteligence table, correlate with matching annomalies, incidents and alerts.\r\nlet TIIP = DSTIMCorrelatedLogs({TimeRange_IS:start}, {TimeRange_IS:end}, '{Subcriptions_IS:id}', dynamic([{ResourceGroup_IS}]) , dynamic([{UserAccount_IS}]))\r\n| project Classification, SensitivityLabelName, CallerIPAddress, RequesterUpn, Uri\r\n| where \"'*'\" == \"{Classification_IS}\" or Classification has_any({Classification_IS})\r\n| where \"'*'\" == \"{SensitivityLabel_IS}\" or SensitivityLabelName in ({SensitivityLabel_IS})\r\n| join kind=inner (ThreatIntelligenceIndicator | where TimeGenerated {TimeRange_IS} | project NetworkSourceIP, ThreatType)  on $right.NetworkSourceIP == $left.CallerIPAddress\r\n| join kind=leftouter (Anomalies | where TimeGenerated between(datetime_add(\"day\", -5, {TimeRange_IS:start}) .. {TimeRange_IS:end}) | project Entities, RuleId | project Address = tostring(Entities[1].Address), RuleId | where isnotempty(Address)) on $left.CallerIPAddress == $right.Address\r\n| join kind=leftouter (SecurityAlert | where TimeGenerated {TimeRange_IS}| project IpAddress = tostring(todynamic(ExtendedProperties).['IpAddress']), SystemAlertId, IsIncident) on $left.CallerIPAddress == $right.IpAddress\r\n| distinct CallerIPAddress, Uri, Classification, ThreatType, RuleId, SystemAlertId, IsIncident\r\n| mv-expand classification = todynamic(Classification)\r\n| extend clasType = tostring(classification.['Name']), clasCount = toint(classification.['UniqueCount'])\r\n| summarize Instances = sum(clasCount), class_list = make_set_if(clasType, isnotempty(clasType)), ThreatType = make_set_if(ThreatType, isnotempty(ThreatType)), Anomalies = countif(isnotempty(RuleId)), Alerts = countif(isnotempty(SystemAlertId) and IsIncident == false), Incidents = countif(isnotempty(SystemAlertId) and IsIncident == true) by CallerIPAddress\r\n| project Entity = CallerIPAddress, EntityType = \"IP Address\", Instances, Classifications = trim(@'[\\[ \\]]', iff(isempty(class_list), 'N/A', class_list)), Watchlist =  'N/A', ThreatType = trim(@'[\\[ \\]]', iff(ThreatType =='[\"\"]', 'N/A', ThreatType)), Anomalies, Alerts, Incidents; \r\n\r\nTIIP;",
                    "size": 1,
                    "title": "Threat Intelligence Entities Details",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "value::selected"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Classifications",
                          "formatter": 7,
                          "formatOptions": {
                            "linkTarget": "CellDetails",
                            "linkIsContextBlade": true
                          }
                        },
                        {
                          "columnMatch": "class_list",
                          "formatter": 1
                        }
                      ]
                    }
                  },
                  "customWidth": "0",
                  "conditionalVisibility": {
                    "parameterName": "LinkName",
                    "comparison": "isEqualTo",
                    "value": "TIIP"
                  },
                  "name": "TIIPQuery",
                  "styleSettings": {
                    "maxWidth": "100"
                  }
                }
              ],
              "exportParameters": true
            },
            "customWidth": "0",
            "name": "EntitiesDetailsGroup",
            "styleSettings": {
              "margin": "0px",
              "maxWidth": "100%"
            }
          }
        ],
        "exportParameters": true
      },
      "customWidth": "0",
      "name": "Insights",
      "styleSettings": {
        "margin": "0px 30px",
        "maxWidth": "100%"
      }
    },
    {
      "type": 1,
      "content": {
        "json": "----\r\n## Classification details\r\n\r\n"
      },
      "conditionalVisibility": {
        "parameterName": "TabName",
        "comparison": "isEqualTo",
        "value": "Summary"
      },
      "name": "break",
      "styleSettings": {
        "margin": "0px 30px"
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "c0307511-30f8-4dcc-b128-bcb247141db6",
                  "version": "KqlParameterItem/1.0",
                  "name": "Classifications_f",
                  "label": "Classifications",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "GetClassificationList({TimeRange_IS:start}, {TimeRange_IS:end}, '{Subcriptions_IS:id}', dynamic([{ResourceGroup_IS}]) , dynamic([{UserAccount_IS}]))",
                  "typeSettings": {
                    "limitSelectTo": 5,
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*",
                    "showDefault": false
                  },
                  "defaultValue": "value::all",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "GraphParameter"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "//Query purpose - present a timechart of access to classification types over time, with 1d bin, per asset(Uri/path)\r\n//Classification types can be filtered by \"Classification_f\" parameter.\r\n\r\nDSTIMCorrelatedLogs({TimeRange_IS:start}, {TimeRange_IS:end}, '{Subcriptions_IS:id}', dynamic([{ResourceGroup_IS}]) , dynamic([{UserAccount_IS}]))\r\n| where iff('{Classifications_f:id}' == '*', true, tostring(Classification) has_any({Classifications_f}))\r\n| mv-expand classification = todynamic(Classification)\r\n| where isnotempty(classification.['Name'])\r\n| where iff('{Classifications_f:id}' == '*', true, tostring(classification.['Name']) has_any({Classifications_f}))\r\n| summarize TotalAssets=dcount(Uri) by tostring(classification.['Name']), bin(TimeGenerated, 1d)\r\n",
              "size": 1,
              "showAnnotations": true,
              "title": "Access over time",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "linechart",
              "graphSettings": {
                "type": 0,
                "topContent": {
                  "columnMatch": "Classification",
                  "formatter": 1
                },
                "centerContent": {
                  "columnMatch": "count_",
                  "formatter": 1,
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              },
              "chartSettings": {
                "showLegend": true
              }
            },
            "customWidth": "0",
            "conditionalVisibility": {
              "parameterName": "TabName",
              "comparison": "isEqualTo",
              "value": "Summary"
            },
            "name": "AccessOverTime",
            "styleSettings": {
              "maxWidth": "50"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "//query purpose - Get the access details per classification type.\r\n//TotalAccess - total accesses to this classification type, including the aggregation count.\r\n//DataSource - total unique storage accounts that were accessed per classification type.\r\n//TotalAssets - total unique assets(Uri/path) that were accessed per classification type.\r\n//TotalInstances - total classification instnces per type that were accesed. this is calculated by unique count * aggregation count per access.\r\n\r\nDSTIMCorrelatedLogs({TimeRange_IS:start}, {TimeRange_IS:end}, '{Subcriptions_IS:id}', dynamic([{ResourceGroup_IS}]) , dynamic([{UserAccount_IS}]))\r\n| extend classification = parse_json(Classification)\r\n| mv-expand classification = todynamic(Classification)\r\n| where isnotempty( classification.['Name'])\r\n| summarize\r\n    TotalAccess=sum(toint(AggregationCount)),\r\n    DataSource=dcount(StorageAccountName),\r\n    TotalAssets=dcount(Uri),\r\n    TotalInstances = sum(toint(classification.['UniqueCount'])*toint(AggregationCount))\r\n        by tostring(classification.['Name'])\r\n| project Classification=classification_Name, DataSource, TotalAssets=min_of(TotalAccess, TotalAssets), TotalAccess, TotalInstances\r\n| order by TotalAccess desc",
              "size": 1,
              "title": "Access by classification type",
              "exportMultipleValues": true,
              "exportedParameters": [
                {
                  "fieldName": "Classification",
                  "parameterName": "ClassificationFilter",
                  "parameterType": 1
                }
              ],
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "gridSettings": {
                "filter": true,
                "sortBy": [
                  {
                    "itemKey": "Classification",
                    "sortOrder": 1
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "DataSource",
                    "label": "Data Source"
                  },
                  {
                    "columnId": "TotalAssets",
                    "label": "Assets"
                  },
                  {
                    "columnId": "TotalAccess",
                    "label": "Accesses"
                  },
                  {
                    "columnId": "TotalInstances",
                    "label": "Instances"
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "Classification",
                  "sortOrder": 1
                }
              ]
            },
            "customWidth": "0",
            "conditionalVisibility": {
              "parameterName": "TabName",
              "comparison": "isEqualTo",
              "value": "Summary"
            },
            "name": "AccessPerClassificationView",
            "styleSettings": {
              "margin": "0px 0px 0px 20px",
              "maxWidth": "50"
            }
          }
        ],
        "exportParameters": true
      },
      "conditionalVisibility": {
        "parameterName": "TabName",
        "comparison": "isEqualTo",
        "value": "Summary"
      },
      "name": "Graphs",
      "styleSettings": {
        "margin": "0px 30px 0px 30px"
      }
    },
    {
      "type": 1,
      "content": {
        "json": "----\r\n## Access Details"
      },
      "name": "break",
      "styleSettings": {
        "margin": "0px 30px"
      }
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "8be86c8b-b566-44c2-8cc7-d7c3b501a060",
            "version": "KqlParameterItem/1.0",
            "name": "FilterParam",
            "type": 1,
            "isGlobal": true,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "Classification_IS",
                  "operator": "!=",
                  "rightValType": "static",
                  "rightVal": "*",
                  "resultValType": "static",
                  "resultVal": "{Classification_IS:label}"
                }
              },
              {
                "criteriaContext": {
                  "leftOperand": "Classifications_f",
                  "operator": "!=",
                  "rightValType": "static",
                  "rightVal": "*",
                  "resultValType": "static",
                  "resultVal": "{Classifications_f:label}"
                }
              },
              {
                "criteriaContext": {
                  "leftOperand": "ClassificationFilter",
                  "operator": "isNotNull",
                  "rightValType": "static",
                  "rightVal": "*",
                  "resultValType": "static",
                  "resultVal": "{ClassificationFilter:label}"
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "All"
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibility": {
        "parameterName": "TabName",
        "comparison": "isEqualTo",
        "value": "Summary"
      },
      "name": "FilterParameter"
    },
    {
      "type": 1,
      "content": {
        "json": "Filtered by -\r\nSubscriptions: {Subcriptions_IS:label}, Resource groups: {ResourceGroup_IS:label}, User accounts: {UserAccount_IS:label}, Insights: {LinkName}, IP range {IPAddress_IS} {IPRange_IS}, Asset path {AssetPath_IS} {Path_IS}, Classification type: {FilterParam:label}",
        "style": "info"
      },
      "conditionalVisibility": {
        "parameterName": "TabName",
        "comparison": "isEqualTo",
        "value": "Summary"
      },
      "name": "FilteredByText",
      "styleSettings": {
        "margin": "0px 30px"
      }
    },
    {
      "type": 1,
      "content": {
        "json": "Filtered by -\r\nSubscriptions: {Subcriptions_IS:label}, Resource groups: {ResourceGroup_IS:label}, User accounts: {UserAccount_IS:label}, Insights: {LinkName}, IP range {IPAddress_IS} {IPRange_IS}, Asset path {AssetPath_IS} {Path_IS}",
        "style": "info"
      },
      "conditionalVisibility": {
        "parameterName": "TabName",
        "comparison": "isEqualTo",
        "value": "UserAccount"
      },
      "name": "FilteredByText - UserTab",
      "styleSettings": {
        "margin": "0px 30px"
      }
    },
    {
      "type": 1,
      "content": {
        "json": "Filtered by -\r\nSubscriptions: {Subcriptions_IS:label}, Resource groups: {ResourceGroup_IS:label}, User accounts: {UserAccount_IS:label}, Insights: {LinkName}, IP range {IPAddress_IS} {IPRange_IS}, Asset path {AssetPath_IS} {Path_IS}",
        "style": "info"
      },
      "conditionalVisibility": {
        "parameterName": "TabName",
        "comparison": "isEqualTo",
        "value": "IPAddress"
      },
      "name": "FilteredByText - ipTab",
      "styleSettings": {
        "margin": "0px 30px"
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let clasFilter = dynamic([{ClassificationFilter}]);\r\nlet linkName = '{LinkName}';\r\n\r\nDSTIMCorrelatedLogs({TimeRange_IS:start}, {TimeRange_IS:end}, '{Subcriptions_IS:id}', dynamic([{ResourceGroup_IS}]) , dynamic([{UserAccount_IS}]))\r\n| where iff(linkName =~ 'Watchlist', RequesterUpn has_any(parse_json(split('{WatchListEntities}', ','))), true)\r\n| where iff(linkName =~ 'TIIP', CallerIPAddress has_any(parse_json(split('{TIIPEntities}', ','))), true)\r\n| where iff(linkName =~ 'Anomalies', CallerIPAddress has_any(parse_json(split('{AnomaliesIPEntities}', ','))) or RequesterUpn has_any(parse_json(split('{AnomaliesUserEntities}', ','))), true)\r\n| where '*' in ({Classification_IS}) or Classification has_any({Classification_IS})\r\n| where '*' in ({Classifications_f}) or Classification has_any({Classifications_f})\r\n| where iff(array_length(clasFilter) == 0 , true, Classification has_any(clasFilter))\r\n| where '*' in ({SensitivityLabel_IS}) or SensitivityLabelName in ({SensitivityLabel_IS})\r\n| where iff(isnotempty('{IPRange_IS}') and '{IPAddress_IS}' == \"contains\", ipv4_is_in_range(CallerIPAddress, \"{IPRange_IS:value}\"), iff(isnotempty('{IPRange_IS}'), ipv4_is_in_range(CallerIPAddress, \"{IPRange_IS:value}\") == false, true))\r\n| where iff(isnotempty('{Path_IS}') and '{AssetPath_IS}' == \"contains\", Uri has '{Path_IS}',iff(isnotempty('{Path_IS}'), Uri !has '{Path_IS}', true))\r\n| project ResourceSubscriptionId, ResourceGroup, StorageAccountName, Uri, Location, TimeGenerated, CallerIPAddress, AuthenticationType, RequesterUpn, RequesterAppId, parse_json(Classification)[\"Id\"], parse_json(Classification), SensitivityLabelName, OperationName, Category, StatusCode, UserAgentHeader, AggregationLastEventTime, AggregationCount",
        "size": 3,
        "showAnalytics": true,
        "showExportToExcel": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true
              }
            },
            {
              "columnMatch": "Uri",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "GenericDetails",
                "linkIsContextBlade": true
              }
            },
            {
              "columnMatch": "Classification",
              "formatter": 0,
              "numberFormat": {
                "unit": 0,
                "options": {
                  "style": "decimal"
                }
              }
            }
          ],
          "rowLimit": 1000,
          "filter": true,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "ResourceSubscriptionId",
              "ResourceGroup",
              "StorageAccountName"
            ],
            "expandTopLevel": true
          },
          "labelSettings": [
            {
              "columnId": "ResourceSubscriptionId",
              "label": "Resource Subscription Id"
            },
            {
              "columnId": "ResourceGroup",
              "label": "Resource Group"
            },
            {
              "columnId": "StorageAccountName",
              "label": "Storage Account Name"
            },
            {
              "columnId": "TimeGenerated",
              "label": "Time Generated"
            },
            {
              "columnId": "CallerIPAddress",
              "label": "Caller IP Address"
            },
            {
              "columnId": "AuthenticationType",
              "label": "Authentication Type"
            },
            {
              "columnId": "RequesterUpn",
              "label": "Requester Upn"
            },
            {
              "columnId": "RequesterAppId",
              "label": "Requester App Id"
            },
            {
              "columnId": "SensitivityLabelName",
              "label": "Sensitivity Label Name"
            },
            {
              "columnId": "OperationName",
              "label": "Operation Name"
            },
            {
              "columnId": "StatusCode",
              "label": "Status Code"
            },
            {
              "columnId": "UserAgentHeader",
              "label": "User Agent Header"
            },
            {
              "columnId": "AggregationLastEventTime",
              "label": "Aggregation Last Event Time"
            },
            {
              "columnId": "AggregationCount",
              "label": "Aggregation Count"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "TabName",
        "comparison": "isEqualTo",
        "value": "Summary"
      },
      "name": "Access Logs",
      "styleSettings": {
        "margin": "0px 40px"
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "DSTIMCorrelatedLogs({TimeRange_IS:start}, {TimeRange_IS:end}, '{Subcriptions_IS:id}', dynamic([{ResourceGroup_IS}]) , dynamic([{UserAccount_IS}]))\r\n| where iff('{LinkName}' =~ 'Watchlist', RequesterUpn has_any(parse_json(split('{WatchListEntities}', ','))), true)\r\n| where iff('{LinkName}' =~ 'TIIP', CallerIPAddress has_any(parse_json(split('{TIIPEntities}', ','))), true)\r\n| where iff('{LinkName}' =~ 'Anomalies', CallerIPAddress has_any(parse_json(split('{AnomaliesIPEntities}', ','))) or RequesterUpn has_any(parse_json(split('{AnomaliesUserEntities}', ','))), true)\r\n| where '*' in ({Classification_IS}) or Classification has_any({Classification_IS})\r\n| where '*' in ({Classifications_f}) or Classification has_any({Classifications_f})\r\n| where '*' in ({SensitivityLabel_IS}) or SensitivityLabelName in ({SensitivityLabel_IS})\r\n| where iff(isnotempty('{IPRange_IS}') and '{IPAddress_IS}' == \"contains\", ipv4_is_in_range(CallerIPAddress, \"{IPRange_IS:value}\"), iff(isnotempty('{IPRange_IS}'), ipv4_is_in_range(CallerIPAddress, \"{IPRange_IS:value}\") == false, true))\r\n| where iff(isnotempty('{Path_IS}') and '{AssetPath_IS}' == \"contains\", Uri has '{Path_IS}',iff(isnotempty('{Path_IS}'), Uri !has '{Path_IS}', true))\r\n| project RequesterUpn, ResourceGroup, StorageAccountName, ResourceSubscriptionId, Uri, Location, TimeGenerated, CallerIPAddress, AuthenticationType, RequesterAppId, Classification, SensitivityLabelName, OperationName, Category, StatusCode, UserAgentHeader, AggregationLastEventTime, AggregationCount",
        "size": 0,
        "showAnalytics": true,
        "showExportToExcel": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true
              }
            },
            {
              "columnMatch": "Uri",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "GenericDetails",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "filter": true,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "RequesterUpn",
              "ResourceGroup",
              "StorageAccountName"
            ],
            "expandTopLevel": true
          },
          "labelSettings": [
            {
              "columnId": "RequesterUpn",
              "label": "Requester Upn"
            },
            {
              "columnId": "ResourceGroup",
              "label": "Resource Group"
            },
            {
              "columnId": "StorageAccountName",
              "label": "Storage Account Name"
            },
            {
              "columnId": "ResourceSubscriptionId",
              "label": "Resource Subscription Id"
            },
            {
              "columnId": "TimeGenerated",
              "label": "Time Generated"
            },
            {
              "columnId": "CallerIPAddress",
              "label": "Caller IP Address"
            },
            {
              "columnId": "AuthenticationType",
              "label": "Authentication Type"
            },
            {
              "columnId": "RequesterAppId",
              "label": "Requester App Id"
            },
            {
              "columnId": "SensitivityLabelName",
              "label": "Sensitivity Label Name"
            },
            {
              "columnId": "OperationName",
              "label": "Operation Name"
            },
            {
              "columnId": "StatusCode",
              "label": "Status Code"
            },
            {
              "columnId": "UserAgentHeader",
              "label": "User Agent Header"
            },
            {
              "columnId": "AggregationLastEventTime",
              "label": "Aggregation Last Event Time"
            },
            {
              "columnId": "AggregationCount",
              "label": "Aggregation Count"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "TabName",
        "comparison": "isEqualTo",
        "value": "UserAccount"
      },
      "name": "Access Logs - Users",
      "styleSettings": {
        "margin": "0px 40px"
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "DSTIMCorrelatedLogs({TimeRange_IS:start}, {TimeRange_IS:end}, '{Subcriptions_IS:id}', dynamic([{ResourceGroup_IS}]) , dynamic([{UserAccount_IS}]))\r\n| where iff('{LinkName}' =~ 'Watchlist', RequesterUpn has_any(parse_json(split('{WatchListEntities}', ','))), true)\r\n| where iff('{LinkName}' =~ 'TIIP', CallerIPAddress has_any(parse_json(split('{TIIPEntities}', ','))), true)\r\n| where iff('{LinkName}' =~ 'Anomalies', CallerIPAddress has_any(parse_json(split('{AnomaliesIPEntities}', ','))) or RequesterUpn has_any(parse_json(split('{AnomaliesUserEntities}', ','))), true)\r\n| where '*' in ({Classification_IS}) or Classification has_any({Classification_IS})\r\n| where '*' in ({Classifications_f}) or Classification has_any({Classifications_f})\r\n| where '*' in ({SensitivityLabel_IS}) or SensitivityLabelName in ({SensitivityLabel_IS})\r\n| where iff(isnotempty('{IPRange_IS}') and '{IPAddress_IS}' == \"contains\", ipv4_is_in_range(CallerIPAddress, \"{IPRange_IS:value}\"), iff(isnotempty('{IPRange_IS}'), ipv4_is_in_range(CallerIPAddress, \"{IPRange_IS:value}\") == false, true))\r\n| where iff(isnotempty('{Path_IS}') and '{AssetPath_IS}' == \"contains\", Uri has '{Path_IS}',iff(isnotempty('{Path_IS}'), Uri !has '{Path_IS}', true))\r\n| project CallerIPAddress, ResourceGroup, StorageAccountName, Uri, Location, TimeGenerated, ResourceSubscriptionId, AuthenticationType, RequesterUpn, RequesterAppId, Classification, SensitivityLabelName, OperationName, Category, StatusCode, UserAgentHeader, AggregationLastEventTime, AggregationCount",
        "size": 0,
        "showAnalytics": true,
        "showExportToExcel": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true
              }
            },
            {
              "columnMatch": "Uri",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "GenericDetails",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "filter": true,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "CallerIPAddress",
              "ResourceGroup",
              "StorageAccountName"
            ],
            "expandTopLevel": true
          },
          "labelSettings": [
            {
              "columnId": "CallerIPAddress",
              "label": "Caller IP Address"
            },
            {
              "columnId": "ResourceGroup",
              "label": "Resource Group"
            },
            {
              "columnId": "StorageAccountName",
              "label": "Storage Account Name"
            },
            {
              "columnId": "TimeGenerated",
              "label": "Time Generated"
            },
            {
              "columnId": "ResourceSubscriptionId",
              "label": "Resource Subscription Id"
            },
            {
              "columnId": "AuthenticationType",
              "label": "Authentication Type"
            },
            {
              "columnId": "RequesterUpn",
              "label": "Requester Upn"
            },
            {
              "columnId": "RequesterAppId",
              "label": "Requester App Id"
            },
            {
              "columnId": "SensitivityLabelName",
              "label": "Sensitivity Label Name"
            },
            {
              "columnId": "OperationName",
              "label": "Operation Name"
            },
            {
              "columnId": "StatusCode",
              "label": "Status Code"
            },
            {
              "columnId": "UserAgentHeader",
              "label": "User Agent Header"
            },
            {
              "columnId": "AggregationLastEventTime",
              "label": "Aggregation Last Event Time"
            },
            {
              "columnId": "AggregationCount",
              "label": "Aggregation Count"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "TabName",
        "comparison": "isEqualTo",
        "value": "IPAddress"
      },
      "name": "Access Logs - IP",
      "styleSettings": {
        "margin": "0px 40px"
      }
    }
  ],
  "styleSettings": {
    "paddingStyle": "none",
    "spacingStyle": "none"
  },
  "fromTemplateId": "sentinel-DSTIMWorkbook",
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}